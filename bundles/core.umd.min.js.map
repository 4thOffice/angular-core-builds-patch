{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","target","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","R3ResolvedDependencyType","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","j","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","arr","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","MONKEY_PATCH_KEY_NAME","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getCreationMode","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","canAccessViewProviders","node","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","startInjectables","startDirectives","directiveCount","providerTokenOrDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_lView","_injectorIndex","previousTNode","previousLView","getFactoryOf","typeAny","getInheritedFactory","getContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","directiveEndIndex","slice","startIndex","count","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","SWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","NgModuleRef","NgModuleFactory","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","rf","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","componentRefresh","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","setUpAttributes","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","getCleanup","getTViewCleanup","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","classIndex","directive","hackImplementationOfElementClassProp","hostStylingHack","classDeclarations","classList","val","updateClassProp","addOrRemove","elementStyling","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","elementStylingApply","hackImplementationOfElementStyling","hackSquashDeclaration","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","hackImplementationOfElementStyleProp","valueToAdd","elementStylingMap","classes","hackImplementationOfElementStylingMap","initialClasses","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","renderFlags","viewFlags","updateViewQuery","markDirty","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","result","tNodeChild","enumerable","configurable","_lookUpContext","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","_hostView","getComponent","Node","loadContext","getComponentAtNodeIndex","getViewComponent","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","getOwnPropertyDescriptor","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","hostRNode","rootFlags","rootViewInjector","createChainedInjector","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","attr","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","expandModuleWithProviders","emitInline","compileInjector","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","metadata","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","hasSelectorScope","compileDirective","facade","typeArgumentCount","EMPTY_OBJ$1","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","meta_1","hasAProvider","compilerMeta","ctorDeps","userDeps","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","ngModuleRef","contextInjector","insert","move","commentNode","nativeNextSibling","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","listeners","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","notImplemented","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","event","createEvent","initEvent","dispatchEvent","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","getModuleFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵinject","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0+62.sha-4effb89\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.rxjs.operators));\n}(this, (function (exports,rxjs,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            creationMode = (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        var tView = lView[TVIEW];\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        lView[FLAGS] |= 16 /* RunInit */;\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lView);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lView);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, or if there is no injector on this node, start by searching\n            // the parent injector.\n            if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                    lView[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lView[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lView[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lView)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lView = getParentInjectorView(parentLocation, lView);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var injectableIdx = locateDirectiveOrProvider(tNode, injectorView, token, canAccessViewProviders);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, injectorView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders) {\n        var tView = lView[TVIEW];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & exports.InjectFlags.Self ||\n            (flags & exports.InjectFlags.Host &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _lView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            var previousTNode = getPreviousOrParentTNode();\n            var previousLView = getLView();\n            setTNodeAndViewData(this._tNode, this._lView);\n            try {\n                return getOrCreateInjectable(this._tNode, this._lView, token);\n            }\n            finally {\n                setTNodeAndViewData(previousTNode, previousLView);\n            }\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        return tNode.flags & 4096 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(getCreationMode(), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[PARENT], 'lView.parent');\n            lView = lView[PARENT];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var cleanup = lView[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(lView[cleanup[i + 1]]);\n                    var listener = lView[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lView[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lView[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName || current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView, rf) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // Dynamically created views must run first only in creation mode. If this is a\n        // creation-only pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update-only pass.\n        if (rf !== 1 /* Create */) {\n            var creationMode = getCreationMode();\n            var checkNoChangesMode = getCheckNoChangesMode();\n            if (!checkNoChangesMode) {\n                executeInitHooks(lView, tView, creationMode);\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            if (!checkNoChangesMode) {\n                executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, creationMode);\n            }\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components, rf);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, rf) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], rf);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 2 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender, null);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, rf, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(rf || getRenderFlags(hostView), componentOrContext);\n            }\n            refreshDescendantViews(hostView, rf);\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(lView, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(lView);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(lView).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(lView, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(lView, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, outputs[i]);\n            var subscription = lView[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(lView, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        getCleanup(lView).push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lView[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getLView()[TVIEW]);\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode && tNode.type === 3 /* Element */) {\n                setNgReflectProperties(lView, element, propName, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, propName, value) {\n        var renderer = lView[RENDERER];\n        var attrName = normalizeDebugBindingName(propName);\n        var debugValue = normalizeDebugBindingValue(value);\n        isProceduralRenderer(renderer) ? renderer.setAttribute(element, attrName, debugValue) :\n            element.setAttribute(attrName, debugValue);\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getLView()[TVIEW];\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param classIndex Index of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementClassProp(index, classIndex, value, directive); // proper supported in next PR\n        }\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getLView()), classIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        if (directive != undefined) {\n            getCreationMode() &&\n                hackImplementationOfElementStyling(classDeclarations || null, styleDeclarations || null, styleSanitizer || null, directive); // supported in next PR\n            return;\n        }\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var lView = getLView();\n                var stylingContext = getStylingContext(index, lView);\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(lView, tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingApply(index, directive) {\n        if (directive != undefined) {\n            return hackImplementationOfElementStylingApply(index, directive); // supported in next PR\n        }\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, lView), lView[RENDERER], lView, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive); // supported in next PR\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getLView()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive the ref to the directive that is attempting to change styling.\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index, lView);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    function hackImplementationOfElementStyling(classDeclarations, styleDeclarations, styleSanitizer, directive) {\n        var node = getNativeByTNode(getPreviousOrParentTNode(), getLView());\n        ngDevMode && assertDefined(node, 'expecting parent DOM node');\n        var hostStylingHackMap = (node.hostStylingHack || (node.hostStylingHack = new Map()));\n        hostStylingHackMap.set(directive, {\n            classDeclarations: hackSquashDeclaration(classDeclarations),\n            styleDeclarations: hackSquashDeclaration(styleDeclarations), styleSanitizer: styleSanitizer\n        });\n    }\n    function hackSquashDeclaration(declarations) {\n        // assume the array is correct. This should be fine for View Engine compatibility.\n        return declarations || [];\n    }\n    function hackImplementationOfElementClassProp(index, classIndex, value, directive) {\n        var lView = getLView();\n        var node = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(node, 'could not locate node');\n        var hostStylingHack = node.hostStylingHack.get(directive);\n        var className = hostStylingHack.classDeclarations[classIndex];\n        var renderer = lView[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            value ? renderer.addClass(node, className) : renderer.removeClass(node, className);\n        }\n        else {\n            var classList = node.classList;\n            value ? classList.add(className) : classList.remove(className);\n        }\n    }\n    function hackImplementationOfElementStylingApply(index, directive) {\n        // Do nothing because the hack implementation is eager.\n    }\n    function hackImplementationOfElementStyleProp(index, styleIndex, value, suffix, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + (previousOrParentTNode.flags & 4095 /* DirectiveCountMask */);\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        if (def.hostBindings) {\n            def.hostBindings(1 /* Create */, directive, previousOrParentTNode.index);\n        }\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings || noop);\n        if (def.hostVars)\n            tView.expandoInstructions.push(def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(lView, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        refreshDescendantViews(lView, null);\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     * @param rf  The render flags that should be used to process this template\n     */\n    function componentRefresh(adjustedElementIndex, rf) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT], rf);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 2 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView[FLAGS] |= 4 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent, 2 /* Update */);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component, null);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component, rf) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, rf, hostView[FLAGS], component);\n            templateFn(rf || getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView, rf);\n            updateViewQuery(viewQuery, hostView[FLAGS], component);\n        }\n        finally {\n            leaveView(oldView, rf === 1 /* Create */);\n        }\n    }\n    function createViewQuery(viewQuery, renderFlags, viewFlags, component) {\n        if (viewQuery && (renderFlags === 1 /* Create */ ||\n            (renderFlags === null && (viewFlags & 1 /* CreationMode */)))) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, flags, component) {\n        if (viewQuery && flags & 2 /* Update */) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef && viewAttached(this._lView)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = this._lView[RENDERER_FACTORY];\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, exports.InjectFlags.Default, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved for.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadContext(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 64 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lView = Array.isArray(target) ? target : loadContext(target).lView;\n        var rootLView = getRootView$1(lView);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lView);\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 64 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getContext(directive).native;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView, null);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                        definition.hostVars += superDef.hostVars;\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null && !isDuplicate) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, lView), lView, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0+62.sha-4effb89');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            var sanitizer = null;\n            if (ngModule) {\n                rendererFactory = ngModule.injector.get(RendererFactory2);\n                sanitizer = ngModule.injector.get(Sanitizer, null);\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ? ngModule.injector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                refreshDescendantViews(rootLView, 1 /* Create */);\n            }\n            finally {\n                leaveView(oldLView, true);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass) {\n            i18nEndFirstPass(tView);\n        }\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return getCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getLView()[SANITIZER];\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2),\n                        declarations: declarations,\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2).map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), directives: new Map(), pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify(type) + \"/template.html\", meta);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ$1,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    var EMPTY_OBJ$1 = {};\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : selector;\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var meta_1 = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1) ||\n                        isUseValueProvider(meta_1) || isUseExistingProvider(meta_1);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        providedIn: meta_1.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta_1) || isUseFactoryProvider(meta_1)) && meta_1.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta_1.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta_1)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta_1.useClass;\n                    }\n                    else if (isUseValueProvider(meta_1)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta_1.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta_1)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta_1.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta_1)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta_1.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }], null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], [], null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], [{\n            type: Injector\n        }], null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }], null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }], null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    function notImplemented() {\n        throw new Error('Missing proper ivy implementation.');\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                // TODO: add real implementation;\n                // https://angular-team.atlassian.net/browse/FW-719\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () {\n                // TODO move to discoverable utils\n                var context = loadContext(this.nativeNode, false);\n                if (!context)\n                    return [];\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var providerTokens = [];\n                var nodeFlags = tNode.flags;\n                var startIndex = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n                var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n                var endIndex = startIndex + directiveCount;\n                for (var i = startIndex; i < endIndex; i++) {\n                    var value = tView.data[i];\n                    if (isDirectiveDefHack(value)) {\n                        // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                        // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                        // is that for Components/Directives we store the def instead the type. The correct behavior\n                        // is that we should always be storing injectable type in this location.\n                        value = value.type;\n                    }\n                    providerTokens.push(value);\n                }\n                return providerTokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                // https://angular-team.atlassian.net/browse/FW-719\n                throw notImplemented();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            // This is a hack implementation. The correct implementation would bypass the DOM and `TNode`\n            // information to invoke the listeners directly.\n            // https://angular-team.atlassian.net/browse/FW-719\n            var event = document.createEvent('MouseEvent');\n            event.initEvent(eventName, true, true);\n            this.nativeElement.dispatchEvent(event);\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule, bootstrap: [], declarations: [], imports: [], exports: [] });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], [{\n            type: ApplicationRef\n        }], null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵinject = inject;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetContext = getContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}