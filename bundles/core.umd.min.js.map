{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","apply","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","objWithPropertyToExtract","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","forEach","v","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","HEADER_OFFSET","TVIEW","PARENT","NEXT","QUERIES","FLAGS","HOST_NODE","BINDING_INDEX","DIRECTIVES","CLEANUP","CONTEXT","INJECTOR$1","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","queueContentHooks","def","tView","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","queueViewHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","queueDestroyHooks","onDestroy","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","arr","throwMultipleComponentError","tNode","tagName","RendererStyleFlags3","ACTIVE_INDEX","VIEWS","RENDER_PARENT","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","stringify$1","getNextLNode","node","viewData","view","getChildLNode","child","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","action","renderParentNode","beforeNode","projectionNodeIndex","nextNode","parent_1","native","nodeType","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","projection","lViewData","viewRootLNode","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","container","insertMode","parentNode","insertView","viewNode","views","lView","splice","detachView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","childIndex","hostNode","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","cleanup","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","id","destroy","canInsertNativeNode","grandParentContainer","appendChild","renderParent","appendProjectedNode","currentParent","lContainer","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","mode","nodeAttrs","attrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","EMPTY_ARR","setStyle","prop","styleStore","removeStyle","DashCase","removeProperty","setProperty","setDirty","isDirtyYes","adjustedIndex","isDirty","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiOrSingleIndex","getMultiStartIndex","setProp","setValue","setFlag","getPointers","getValue","getProp","setContextDirty","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","doShift","updateSinglePointerValues","indexStartPosition","singleIndex","initialIndexForSingle","rendererFactory","previousOrParentNode","isParent","currentQueries","directives","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","fill","CIRCULAR$1","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","firstTemplatePass","enterView","newView","host","oldView","leaveView","creationOnly","refreshView","refreshDynamicEmbeddedViews","container_1","lViewNode","dynamicViewData","renderEmbeddedTemplate","setHostBindings","hostBindings","refreshContentQueries","contentQueries","directiveDefIdx","contentQueriesRefresh","refreshChildComponents","components","componentRefresh","bindings","defs","dirIndex","executeInitAndContentHooks","createLViewData","sanitizer","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","namespaceHTML","template","renderComponentOrTemplate","hostView","componentOrContext","begin","getRenderFlags","end","_currentNamespace","namespaceSVG","namespaceMathML","element","localRefs","elementStart","elementEnd","createElement","createElementNS","setUpAttributes","createDirectivesAndLocals","cacheMatchingDirectivesForNode","exportsMap","","matches","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","instantiateDirectivesDirectly","count","start","tDirectives","directiveCreate","saveResolvedLocalsInData","registry","directiveRegistry","diPublic","instance","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","changeDetectorRef","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","viewIndex","bindingStartIndex","pipeRegistry","isProc","attrName","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tag","rNode","directiveDefs","pipeDefs","onPush","listener","eventName","listenerFn","useCapture","wrappedListener","wrapListenerWithDirtyLogic","markViewDirty","listen","storeCleanupFn","wrapListenerWithDirtyAndDefault","wrapListenerIn_markViewDirty","preventDefault","returnValue","addEventListener","cleanupInstances","outputs","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","queueLifecycleHooks","elementAttribute","NO_CHANGE","element_1","load","removeAttribute","strValue","elementProperty","inputs","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","tNodeFlags","direction","propStore","isInput","directiveDef","propertyAliasMap","publicName","internalName","elementClassNamed","className","lElement","addClass","classList","add","removeClass","remove","elementClass","elementStyling","styles","createStylingContextTemplate","initialStyleDeclarations","initialStyles","indexLookup","hasPassedDeclarations","allProps","totalProps","maxLength","multiStart","indexForInitial","indexForMulti","indexForSingle","elementStylingApply","getStylingContext","stylingContext","allocStylingContext","templateStyleContext","renderStyles","isContextDirty","multiStartIndex","styleToApply","elementStyleProp","styleIndex","suffixOrSanitizer","valueToAdd","updateStyleProp","currValue","currFlag","valueForMulti","multiDirty","singleDirty","elementStyle","updateStyleMap","propsToApply","dirty","ctxIndex","propIndex","newProp","newValue","indexOfEntry","textNode","textBinding","existingNode","textContent","directive","baseDirectiveCreate","addComponentLogic","directiveIndex","componentView","addToViewTree","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","enumerable","attributes","createLContainer","parentLNode","isForViewContainerRef","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","nodeIndex","selectorIndex","nodeToProject","projectedView","grandparent","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","scheduleTick","rootContext","res_1","clean","scheduler","tickRootContext","rootComponent","_getComponentHostLElementNode","getRootView","detectChanges","hostTView","createViewQuery","updateViewQuery","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","offset","currentSlot","restoreBindingIndex","interpolationV","different","content","interpolation1","prefix","v0","suffix","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","store","loadInternal","loadDirective","consumeBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","oldValue","msg","checkAndUpdateBinding","exp1","exp2","exp3","exp4","getTView","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","createRootContext","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","item","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_this","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","configurable","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","clear","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","size","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","has","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","k","IterableDiffers","factories","copied","extend","find","iterable","f","getTypeNameForDebugging","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getClosureSafeProperty$1","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","R3_COMPILE_INJECTABLE","preR3InjectableCompile","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$2","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","ngInjectorDef","ngModule","imported","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","ViewEncapsulation","KeyValueDiffers","kv","ChangeDetectorRef","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding$1","checkBindingNoChanges","bindingName","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","errorHandler","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","_b","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","nextSibling","lastRenderRootNode","visitSiblingRenderNodes","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","match","calcBindingFlags","_toStringWithNull","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","invertObject","ngOnInit","ngDoCheck","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","changeDetection","OnPush","extractDirectiveDef","extractPipeDef","features","feature","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","pipeDef","pure","fillProperties","PRIVATE_PREFIX","NgOnChangesFeature","definition","declaredToMinifiedInputs","proto","_loop_1","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","ViewRef","_view","callback","markForCheck","detach","reattach","checkNoChanges","detachFromAppRef","_appRef","attachToAppRef","appRef","EmbeddedViewRef","_super","_viewContainerRef","_lViewNode","attachToViewContainerRef","vcRef","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","parentInjector","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","templateRef","viewContainerRef","elementRef","diPublicInInjector","di","bloomAdd","bloomBit","mask","directiveInject","getOrCreateInjectable","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","nodeFlags","searchMatchesQueuedForCreation","sameHostView","injectTemplateRef","getOrCreateTemplateRef","hostTNode","TemplateRef","getOrCreateElementRef","injectViewContainerRef","getOrCreateContainerRef","vcRefHost","hostParent","ViewContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","currentNode","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","injectAttribute","attrNameToInject","startInjector","ReadFromInjectorFn","read","ElementRef","nativeElement","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","viewRef","createComponent","componentFactory","notImplemented","insert","move","newIndex","shift","_tView","_renderer","_queries","createEmbeddedViewNode","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","rootSelectorOrNode","ElementRef$1","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","ComponentFactory$$1","componentDef","parentComponentInjector","elementNode","componentTag","ComponentRef$1","ComponentRef$$1","destroyCbs","location","i18nTagRegex","appendI18nNode","previousNode","NgModuleRef","NgModuleFactory","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","_bootstrapComponents","ngModuleDef","componentFactoryResolver","pureFunction0","slotOffset","pureFn","thisArg","getCreationMode","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","NgModuleFactory$$1","moduleType","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","setTimeout","sink","Subscription","Subject","LQueries_","deep","shallow","track","queryList","predicate","descend","createQuery","clone","query","containerValues","clonedQuery","list","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList","QueryList_","changes","_values","filter","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getCurrentQueries","QueryType","queryRefresh","angularCoreEnv","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµinjectAttribute","ÉµinjectChangeDetectorRef","ÉµinjectElementRef","injectElementRef","ÉµinjectTemplateRef","ÉµinjectViewContainerRef","ÉµNgOnChangesFeature","ÉµInheritDefinitionFeature","InheritDefinitionFeature","superType","getSuperType","superDef","e_1","isComponentDef","prevHostBindings_1","superHostBindings_1","elementIndex","features_1","features_1_1","e_1_1","return","superPrototype","Éµa","Éµb","ÉµC","ÉµcR","Éµcr","Éµd","ÉµNH","ÉµNM","ÉµNS","ÉµE","Éµe","ÉµEe","Éµf0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","Éµf6","Éµf7","Éµf8","ÉµfV","Éµi1","Éµi2","Éµi3","Éµi4","Éµi5","Éµi6","Éµi7","Éµi8","ÉµiV","Éµk","Éµkn","ÉµL","Éµld","ÉµP","Éµp","Éµpb1","Éµpb2","Éµpb3","Éµpb4","ÉµpbV","ÉµpD","ÉµPp","ÉµQ","ÉµqR","ÉµrS","Éµs","Éµsm","Éµsp","Éµsa","ÉµT","Éµt","ÉµV","Éµv","TARGET","NG_COMPONENT_DEF","NG_DIRECTIVE_DEF","NG_INJECTABLE_DEF","NG_INJECTOR_DEF","NG_PIPE_DEF","NG_MODULE_DEF","TemplateRef$1","ViewContainerRef$1","getReflect","reflectDependencies","convertDependencies","reflectDependency","LiteralExpr","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$3","patchComponentDefWithScope","transitiveScopesFor","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","flatten$1","out","expandModuleWithProviders","isModuleWithProviders","directiveMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","split","piece","trim","isUseClassProvider","GET_PROPERTY_NAME$2","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Version","compileInjectable","hasAProvider","expression","computeProvidedIn","jitExpression","Directive","compileDirective","constantPool","ConstantPool","sourceMapUrl","compileDirectiveFromMetadata","makeBindingParser","Component","Default","compileComponent","maybeQueueResolutionOfComponentResources","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","viewQueries","hasSelectorScope","ngSelectorScope","Pipe","compilePipe","compilePipeFromMetadata","Input","Output","HostBinding","HostListener","NgModule","compileNgModule","emitInline","compileInjector","declaration","preR3NgModuleCompile","VERSION","full","major","minor","patch","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","scope","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","merge","share","ApplicationRef_1","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","componentRef","el","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef$1","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","providerTokens","classes","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","APPLICATION_MODULE_PROVIDERS","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","childNode","Node","ELEMENT_NODE","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","tagSet","tags","_c","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","elDef","selectorOrNode","ns","parentEl","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","setElementStyle","STYLE","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","TemplateRef_","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","NgModuleFactory_","_ngModuleDefFactory","BRAND","bypassSanitizationTrustString","trustedString","trusted","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","hostFeatures","ÉµPublicFeature","PublicFeature","ÉµmarkDirty","markDirty","ÉµNC","ÉµQr","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","Éµql","loadQueryList","queryListIdx","Éµst","ÉµwhenRendered","whenRendered","getRootContext","ÉµiA","i18nApply","instructions","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","ÉµiEM","i18nExpMapping","translation","placeholders","staticText","ÉµiI","i18nInterpolation","numberOfExp","ÉµIV","i18nInterpolationV","ÉµiM","i18nMapping","elements","expressions","tmplContainers","lastChildIndex","generateMappingInstructions","translationParts","tmplIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","phIndex","tmplElements","phKeys","ph","tmplExpressions","index_2","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","HTML","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","URL","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.1.0-beta.3+95.sha-0399c69\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @experimental\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @experimental\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakeable Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n     *\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, chainFn, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            var TypeDecorator = function TypeDecorator(cls) {\n                typeFn && typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                return cls;\n            };\n            if (chainFn)\n                chainFn(TypeDecorator);\n            return TypeDecorator;\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n            };\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @experimental\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     *  @Annotation\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * `CheckOnce` means that after calling detectChanges the mode of the change detector\n         * will become `Checked`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * `Checked` means that the change detector should be skipped until its mode changes to\n         * `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * `CheckAlways` means that after calling detectChanges the mode of the change detector\n         * will remain `CheckAlways`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * `Detached` means that the change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * `Errored` means that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state will no longer detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * `Destroyed` means that the change detector is destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @experimental\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @experimental\n     */\n    function resolveForwardRef(type) {\n        if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n            type.__forward_ref__ === forwardRef) {\n            return type();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @experimental\n     */\n    var INJECTOR = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     *\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var GET_PROPERTY_NAME = {};\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: GET_PROPERTY_NAME });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n                return key;\n            }\n        }\n        throw Error('!prop');\n    }\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            var injectableDef = token.ngInjectableDef;\n            if (injectableDef && injectableDef.providedIn == 'root') {\n                return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                    injectableDef.value;\n            }\n            if (flags & 8 /* Optional */)\n                return null;\n            throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!actual.ngComponentDef) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 16;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var PARENT = 1;\n    var NEXT = 2;\n    var QUERIES = 3;\n    var FLAGS = 4;\n    var HOST_NODE = 5;\n    var BINDING_INDEX = 6;\n    var DIRECTIVES = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData[DIRECTIVES]\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 14 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.directives[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView[DIRECTIVES], tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(data, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(data[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ngDevModeResetPerfCounters = (typeof ngDevMode == 'undefined' && (function (global) {\n        function ngDevModeResetPerfCounters() {\n            global['ngDevMode'] = {\n                firstTemplatePass: 0,\n                tNode: 0,\n                tView: 0,\n                rendererCreateTextNode: 0,\n                rendererSetText: 0,\n                rendererCreateElement: 0,\n                rendererAddEventListener: 0,\n                rendererSetAttribute: 0,\n                rendererRemoveAttribute: 0,\n                rendererSetProperty: 0,\n                rendererSetClassName: 0,\n                rendererAddClass: 0,\n                rendererRemoveClass: 0,\n                rendererSetStyle: 0,\n                rendererRemoveStyle: 0,\n                rendererDestroy: 0,\n                rendererDestroyNode: 0,\n                rendererMoveNode: 0,\n                rendererRemoveNode: 0,\n            };\n        }\n        ngDevModeResetPerfCounters();\n        return ngDevModeResetPerfCounters;\n    })(typeof window != 'undefined' && window || typeof self != 'undefined' && self ||\n        typeof global != 'undefined' && global));\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    // PARENT, NEXT, and QUERIES are indices 1, 2, and 3.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var VIEWS = 4;\n    var RENDER_PARENT = 5;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(node, type) {\n        assertDefined(node, 'should be called with a node');\n        assertEqual(node.tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(node) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(node, 'should be called with a node');\n        var found = types.some(function (type) { return node.tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Must use this method for CD (instead of === ) since NaN !== NaN\n    */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     *  Function that throws a \"not implemented\" error so it's clear certain\n     *  behaviors/methods aren't yet ready.\n     *\n     * @returns Not implemented error\n     */\n    function notImplemented() {\n        return new Error('NotImplemented');\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the sibling node for the given node. */\n    function getNextLNode(node) {\n        // View nodes don't have TNodes, so their next must be retrieved through their LView.\n        if (node.tNode.type === 2 /* View */) {\n            var viewData = node.data;\n            return viewData[NEXT] ? viewData[NEXT][HOST_NODE] : null;\n        }\n        return node.tNode.next ? node.view[node.tNode.next.index] : null;\n    }\n    /** Retrieves the first child of a given node */\n    function getChildLNode(node) {\n        if (node.tNode.child) {\n            var viewData = node.tNode.type === 2 /* View */ ? node.data : node.view;\n            return viewData[node.tNode.child.index];\n        }\n        return null;\n    }\n    function getParentLNode(node) {\n        if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = node.data[CONTAINER_INDEX];\n            return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n        }\n        var parent = node.tNode.parent;\n        return parent ? node.view[parent.index] : node.view[HOST_NODE];\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkLNodeTree.\n     *\n     * This is deliberately created outside of walkLNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param startingNode the node from which the walk is started.\n     * @param rootNode the root node considered. This prevents walking past that node.\n     * @param action identifies the action to be performed on the LElement nodes.\n     * @param renderer the current renderer.\n     * @param renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n        var node = startingNode;\n        var projectionNodeIndex = -1;\n        while (node) {\n            var nextNode = null;\n            var parent_1 = renderParentNode ? renderParentNode.native : null;\n            var nodeType = node.tNode.type;\n            if (nodeType === 3 /* Element */) {\n                // Execute the action\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                if (node.dynamicLContainerNode) {\n                    executeNodeAction(action, renderer, parent_1, node.dynamicLContainerNode.native, beforeNode);\n                }\n            }\n            else if (nodeType === 0 /* Container */) {\n                executeNodeAction(action, renderer, parent_1, node.native, beforeNode);\n                var lContainerNode = node;\n                var childContainerData = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.data :\n                    lContainerNode.data;\n                if (renderParentNode) {\n                    childContainerData[RENDER_PARENT] = renderParentNode;\n                }\n                nextNode =\n                    childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n                if (nextNode) {\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainerNode.dynamicLContainerNode ?\n                        lContainerNode.dynamicLContainerNode.native :\n                        lContainerNode.native;\n                }\n            }\n            else if (nodeType === 1 /* Projection */) {\n                var componentHost = findComponentHost(node.view);\n                var head = componentHost.tNode.projection[node.tNode.projection];\n                projectionNodeStack[++projectionNodeIndex] = node;\n                nextNode = head ? componentHost.data[PARENT][head.index] : null;\n            }\n            else {\n                // Otherwise look at the first child\n                nextNode = getChildLNode(node);\n            }\n            if (nextNode === null) {\n                nextNode = getNextLNode(node);\n                // this last node was projected, we need to get back down to its projection node\n                if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                    nextNode = getNextLNode(projectionNodeStack[projectionNodeIndex--]);\n                }\n                /**\n                 * Find the next node in the LNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (node && !nextNode) {\n                    node = getParentLNode(node);\n                    if (node === null || node === rootNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (!node.tNode.next && nodeType === 0 /* Container */) {\n                        beforeNode = node.native;\n                    }\n                    nextNode = getNextLNode(node);\n                }\n            }\n            node = nextNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentHost(lViewData) {\n        var viewRootLNode = lViewData[HOST_NODE];\n        while (viewRootLNode.tNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n            lViewData = lViewData[PARENT];\n            viewRootLNode = lViewData[HOST_NODE];\n        }\n        ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n        ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n        return viewRootLNode;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        ngDevMode && assertNodeType(rootNode, 2 /* View */);\n        var parentNode = container.data[RENDER_PARENT];\n        var parent = parentNode ? parentNode.native : null;\n        if (parent) {\n            var node = getChildLNode(rootNode);\n            var renderer = container.view[RENDERER];\n            walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0].data;\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param container The container into which the view should be inserted\n     * @param viewNode The view to insert\n     * @param index The index at which to insert the view\n     * @returns The inserted view\n     */\n    function insertView(container, viewNode, index) {\n        var state = container.data;\n        var views = state[VIEWS];\n        var lView = viewNode.data;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1].data[NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index].data;\n            views.splice(index, 0, viewNode);\n        }\n        else {\n            views.push(viewNode);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container'S host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (viewNode.tNode.index === -1) {\n            lView[CONTAINER_INDEX] = container.tNode.parent.index;\n            viewNode.view = container.view;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param container The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns The detached view\n     */\n    function detachView(container, removeIndex) {\n        var views = container.data[VIEWS];\n        var viewNode = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1].data[NEXT] = viewNode.data[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!container.tNode.detached) {\n            addRemoveViewFromContainer(container, viewNode, false);\n        }\n        // Notify query that view has been removed\n        var removedLView = viewNode.data;\n        if (removedLView[QUERIES]) {\n            removedLView[QUERIES].removeView();\n        }\n        removedLView[CONTAINER_INDEX] = -1;\n        viewNode.view = null;\n        // Unsets the attached flag\n        viewNode.data[FLAGS] &= ~8 /* Attached */;\n        return viewNode;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param container The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     * @returns The removed view\n     */\n    function removeView(container, removeIndex) {\n        var viewNode = container.data[VIEWS][removeIndex];\n        detachView(container, removeIndex);\n        destroyLView(viewNode.data);\n        return viewNode;\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        if (viewData[TVIEW].childIndex === -1)\n            return null;\n        var hostNode = viewData[viewData[TVIEW].childIndex];\n        return hostNode.data ? hostNode.data : hostNode.dynamicLContainerNode.data;\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var node;\n        if ((node = state[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getParentLNode(node).data;\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer[TVIEW]) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = viewData[cleanup[i + 1]].native;\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view[DIRECTIVES], destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(parent, currentView) {\n        // We can only insert into a Component or View. Any other type should be an Error.\n        ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n        if (parent.tNode.type === 3 /* Element */) {\n            // Parent is an element.\n            if (parent.view !== currentView) {\n                // If the Parent view is not the same as current view than we are inserting across\n                // Views. This happens when we insert a root element of the component view into\n                // the component host element and it should always be eager.\n                return true;\n            }\n            // Parent elements can be a component which may have projection.\n            if (parent.data === null) {\n                // Parent is a regular non-component element. We should eagerly insert into it\n                // since we know that this relationship will never be broken.\n                return true;\n            }\n            else {\n                // Parent is a Component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would than move it to its final destination.\n                return false;\n            }\n        }\n        else {\n            // Parent is a View.\n            ngDevMode && assertNodeType(parent, 2 /* View */);\n            // Because we are inserting into a `View` the `View` may be disconnected.\n            var grandParentContainer = getParentLNode(parent);\n            if (grandParentContainer == null) {\n                // The `View` is not inserted into a `Container` we have to delay insertion.\n                return false;\n            }\n            ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n            if (grandParentContainer.data[RENDER_PARENT] == null) {\n                // The parent `Container` itself is disconnected. So we have to delay.\n                return false;\n            }\n            else {\n                // The parent `Container` is in inserted state, so we can eagerly insert into\n                // this location.\n                return true;\n            }\n        }\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param parent The parent to which to append the child\n     * @param child The child that should be appended\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            var renderer = currentView[RENDERER];\n            if (parent.tNode.type === 2 /* View */) {\n                var container = getParentLNode(parent);\n                var renderParent = container.data[RENDER_PARENT];\n                var views = container.data[VIEWS];\n                var index = views.indexOf(parent);\n                var beforeNode = index + 1 < views.length ? (getChildLNode(views[index + 1])).native : container.native;\n                isProceduralRenderer(renderer) ?\n                    renderer.insertBefore(renderParent.native, child, beforeNode) :\n                    renderParent.native.insertBefore(child, beforeNode, true);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n                    parent.native.appendChild(child);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Removes the `child` element of the `parent` from the DOM.\n     *\n     * @param parent The parent from which to remove the child\n     * @param child The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(parent, child, currentView) {\n        if (child !== null && canInsertNativeNode(parent, currentView)) {\n            // We only remove the element if not in View or not projected.\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parent.native, child) :\n                parent.native.removeChild(child);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param node The node to process\n     * @param currentParent The last parent element to be processed\n     * @param currentView Current LView\n     */\n    function appendProjectedNode(node, currentParent, currentView, renderParent) {\n        appendChild(currentParent, node.native, currentView);\n        if (node.tNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var lContainer = node.data;\n            lContainer[RENDER_PARENT] = renderParent;\n            var views = lContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(node, views[i], true, node.native);\n            }\n        }\n        if (node.dynamicLContainerNode) {\n            node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n            appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(templateStyleContext) {\n        // each instance gets a copy\n        return templateStyleContext.slice();\n    }\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     */\n    function createStylingContextTemplate(initialStyleDeclarations) {\n        var initialStyles = [null];\n        var context = [initialStyles, 0];\n        var indexLookup = {};\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 0 /* INITIAL_STYLES */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStyles.push(value);\n                        indexLookup[prop] = initialStyles.length - 1;\n                    }\n                    else {\n                        // it's safe to use `0` since the default initial value for\n                        // each property will always be null (which is at position 0)\n                        indexLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        var allProps = Object.keys(indexLookup);\n        var totalProps = allProps.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 3 /* Size */ * 2 + 2 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 2 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 2 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 3 /* Size */ + 2 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < allProps.length; i++) {\n            var prop = allProps[i];\n            var indexForInitial = indexLookup[prop];\n            var indexForMulti = i * 3 /* Size */ + multiStart;\n            var indexForSingle = i * 3 /* Size */ + singleStart;\n            setFlag(context, indexForSingle, pointers(0 /* None */, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setFlag(context, indexForMulti, pointers(1 /* Dirty */, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n        }\n        // there is no initial value flag for the master index since it doesn't reference an initial style\n        // value\n        setFlag(context, 1 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n        setContextDirty(context, initialStyles.length > 1);\n        return context;\n    }\n    var EMPTY_ARR = [];\n    /**\n     * Sets and resolves all `multi` styles on an `StylingContext` so that they can be\n     * applied to the element once `renderStyles` is called.\n     *\n     * All missing styles (any values that are not provided in the new `styles` param)\n     * will resolve to `null` within their respective positions in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param styles The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, styles) {\n        var propsToApply = styles ? Object.keys(styles) : EMPTY_ARR;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles are\n        // off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propsToApply.length) {\n            var flag = getPointers(context, ctxIndex);\n            var prop = getProp(context, ctxIndex);\n            var value = getValue(context, ctxIndex);\n            var newProp = propsToApply[propIndex];\n            var newValue = styles[newProp];\n            if (prop === newProp) {\n                if (value !== newValue) {\n                    setValue(context, ctxIndex, newValue);\n                    var initialValue = getInitialValue(context, flag);\n                    // there is no point in setting this to dirty if the previously\n                    // rendered value was being referenced by the initial style (or null)\n                    if (initialValue !== newValue) {\n                        setDirty(context, ctxIndex, true);\n                        dirty = true;\n                    }\n                }\n            }\n            else {\n                var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                if (indexOfEntry > 0) {\n                    // it was found at a later point ... just swap the values\n                    swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                    if (value !== newValue) {\n                        setValue(context, ctxIndex, newValue);\n                        dirty = true;\n                    }\n                }\n                else {\n                    // we only care to do this if the insertion is in the middle\n                    var doShift = ctxIndex < context.length;\n                    insertNewMultiProperty(context, ctxIndex, newProp, newValue);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 3 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles and in this case the\n        // goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var value = context[ctxIndex + 2 /* ValueOffset */];\n            if (value !== null) {\n                setDirty(context, ctxIndex, true);\n                setValue(context, ctxIndex, null);\n                dirty = true;\n            }\n            ctxIndex += 3 /* Size */;\n        }\n        // this means that there are left-over property in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        while (propIndex < propsToApply.length) {\n            var prop = propsToApply[propIndex];\n            var value = styles[prop];\n            context.push(1 /* Dirty */, prop, value);\n            propIndex++;\n            dirty = true;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single CSS style on a property on an `StylingContext` so that they\n     * can be applied to the element once `renderElementStyles` is called.\n     *\n     * Note that prop-level styles are considered higher priority than styles that are applied\n     * using `updateStyleMap`, therefore, when styles are rendered then any styles that\n     * have been applied using this function will be considered first (then multi values second\n     * and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, value) {\n        var singleIndex = 2 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        // didn't change ... nothing to make a note of\n        if (currValue !== value) {\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || valueForMulti !== value) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (value == null && valueForMulti) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styles using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStyleMap` and `updateStyleProp`) onto the\n     * provided element using the provided renderer. Just before the styles\n     * are rendered a final key/value style map will be assembled.\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param styleStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns an object literal. `{ color: 'red', height: 'auto'}`.\n     */\n    function renderStyles(lElement, context, renderer, styleStore) {\n        if (isContextDirty(context)) {\n            var native = lElement.native;\n            var multiStartIndex = getMultiStartIndex(context);\n            for (var i = 2 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var isInSingleRegion = i < multiStartIndex;\n                    var styleToApply = value;\n                    // STYLE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && styleToApply == null) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        styleToApply = getValue(context, multiIndex);\n                    }\n                    // STYLE DEFER CASE 2: Use the initial value if all else fails (is null)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    if (styleToApply == null) {\n                        styleToApply = getInitialValue(context, flag);\n                    }\n                    setStyle(native, prop, styleToApply, renderer, styleStore);\n                    setDirty(context, i, false);\n                }\n            }\n            setContextDirty(context, false);\n        }\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `styleStore` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param styleStore an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, styleStore) {\n        if (styleStore) {\n            styleStore[prop] = value;\n        }\n        else if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 2 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 2 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 1 /* Dirty */) | (staticIndex << 1 /* BitCountSize */) |\n            (dynamicIndex << (15 /* BitCountSize */ + 1 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[0 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 1 /* BitCountSize */) & 32767 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (15 /* BitCountSize */ + 1 /* BitCountSize */)) & 32767 /* BitMask */;\n        return index >= 2 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[1 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var updatedFlag = pointers(isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, name, value) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, 1 /* Dirty */, name, value);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 3 /* Size */);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive (D) sets a property on all component instances using this constant as a key and the\n     * component's host node (LElement) as the value. This is used in methods like detectChanges to\n     * facilitate jumping from an instance to the host node.\n     */\n    var NG_HOST_SYMBOL = '__ngHostLNode__';\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Directive and element indices for top-level directive.\n     *\n     * Saved here to avoid re-instantiating an array on every change detection run.\n     *\n     * Note: Element is not actually stored at index 0 because of the LViewData\n     * header, but the host bindings function expects an index that is NOT adjusted\n     * because it will ultimately be fed to instructions like elementProperty.\n     */\n    var _ROOT_DIRECTIVE_INDICES = [0, 0];\n    /**\n     * TView.data needs to fill the same number of slots as the LViewData header\n     * so the indices of nodes are consistent between LViewData and TView.data.\n     *\n     * It's much faster to keep a blueprint of the pre-filled array and slice it\n     * than it is to create a new array and fill it each time a TView is created.\n     */\n    var HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n    /**\n     * Token set in currentMatches while dependencies are being resolved.\n     *\n     * If we visit a directive that has a value set to CIRCULAR, we know we've\n     * already seen it, and thus have a circular dependency.\n     */\n    var CIRCULAR$1 = '__CIRCULAR__';\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    var rendererFactory;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /** Used to set the parent property when nodes are created. */\n    var previousOrParentNode;\n    function getPreviousOrParentNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentNode;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentNode` points to a parent node.\n     *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n     */\n    var isParent;\n    var tView;\n    var currentQueries;\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (inb this previousOrParentNode points to a node on which we\n     * create content queries).\n     */\n    function getCurrentQueries(QueryType) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries ||\n            (currentQueries =\n                (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                    new QueryType()));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * An array of directive instances in the current view.\n     *\n     * These must be stored separately from LNodes because their presence is\n     * unknown at compile-time and thus space cannot be reserved in data[].\n     */\n    var directives;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, host) {\n        var oldView = viewData;\n        directives = newView && newView[DIRECTIVES];\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        renderer = newView && newView[RENDERER];\n        if (host != null) {\n            previousOrParentNode = host;\n            isParent = true;\n        }\n        viewData = newView;\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(directives, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = -1;\n        enterView(newView, null);\n    }\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings,\n     * refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshView() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        if (!checkNoChangesMode) {\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = firstTemplatePass = false;\n        setHostBindings(tView.hostBindings);\n        refreshContentQueries(tView);\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(bindings) {\n        if (bindings != null) {\n            var defs = tView.directives;\n            for (var i = 0; i < bindings.length; i += 2) {\n                var dirIndex = bindings[i];\n                var def = defs[dirIndex];\n                def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.directives[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i += 2) {\n                componentRefresh(components[i], components[i + 1]);\n            }\n        }\n    }\n    function executeInitAndContentHooks() {\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(directives, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        return [\n            tView,\n            viewData,\n            null,\n            null,\n            flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n            null,\n            -1,\n            null,\n            null,\n            context,\n            viewData && viewData[INJECTOR$1],\n            renderer,\n            sanitizer || null,\n            null,\n            -1,\n            null,\n        ];\n    }\n    /**\n     * Creation of LNode object is extracted to a separate function so we always create LNode object\n     * with the same shape\n     * (same properties assigned in the same order).\n     */\n    function createLNodeObject(type, currentView, parent, native, state, queries) {\n        return {\n            native: native,\n            view: currentView,\n            nodeInjector: parent ? parent.nodeInjector : null,\n            data: state,\n            queries: queries,\n            tNode: null,\n            dynamicLContainerNode: null\n        };\n    }\n    function createLNode(index, type, native, name, attrs, state) {\n        var parent = isParent ? previousOrParentNode :\n            previousOrParentNode && getParentLNode(previousOrParentNode);\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var tParent = parent && parent.view === viewData ? parent.tNode : null;\n        var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n            parent && parent.queries && parent.queries.child();\n        var isState = state != null;\n        var node = createLNodeObject(type, viewData, parent, native, isState ? state : null, queries);\n        if (index === -1 || type === 2 /* View */) {\n            // View nodes are not stored in data because they can be added / removed at runtime (which\n            // would cause indices to change). Their TNodes are instead stored in TView.node.\n            node.tNode = (state ? state[TVIEW].node : null) ||\n                createTNode(type, index, null, null, tParent, null);\n        }\n        else {\n            var adjustedIndex = index + HEADER_OFFSET;\n            // This is an element or container or projection node\n            ngDevMode && assertDataNext(adjustedIndex);\n            var tData = tView.data;\n            viewData[adjustedIndex] = node;\n            // Every node adds a value to the static data array to avoid a sparse array\n            if (adjustedIndex >= tData.length) {\n                var tNode = tData[adjustedIndex] =\n                    createTNode(type, adjustedIndex, name, attrs, tParent, null);\n                if (!isParent && previousOrParentNode) {\n                    var previousTNode = previousOrParentNode.tNode;\n                    previousTNode.next = tNode;\n                    if (previousTNode.dynamicContainerNode)\n                        previousTNode.dynamicContainerNode.next = tNode;\n                }\n            }\n            node.tNode = tData[adjustedIndex];\n            // Now link ourselves into the tree.\n            if (isParent) {\n                currentQueries = null;\n                if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                    previousOrParentNode.tNode.type === 2 /* View */) {\n                    // We are in the same view, which means we are adding content node to the parent View.\n                    previousOrParentNode.tNode.child = node.tNode;\n                }\n            }\n        }\n        // View nodes and host elements need to set their host node (components set host nodes later)\n        if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n            var lViewData = state;\n            ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n            lViewData[HOST_NODE] = node;\n            if (firstTemplatePass)\n                lViewData[TVIEW].node = node.tNode;\n        }\n        previousOrParentNode = node;\n        isParent = true;\n        return node;\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Resets the application state.\n     */\n    function resetApplicationState() {\n        isParent = false;\n        previousOrParentNode = null;\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewNode(tView, context, renderer, queries) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        isParent = true;\n        previousOrParentNode = null;\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        var viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n        return viewNode;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewNode, tView, context, rf) {\n        var _isParent = isParent;\n        var _previousOrParentNode = previousOrParentNode;\n        var oldView;\n        try {\n            isParent = true;\n            previousOrParentNode = null;\n            oldView = enterView(viewNode.data, viewNode);\n            namespaceHTML();\n            tView.template(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                viewNode.data[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            // renderEmbeddedTemplate() is called twice in fact, once for creation only and then once for\n            // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n            var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(oldView, isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n        return viewNode;\n    }\n    function renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n        var oldView = enterView(hostView, node);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (template) {\n                namespaceHTML();\n                template(getRenderFlags(hostView), componentOrContext);\n                refreshView();\n            }\n            else {\n                executeInitAndContentHooks();\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(_ROOT_DIRECTIVE_INDICES);\n                componentRefresh(0, HEADER_OFFSET);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native;\n        if (isProceduralRenderer(renderer)) {\n            native = renderer.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = renderer.createElement(name);\n            }\n            else {\n                native = renderer.createElementNS(_currentNamespace, name);\n            }\n        }\n        ngDevMode && assertDataInRange(index - 1);\n        var node = createLNode(index, 3 /* Element */, native, name, attrs || null, null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(getParentLNode(node), native, viewData);\n        createDirectivesAndLocals(localRefs);\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the current node\n     */\n    function createDirectivesAndLocals(localRefs) {\n        var node = previousOrParentNode;\n        if (firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n        }\n        else {\n            instantiateDirectivesDirectly();\n        }\n        saveResolvedLocalsInData();\n    }\n    /**\n     * On first template pass, we match each node against available directive selectors and save\n     * the resulting defs in the correct instantiation order for subsequent change detection runs\n     * (so dependencies are always created before the directives that inject them).\n     */\n    function cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var matches = tView.currentMatches = findDirectiveMatches(tNode);\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                var valueIndex = i + 1;\n                resolveDirective(def, valueIndex, matches, tView);\n                saveNameToExportMap(matches[valueIndex], def, exportsMap);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /** Matches the current node against all available selectors. */\n    function findDirectiveMatches(tNode) {\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    if (def.template) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                    }\n                    if (def.diPublic)\n                        def.diPublic(def);\n                    (matches || (matches = [])).push(def, null);\n                }\n            }\n        }\n        return matches;\n    }\n    function resolveDirective(def, valueIndex, matches, tView) {\n        if (matches[valueIndex] === null) {\n            matches[valueIndex] = CIRCULAR$1;\n            var instance = def.factory();\n            (tView.directives || (tView.directives = [])).push(def);\n            return directiveCreate(matches[valueIndex] = tView.directives.length - 1, instance, def);\n        }\n        else if (matches[valueIndex] === CIRCULAR$1) {\n            // If we revisit this directive before it's resolved, we know it's circular\n            throwCyclicDependencyError(def.type);\n        }\n        return null;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(dirIndex) {\n        if (firstTemplatePass) {\n            (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n        }\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n     */\n    function queueHostBindingForCheck(dirIndex) {\n        // Must subtract the header offset because hostBindings functions are generated with\n        // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n        ngDevMode &&\n            assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n    }\n    /** Sets the context for a ChangeDetectorRef to the given instance. */\n    function initChangeDetectorIfExisting(injector, instance, view) {\n        if (injector && injector.changeDetectorRef != null) {\n            injector.changeDetectorRef._setComponentContext(view, instance);\n        }\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    /**\n     * This function instantiates the given directives.\n     */\n    function instantiateDirectivesDirectly() {\n        var tNode = previousOrParentNode.tNode;\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        if (count > 0) {\n            var start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var tDirectives = tView.directives;\n            for (var i = start; i < end; i++) {\n                var def = tDirectives[i];\n                directiveCreate(i, def.factory(), def);\n            }\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n     * Builds up an export map as directives are created, so local refs can be quickly mapped\n     * to their directive instances.\n     */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData() {\n        var localNames = previousOrParentNode.tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ? previousOrParentNode.native : directives[index];\n                viewData.push(value);\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param template The template from which to get static data\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(template, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return template.ngPrivateData ||\n            (template.ngPrivateData = createTView(-1, template, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, template, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        return {\n            id: viewIndex,\n            template: template,\n            viewQuery: viewQuery,\n            node: null,\n            data: HEADER_FILLER.slice(),\n            childIndex: -1,\n            bindingStartIndex: -1,\n            directives: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            hostBindings: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            currentMatches: null\n        };\n    }\n    function setUpAttributes(native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        rendererFactory = factory;\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Creates the host LNode.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     *\n     * @returns LElementNode created\n     */\n    function hostElement(tag, rNode, def, sanitizer) {\n        resetApplicationState();\n        var node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n        if (firstTemplatePass) {\n            node.tNode.flags = 4096 /* isComponent */;\n            if (def.diPublic)\n                def.diPublic(def);\n            tView.directives = [def];\n        }\n        return node;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        ngDevMode && assertPreviousIsParent();\n        var node = previousOrParentNode;\n        var native = node.native;\n        ngDevMode && ngDevMode.rendererAddEventListener++;\n        // In order to match current behavior, native DOM event listeners must be added for all\n        // events (including outputs).\n        if (isProceduralRenderer(renderer)) {\n            var wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n            var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n            storeCleanupFn(viewData, cleanupFn);\n        }\n        else {\n            var wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n            native.addEventListener(eventName, wrappedListener, useCapture);\n            var cleanupInstances = getCleanup(viewData);\n            cleanupInstances.push(wrappedListener);\n            if (firstTemplatePass) {\n                getTViewCleanup(viewData).push(eventName, node.tNode.index, cleanupInstances.length - 1, useCapture);\n            }\n        }\n        var tNode = node.tNode;\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], directives);\n            var subscription = directives[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = viewData;\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n        var queries = previousOrParentNode.queries;\n        queries && queries.addNode(previousOrParentNode);\n        queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var element_1 = load(index);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1.native, name) :\n                    element_1.native.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1.native, name, strValue) :\n                    element_1.native.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var node = load(index);\n        var tNode = node.tNode;\n        // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked\n        if (tNode && tNode.inputs === undefined) {\n            // mark inputs as checked\n            tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n        }\n        var inputData = tNode && tNode.inputs;\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(dataValue, value);\n            markDirtyIfOnPush(node);\n        }\n        else {\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            var native = node.native;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n                (native.setProperty ? native.setProperty(propName, value) :\n                    native[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param parent The parent of this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            flags: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: parent,\n            dynamicContainerNode: null,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], directives);\n            directives[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number lNodeFlags logical node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.directives;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassNamed(index, className, value) {\n        if (value !== NO_CHANGE) {\n            var lElement = load(index);\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                    lElement.native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                    lElement.native.classList.remove(className);\n            }\n        }\n    }\n    /**\n     * Set the `className` property on a DOM element.\n     *\n     * This instruction is meant to handle the `[class]=\"exp\"` usage.\n     *\n     * `elementClass` instruction writes the value to the \"element's\" `className` property.\n     *\n     * @param index The index of the element to update in the data array\n     * @param value A value indicating a set of classes which should be applied. The method overrides\n     *   any existing classes. The value is stringified (`toString`) before it is applied to the\n     *   element.\n     */\n    function elementClass(index, value) {\n        if (value !== NO_CHANGE) {\n            // TODO: This is a naive implementation which simply writes value to the `className`. In the\n            // future\n            // we will add logic here which would work with the animation code.\n            var lElement = load(index);\n            ngDevMode && ngDevMode.rendererSetClassName++;\n            isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n                lElement.native['className'] = stringify$1(value);\n        }\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styles A key/value map of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     */\n    function elementStyling(index, styles) {\n        var tNode = load(index - 1).tNode;\n        if (!tNode.stylingTemplate) {\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(styles);\n        }\n        // Allocate space but leave null for lazy creation.\n        viewData[index + HEADER_OFFSET] = null;\n        if (styles && styles.length) {\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: 'red' \">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     */\n    function getStylingContext(index) {\n        var stylingContext = load(index);\n        if (!stylingContext) {\n            var lElement = load(index - 1);\n            var tNode = lElement.tNode;\n            ngDevMode &&\n                assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n            stylingContext = viewData[index + HEADER_OFFSET] = allocStylingContext(tNode.stylingTemplate);\n        }\n        return stylingContext;\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        renderStyles(load(index - 1), getStylingContext(index), renderer);\n    }\n    function elementStyleProp(index, styleIndex, value, suffixOrSanitizer) {\n        var valueToAdd = null;\n        if (value) {\n            valueToAdd =\n                typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string') {\n                valueToAdd = valueToAdd + suffixOrSanitizer;\n            }\n        }\n        updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param value A value indicating if a given style should be added or removed.\n     *   The expected shape of `value` is an object where keys are style names and the values\n     *   are their corresponding values to set. If value is null, then the style is removed.\n     */\n    function elementStyle(index, value) {\n        updateStyleMap(getStylingContext(index), value);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNode = createTextNode(value, renderer);\n        var node = createLNode(index, 3 /* Element */, textNode, null, null);\n        // Text nodes are self closing.\n        isParent = false;\n        appendChild(getParentLNode(node), textNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var existingNode = load(index);\n            ngDevMode && assertDefined(existingNode, 'LNode should exist');\n            ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Create a directive and their associated content queries.\n     *\n     * NOTE: directives can be created in order other than the index order. They can also\n     *       be retrieved before they are created in which case the value will be null.\n     *\n     * @param directive The directive instance.\n     * @param directiveDef DirectiveDef object which contains information about the template.\n     */\n    function directiveCreate(directiveDefIdx, directive, directiveDef) {\n        var instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n        ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n        var tNode = previousOrParentNode.tNode;\n        var isComponent = directiveDef.template;\n        if (isComponent) {\n            addComponentLogic(directiveDefIdx, directive, directiveDef);\n        }\n        if (firstTemplatePass) {\n            // Init hooks are queued now so ngOnInit is called in host components before\n            // any projected components.\n            queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n            if (directiveDef.hostBindings)\n                queueHostBindingForCheck(directiveDefIdx);\n        }\n        if (tNode && tNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n        }\n        if (directiveDef.contentQueries) {\n            directiveDef.contentQueries();\n        }\n        return instance;\n    }\n    function addComponentLogic(directiveIndex, instance, def) {\n        var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentNode.tNode.index, createLViewData(rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        // We need to set the host node/data here because when the component LNode was created,\n        // we didn't yet know it was a component (just an element).\n        previousOrParentNode.data = componentView;\n        componentView[HOST_NODE] = previousOrParentNode;\n        initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n        if (firstTemplatePass)\n            queueComponentIndexForCheck(directiveIndex);\n    }\n    /**\n     * A lighter version of directiveCreate() that is used for the root component\n     *\n     * This version does not contain features that we don't already support at root in\n     * current Angular. Example: local refs and inputs on root component.\n     */\n    function baseDirectiveCreate(index, directive, directiveDef) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n        if (directives == null)\n            viewData[DIRECTIVES] = directives = [];\n        ngDevMode && assertDataNext(index, directives);\n        directives[index] = directive;\n        if (firstTemplatePass) {\n            var flags = previousOrParentNode.tNode.flags;\n            if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n                // When the first directive is created:\n                // - save the index,\n                // - set the number of directives to 1\n                previousOrParentNode.tNode.flags =\n                    index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n            }\n            else {\n                // Only need to bump the size when subsequent directives are created\n                ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n                previousOrParentNode.tNode.flags++;\n            }\n        }\n        else {\n            var diPublic = directiveDef.diPublic;\n            if (diPublic)\n                diPublic(directiveDef);\n        }\n        if (directiveDef.attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n            setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n        }\n        return directive;\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param parentLNode the LNode in which the container's content will be rendered\n     * @param currentView The parent view of the LContainer\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(parentLNode, currentView, isForViewContainerRef) {\n        ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n        var renderParent = canInsertNativeNode(parentLNode, currentView) ?\n            parentLNode :\n            null;\n        if (renderParent && renderParent.tNode.type === 2 /* View */) {\n            renderParent = getParentLNode(renderParent).data[RENDER_PARENT];\n        }\n        return [\n            isForViewContainerRef ? null : 0,\n            currentView,\n            null,\n            null,\n            [],\n            renderParent\n        ];\n    }\n    /**\n     * Creates an LContainerNode.\n     *\n     * Only `LViewNodes` can go into `LContainerNodes`.\n     *\n     * @param index The index of the container in the data array\n     * @param template Optional inline template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function container(index, template, tagName, attrs, localRefs) {\n        ngDevMode &&\n            assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n        var currentParent = isParent ? previousOrParentNode : getParentLNode(previousOrParentNode);\n        var lContainer = createLContainer(currentParent, viewData);\n        var comment = renderer.createComment(ngDevMode ? 'container' : '');\n        var node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n        appendChild(getParentLNode(node), comment, viewData);\n        if (firstTemplatePass) {\n            node.tNode.tViews = template ?\n                createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n                [];\n        }\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n        var queries = node.queries;\n        if (queries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = queries.container();\n        }\n        createDirectivesAndLocals(localRefs);\n        isParent = false;\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        if (queries) {\n            // check if a given container node matches\n            queries.addNode(node);\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        previousOrParentNode = load(index);\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        isParent = true;\n        previousOrParentNode.data[ACTIVE_INDEX] = 0;\n        if (!checkNoChangesMode) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, creationMode);\n        }\n    }\n    /**\n     * Marks the end of the LContainerNode.\n     *\n     * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        if (isParent) {\n            isParent = false;\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentNode = getParentLNode(previousOrParentNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n        var container = previousOrParentNode;\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var nextIndex = container.data[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < container.data[VIEWS].length) {\n            removeView(container, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var lViewNode = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    var dynamicViewData = lViewNode.data;\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param containerNode where to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(containerNode, startIdx, viewBlockId) {\n        var views = containerNode.data[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i].data[TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(containerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the search here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId) {\n        var container = (isParent ? previousOrParentNode : getParentLNode(previousOrParentNode));\n        ngDevMode && assertNodeType(container, 0 /* Container */);\n        var lContainer = container.data;\n        var viewNode = scanForView(container, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewNode) {\n            previousOrParentNode = viewNode;\n            ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n            isParent = true;\n            enterView(viewNode.data, viewNode);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            var newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                newView[QUERIES] = lContainer[QUERIES].createView();\n            }\n            enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n        }\n        if (container) {\n            if (creationMode) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(container, viewNode, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewNode.data);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param parent The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, parent) {\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tNode.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] =\n                createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        refreshView();\n        isParent = false;\n        previousOrParentNode = viewData[HOST_NODE];\n        leaveView(viewData[PARENT]);\n        ngDevMode && assertEqual(isParent, false, 'isParent');\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param directiveIndex Directive index in LViewData[DIRECTIVES]\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(directiveIndex, adjustedElementIndex) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var element = viewData[adjustedElementIndex];\n        ngDevMode && assertNodeType(element, 3 /* Element */);\n        ngDevMode &&\n            assertDefined(element.data, \"Component's host node should have an LViewData attached.\");\n        var hostView = element.data;\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            ngDevMode && assertDataInRange(directiveIndex, directives);\n            detectChangesInternal(hostView, element, directives[directiveIndex]);\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentHost(viewData);\n        if (!componentNode.tNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.tNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.tNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (node.tNode.projection === null)\n            node.tNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        isParent = false;\n        // re-distribution of projectable nodes is stored on a component's view level\n        var parent = getParentLNode(node);\n        if (canInsertNativeNode(parent, viewData)) {\n            var componentNode = findComponentHost(viewData);\n            var nodeToProject = componentNode.tNode.projection[selectorIndex];\n            var projectedView = componentNode.view;\n            var projectionNodeIndex = -1;\n            var grandparent = void 0;\n            var renderParent = parent.tNode.type === 2 /* View */ ?\n                (grandparent = getParentLNode(parent)) &&\n                    grandparent.data[RENDER_PARENT] :\n                parent;\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    // This node is re-projected, so we must go up the tree to get its projected nodes.\n                    var currentComponentHost = findComponentHost(projectedView);\n                    var firstProjectedNode = currentComponentHost.tNode.projection[nodeToProject.projection];\n                    if (firstProjectedNode) {\n                        projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                        nodeToProject = firstProjectedNode;\n                        projectedView = currentComponentHost.view;\n                        continue;\n                    }\n                }\n                else {\n                    var lNode = projectedView[nodeToProject.index];\n                    lNode.tNode.flags |= 8192 /* isProjected */;\n                    appendProjectedNode(lNode, parent, viewData, renderParent);\n                }\n                // If we are finished with a list of re-projected nodes, we need to get\n                // back to the root projection node that was re-projected.\n                if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                    // move down into the view of the component we're projecting right now\n                    var lNode = projectionNodeStack$1[projectionNodeIndex--];\n                    nodeToProject = lNode.tNode;\n                    projectedView = lNode.view;\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(node) {\n        // Because data flows down the component tree, ancestors do not need to be marked dirty\n        if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n            node.data[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Necessary to support OnPush components.\n     */\n    function wrapListenerWithDirtyLogic(view, listenerFn) {\n        return function (e) {\n            markViewDirty(view);\n            return listenerFn(e);\n        };\n    }\n    /**\n     * Wraps an event listener so its host view and its ancestor views will be marked dirty\n     * whenever the event fires. Also wraps with preventDefault behavior.\n     */\n    function wrapListenerWithDirtyAndDefault(view, listenerFn) {\n        return function wrapListenerIn_markViewDirty(e) {\n            markViewDirty(view);\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView[PARENT] != null) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n        scheduleTick(currentView[CONTEXT]);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext) {\n        if (rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                tickRootContext(rootContext);\n                res_1(null);\n                rootContext.clean = _CLEAN_PROMISE;\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var hostNode = _getComponentHostLElementNode(rootComponent);\n            ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n            renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        var lViewData = lElementNode.view;\n        while (lViewData[PARENT]) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var hostNode = _getComponentHostLElementNode(component);\n        ngDevMode &&\n            assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n        detectChangesInternal(hostNode.data, hostNode, component);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        checkNoChangesMode = true;\n        try {\n            detectChanges(component);\n        }\n        finally {\n            checkNoChangesMode = false;\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, hostNode, component) {\n        var oldView = enterView(hostView, hostNode);\n        var hostTView = hostView[TVIEW];\n        var template = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            template(getRenderFlags(hostView), component);\n            refreshView();\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var lElementNode = _getComponentHostLElementNode(component);\n        markViewDirty(lElementNode.view);\n    }\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n    /**\n     *  Initializes the binding start index. Will get inlined.\n     *\n     *  This function must be called before any binding related function is called\n     *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n     */\n    function initBindings() {\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n        if (tView.bindingStartIndex === -1) {\n            tView.bindingStartIndex = viewData.length;\n        }\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(value) ? value : NO_CHANGE;\n    }\n    /**\n     * Reserves slots for pure functions (`pureFunctionX` instructions)\n     *\n     * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n     *\n     *  ----------------------------------------------------------------------------\n     *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n     *  ----------------------------------------------------------------------------\n     *                                         ^\n     *                                         TView.bindingStartIndex\n     *\n     * Pure function instructions are given an offset from TView.bindingStartIndex.\n     * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n     * are stored.\n     *\n     * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n     */\n    function reserveSlots(numSlots) {\n        // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n        // whether it happens or not during the first change detection pass - pure functions checks\n        // might be skipped when short-circuited.\n        viewData.length += numSlots;\n        viewData.fill(NO_CHANGE, -numSlots);\n        // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n        // called first in the update section.\n        initBindings();\n    }\n    /**\n     * Sets up the binding index before executing any `pureFunctionX` instructions.\n     *\n     * The index must be restored after the pure function is executed\n     *\n     * {@link reserveSlots}\n     */\n    function moveBindingIndexToReservedSlot(offset) {\n        var currentSlot = viewData[BINDING_INDEX];\n        viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n        return currentSlot;\n    }\n    /**\n     * Restores the binding index to the given value.\n     *\n     * This function is typically used to restore the index after a `pureFunctionX` has\n     * been executed.\n     */\n    function restoreBindingIndex(index) {\n        viewData[BINDING_INDEX] = index;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation bindings with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var different = bindingUpdated2(v0, v1);\n        different = bindingUpdated(v2) || different;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated(v4) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated2(v4, v5) || different;\n        different = bindingUpdated(v6) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var different = bindingUpdated4(v0, v1, v2, v3);\n        different = bindingUpdated4(v4, v5, v6, v7) || different;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        viewData[adjustedIndex] = value;\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, viewData);\n    }\n    /** Retrieves a value from any `LViewData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from the `directives` array. */\n    function loadDirective(index) {\n        ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n        ngDevMode && assertDataInRange(index, directives);\n        return directives[index];\n    }\n    function loadQueryList(queryListIdx) {\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Gets the current binding value and increments the binding index. */\n    function consumeBinding() {\n        ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n        ngDevMode &&\n            assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[viewData[BINDING_INDEX]++];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        if (viewData[BINDING_INDEX] === -1)\n            initBindings();\n        var bindingIndex = viewData[BINDING_INDEX];\n        if (bindingIndex >= viewData.length) {\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value)) {\n            throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[viewData[BINDING_INDEX]++] = value;\n        }\n        else {\n            viewData[BINDING_INDEX]++;\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding if changed, then returns the latest value. */\n    function checkAndUpdateBinding(value) {\n        bindingUpdated(value);\n        return value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(exp1, exp2) {\n        var different = bindingUpdated(exp1);\n        return bindingUpdated(exp2) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(exp1, exp2);\n        return bindingUpdated2(exp3, exp4) || different;\n    }\n    function getTView() {\n        return tView;\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList) {\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (firstTemplatePass) {\n            var currentDirectiveIndex = directives.length - 1;\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    function assertDataNext(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    /**\n     * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n     *\n     * If not, they might not have been actually reserved.\n     */\n    function assertReservedSlotInitialized(slotOffset, numSlots) {\n        if (firstTemplatePass) {\n            var startIndex = tView.bindingStartIndex - slotOffset;\n            for (var i = 0; i < numSlots; i++) {\n                assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n            }\n        }\n    }\n    function _getComponentHostLElementNode(component) {\n        ngDevMode && assertDefined(component, 'expecting component got null');\n        var lElementNode = component[NG_HOST_SYMBOL];\n        ngDevMode && assertDefined(component, 'object is not a component');\n        return lElementNode;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    var ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = componentType.ngComponentDef;\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        var component;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n        var rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = baseDirectiveCreate(0, componentDef.factory(), componentDef));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n            executeInitAndContentHooks();\n            setHostBindings(ROOT_DIRECTIVE_INDICES);\n            detectChangesInternal(elementNode.data, elementNode, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    function createRootContext(scheduler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n        };\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     *\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty$1(objWithPropertyToExtract, target) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === target) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var GET_PROPERTY_NAME$1 = {};\n    var USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 }, GET_PROPERTY_NAME$1);\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function preR3InjectableCompile(injectableType, options) {\n        if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    /**\n    * Injectable decorator and metadata.\n    *\n    * @Annotation\n    */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) {\n        return (R3_COMPILE_INJECTABLE || preR3InjectableCompile)(type, meta);\n    });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     * @deprecated No replacement\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @experimental\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         * @experimental\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$2 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @experimental\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) &&\n                            token.ngInjectableDef ||\n                            undefined;\n                        if (def !== undefined && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = injectableDefRecord(token);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return this.parent.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = defOrWrappedDef.ngInjectorDef;\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = ngModule.ngInjectorDef;\n            }\n            // If no definition was found, throw.\n            if (def == null) {\n                throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$2) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$2;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefRecord(token) {\n        var def = token.ngInjectableDef;\n        if (def === undefined) {\n            throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        return makeRecord(def.factory);\n    }\n    function providerToRecord(provider) {\n        var token = resolveForwardRef(provider);\n        var value = NOT_YET;\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefRecord(provider);\n        }\n        else {\n            token = resolveForwardRef(provider.provide);\n            if (isValueProvider(provider)) {\n                value = provider.useValue;\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(provider.useExisting); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = provider.useClass || token;\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefRecord(classRef_1);\n                }\n            }\n        }\n        return makeRecord(factory, value);\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        return ChangeDetectorRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         *\n         * ### Example\n         * {@example core/ts/metadata/encapsulation.ts region='longform'}\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding$1(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var pipeTypes = componentDefinition.pipes;\n        var directiveTypes = componentDefinition.directives;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            diPublic: null,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            inputs: invertObject(componentDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(componentDefinition.outputs),\n            rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: type.prototype.ngOnInit || null,\n            doCheck: type.prototype.ngDoCheck || null,\n            afterContentInit: type.prototype.ngAfterContentInit || null,\n            afterContentChecked: type.prototype.ngAfterContentChecked || null,\n            afterViewInit: type.prototype.ngAfterViewInit || null,\n            afterViewChecked: type.prototype.ngAfterViewChecked || null,\n            onDestroy: type.prototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null,\n            pipeDefs: pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n        };\n        var feature = componentDefinition.features;\n        feature && feature.forEach(function (fn) { return fn(def); });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = type.ngComponentDef || type.ngDirectiveDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = type.ngPipeDef;\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || [],\n            declarations: def.declarations || [],\n            imports: def.imports || [],\n            exports: def.exports || [],\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    var EMPTY$1 = {};\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY$1;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n    /**\n     * Determines if a definition is a {@link ComponentDefInternal} or a {@link DirectiveDefInternal}\n     * @param definition The definition to examine\n     */\n    function isComponentDef(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        var _loop_1 = function () {\n            var e_1, _a;\n            if (isComponentDef(definition)) {\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                superDef = superType.ngDirectiveDef;\n            }\n            if (superDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType && !superDef) {\n            _loop_1();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    }\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, context) {\n            this._view = _view;\n            this.context = context;\n        }\n        /** @internal */\n        ViewRef.prototype._setComponentContext = function (view, context) {\n            this._view = view;\n            this.context = context;\n        };\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () { destroyLView(this._view); };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChanges(this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        return ViewRef;\n    }());\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef(viewNode, template, context) {\n            var _this = _super.call(this, viewNode.data, context) || this;\n            _this._viewContainerRef = null;\n            _this._lViewNode = viewNode;\n            return _this;\n        }\n        EmbeddedViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            _super.prototype.destroy.call(this);\n        };\n        EmbeddedViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        return EmbeddedViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injector The node injector in which the directive should be registered\n     * @param type The directive to register\n     */\n    function bloomAdd(injector, type) {\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        // This means that after 255, some directives will share slots, leading to some false positives\n        // when checking for a directive's presence.\n        var bloomBit = id % BLOOM_SIZE;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        if (bloomBit < 128) {\n            // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n            bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n                (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n        }\n        else {\n            bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n                (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n        }\n    }\n    function getOrCreateNodeInjector() {\n        ngDevMode && assertPreviousIsParent();\n        return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param node for which an injector should be retrieved / created.\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(node) {\n        var nodeInjector = node.nodeInjector;\n        var parent = getParentLNode(node);\n        var parentInjector = parent && parent.nodeInjector;\n        if (nodeInjector != parentInjector) {\n            return nodeInjector;\n        }\n        return node.nodeInjector = {\n            parent: parentInjector,\n            node: node,\n            bf0: 0,\n            bf1: 0,\n            bf2: 0,\n            bf3: 0,\n            bf4: 0,\n            bf5: 0,\n            bf6: 0,\n            bf7: 0,\n            cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n            cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n            cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n            cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n            cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n            cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n            cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n            cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n            templateRef: null,\n            viewContainerRef: null,\n            elementRef: null,\n            changeDetectorRef: null\n        };\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param def The definition of the directive to be made public\n     */\n    function diPublicInInjector(di, def) {\n        bloomAdd(di, def.type);\n    }\n    /**\n     * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n     *\n     * @param def The definition of the directive to be made public\n     */\n    function diPublic(def) {\n        diPublicInInjector(getOrCreateNodeInjector(), def);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n    }\n    /**\n     * Creates an ElementRef and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef() {\n        return getOrCreateElementRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef() {\n        return getOrCreateTemplateRef(getOrCreateNodeInjector());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef() {\n        return getOrCreateContainerRef(getOrCreateNodeInjector());\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @experimental\n     */\n    function injectAttribute(attrNameToInject) {\n        ngDevMode && assertPreviousIsParent();\n        var lElement = getPreviousOrParentNode();\n        ngDevMode && assertNodeType(lElement, 3 /* Element */);\n        var tElement = lElement.tNode;\n        ngDevMode && assertDefined(tElement, 'expecting tNode');\n        var attrs = tElement.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     * Or, if it already exists, retrieves the existing instance.\n     *\n     * @returns The ChangeDetectorRef to use\n     */\n    function getOrCreateChangeDetectorRef(di, context) {\n        if (di.changeDetectorRef)\n            return di.changeDetectorRef;\n        var currentNode = di.node;\n        if (isComponent(currentNode.tNode)) {\n            return di.changeDetectorRef = new ViewRef(currentNode.data, context);\n        }\n        else if (currentNode.tNode.type === 3 /* Element */) {\n            return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n        }\n        return null;\n    }\n    /** Gets or creates ChangeDetectorRef for the closest host component */\n    function getOrCreateHostChangeDetector(currentNode) {\n        var hostNode = getClosestComponentAncestor(currentNode);\n        var hostInjector = hostNode.nodeInjector;\n        var existingRef = hostInjector && hostInjector.changeDetectorRef;\n        return existingRef ?\n            existingRef :\n            new ViewRef(hostNode.data, hostNode\n                .view[DIRECTIVES][hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n    }\n    /**\n     * If the node is an embedded view, traverses up the view tree to return the closest\n     * ancestor view that is attached to a component. If it's already a component node,\n     * returns itself.\n     */\n    function getClosestComponentAncestor(node) {\n        while (node.tNode.type === 2 /* View */) {\n            node = node.view[HOST_NODE];\n        }\n        return node;\n    }\n    /**\n     * Searches for an instance of the given directive type up the injector tree and returns\n     * that instance if found.\n     *\n     * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n     * checks that bit against the bloom filter structure to identify an injector that might have\n     * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n     * for a match.\n     *\n     * If not found, it will propagate up to the next parent injector until the token\n     * is found or the top is reached.\n     *\n     * @param di Node injector where the search should start\n     * @param token The directive type to search for\n     * @param flags Injection flags (e.g. CheckParent)\n     * @returns The instance found\n     */\n    function getOrCreateInjectable(di, token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBit(token);\n        // If the token has a bloom hash, then it is a directive that is public to the injection system\n        // (diPublic). If there is no hash, fall back to the module injector.\n        if (bloomHash === null) {\n            var moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n            var formerInjector = setCurrentInjector(moduleInjector);\n            try {\n                return inject(token, flags);\n            }\n            finally {\n                setCurrentInjector(formerInjector);\n            }\n        }\n        else {\n            var injector = di;\n            while (injector) {\n                // Get the closest potential matching injector (upwards in the injector tree) that\n                // *potentially* has the token.\n                injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n                // If no injector is found, we *know* that there is no ancestor injector that contains the\n                // token, so we abort.\n                if (!injector) {\n                    break;\n                }\n                // At this point, we have an injector which *may* contain the token, so we step through the\n                // directives associated with the injector's corresponding node to get the directive instance.\n                var node = injector.node;\n                var nodeFlags = node.tNode.flags;\n                var count = nodeFlags & 4095 /* DirectiveCountMask */;\n                if (count !== 0) {\n                    var start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                    var end = start + count;\n                    var defs = node.view[TVIEW].directives;\n                    for (var i = start; i < end; i++) {\n                        // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                        // and matches the given token, return the directive instance.\n                        var directiveDef = defs[i];\n                        if (directiveDef.type === token && directiveDef.diPublic) {\n                            return node.view[DIRECTIVES][i];\n                        }\n                    }\n                }\n                // If we *didn't* find the directive for the token and we are searching the current node's\n                // injector, it's possible the directive is on this node and hasn't been created yet.\n                var instance = void 0;\n                if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                    return instance;\n                }\n                // The def wasn't found anywhere on this node, so it was a false positive.\n                // If flags permit, traverse up the tree and continue searching.\n                if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                    injector = null;\n                }\n                else {\n                    injector = injector.parent;\n                }\n            }\n        }\n        // No directive was found for the given token.\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n    }\n    function searchMatchesQueuedForCreation(node, token) {\n        var matches = node.view[TVIEW].currentMatches;\n        if (matches) {\n            for (var i = 0; i < matches.length; i += 2) {\n                var def = matches[i];\n                if (def.type === token) {\n                    return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Given a directive type, this function returns the bit in an injector's bloom filter\n     * that should be used to determine whether or not the directive is present.\n     *\n     * When the directive was added to the bloom filter, it was given a unique ID that can be\n     * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n     * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n     * BLOOM_SIZE is reached).\n     *\n     * @param type The directive type\n     * @returns The bloom bit to check for the directive\n     */\n    function bloomHashBit(type) {\n        var id = type[NG_ELEMENT_ID];\n        return typeof id === 'number' ? id % BLOOM_SIZE : null;\n    }\n    /**\n     * Finds the closest injector that might have a certain directive.\n     *\n     * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n     * check and a starting injector, this function traverses up injectors until it finds an\n     * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n     * injector may have that directive. It only *may* have the directive because directives begin\n     * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n     * different directive sharing the bit.\n     *\n     * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n     * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n     * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n     * the directive and do not need to be checked.\n     *\n     * @param injector The starting node injector to check\n     * @param  bloomBit The bit to check in each injector's bloom filter\n     * @param  flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n     * @returns An injector that might have the directive\n     */\n    function bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n        // match.\n        var injector = flags & 4 /* SkipSelf */ ? startInjector.parent : startInjector;\n        while (injector) {\n            // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n            // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n            // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n            var value = void 0;\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                    (bloomBit < 96 ? injector.bf2 : injector.bf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                    (bloomBit < 224 ? injector.bf6 : injector.bf7);\n            }\n            // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n            // this injector is a potential match.\n            if ((value & mask) === mask) {\n                return injector;\n            }\n            else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                return null;\n            }\n            // If the current injector does not have the directive, check the bloom filters for the ancestor\n            // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n            if (bloomBit < 128) {\n                value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                    (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n            }\n            else {\n                value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                    (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n            }\n            // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n            // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n            injector = (value & mask) ? injector.parent : null;\n        }\n        return null;\n    }\n    /**\n     * Checks whether the current injector and its parent are in the same host view.\n     *\n     * This is necessary to support @Host() decorators. If @Host() is set, we should stop searching once\n     * the injector and its parent view don't match because it means we'd cross the view boundary.\n     */\n    function sameHostView(injector) {\n        return !!injector.parent && injector.parent.node.view === injector.node.view;\n    }\n    var ReadFromInjectorFn = /** @class */ (function () {\n        function ReadFromInjectorFn(read) {\n            this.read = read;\n        }\n        return ReadFromInjectorFn;\n    }());\n    /**\n     * Creates an ElementRef for a given node injector and stores it on the injector.\n     * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n     *\n     * @param di The node injector where we should store a created ElementRef\n     * @returns The ElementRef instance to use\n     */\n    function getOrCreateElementRef(di) {\n        return di.elementRef || (di.elementRef = new ElementRef(di.node.native));\n    }\n    /** A ref to a node's native element. */\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function getOrCreateContainerRef(di) {\n        if (!di.viewContainerRef) {\n            var vcRefHost = di.node;\n            ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n            var hostParent = getParentLNode(vcRefHost);\n            var lContainer = createLContainer(hostParent, vcRefHost.view, true);\n            var comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n            var lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n            appendChild(hostParent, comment, vcRefHost.view);\n            if (vcRefHost.queries) {\n                lContainerNode.queries = vcRefHost.queries.container();\n            }\n            var hostTNode = vcRefHost.tNode;\n            if (!hostTNode.dynamicContainerNode) {\n                hostTNode.dynamicContainerNode =\n                    createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n            }\n            lContainerNode.tNode = hostTNode.dynamicContainerNode;\n            vcRefHost.dynamicLContainerNode = lContainerNode;\n            addToViewTree(vcRefHost.view, hostTNode.index, lContainer);\n            di.viewContainerRef = new ViewContainerRef(lContainerNode);\n        }\n        return di.viewContainerRef;\n    }\n    /**\n     * A ref to a container that enables adding and removing views from that container\n     * imperatively.\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef(_lContainerNode) {\n            this._lContainerNode = _lContainerNode;\n            this._viewRefs = [];\n        }\n        ViewContainerRef.prototype.clear = function () {\n            var lContainer = this._lContainerNode.data;\n            while (lContainer[VIEWS].length) {\n                this.remove(0);\n            }\n        };\n        ViewContainerRef.prototype.get = function (index) { return this._viewRefs[index] || null; };\n        Object.defineProperty(ViewContainerRef.prototype, \"length\", {\n            get: function () {\n                var lContainer = this._lContainerNode.data;\n                return lContainer[VIEWS].length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var adjustedIdx = this._adjustIndex(index);\n            var viewRef = templateRef\n                .createEmbeddedView(context || {}, this._lContainerNode, adjustedIdx);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n            throw notImplemented();\n        };\n        ViewContainerRef.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var lViewNode = viewRef._lViewNode;\n            var adjustedIdx = this._adjustIndex(index);\n            insertView(this._lContainerNode, lViewNode, adjustedIdx);\n            var views = this._lContainerNode.data[VIEWS];\n            var beforeNode = adjustedIdx + 1 < views.length ?\n                (getChildLNode(views[adjustedIdx + 1])).native :\n                this._lContainerNode.native;\n            addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n            viewRef.attachToViewContainerRef(this);\n            this._viewRefs.splice(adjustedIdx, 0, viewRef);\n            return viewRef;\n        };\n        ViewContainerRef.prototype.move = function (viewRef, newIndex) {\n            var index = this.indexOf(viewRef);\n            this.detach(index);\n            this.insert(viewRef, this._adjustIndex(newIndex));\n            return viewRef;\n        };\n        ViewContainerRef.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n        ViewContainerRef.prototype.remove = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            removeView(this._lContainerNode, adjustedIdx);\n            this._viewRefs.splice(adjustedIdx, 1);\n        };\n        ViewContainerRef.prototype.detach = function (index) {\n            var adjustedIdx = this._adjustIndex(index, -1);\n            var lViewNode = detachView(this._lContainerNode, adjustedIdx);\n            return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n        };\n        ViewContainerRef.prototype._adjustIndex = function (index, shift) {\n            if (shift === void 0) { shift = 0; }\n            if (index == null) {\n                return this._lContainerNode.data[VIEWS].length + shift;\n            }\n            if (ngDevMode) {\n                assertGreaterThan(index, -1, 'index must be positive');\n                // +1 because it's legal to insert at the end.\n                assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n            }\n            return index;\n        };\n        return ViewContainerRef;\n    }());\n    /**\n     * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n     * exists, retrieves the existing TemplateRef.\n     *\n     * @param di The node injector where we should store a created TemplateRef\n     * @returns The TemplateRef instance to use\n     */\n    function getOrCreateTemplateRef(di) {\n        if (!di.templateRef) {\n            ngDevMode && assertNodeType(di.node, 0 /* Container */);\n            var hostNode = di.node;\n            var hostTNode = hostNode.tNode;\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            di.templateRef = new TemplateRef(getOrCreateElementRef(di), hostTNode.tViews, getRenderer(), hostNode.data[QUERIES]);\n        }\n        return di.templateRef;\n    }\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef(elementRef, _tView, _renderer, _queries) {\n            this._tView = _tView;\n            this._renderer = _renderer;\n            this._queries = _queries;\n            this.elementRef = elementRef;\n        }\n        TemplateRef.prototype.createEmbeddedView = function (context, containerNode, index) {\n            var viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n            if (containerNode) {\n                insertView(containerNode, viewNode, index);\n            }\n            renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n            return new EmbeddedViewRef(viewNode, this._tView.template, context);\n        };\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This feature publishes the directive (or component) into the DI system, making it visible to\n     * others for injection.\n     *\n     * @param definition\n     */\n    function PublicFeature(definition) {\n        definition.diPublic = diPublic;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     *\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef$1 = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        return ElementRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handeled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * @experimental\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * @experimental\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        return Renderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = component.ngComponentDef;\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: function () { return requestAnimationFrame.bind(window); } });\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (parentComponentInjector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngDevMode && assertDefined(ngModule, 'ngModule should always be defined');\n            var rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : document;\n            var hostNode = locateHostElement(rendererFactory, rootSelectorOrNode);\n            // The first index of the first selector is the tag name.\n            var componentTag = this.componentDef.selectors[0][0];\n            var rootContext = ngModule.injector.get(ROOT_CONTEXT);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), null, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n            rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var elementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                // Create element node at index 0 in data array\n                elementNode = hostElement(componentTag, hostNode, this.componentDef);\n                // Create directive instance with factory() and store at index 0 in directives array\n                rootContext.components.push(component = baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef));\n                initChangeDetectorIfExisting(elementNode.nodeInjector, component, elementNode.data);\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            // TODO(misko): this is the wrong injector here.\n            return new ComponentRef$1(this.componentType, component, rootView, ngModule.injector, hostNode);\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, hostNode) {\n            var _this = _super.call(this) || this;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n            _this.hostView = _this.changeDetectorRef = new ViewRef(rootView, instance);\n            _this.injector = injector;\n            _this.location = new ElementRef$1(hostNode);\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /\\{\\$([^}]+)\\}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, tmplContainers, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var instructions = [];\n        generateMappingInstructions(0, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param index The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param tmplContainers An array of template container placeholders whose content should be ignored\n     * when generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex) {\n        var tmplIndex = instructions.length;\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        instructions.push(tmplInstructions);\n        for (; index < translationParts.length; index++) {\n            var value = translationParts[index];\n            // Odd indexes are placeholders\n            if (index & 1) {\n                var phIndex = void 0;\n                if (elements && elements[tmplIndex] &&\n                    typeof (phIndex = elements[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents a DOM element\n                    // Add an instruction to move the element\n                    tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                    phVisited.push(value);\n                    openedTagCount++;\n                }\n                else if (expressions && expressions[tmplIndex] &&\n                    typeof (phIndex = expressions[tmplIndex][value]) !== 'undefined') {\n                    // The placeholder represents an expression\n                    // Add an instruction to move the expression\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else { // It is a closing tag\n                    tmplInstructions.push(-2147483648 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (typeof phIndex !== 'undefined' && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (tmplContainers && tmplContainers.indexOf(value) !== -1 &&\n                    tmplContainers.indexOf(value) >= tmplIndex) {\n                    index = generateMappingInstructions(index, translationParts, instructions, elements, expressions, tmplContainers, lastChildIndex);\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Check if some elements from the template are missing from the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_1 = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index_1 | -1610612736 /* RemoveNode */);\n                        if (index_1 > maxIndex) {\n                            maxIndex = index_1;\n                        }\n                    }\n                }\n            }\n        }\n        // Check if some expressions from the template are missing from the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index_2 = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index_2.toString(2).length, 28, \"Index \" + index_2 + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index_2 | -1610612736 /* RemoveNode */);\n                        if (index_2 > maxIndex) {\n                            maxIndex = index_2;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                // We consider those additional placeholders as expressions because we don't care about\n                // their children, all we need to do is to append them\n                tmplInstructions.push(i | 1610612736 /* Expression */);\n            }\n        }\n        return index;\n    }\n    function appendI18nNode(node, parentNode, previousNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        appendChild(parentNode, node.native || null, viewData);\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n                node.tNode.next = parentNode.tNode.child;\n                parentNode.tNode.child = node.tNode;\n            }\n            else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n                node.tNode.next = previousNode.tNode.next;\n                previousNode.tNode.next = node.tNode;\n            }\n            else {\n                node.tNode.next = null;\n            }\n            if (parentNode.view === node.view)\n                node.tNode.parent = parentNode.tNode;\n        }\n        // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n        if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n            // (node.native as RComment).textContent = 'test';\n            // console.log(node.native);\n            appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n            if (firstTemplatePass) {\n                node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n                node.dynamicLContainerNode.tNode.parent = node.tNode;\n            }\n            return node.dynamicLContainerNode;\n        }\n        return node;\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n        var localPreviousNode = localParentNode;\n        resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var element$$1 = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                    localParentNode = element$$1;\n                    break;\n                case 1610612736 /* Expression */:\n                    var expr = load(instruction & 536870911 /* IndexMask */);\n                    localPreviousNode = appendI18nNode(expr, localParentNode, localPreviousNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createLNode takes a raw index (not adjusted by header offset).\n                    var textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                    resetApplicationState();\n                    break;\n                case -2147483648 /* CloseNode */:\n                    localPreviousNode = localParentNode;\n                    localParentNode = getParentLNode(localParentNode);\n                    break;\n                case -1610612736 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var index = instruction & 536870911 /* IndexMask */;\n                    var removedNode = load(index);\n                    var parentNode = getParentLNode(removedNode);\n                    removeChild(parentNode, removedNode.native || null, viewData);\n                    // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                    if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                        removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                        removedNode.dynamicLContainerNode.tNode.detached = true;\n                        removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation(instructions, numberOfExp, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var different = bindingUpdated(v0);\n        if (numberOfExp > 1) {\n            different = bindingUpdated(v1) || different;\n            if (numberOfExp > 2) {\n                different = bindingUpdated(v2) || different;\n                if (numberOfExp > 3) {\n                    different = bindingUpdated(v3) || different;\n                    if (numberOfExp > 4) {\n                        different = bindingUpdated(v4) || different;\n                        if (numberOfExp > 5) {\n                            different = bindingUpdated(v5) || different;\n                            if (numberOfExp > 6) {\n                                different = bindingUpdated(v6) || different;\n                                if (numberOfExp > 7) {\n                                    different = bindingUpdated(v7) || different;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            var value = void 0;\n            // Odd indexes are placeholders\n            if (i & 1) {\n                switch (instructions[i]) {\n                    case 0:\n                        value = v0;\n                        break;\n                    case 1:\n                        value = v1;\n                        break;\n                    case 2:\n                        value = v2;\n                        break;\n                    case 3:\n                        value = v3;\n                        break;\n                    case 4:\n                        value = v4;\n                        break;\n                    case 5:\n                        value = v5;\n                        break;\n                    case 6:\n                        value = v6;\n                        break;\n                    case 7:\n                        value = v7;\n                        break;\n                }\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     *\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @experimental\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = ngModuleType.ngModuleDef;\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param pureFn Function that returns a value\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = getCreationMode() ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg) : pureFn()) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated(exp) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated2(exp1, exp2) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated2(exp1, exp2);\n        var value = bindingUpdated(exp3) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated(exp5) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated2(exp5, exp6) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        different = bindingUpdated2(exp5, exp6) || different;\n        var value = bindingUpdated(exp7) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n        var value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n            checkAndUpdateBinding(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n        var index = moveBindingIndexToReservedSlot(slotOffset);\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(exps[i]) && (different = true);\n        }\n        var value = different ? checkAndUpdateBinding(pureFn.apply(thisArg, exps)) : consumeBinding();\n        restoreBindingIndex(index);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space {@link reserveSlots}\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * @usageNotes\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n         * delivers events synchronously or asynchronously.\n         *\n         * @param isAsync By default, events are delivered synchronously (default value: `false`).\n         * Set to `true` for asynchronous event delivery.\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(deep) {\n            this.shallow = null;\n            this.deep = null;\n            this.deep = deep == null ? null : deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return this.deep ? new LQueries_(this.deep) : null; };\n        LQueries_.prototype.child = function () {\n            if (this.deep === null) {\n                // if we don't have any deep queries then no need to track anything more.\n                return null;\n            }\n            if (this.shallow === null) {\n                // DeepQuery: We can reuse the current state if the child state would be same as current\n                // state.\n                return this;\n            }\n            else {\n                // We need to create new state\n                return new LQueries_(this.deep);\n            }\n        };\n        LQueries_.prototype.container = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var containerValues = []; // prepare room for views\n                query.values.push(containerValues);\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: containerValues,\n                    containerValues: null\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var result = null;\n            var query = this.deep;\n            while (query) {\n                var clonedQuery = {\n                    next: null,\n                    list: query.list,\n                    predicate: query.predicate,\n                    values: [],\n                    containerValues: query.values\n                };\n                clonedQuery.next = result;\n                result = clonedQuery;\n                query = query.next;\n            }\n            return result ? new LQueries_(result) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                query.containerValues.splice(index, 0, query.values);\n                query = query.next;\n            }\n        };\n        LQueries_.prototype.addNode = function (node) {\n            add(this.shallow, node);\n            add(this.deep, node);\n        };\n        LQueries_.prototype.removeView = function () {\n            var query = this.deep;\n            while (query) {\n                ngDevMode &&\n                    assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n                var containerValues = query.containerValues;\n                var viewValuesIdx = containerValues.indexOf(query.values);\n                var removed = containerValues.splice(viewValuesIdx, 1);\n                // mark a query as dirty only when removed view had matching modes\n                ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n                if (removed[0].length) {\n                    query.list.setDirty();\n                }\n                query = query.next;\n            }\n        };\n        return LQueries_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param node Node on which directives are present.\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(node, type) {\n        var defs = node.view[TVIEW].directives;\n        var flags = node.tNode.flags;\n        var count = flags & 4095 /* DirectiveCountMask */;\n        var start = flags >> 14 /* DirectiveStartingIndexShift */;\n        var end = start + count;\n        for (var i = start; i < end; i++) {\n            var def = defs[i];\n            if (def.type === type && def.diPublic) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n        if (read instanceof ReadFromInjectorFn) {\n            return read.read(nodeInjector, node, directiveIdx);\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(node, read);\n            if (matchingIdx !== null) {\n                return node.view[DIRECTIVES][matchingIdx];\n            }\n        }\n        return null;\n    }\n    function add(query, node) {\n        var nodeInjector = getOrCreateNodeInjectorForNode(node);\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var directiveIdx = getIdxOfMatchingDirective(node, type);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // if read token and / or strategy is not specified, use type as read token\n                    var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        // a node is matching a predicate - determine what to read\n                        // note that queries using name selector must specify read strategy\n                        ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                        var result = readFromNodeInjector(nodeInjector, node, predicate.read, directiveIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµinjectChangeDetectorRef': injectChangeDetectorRef,\n        'ÉµinjectElementRef': injectElementRef,\n        'ÉµinjectTemplateRef': injectTemplateRef,\n        'ÉµinjectViewContainerRef': injectViewContainerRef,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'Éµa': elementAttribute,\n        'Éµb': bind,\n        'ÉµC': container,\n        'ÉµcR': containerRefreshStart,\n        'Éµcr': containerRefreshEnd,\n        'Éµd': loadDirective,\n        'ÉµNH': namespaceHTML,\n        'ÉµNM': namespaceMathML,\n        'ÉµNS': namespaceSVG,\n        'ÉµE': elementStart,\n        'Éµe': elementEnd,\n        'ÉµEe': element,\n        'Éµf0': pureFunction0,\n        'Éµf1': pureFunction1,\n        'Éµf2': pureFunction2,\n        'Éµf3': pureFunction3,\n        'Éµf4': pureFunction4,\n        'Éµf5': pureFunction5,\n        'Éµf6': pureFunction6,\n        'Éµf7': pureFunction7,\n        'Éµf8': pureFunction8,\n        'ÉµfV': pureFunctionV,\n        'Éµi1': interpolation1,\n        'Éµi2': interpolation2,\n        'Éµi3': interpolation3,\n        'Éµi4': interpolation4,\n        'Éµi5': interpolation5,\n        'Éµi6': interpolation6,\n        'Éµi7': interpolation7,\n        'Éµi8': interpolation8,\n        'ÉµiV': interpolationV,\n        'Éµk': elementClass,\n        'Éµkn': elementClassNamed,\n        'ÉµL': listener,\n        'Éµld': load,\n        'ÉµP': projection,\n        'Éµp': elementProperty,\n        'Éµpb1': pipeBind1,\n        'Éµpb2': pipeBind2,\n        'Éµpb3': pipeBind3,\n        'Éµpb4': pipeBind4,\n        'ÉµpbV': pipeBindV,\n        'ÉµpD': projectionDef,\n        'ÉµPp': pipe,\n        'ÉµQ': query,\n        'ÉµqR': queryRefresh,\n        'ÉµrS': reserveSlots,\n        'Éµs': elementStyling,\n        'Éµsm': elementStyle,\n        'Éµsp': elementStyleProp,\n        'Éµsa': elementStylingApply,\n        'ÉµT': text,\n        'Éµt': textBinding,\n        'ÉµV': embeddedViewStart,\n        'Éµv': embeddedViewEnd,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TARGET = {};\n    var NG_COMPONENT_DEF = getClosureSafeProperty$1({ ngComponentDef: TARGET }, TARGET);\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty$1({ ngDirectiveDef: TARGET }, TARGET);\n    var NG_INJECTABLE_DEF = getClosureSafeProperty$1({ ngInjectableDef: TARGET }, TARGET);\n    var NG_INJECTOR_DEF = getClosureSafeProperty$1({ ngInjectorDef: TARGET }, TARGET);\n    var NG_PIPE_DEF = getClosureSafeProperty$1({ ngPipeDef: TARGET }, TARGET);\n    var NG_MODULE_DEF = getClosureSafeProperty$1({ ngModuleDef: TARGET }, TARGET);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Embedded Template that can be used to instantiate Embedded Views.\n     *\n     * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n     * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n     * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n     * the `TemplateRef` from a Component or a Directive via {@link Query}.\n     *\n     * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n     * createEmbeddedView}, which will create the View and attach it to the View Container.\n     *\n     */\n    var TemplateRef$1 = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        return TemplateRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more Views can be attached.\n     *\n     * The container can contain two kinds of Views. Host Views, created by instantiating a\n     * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n     * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n     *\n     * The location of the View Container within the containing View is specified by the Anchor\n     * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n     * have a single View Container.\n     *\n     * Root elements of Views attached to this container become siblings of the Anchor Element in\n     * the Rendered View.\n     *\n     * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n     * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n     *\n     */\n    var ViewContainerRef$1 = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        return ViewContainerRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            if (token === ElementRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ElementRef;\n            }\n            else if (token === Injector) {\n                meta.resolved = compiler.R3ResolvedDependencyType.Injector;\n            }\n            else if (token === TemplateRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.TemplateRef;\n            }\n            else if (token === ViewContainerRef$1) {\n                meta.resolved = compiler.R3ResolvedDependencyType.ViewContainerRef;\n            }\n            else {\n                meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            }\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    function compileNgModule(type, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(type, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(type),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$3).map(wrap),\n                        declarations: declarations.map(wrap),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$3).map(expandModuleWithProviders).map(wrap),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngModuleDef.js\");\n                }\n                return ngModuleDef;\n            },\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(type, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: type.name,\n                        type: wrap(type),\n                        deps: reflectDependencies(type),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$3),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$3,\n                            ngModule.exports || EMPTY_ARRAY$3,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef =\n                        compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectorDef.js\");\n                }\n                return ngInjectorDef;\n            },\n        });\n        declarations.forEach(function (declaration) {\n            // Some declared components may be compiled asynchronously, and thus may not have their\n            // ngComponentDef set yet. If this is the case, then a reference to the module is written into\n            // the `ngSelectorScope` property of the declared type.\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                patchComponentDefWithScope(declaration.ngComponentDef, type);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = type;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, module) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopesFor(module).compilation.directives)\n            .map(function (dir) { return dir.ngDirectiveDef || dir.ngComponentDef; })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopesFor(module).compilation.pipes).map(function (pipe) { return pipe.ngPipeDef; });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = moduleType.ngModuleDef;\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (declaredWithDefs.ngPipeDef !== undefined) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (exportedTyped.ngPipeDef !== undefined) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return value.ngModuleDef !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var def = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (def === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    });\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    // Compile the component metadata, including template, into an expression.\n                    // TODO(alxhub): implement inputs, outputs, queries, etc.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: [] }), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", constantPool);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it finishes\n                    // compiling.\n                    if (hasSelectorScope(type)) {\n                        patchComponentDefWithScope(def, type.ngSelectorScope);\n                    }\n                }\n                return def;\n            },\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var def = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, constantPool);\n                }\n                return def;\n            },\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: [],\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(value.split(',').map(function (piece) { return piece.trim(); }), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, meta) {\n        // TODO(alxhub): handle JIT of bare @Injectable().\n        if (!meta) {\n            return;\n        }\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var deps = undefined;\n                    if (!hasAProvider || (isUseClassProvider(meta) && type === meta.useClass)) {\n                        deps = reflectDependencies(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        deps = meta.deps && convertDependencies(meta.deps) || [];\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var expression = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        deps: deps,\n                    }).expression;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\");\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var GET_PROPERTY_NAME$2 = {};\n    var USE_VALUE$2 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$2 }, GET_PROPERTY_NAME$2);\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var def = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (def === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    def = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl);\n                }\n                return def;\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ivyEnabled = true;\n    var R3_COMPILE_COMPONENT = compileComponent;\n    var R3_COMPILE_DIRECTIVE = compileDirective;\n    var R3_COMPILE_INJECTABLE = compileInjectable;\n    var R3_COMPILE_NGMODULE = compileNgModule;\n    var R3_COMPILE_PIPE = compilePipe;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Component metadata.\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return (R3_COMPILE_DIRECTIVE || (function () { }))(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return (R3_COMPILE_COMPONENT || (function () { }))(type, meta); });\n    /**\n     *\n     *\n     * @Annotation\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return (R3_COMPILE_PIPE || (function () { }))(type, meta); });\n    /**\n     *\n     * @Annotation\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     *\n     * @Annotation\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     *\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @experimental\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    /**\n     * @Annotation\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     */\n    function (type, meta) { return (R3_COMPILE_NGMODULE || preR3NgModuleCompile)(type, meta); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     *\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    var VERSION = new Version('6.1.0-beta.3+95.sha-0399c69');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     * @experimental\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @experimental\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @experimental\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @experimental\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @experimental\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @experimental\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @experimental\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @experimental\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @experimental\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @experimental\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @experimental\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @experimental\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @experimental\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @experimental\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @experimental\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @experimental\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @experimental\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    isPeriodic: t.data.isPeriodic,\n                    delay: t.data.delay,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    // Added by Zones for XHRs\n                    // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                    xhr: t.data.target\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @experimental\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @experimental\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    var _platform;\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     *\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @experimental\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         *\n         * @experimental APIs related to application bootstrap are currently under review.\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var compilerFactory = this.injector.get(CompilerFactory);\n            var options = optionsReducer({}, compilerOptions);\n            var compiler$$1 = compilerFactory.createCompiler([options]);\n            return compiler$$1.compileModuleAsync(moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @experimental\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @experimental\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @experimental\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @experimental\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular View.\n     *\n     * <!-- TODO: move the next two paragraphs to the dev guide -->\n     * A View is a fundamental building block of the application UI. It is the smallest grouping of\n     * Elements which are created and destroyed together.\n     *\n     * Properties of elements in a View can change, but the structure (number and order) of elements in\n     * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n     * removing nested Views via a `ViewContainerRef`. Each View can contain many View Containers.\n     * <!-- /TODO -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * Given this template...\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * We have two `TemplateRef`s:\n     *\n     * Outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * Inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * Notice that the original template is broken down into two separate `TemplateRef`s.\n     *\n     * The outer/inner `TemplateRef`s are then assembled into views like so:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @experimental\n     */\n    var EmbeddedViewRef$1 = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n            else {\n                this.parent = null;\n            }\n            this.listeners = [];\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @experimental All debugging apis are currently experimental.\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @experimental\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @experimental\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @experimental\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @experimental i18n support is experimental.\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * This module includes the providers of @angular/core that are needed\n     * to bootstrap components via `ApplicationRef`.\n     *\n     * @experimental\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(null);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     *\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            el = renderer.selectRootElement(rootSelectorOrNode);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding$1(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n                var injectableDef = depDef.token.ngInjectableDef;\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef$1(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef$1(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef$1));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef$1);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef$1);\n    var TemplateRefTokenKey = tokenKey(TemplateRef$1);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef$1(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef$1(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding$1(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding$1(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding$1(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding$1(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding$1(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding$1(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding$1(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding$1(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding$1(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding$1(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding$1(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n            typeof override.token.ngInjectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (token.ngInjectableDef.providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n            var el = this.delegate.selectRootElement(selectorOrNode);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            var def = resolveDefinition(this._ngModuleDefFactory);\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (unsafeResourceUrl instanceof String &&\n            unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, 'Html');\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, 'Style');\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, 'Script');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, 'Url');\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef$1;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef$1;\n    exports.ViewContainerRef = ViewContainerRef$1;\n    exports.EmbeddedViewRef = EmbeddedViewRef$1;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectTemplateRef = injectTemplateRef;\n    exports.ÉµinjectViewContainerRef = injectViewContainerRef;\n    exports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµPublicFeature = PublicFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNC = NO_CHANGE;\n    exports.ÉµC = container;\n    exports.ÉµE = elementStart;\n    exports.ÉµNH = namespaceHTML;\n    exports.ÉµNM = namespaceMathML;\n    exports.ÉµNS = namespaceSVG;\n    exports.ÉµEe = element;\n    exports.ÉµL = listener;\n    exports.ÉµT = text;\n    exports.ÉµV = embeddedViewStart;\n    exports.ÉµQ = query;\n    exports.ÉµQr = registerContentQuery;\n    exports.Éµd = loadDirective;\n    exports.ÉµP = projection;\n    exports.Éµb = bind;\n    exports.Éµi1 = interpolation1;\n    exports.Éµi2 = interpolation2;\n    exports.Éµi3 = interpolation3;\n    exports.Éµi4 = interpolation4;\n    exports.Éµi5 = interpolation5;\n    exports.Éµi6 = interpolation6;\n    exports.Éµi7 = interpolation7;\n    exports.Éµi8 = interpolation8;\n    exports.ÉµiV = interpolationV;\n    exports.Éµpb1 = pipeBind1;\n    exports.Éµpb2 = pipeBind2;\n    exports.Éµpb3 = pipeBind3;\n    exports.Éµpb4 = pipeBind4;\n    exports.ÉµpbV = pipeBindV;\n    exports.Éµf0 = pureFunction0;\n    exports.Éµf1 = pureFunction1;\n    exports.Éµf2 = pureFunction2;\n    exports.Éµf3 = pureFunction3;\n    exports.Éµf4 = pureFunction4;\n    exports.Éµf5 = pureFunction5;\n    exports.Éµf6 = pureFunction6;\n    exports.Éµf7 = pureFunction7;\n    exports.Éµf8 = pureFunction8;\n    exports.ÉµfV = pureFunctionV;\n    exports.ÉµcR = containerRefreshStart;\n    exports.Éµcr = containerRefreshEnd;\n    exports.ÉµqR = queryRefresh;\n    exports.Éµql = loadQueryList;\n    exports.Éµe = elementEnd;\n    exports.Éµp = elementProperty;\n    exports.ÉµpD = projectionDef;\n    exports.ÉµrS = reserveSlots;\n    exports.Éµa = elementAttribute;\n    exports.Éµs = elementStyling;\n    exports.Éµsm = elementStyle;\n    exports.Éµsp = elementStyleProp;\n    exports.Éµsa = elementStylingApply;\n    exports.Éµk = elementClass;\n    exports.Éµkn = elementClassNamed;\n    exports.Éµt = textBinding;\n    exports.Éµv = embeddedViewEnd;\n    exports.Éµst = store;\n    exports.Éµld = load;\n    exports.ÉµPp = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.ÉµiA = i18nApply;\n    exports.ÉµiEM = i18nExpMapping;\n    exports.ÉµiI = i18nInterpolation;\n    exports.ÉµIV = i18nInterpolationV;\n    exports.ÉµiM = i18nMapping;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}