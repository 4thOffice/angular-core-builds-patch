{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","getOwnDefinition","NG_PROV_DEF","NG_INJECTABLE_DEF","def","getInjectorDef","NG_INJ_DEF","NG_INJECTOR_DEF","ɵprov","ɵinj","ngInjectableDef","ngInjectorDef","stringify","isArray","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","isForwardRef","fn","R3ResolvedDependencyType","R3FactoryTarget","ViewEncapsulation","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","_global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","NG_COMP_DEF","ɵcmp","NG_DIR_DEF","ɵdir","NG_PIPE_DEF","ɵpipe","NG_MOD_DEF","ɵmod","NG_LOC_ID_DEF","ɵloc","NG_FACTORY_DEF","ɵfac","NG_ELEMENT_ID","__NG_ELEMENT_ID__","InjectionToken","_desc","INJECTOR","THROW_IF_NOT_FOUND","NG_TEMP_TOKEN_PATH","NG_TOKEN_PATH","NEW_LINE","NO_NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","ɵɵinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","NullInjector","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ChangeDetectionStrategy","ChangeDetectorStatus","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","NgModuleRef","NgModuleFactory","addAllToArray","items","arr","flatten","list","dst","item","slice","deepForEach","input","forEach","addToArray","splice","removeFromArray","pop","newArray","size","assertDefined","actual","msg","throwError","noSideEffects","ɵChangeDetectorStatus","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","decls","vars","template","consts","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","data","encapsulation","Emulated","id","styles","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","autoRegisterModuleById","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","ngModuleDef","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getFactoryDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","DECLARATION_VIEW","DECLARATION_COMPONENT_VIEW","DECLARATION_LCONTAINER","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","MOVED_VIEWS","NATIVE","VIEW_REFS","CONTAINER_HEADER_OFFSET","isLView","isLContainer","isContentQueryHost","tNode","isComponentHost","isDirectiveHost","isComponentDef","isRootView","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","instructionState","lFrame","createLFrame","bindingsEnabled","elementExitFn","checkNoChangesMode","setCurrentDirectiveDef","currentDirectiveDef","getBindingsEnabled","ɵɵenableBindings","ɵɵdisableBindings","getLView","lView","hasActiveElementFlag","flag","selectedIndex","setActiveHostElement","elementIndex","executeElementExitFn","setSelectedIndex","activeDirectiveId","setElementExitFn","setActiveElementFlag","getActiveDirectiveId","incrementActiveDirectiveId","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","previousOrParentTNode","setPreviousOrParentTNode","_isParent","isParent","getIsParent","setIsNotParent","getCheckNoChangesMode","setCheckNoChangesMode","mode","getBindingRoot","bindingRootIndex","bindingStartIndex","getBindingIndex","bindingIndex","setBindingIndex","nextBindingIndex","incrementBindingIndex","count","setBindingRoot","getCurrentQueryIndex","currentQueryIndex","setCurrentQueryIndex","enterDI","newView","newLFrame","allocLFrame","leaveDI","leaveView","enterView","elementDepthCount","currentNamespace","currentSanitizer","currentLFrame","childLFrame","child","parent","leaveViewProcessExit","getSelectedIndex","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","namespaceHTMLInternal","setCurrentStyleSanitizer","sanitizer","getCurrentStyleSanitizer","RendererStyleFlags3","DOCUMENT","getDocument","document","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","setUpAttributes","native","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","isAnimationProp","setProperty","isNameOnlyAttributeMarker","marker","charCodeAt","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","maybeUnwrapFn","Function","NO_CHANGE","MAP_BASED_ENTRY_PROP_NAME","TEMPLATE_DIRECTIVE_INDEX","DEFAULT_BINDING_VALUE","DEFAULT_BINDING_INDEX","DEFAULT_TOTAL_SOURCES","DEFAULT_GUARD_MASK_VALUE","allocStylingMapArray","hasConfig","allowDirectStyling","isClassBased","firstUpdatePass","allow","hasOnlyMapOrPropsFlag","patchConfig","getProp","isSanitizationRequired","getPropConfig","getGuardMask","isHostBinding","getValuesCount","getTotalSources","getBindingValue","offset","getDefaultValue","setValue","getValue","getPropValuesStartPosition","startPosition","hasValueChanged","a","compareValueA","compareValueB","is","isStylingValueDefined","concatString","separator","hyphenate","v","toLowerCase","getStylingMapArray","isStylingContext","getInitialStylingValue","hasClassInput","hasStyleInput","getMapProp","MAP_DIRTY_VALUE","setMapValue","getMapValue","forceStylesAsString","hyphenateProps","str","keys","prop","propLabel","isHostStylingActive","directiveOrSourceId","stylingMapToString","attrValue","addItemToStylingMap","stylingMapArr","allowOverwrite","propAtIndex","applied","normalizeIntoStylingMap","bindingValue","newValues","normalizeProps","allValuesTrue","splitOnWhitespace","array","start","foundChar","selectClassBasedInputName","MONKEY_PATCH_KEY_NAME","unwrapRNode","getNativeByIndex","getNativeByTNode","getNativeByTNodeOrNull","getTNode","view","load","getComponentLViewByIndex","nodeIndex","hostView","slotValue","readPatchedData","readPatchedLView","isCreationMode","getConstant","resetPreOrderHookFlags","getLViewParent","findComponentView","declaredView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","firstCreatePass","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","hostTNode","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","directiveStart","cptViewProvidersCount","endIndex","directiveEnd","providerTokenOrDef","dirDef","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","injectorDef","ɵɵgetInheritedFactory","proto","getPrototypeOf","getLContext","mpValue","component","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","end","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeCheckHooks","hooks","callHooks","executeInitAndCheckHooks","initPhase","incrementInitPhaseFlags","currentView","currentNodeIndex","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","applyToElementOrContainer","action","lNodeToHandle","beforeNode","lContainer","isComponent","rNode","nativeAppendChild","nativeInsertBefore","nativeRemoveNode","destroyNode","applyContainer","renderParent","anchor","applyView","createTextNode","createText","addRemoveViewFromContainer","insertMode","node","insertView","indexInContainer","containerLength","declarationLContainer","trackMovedView","declarationContainer","movedViews","insertedComponentLView","lQueries","detachMovedView","declaredViewIndex","detachView","removeIndex","viewToDetach","removedLView","removeView","detachedView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","firstView","getParentState","executeOnDestroys","removeListeners","tCleanup","cleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","destroy","getRenderParent","parentTNode","ShadowDom","Native","insertBefore","appendChild","nativeAppendOrInsertBefore","getNativeAnchorNode","getBeforeNodeForView","childEl","childTNode","anchorNode","viewIndexInContainer","nextViewIndex","firstTNodeOfView","getFirstNativeNode","tNodeType","elIcuContainerChild","componentView","componentHost","firstProjectedTNode","projection","isHostElement","nativeParent","nativeRemoveChild","removeChild","applyNodes","isProjection","rawSlotValue","applyProjectionRecursive","projectionNext","applyProjection","tProjectionNode","componentLView","nodeToProjectOrRNodes","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","SafeValueImpl","changingThisBreaksApplicationSecurity","SafeHtmlImpl","_super","getTypeName","SafeStyleImpl","SafeScriptImpl","SafeUrlImpl","SafeResourceUrlImpl","unwrapSafeValue","allowSanitizationBypassAndThrow","actualType","getSanitizationBypassType","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","response","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","tagName","nodeName","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","doSanitizeValue","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","throwMultipleComponentError","throwMixedMultiProviderError","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","selector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","classes","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","isSelectorInSelectorList","selectorListLoop","currentSelectorInList","_state","sourceIndex","classesBitMask","classesIndex","stylesBitMask","stylesIndex","lastDirectClassMap","lastDirectStyleMap","BIT_MASK_START_VALUE","INDEX_START_VALUE","getStylingState","VALUE_IS_EXTERNALLY_MODIFIED","STYLING_INDEX_FOR_MAP_BINDING","updateClassViaContext","forceUpdate","isMapBased","state","countIndex","updateBindingData","updateStyleViaContext","sanitizationRequired","counterIndex","hostBindingsMode","hostBindingsFlag","registerBinding","changed","renderHostBindingsAsStale","bindingsStart","valuesCount","itemsPerRow","found","valuesEnd","i_1","stylingMap","countId","totalSources","addNewSourceColumn","collisionFlag","isBindingIndexValue","entriesPerRow","allocateNewContextEntry","addBindingIntoContext","totalBindingsPerEntry","bitIndex","setGuardMask","maskValue","setDefaultValue","insertOffset","syncContextInitialStyling","updateInitialStylingOnContext","initialStyling","hasInitialStyling","applyStylingViaContext","bindingData","bitMaskValue","applyStylingFn","bitMask","normalizeBitMaskValue","stylingMapsSyncFn","applyAllValues","getStylingMapsSyncFn","_activeStylingMapApplyFn","totalBindingsToVisit","mapsMode","valueApplied","defaultValue","valueAppliedWithinMap","writeStylingValueDirectly","initialValue","valueToApply","objectToClassName","setClassName","setStyleAttr","applyStylingValue","applyFn","findAndApplyMapValue","setStyle","nativeStyle","DashCase","style","removeStyle","removeProperty","setClass","className","classList","addClass","add","removeClass","remove","renderStylingMap","stylingValues","ɵɵadvance","delta","selectIndexInternal","ɵɵselect","ELEMENT_MARKER","COMMENT_MARKER","createProxy","handler","g","Proxy","activateStylingMapFeature","setStylingMapsSyncFn","syncStylingMap","targetProp","targetPropValueWasApplied","runTheSyncAlgorithm","loopUntilEnd","innerSyncStylingMap","currentMapIndex","mapsLimit","recurseInnerMaps","checkValuesOnly","cursor","getCurrentSyncCursor","mapIndex","MAP_CURSORS","iteratedTooFar","isTargetPropMatched","valueIsDefined","innerMode","resolveInnerMapMode","isValueAllowedToBeApplied","bindingIndexToApply","setCurrentSyncCursor","indexValue","resetSyncCursors","currentMode","doApplyValue","TStylingContextDebug","_isClassBased","buildConfig","enumerable","configurable","totalColumns","entries","templateBitMask","hostBindingsBitMask","bindingsStartPosition","sources","printSources","output","prefix","bindingsBySource","isDefaultColumn","getTypeFromColumn","binding","sort","entry","toUpperCase","repeat","tab","log","printTable","table","totalProps","Math","floor","tpl mask","generateBitString","host mask","leftPad","max","pad","times","NodeStylingDebug","_data","_sanitizer","_debugContext","overrideSanitizer","config","hasMapBindings","_convertMapBindingsToStylingMapArrays","_mapValues","set","ownKeys","getOwnPropertyDescriptor","k","limit","mockElement","mapFn","hasPropBindings","hasCollisions","hasTemplateBindings","hasHostBindings","processTNodeChildren","template_","toDebug","debug","toHtml","includeChildren","isTextNode","textContent","toDebugNodes","debugNodes","tNodeCursor","buildDebugNode","rawValue","componentLViewDebug","readLViewValue","nodes","TView","queries","expandoStartIndex","expandoInstructions","staticViewQueries","staticContentQueries","directiveRegistry","pipeRegistry","TNode","tView_","propertyBindings","localNames","initialInputs","tViews","type_","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","childViews","childHead","LContainerDebug","_raw_lContainer","getLContainerActiveIndex","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","result","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","_CLEAN_PROMISE","Promise","resolve","refreshContentQueries","directiveDefIdx","elementCreate","namespace","createElementNS","createLView","host","tHostNode","rendererFactory","getOrCreateTNode","adjustedIndex","createTNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","renderView","executeViewQueryFn","templateFn","executeTemplate","renderChildComponents","hostLView","renderComponent","refreshView","hooksInitPhaseCompleted","refreshDynamicEmbeddedViews","viewOrContainer","activeIndexFlag","embeddedLView","embeddedTView","refreshTransplantedViews","setHostBindings","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","refreshComponent","renderComponentOrTemplate","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","executeContentQueries","createDirectivesInstances","instantiateAllDirectives","addComponentLogic","setInputsFromAttrs","invokeDirectivesHostBindings","viewData","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localRefExtractor","localIndex","getOrCreateTComponentView","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","locateHostElement","elementOrSelector","selectRootElement","tParent","generatePropertyAliases","inputAliasMap","propStore","internalName","elementPropertyInternal","nativeOnly","loadRendererFn","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","childComponentLView","mapPropName","resolveDirectives","findDirectiveMatches","registry","matches","markAsComponentHost","exportsMap","","hasDirectives","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","initializeInputAndOutputAliases","defs","tNodeAttrs","inputsFromAttrs","inputsStore","outputsStore","directiveInputs","generateInitialInputs","cacheMatchingLocalNames","previousExpandoLength","directiveCount","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","elementAttributeInternal","strValue","initialInputData","privateName","inputsToStore","createLContainer","hostNative","declaredComponentLView","movedLView","movedTView","componentHostIdx","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","markViewDirty","tickRootContext","rootContext","rootComponent","detectChangesInternal","detectChangesInRootView","viewQueryFn","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","textBindingInternal","renderInitialStyling","append","ɵɵcontainer","containerInternal","ɵɵtemplate","attrsIndex","localRefsIndex","tViewConsts","tContainerNode","embeddedTViewNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","comment","createComment","R3ElementRef","R3TemplateRef","R3ViewContainerRef","ViewRef","_cdRefInjectingView","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","lNode","lViewInAContainer","lViewFirstChildTNode","firstProjectedNode","detach","callback","storeCleanupFn","cleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationView","_declarationTContainer","elementRef","createEmbeddedView","declarationViewLQueries","viewRef","createContainerRef","ViewContainerRefToken","ViewContainerRef_","_lContainer","_hostTNode","_hostView","getParentInjectorTNode","startTNode","parentTNode_1","clear","templateRef","insert","createComponent","componentFactory","projectableNodes","ngModuleRef","contextInjector","parentInjector","ngModule","componentRef","allocateContainerIfNeeded","adjustedIdx","_adjustIndex","viewAttachedToContainer","move","newIndex","shift","setLContainerActiveIndex","commentNode","nativeNextSibling","injectChangeDetectorRef","isPipe","createViewRef","hostComponentView","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE$1","isUseClassProvider","useClass","isUseFactoryProvider","useFactory","getInjectableMetadata","srcMeta","compilerMeta","typeArgumentCount","userDeps","isUseValueProvider","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","ngFactoryDef","metadata","compileFactory","injectFn","Pipe","INJECTOR_SCOPE","NOT_YET","CIRCULAR","EMPTY_ARRAY$2","NULL_INJECTOR","getNullInjector","createInjector","defType","additionalProviders","R3Injector","records","Map","injectorDefTypes","Set","_destroyed","dedupStack","provider","processProvider","processInjectorType","makeRecord","record","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","tokens","defOrWrappedDef","parents","isDuplicate","importTypesWithProviders_1","imported","_loop_1","ngModule_1","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","isValueProvider","providerToFactory","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","has","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","IDENT","EMPTY","CIRCULAR$1","MULTI_PROVIDER_FN","resolveProvider","computeDeps","providerDeps","staticError","useNew","multiProviderMixError","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","StaticInjector","_records","recursivelyProcessProviders","resolvedProvider","multiProvider","lastInjector","tryResolveToken","resolveToken","NO_NEW_LINE$1","depRecords","depRecord","childRecord","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","_createDependency","paramMetadata","Query","UNDEFINED","ReflectiveInjector","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","promises","templateUrl","styleUrls","styleOffset","styleUrl","fullyResolved","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","componentNeedsResolution","old","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","updateBinding","getBinding","bindingUpdated","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵattribute","interpolationV","isBindingUpdated","interpolation1","v0","suffix","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","ɵɵattributeInterpolate1","interpolatedValue","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","interpolated","markDirty","scheduleTick","res_1","nothingScheduled","clean","scheduler","playerHandler","flushPlayers","store","ɵɵreference","getContextLView","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","ɵɵinvalidFactory","ɵɵstyleSanitizer","ɵɵstyleProp","stylePropInternal","patchHostStylingFlag","isHostStyling","stylingProp","resolveStylePropValue","resolvedValue","ɵɵclassProp","updated","getClassesContext","getStylesContext","sanitizerToUse","applyStylingValueDirectly","getRenderer","stylingApply","ɵɵstyleMap","hasDirectiveInput","updateDirectiveInputValue","ɵɵclassMap","classMapInternal","valueHasChanged","applyStylingMapDirectly","bindingValueContainsInitial","hasInitial","cachedValueIndex","cachedValue","writeToAttrDirectly","checkIfExternallyModified","cssText","removeStylingValues","isStylingMapArray","initialStyles","newValue","inputName","normalizeStylingDirectiveInputValue","forceClassesAsString","flushStyling","classesContext","stylesContext","styleSanitizer","resetStylingState","resetCurrentStyleSanitizer","registerInitialStylingOnTNode","startIndex","hasAdditionalInitialStyling","attr","updateRawValueOnContext","getContext","allocTStylingContext","ɵɵelementStart","getNamespace","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","elementStart","ɵɵelementEnd","decreaseElementDepthCount","elementEnd","setDirectiveStylingInput","ɵɵelement","ɵɵelementHostAttrs","hostElementIndex","stylingInputs","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵelementContainer","ɵɵembeddedViewStart","viewBlockId","containerTNode","viewToRender","scanForView","startIdx","viewAtPositionId","setIsParent","getOrCreateEmbeddedTView","containerTViews","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","isTNodeDirectiveHost","processOutputs","lCleanupIndex","existingListener","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngLastListenerFn__","__ngNextListenerFn__","wrapListener","listen","addEventListener","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","matchingProjectionSlotIndex","projectionSlots","wildcardNgContentIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","slotIndex","delayProjection","setDelayProjection","ɵɵprojection","selectorIndex","ɵɵproperty","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵtext","textNative","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵtextInterpolate2","ɵɵtextInterpolate3","ɵɵtextInterpolate4","ɵɵtextInterpolate5","ɵɵtextInterpolate6","ɵɵtextInterpolate7","ɵɵtextInterpolate8","ɵɵtextInterpolateV","ɵɵclassMapInterpolate1","ɵɵclassMapInterpolate2","ɵɵclassMapInterpolate3","ɵɵclassMapInterpolate4","ɵɵclassMapInterpolate5","ɵɵclassMapInterpolate6","ɵɵclassMapInterpolate7","ɵɵclassMapInterpolate8","ɵɵclassMapInterpolateV","ɵɵstylePropInterpolate1","valueSuffix","ɵɵstylePropInterpolate2","ɵɵstylePropInterpolate3","ɵɵstylePropInterpolate4","ɵɵstylePropInterpolate5","ɵɵstylePropInterpolate6","ɵɵstylePropInterpolate7","ɵɵstylePropInterpolate8","ɵɵstylePropInterpolateV","ɵɵhostProperty","ɵɵupdateSyntheticHostBinding","getComponent","loadLContext","getComponentAtNodeIndex","getContext$1","getViewComponent","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","lContext","listeners","firstParam","secondParam","name_1","listenerElement","useCaptureOrIndx","sortListeners","getDebugNode","debugNode","loadLContextFromNode","valueInLView","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","COMPILED","createRootComponentView","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","getSuperType","ɵɵInheritDefinitionFeature","definition","superType","superDef","writeableDef","maybeUnwrapEmpty","superHostBindings","inheritHostBindings","superViewQuery","superContentQueries","inheritViewQuery","inheritContentQueries","ngInherit","prevViewQuery","ctx","prevContentQueries","prevHostBindings","COPY_DIRECTIVE_FIELDS","COPY_COMPONENT_FIELDS","ɵɵCopyDefinitionFeature","defAny","COPY_DIRECTIVE_FIELDS_1","COPY_DIRECTIVE_FIELDS_1_1","field","COPY_COMPONENT_FIELDS_1","COPY_COMPONENT_FIELDS_1_1","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","lData","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","nodeAtIndex","getOrCreateRenderer2","Sanitizer","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","expressionChangedAfterItHasBeenCheckedError","currValue","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ref","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","SCHEDULER","isBoundToModule","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","nodesforSlot","ComponentRef$1","LocaleDataIndex","_rootLView","destroyCbs","u","localeEn","plural","abs","LOCALE_DATA","findLocaleData","locale","normalizedLocale","normalizeLocale","getLocaleData","parentLocale","getLocalePluralCase","ɵLocaleDataIndex","PluralCase","common","locales","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICU_PLACEHOLDERS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","replaceNgsp","NGSP_UNICODE_REGEXP","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders","placeholder","templateId","isCloseTemplateTag","currentTemplateId","_type","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","markAsDetached","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","changeMask","shiftsCounter","ɵɵi18nExp","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCase","getLocaleId","LOCALE_ID","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","setLocaleId","localeId","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngLocaleIdDef","getNgLocaleIdDef","_r3Injector","NgModuleFactory$1","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","symbolIterator","_results","QueryList","symbol","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","setDirty","LQuery_","queryList","clone","LQueries_","tQueries","noOfInheritedQueries","viewLQueries","tQuery","getByIndex","indexInDeclarationView","dirtyQueriesWithMatches","getTQuery","TQueryMetadata_","predicate","isStatic","read","TQueries_","queriesForTemplateRef","childQueryIndex","tqueryClone","track","tquery","TQuery_","crossesNgTemplate","_appliesToNextNode","_declarationNodeIndex","isApplyingToNode","matchTNode","addMatch","matchTNodeWithReadOption","getIdxOfMatchingSelector","typePredicate","nodeMatchIdx","directiveOrProviderIdx","matchIdx","createResultForNode","matchingIdx","createResultByTNodeType","createSpecialToken","materializeViewResults","queryIndex","lQuery","tViewData","tQueryMatches","matchedNodeIdx","ɵɵqueryRefresh","collectQueryResults","lViewResults","embeddedLViews","i_2","ɵɵstaticViewQuery","descend","viewQueryInternal","ɵɵviewQuery","createTQuery","createLQuery","ɵɵcontentQuery","contentQueryInternal","ɵɵstaticContentQuery","saveContentQueryAndDirectiveIndex","tViewContentQueries","ɵɵloadQuery","loadQueryInternal","storeCleanupWithContext","ɵɵtemplateRefExtractor","ɵɵinjectPipeChangeDetectorRef","angularCoreEnv","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","allowDuplicateDeclarationsInRoot","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","exportedType","exportedScope","isModuleWithProviders","compileComponent","ngComponentDef","maybeQueueResolutionOfComponentResources","addDirectiveFactoryDef","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","animations","interpolation","usesInheritance","addDirectiveDefToUndecoratedParents","hasSelectorScope","compileDirective","ngDirectiveDef","getDirectiveMetadata","sourceMapUrl","facade","Directive","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesLifecycleHook","splitByComma","viewQueries","objPrototype","shouldAddAbstractDirective","isQueryAnn","queriesMeta","annotations_1","ann","isInputAnnotation","convertToR3QueryMetadata","propertyName","static","piece","LIFECYCLE_HOOKS","hookName","metadataName","compilePipe","ngPipeDef","getPipeMetadata","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","SWITCH_COMPILE_PIPE","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","MissingTranslationStrategy","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","Console_Factory","LOCALE_ID$1","TRANSLATIONS","TRANSLATIONS_FORMAT","trace","events","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","shouldCoalesceEventChangeDetection","hasPendingMacrotasks","hasPendingMicrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","lastRequestAnimationFrameId","nativeRequestAnimationFrame","getNativeRequestAnimationFrame","nativeCancelAnimationFrame","unpatchedRequestAnimationFrame","__symbol__","unpatchedCancelAnimationFrame","forkInnerZoneWithAngularBehavior","zone","maybeDelayChangeDetection","delayChangeDetectionForEvents","updateMicroTaskStatus","checkStable","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","_hasPendingMicrotasks","microTask","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","part","resourceLoader","ResourceLoader","publishDefaultGlobalUtils$1","publishDefaultGlobalUtils__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneEventCoalescing","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","nativeNode","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","bindingIndexes","metadataParts","collectClassNames","debugElement","lowercaseTNodeAttrs","eAttrs","_classesProxy","element_1","contains","toggle","children","getDebugNode__POST_R3__","_queryAllR3","invokedListeners","eventListeners","unwrappedListener","parentElement","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNativeNodeDescendants","getDebugNode$1","nodeOrContainer","_queryNodeChildrenInContainerR3","head","head_1","head_1_1","nextTNode","nextLView","childView","_nativeNodeToDebugNode","NG_DEBUG_PROPERTY","indexDebugNode","ViewAction","DebugNode","DebugElement","platformCore","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","getGlobalLocale","$localize","ApplicationModule","ApplicationModule_Factory","selectorOrNode","ns","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","projectedView","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","createView","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","nodeLogger","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","asNativeElements","debugEls","destroyPlatform","enableProdMode","setTestabilityGetter","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵCodegenComponentFactoryResolver","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵComponentFactory","ɵConsole","ɵDEFAULT_LOCALE_ID","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵINJECTOR_IMPL__POST_R3__","ɵINJECTOR_SCOPE","ɵLifecycleHooksFeature","ɵNG_COMP_DEF","ɵNG_DIR_DEF","ɵNG_ELEMENT_ID","ɵNG_INJ_DEF","ɵNG_MOD_DEF","ɵNG_PIPE_DEF","ɵNG_PROV_DEF","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵNO_CHANGE","ɵNgModuleFactory","ɵNoopNgZone","ɵReflectionCapabilities","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵRender3NgModuleRef","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵallowSanitizationBypassAndThrow","ɵand","templateFactory","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵccf","createComponentFactory","ɵclearOverrides","ɵclearResolutionOfComponentResourcesQueue","ɵcmf","createNgModuleFactory","defFactory","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵcompileNgModuleFactory__POST_R3__","ɵcompilePipe","ɵcreateInjector","ɵcrt","createRendererType2","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdetectChanges","ɵdevModeEqual","ɵdid","outputDefs","ɵeld","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵfindLocaleData","ɵflushModuleScopingQueueAsMuchAsPossible","ɵgetComponentViewDefinitionFactory","ɵgetDebugNode__POST_R3__","ɵgetDirectives","ɵgetHostElement","ɵgetInjectableDef","ɵgetLContext","ɵgetLocalePluralCase","ɵgetModuleFactory__POST_R3__","ɵgetSanitizationBypassType","ɵglobal","ɵinitServicesIfNeeded","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵisBoundToModule__POST_R3__","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵisListLikeIterable","ɵisObservable","ɵisPromise","ɵivyEnabled","ɵlooseIdentical","ɵmakeDecorator","ɵmarkDirty","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵoverrideComponentView","ɵoverrideProvider","ɵpad","pureArrayDef","argCount","ɵpatchComponentDefWithScope","ɵpid","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵprd","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵpublishGlobalUtil","ɵqud","ɵregisterLocaleData","registerLocaleData","extraData","LocaleId","ExtraData","ɵregisterModuleFactory","registerModuleFactory","ɵregisterNgModuleType","ɵrenderComponent","renderComponent$1","ɵresetCompiledComponents","resetCompiledComponents","ɵresolveComponentResources","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵsetCurrentInjector","ɵsetDocument","setDocument","ɵsetLocaleId","ɵstore","ɵstringify","ɵted","textDef","staticText","ɵtransitiveScopesFor","ɵunregisterLocaleData","unregisterAllLocaleData","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵunwrapSafeValue","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags","ɵwhenRendered","whenRendered"],"mappings":"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","sourcesContent":["/**\n * @license Angular v9.0.0-rc.1+106.sha-e25b256.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, (function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ɵprov` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            token: opts.token, providedIn: opts.providedIn || null, factory: opts.factory,\n            value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static injector def (`ɵinj`) field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has a `ɵprov` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` in a way which is immune to accidentally reading\n     * inherited value.\n     *\n     * @param type A type which may have its own (non-inherited) `ɵprov`.\n     */\n    function getInjectableDef(type) {\n        return getOwnDefinition(type, type[NG_PROV_DEF]) ||\n            getOwnDefinition(type, type[NG_INJECTABLE_DEF]);\n    }\n    /**\n     * Return `def` only if it is defined directly on `type` and is not inherited from a base\n     * class of `type`.\n     *\n     * The function `Object.hasOwnProperty` is not sufficient to distinguish this case because in older\n     * browsers (e.g. IE10) static property inheritance is implemented by copying the properties.\n     *\n     * Instead, the definition's `token` is compared to the `type`, and if they don't match then the\n     * property was not defined directly on the type itself, and was likely inherited. The definition\n     * is only returned if the `type` matches the `def.token`.\n     */\n    function getOwnDefinition(type, def) {\n        return def && def.token === type ? def : null;\n    }\n    /**\n     * Read the injectable def (`ɵprov`) for `type` or read the `ɵprov` from one of its ancestors.\n     *\n     * @param type A type which may have `ɵprov`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ɵprov` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        var def = type && (type[NG_PROV_DEF] || type[NG_INJECTABLE_DEF]);\n        if (def) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return def;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the injector def type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have an injector def (`ɵinj`)\n     */\n    function getInjectorDef(type) {\n        return type && (type.hasOwnProperty(NG_INJ_DEF) || type.hasOwnProperty(NG_INJECTOR_DEF)) ?\n            type[NG_INJ_DEF] :\n            null;\n    }\n    var NG_PROV_DEF = getClosureSafeProperty({ ɵprov: getClosureSafeProperty });\n    var NG_INJ_DEF = getClosureSafeProperty({ ɵinj: getClosureSafeProperty });\n    // We need to keep these around so we can read off old defs if new defs are unavailable\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (Array.isArray(token)) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        return isForwardRef(type) ? type() : type;\n    }\n    /** Checks whether a function is wrapped by a `forwardRef`. */\n    function isForwardRef(fn) {\n        return typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Always use __globalThis if available, which is the spec-defined global variable across all\n    // environments, then fallback to __global first, because in Node tests both __global and\n    // __window may be defined and _global should be __global in that case.\n    var _global = __globalThis || __global || __window || __self;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"ChangeDetectorRef\"] = 2] = \"ChangeDetectorRef\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n    var R3FactoryTarget;\n    (function (R3FactoryTarget) {\n        R3FactoryTarget[R3FactoryTarget[\"Directive\"] = 0] = \"Directive\";\n        R3FactoryTarget[R3FactoryTarget[\"Component\"] = 1] = \"Component\";\n        R3FactoryTarget[R3FactoryTarget[\"Injectable\"] = 2] = \"Injectable\";\n        R3FactoryTarget[R3FactoryTarget[\"Pipe\"] = 3] = \"Pipe\";\n        R3FactoryTarget[R3FactoryTarget[\"NgModule\"] = 4] = \"NgModule\";\n    })(R3FactoryTarget || (R3FactoryTarget = {}));\n    var ViewEncapsulation;\n    (function (ViewEncapsulation) {\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(ViewEncapsulation || (ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMP_DEF = getClosureSafeProperty({ ɵcmp: getClosureSafeProperty });\n    var NG_DIR_DEF = getClosureSafeProperty({ ɵdir: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ɵpipe: getClosureSafeProperty });\n    var NG_MOD_DEF = getClosureSafeProperty({ ɵmod: getClosureSafeProperty });\n    var NG_LOC_ID_DEF = getClosureSafeProperty({ ɵloc: getClosureSafeProperty });\n    var NG_FACTORY_DEF = getClosureSafeProperty({ ɵfac: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ɵprov = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ɵprov = ɵɵdefineInjectable({\n                    token: this,\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(resolveForwardRef(token), flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if (ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (Array.isArray(obj)) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = getFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            return arr.pop();\n        }\n        else {\n            return arr.splice(index, 1)[0];\n        }\n    }\n    function newArray(size, value) {\n        var list = [];\n        for (var i = 0; i < size; i++) {\n            list.push(value);\n        }\n        return list;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNumber(actual, msg) {\n        if (typeof actual != 'number') {\n            throwError(msg);\n        }\n    }\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertSame(actual, expected, msg) {\n        if (actual !== expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThanOrEqual(actual, expected, msg) {\n        if (actual > expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotDefined(actual, msg) {\n        if (actual != null) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node != null &&\n                node.constructor.name === 'WebWorkerRenderNode'), true, \"The provided value must be an instance of a DOM Node but got \" + stringify(node));\n    }\n    function assertDataInRange(arr, index) {\n        var maxLen = arr ? arr.length : 0;\n        assertLessThan(index, maxLen, \"Index expected to be less than \" + maxLen + \" but got \" + index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var locationString = typeof location !== 'undefined' ? location.toString() : '';\n        var newCounters = {\n            namedConstructors: locationString.indexOf('ngDevMode=namedConstructors') != -1,\n            firstCreatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            styleProp: 0,\n            stylePropCacheMiss: 0,\n            classProp: 0,\n            classPropCacheMiss: 0,\n            flushStyling: 0,\n            classesApplied: 0,\n            stylesApplied: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        var allowNgDevModeTrue = locationString.indexOf('ngDevMode=false') === -1;\n        _global['ngDevMode'] = allowNgDevModeTrue && newCounters;\n        return newCounters;\n    }\n    /**\n     * This function checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * `ɵɵdefineComponent` is guaranteed to have been called before any component template functions\n     * (and thus Ivy instructions), so a single initialization there is sufficient to ensure ngDevMode\n     * is defined for the entire instruction set.\n     *\n     * When using checking `ngDevMode` on toplevel, always init it before referencing it\n     * (e.g. `((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode())`), otherwise you can\n     *  get a `ReferenceError` like in https://github.com/angular/angular/issues/31595.\n     *\n     * Details on possible values for `ngDevMode` can be found on its docstring.\n     *\n     * NOTE:\n     * - changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    function initNgDevMode() {\n        // The below checks are to ensure that calling `initNgDevMode` multiple times does not\n        // reset the counters.\n        // If the `ngDevMode` is not an object, then it means we have not created the perf counters\n        // yet.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (typeof ngDevMode !== 'object') {\n                ngDevModeResetPerfCounters();\n            }\n            return !!ngDevMode;\n        }\n        return false;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵcmp = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        // Initialize ngDevMode. This must be the first statement in ɵɵdefineComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            decls: componentDefinition.decls,\n            vars: componentDefinition.vars,\n            factory: null,\n            template: componentDefinition.template || null,\n            consts: componentDefinition.consts || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors || EMPTY_ARRAY,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ɵcmp;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    var autoRegisterModuleById = {};\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        if (def.id != null) {\n            noSideEffects(function () { autoRegisterModuleById[def.id] = def.type; });\n        }\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ɵdir = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ɵpipe = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            type: pipeDef.type,\n            name: pipeDef.name,\n            factory: null,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMP_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIR_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getFactoryDef(type, throwNotFound) {\n        var hasFactoryDef = type.hasOwnProperty(NG_FACTORY_DEF);\n        if (!hasFactoryDef && throwNotFound === true && ngDevMode) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275fac' property.\");\n        }\n        return hasFactoryDef ? type[NG_FACTORY_DEF] : null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MOD_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have '\\u0275mod' property.\");\n        }\n        return ngModuleDef;\n    }\n    function getNgLocaleIdDef(type) {\n        return type[NG_LOC_ID_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var CLEANUP = 7;\n    var CONTEXT = 8;\n    var INJECTOR$1 = 9;\n    var RENDERER_FACTORY = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var CHILD_HEAD = 13;\n    var CHILD_TAIL = 14;\n    var DECLARATION_VIEW = 15;\n    var DECLARATION_COMPONENT_VIEW = 16;\n    var DECLARATION_LCONTAINER = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT and NEXT are indices 3 and 4\n    // As we already have these constants in LView, we don't need to re-create them.\n    var MOVED_VIEWS = 5;\n    // T_HOST is index 6\n    // We already have this constants in LView, we don't need to re-create it.\n    var NATIVE = 7;\n    var VIEW_REFS = 8;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 9;\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$1 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * True if `value` is `LView`.\n    * @param value wrapped value of `RNode`, `LView`, `LContainer`\n    */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 8 /* hasContentQuery */) !== 0;\n    }\n    function isComponentHost(tNode) {\n        return (tNode.flags & 2 /* isComponentHost */) === 2 /* isComponentHost */;\n    }\n    function isDirectiveHost(tNode) {\n        return (tNode.flags & 1 /* isDirectiveHost */) === 1 /* isDirectiveHost */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertTNodeForLView(tNode, lView) {\n        tNode.hasOwnProperty('tView_') && assertEqual(tNode.tView_, lView[TVIEW], 'This TNode does not belong to this LView.');\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ɵcmp\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ɵmod\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode, 'previousOrParentTNode should exist!');\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataNext(lView, index, arr) {\n        if (arr == null)\n            arr = lView;\n        assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n    function assertFirstCreatePass(tView, errMessage) {\n        assertEqual(tView.firstCreatePass, true, errMessage || 'Should only be called in first create pass.');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        return obj instanceof NodeInjectorFactory;\n    }\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$2 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 5 /* IcuContainer */)\n            return 'IcuContainer';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var instructionState = {\n        lFrame: createLFrame(null),\n        bindingsEnabled: true,\n        elementExitFn: null,\n        checkNoChangesMode: false,\n    };\n    function getElementDepthCount() {\n        return instructionState.lFrame.elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        instructionState.lFrame.elementDepthCount--;\n    }\n    function getCurrentDirectiveDef() {\n        return instructionState.lFrame.currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        instructionState.lFrame.currentDirectiveDef = def;\n    }\n    function getBindingsEnabled() {\n        return instructionState.bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        instructionState.bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        instructionState.bindingsEnabled = false;\n    }\n    /**\n     * Return the current LView.\n     *\n     * The return value can be `null` if the method is called outside of template. This can happen if\n     * directive is instantiated by module injector (rather than by node injector.)\n     */\n    function getLView() {\n        // TODO(misko): the return value should be `LView|null` but doing so breaks a lot of code.\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.lView;\n    }\n    /**\n     * Determines whether or not a flag is currently set for the active element.\n     */\n    function hasActiveElementFlag(flag) {\n        return (instructionState.lFrame.selectedIndex & flag) === flag;\n    }\n    /**\n     * Sets a flag is for the active element.\n     */\n    function setActiveElementFlag(flag) {\n        instructionState.lFrame.selectedIndex |= flag;\n    }\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        setSelectedIndex(elementIndex === null ? -1 : elementIndex);\n        instructionState.lFrame.activeDirectiveId = 0;\n    }\n    function executeElementExitFn() {\n        instructionState.elementExitFn();\n        instructionState.lFrame.selectedIndex &= ~1 /* RunExitFn */;\n    }\n    /**\n     * Queues a function to be run once the element is \"exited\" in CD.\n     *\n     * Change detection will focus on an element either when the `advance()`\n     * instruction is called or when the template or host bindings instruction\n     * code is invoked. The element is then \"exited\" when the next element is\n     * selected or when change detection for the template or host bindings is\n     * complete. When this occurs (the element change operation) then an exit\n     * function will be invoked if it has been set. This function can be used\n     * to assign that exit function.\n     *\n     * @param fn\n     */\n    function setElementExitFn(fn) {\n        setActiveElementFlag(1 /* RunExitFn */);\n        if (instructionState.elementExitFn == null) {\n            instructionState.elementExitFn = fn;\n        }\n        ngDevMode &&\n            assertEqual(instructionState.elementExitFn, fn, 'Expecting to always get the same function');\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return instructionState.lFrame.activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        // Each directive gets a uniqueId value that is the same for both\n        // create and update calls when the hostBindings function is called. The\n        // directive uniqueId is not set anywhere--it is just incremented between\n        // each hostBindings call and is useful for helping instruction code\n        // uniquely determine which directive is currently active when executed.\n        instructionState.lFrame.activeDirectiveId += 1;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        instructionState.lFrame.contextLView = viewToRestore;\n    }\n    function getPreviousOrParentTNode() {\n        return instructionState.lFrame.previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode, _isParent) {\n        instructionState.lFrame.previousOrParentTNode = tNode;\n        instructionState.lFrame.isParent = _isParent;\n    }\n    function getIsParent() {\n        return instructionState.lFrame.isParent;\n    }\n    function setIsNotParent() {\n        instructionState.lFrame.isParent = false;\n    }\n    function setIsParent() {\n        instructionState.lFrame.isParent = true;\n    }\n    function getContextLView() {\n        return instructionState.lFrame.contextLView;\n    }\n    function getCheckNoChangesMode() {\n        return instructionState.checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        instructionState.checkNoChangesMode = mode;\n    }\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingRootIndex;\n        if (index === -1) {\n            var lView = lFrame.lView;\n            index = lFrame.bindingRootIndex = lView[TVIEW].bindingStartIndex;\n        }\n        return index;\n    }\n    function getBindingIndex() {\n        return instructionState.lFrame.bindingIndex;\n    }\n    function setBindingIndex(value) {\n        return instructionState.lFrame.bindingIndex = value;\n    }\n    function nextBindingIndex() {\n        return instructionState.lFrame.bindingIndex++;\n    }\n    function incrementBindingIndex(count) {\n        var lFrame = instructionState.lFrame;\n        var index = lFrame.bindingIndex;\n        lFrame.bindingIndex = lFrame.bindingIndex + count;\n        return index;\n    }\n    /**\n     * Set a new binding root index so that host template functions can execute.\n     *\n     * Bindings inside the host template are 0 index. But because we don't know ahead of time\n     * how many host bindings we have we can't pre-compute them. For this reason they are all\n     * 0 index and we just shift the root so that they match next available location in the LView.\n     * @param value\n     */\n    function setBindingRoot(value) {\n        instructionState.lFrame.bindingRootIndex = value;\n    }\n    function getCurrentQueryIndex() {\n        return instructionState.lFrame.currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        instructionState.lFrame.currentQueryIndex = value;\n    }\n    /**\n     * This is a light weight version of the `enterView` which is needed by the DI system.\n     * @param newView\n     * @param tNode\n     */\n    function enterDI(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.lView = newView;\n        if (ngDevMode) {\n            // resetting for safety in dev mode only.\n            newLFrame.isParent = DEV_MODE_VALUE;\n            newLFrame.selectedIndex = DEV_MODE_VALUE;\n            newLFrame.contextLView = DEV_MODE_VALUE;\n            newLFrame.elementDepthCount = DEV_MODE_VALUE;\n            newLFrame.currentNamespace = DEV_MODE_VALUE;\n            newLFrame.currentSanitizer = DEV_MODE_VALUE;\n            newLFrame.currentDirectiveDef = DEV_MODE_VALUE;\n            newLFrame.activeDirectiveId = DEV_MODE_VALUE;\n            newLFrame.bindingRootIndex = DEV_MODE_VALUE;\n            newLFrame.currentQueryIndex = DEV_MODE_VALUE;\n        }\n    }\n    var DEV_MODE_VALUE = 'Value indicating that DI is trying to read value which it should not need to know about.';\n    /**\n     * This is a light weight version of the `leaveView` which is needed by the DI system.\n     *\n     * Because the implementation is same it is only an alias\n     */\n    var leaveDI = leaveView;\n    /**\n     * Swap the current lView with a new lView.\n     *\n     * For performance reasons we store the lView in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the lView for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New lView to become active\n     * @param tNode Element to which the View is a child of\n     * @returns the previously active lView;\n     */\n    function enterView(newView, tNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var newLFrame = allocLFrame();\n        instructionState.lFrame = newLFrame;\n        newLFrame.previousOrParentTNode = tNode;\n        newLFrame.isParent = true;\n        newLFrame.lView = newView;\n        newLFrame.selectedIndex = 0;\n        newLFrame.contextLView = newView;\n        newLFrame.elementDepthCount = 0;\n        newLFrame.currentNamespace = null;\n        newLFrame.currentSanitizer = null;\n        newLFrame.currentDirectiveDef = null;\n        newLFrame.activeDirectiveId = 0;\n        newLFrame.bindingRootIndex = -1;\n        newLFrame.bindingIndex = newView === null ? -1 : newView[TVIEW].bindingStartIndex;\n        newLFrame.currentQueryIndex = 0;\n    }\n    /**\n     * Allocates next free LFrame. This function tries to reuse the `LFrame`s to lower memory pressure.\n     */\n    function allocLFrame() {\n        var currentLFrame = instructionState.lFrame;\n        var childLFrame = currentLFrame === null ? null : currentLFrame.child;\n        var newLFrame = childLFrame === null ? createLFrame(currentLFrame) : childLFrame;\n        return newLFrame;\n    }\n    function createLFrame(parent) {\n        var lFrame = {\n            previousOrParentTNode: null,\n            isParent: true,\n            lView: null,\n            selectedIndex: 0,\n            contextLView: null,\n            elementDepthCount: 0,\n            currentNamespace: null,\n            currentSanitizer: null,\n            currentDirectiveDef: null,\n            activeDirectiveId: 0,\n            bindingRootIndex: -1,\n            bindingIndex: -1,\n            currentQueryIndex: 0,\n            parent: parent,\n            child: null,\n        };\n        parent !== null && (parent.child = lFrame); // link the new LFrame for reuse.\n        return lFrame;\n    }\n    function leaveViewProcessExit() {\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        leaveView();\n    }\n    function leaveView() {\n        instructionState.lFrame = instructionState.lFrame.parent;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        instructionState.lFrame.contextLView = walkUpViews(level, instructionState.lFrame.contextLView);\n        return instructionState.lFrame.contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return instructionState.lFrame.selectedIndex >> 1 /* Size */;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     *\n     * (Note that if an \"exit function\" was set earlier (via `setElementExitFn()`) then that will be\n     * run if and when the provided `index` value is different from the current selected index value.)\n     */\n    function setSelectedIndex(index) {\n        instructionState.lFrame.selectedIndex = index << 1 /* Size */;\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        instructionState.lFrame.currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        namespaceHTMLInternal();\n    }\n    /**\n     * Sets the namespace used to create elements to `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     */\n    function namespaceHTMLInternal() {\n        instructionState.lFrame.currentNamespace = null;\n    }\n    function getNamespace() {\n        return instructionState.lFrame.currentNamespace;\n    }\n    function setCurrentStyleSanitizer(sanitizer) {\n        instructionState.lFrame.currentSanitizer = sanitizer;\n    }\n    function resetCurrentStyleSanitizer() {\n        setCurrentStyleSanitizer(null);\n    }\n    function getCurrentStyleSanitizer() {\n        // TODO(misko): This should throw when there is no LView, but it turns out we can get here from\n        // `NodeStyleDebug` hence we return `null`. This should be fixed\n        var lFrame = instructionState.lFrame;\n        return lFrame === null ? null : lFrame.currentSanitizer;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Most of the use of `document` in Angular is from within the DI system so it is possible to simply\n     * inject the `DOCUMENT` token and are done.\n     *\n     * Ivy is special because it does not rely upon the DI and must get hold of the document some other\n     * way.\n     *\n     * The solution is to define `getDocument()` and `setDocument()` top-level functions for ivy.\n     * Wherever ivy needs the global document, it calls `getDocument()` instead.\n     *\n     * When running ivy outside of a browser environment, it is necessary to call `setDocument()` to\n     * tell ivy what the global `document` is.\n     *\n     * Angular does this for us in each of the standard platforms (`Browser`, `Server`, and `WebWorker`)\n     * by calling `setDocument()` when providing the `DOCUMENT` token.\n     */\n    var DOCUMENT = undefined;\n    /**\n     * Tell ivy what the `document` is for this platform.\n     *\n     * It is only necessary to call this if the current platform is not a browser.\n     *\n     * @param document The object representing the global `document` in this environment.\n     */\n    function setDocument(document) {\n        DOCUMENT = document;\n    }\n    /**\n     * Access the object that represents the `document` for this platform.\n     *\n     * Ivy calls this whenever it needs to access the `document` object.\n     * For example to create the renderer or to do sanitization.\n     */\n    function getDocument() {\n        if (DOCUMENT !== undefined) {\n            return DOCUMENT;\n        }\n        else if (typeof document !== 'undefined') {\n            return document;\n        }\n        // No \"document\" can be found. This should only happen if we are running ivy outside Angular and\n        // the current platform is not a browser. Since this is not a supported scenario at the moment\n        // this should not happen in Angular apps.\n        // Once we support running ivy outside of Angular we will need to publish `setDocument()` as a\n        // public API. Meanwhile we just return `undefined` and let the application fail.\n        return undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return getDocument(); }\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$3 = 1;\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     * @param renderer The renderer to be used\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(renderer, native, attrs) {\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer.setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings`, `Template` or `I18n`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */ ||\n            marker === 6 /* I18n */;\n    }\n    function isAnimationProp(name) {\n        // Perf note: accessing charCodeAt to check for the first character of a string is faster as\n        // compared to accessing a character at index 0 (ex. name[0]). The main reason for this is that\n        // charCodeAt doesn't allocate memory to return a substring.\n        return name.charCodeAt(0) === 64; // @\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'function')\n            return value.name || value.toString();\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type.toString();\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    var MAP_BASED_ENTRY_PROP_NAME = '[MAP]';\n    var TEMPLATE_DIRECTIVE_INDEX = 0;\n    /**\n     * Default fallback value for a styling binding.\n     *\n     * A value of `null` is used here which signals to the styling algorithm that\n     * the styling value is not present. This way if there are no other values\n     * detected then it will be removed once the style/class property is dirty and\n     * diffed within the styling algorithm present in `flushStyling`.\n     */\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_BINDING_INDEX = 0;\n    var DEFAULT_TOTAL_SOURCES = 1;\n    // The first bit value reflects a map-based binding value's bit.\n    // The reason why it's always activated for every entry in the map\n    // is so that if any map-binding values update then all other prop\n    // based bindings will pass the guard check automatically without\n    // any extra code or flags.\n    var DEFAULT_GUARD_MASK_VALUE = 1;\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     *\n     * The `TStylingContext` is used as a manifest of all style or all class bindings on\n     * an element. Because it is a T-level data-structure, it is only created once per\n     * tNode for styles and for classes. This function allocates a new instance of a\n     * `TStylingContext` with the initial values (see `interfaces.ts` for more info).\n     */\n    function allocTStylingContext(initialStyling, hasDirectives) {\n        initialStyling = initialStyling || allocStylingMapArray(null);\n        return [\n            DEFAULT_TOTAL_SOURCES,\n            initialStyling,\n        ];\n    }\n    function allocStylingMapArray(value) {\n        return [value];\n    }\n    function hasConfig(tNode, flag) {\n        return (tNode.flags & flag) !== 0;\n    }\n    /**\n     * Determines whether or not to apply styles/classes directly or via context resolution.\n     *\n     * There are three cases that are matched here:\n     * 1. there are no directives present AND `ngDevMode` is falsy\n     * 2. the `firstUpdatePass` has not already run (which means that\n     *    there are more bindings to register and, therefore, direct\n     *    style/class application is not yet possible)\n     * 3. There are no collisions (i.e. properties with more than one binding) across multiple\n     *    sources (i.e. template + directive, directive + directive, directive + component)\n     */\n    function allowDirectStyling(tNode, isClassBased, firstUpdatePass) {\n        var allow = false;\n        // if no directives are present then we do not need populate a context at all. This\n        // is because duplicate prop bindings cannot be registered through the template. If\n        // and when this happens we can safely apply the value directly without context\n        // resolution...\n        var hasDirectives = hasConfig(tNode, 128 /* hasHostBindings */);\n        if (!hasDirectives) {\n            // `ngDevMode` is required to be checked here because tests/debugging rely on the context being\n            // populated. If things are in production mode then there is no need to build a context\n            // therefore the direct apply can be allowed (even on the first update).\n            allow = ngDevMode ? !firstUpdatePass : true;\n        }\n        else if (!firstUpdatePass) {\n            var duplicateStylingFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n            var hasDuplicates = hasConfig(tNode, duplicateStylingFlag);\n            var hasOnlyMapOrPropsFlag = isClassBased ? 1536 /* hasClassPropAndMapBindings */ :\n                49152 /* hasStylePropAndMapBindings */;\n            var hasOnlyMapsOrOnlyProps = (tNode.flags & hasOnlyMapOrPropsFlag) !== hasOnlyMapOrPropsFlag;\n            allow = !hasDuplicates && hasOnlyMapsOrOnlyProps;\n        }\n        return allow;\n    }\n    function patchConfig(tNode, flag) {\n        tNode.flags |= flag;\n    }\n    function getProp(context, index) {\n        return context[index + 3 /* PropOffset */];\n    }\n    function getPropConfig(context, index) {\n        return context[index + 0 /* ConfigOffset */] &\n            1 /* Mask */;\n    }\n    function isSanitizationRequired(context, index) {\n        return (getPropConfig(context, index) & 1 /* SanitizationRequired */) !==\n            0;\n    }\n    function getGuardMask(context, index, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        return context[position];\n    }\n    function setGuardMask(context, index, maskValue, isHostBinding) {\n        var position = index + (isHostBinding ? 2 /* HostBindingsBitGuardOffset */ :\n            1 /* TemplateBitGuardOffset */);\n        context[position] = maskValue;\n    }\n    function getValuesCount(context) {\n        return getTotalSources(context) + 1;\n    }\n    function getTotalSources(context) {\n        return context[0 /* TotalSourcesPosition */];\n    }\n    function getBindingValue(context, index, offset) {\n        return context[index + 4 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)];\n    }\n    function setDefaultValue(context, index, value) {\n        return context[index + 4 /* BindingsStartOffset */ + getTotalSources(context)] =\n            value;\n    }\n    function setValue(data, bindingIndex, value) {\n        data[bindingIndex] = value;\n    }\n    function getValue(data, bindingIndex) {\n        return bindingIndex !== 0 ? data[bindingIndex] : null;\n    }\n    function getPropValuesStartPosition(context, tNode, isClassBased) {\n        var startPosition = 2 /* ValuesStartPosition */;\n        var flag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, flag)) {\n            startPosition += 4 /* BindingsStartOffset */ + getValuesCount(context);\n        }\n        return startPosition;\n    }\n    function hasValueChanged(a, b) {\n        if (b === NO_CHANGE)\n            return false;\n        var compareValueA = Array.isArray(a) ? a[0 /* RawValuePosition */] : a;\n        var compareValueB = Array.isArray(b) ? b[0 /* RawValuePosition */] : b;\n        return !Object.is(compareValueA, compareValueB);\n    }\n    /**\n     * Determines whether the provided styling value is truthy or falsy.\n     */\n    function isStylingValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    function concatString(a, b, separator) {\n        if (separator === void 0) { separator = ' '; }\n        return a + ((b.length && a.length) ? separator : '') + b;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (v) { return v.charAt(0) + '-' + v.charAt(1); }).toLowerCase();\n    }\n    /**\n     * Returns an instance of `StylingMapArray`.\n     *\n     * This function is designed to find an instance of `StylingMapArray` in case it is stored\n     * inside of an instance of `TStylingContext`. When a styling context is created it\n     * will copy over an initial styling values from the tNode (which are stored as a\n     * `StylingMapArray` on the `tNode.classes` or `tNode.styles` values).\n     */\n    function getStylingMapArray(value) {\n        return isStylingContext(value) ?\n            value[1 /* InitialStylingValuePosition */] :\n            value;\n    }\n    function isStylingContext(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) && value.length >= 2 /* ValuesStartPosition */ &&\n            typeof value[1] !== 'string';\n    }\n    function isStylingMapArray(value) {\n        // the StylingMapArray is in the format of [initial, prop, string, prop, string]\n        // and this is the defining value to distinguish between arrays\n        return Array.isArray(value) &&\n            (typeof value[1 /* ValuesStartPosition */] === 'string');\n    }\n    function getInitialStylingValue(context) {\n        var map = getStylingMapArray(context);\n        return map && map[0 /* RawValuePosition */] || '';\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 16 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 32 /* hasStyleInput */) !== 0;\n    }\n    function getMapProp(map, index) {\n        return map[index + 0 /* PropOffset */];\n    }\n    var MAP_DIRTY_VALUE = typeof ngDevMode !== 'undefined' && ngDevMode ? {} : { MAP_DIRTY_VALUE: true };\n    function setMapAsDirty(map) {\n        map[0 /* RawValuePosition */] = MAP_DIRTY_VALUE;\n    }\n    function setMapValue(map, index, value) {\n        map[index + 1 /* ValueOffset */] = value;\n    }\n    function getMapValue(map, index) {\n        return map[index + 1 /* ValueOffset */];\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles, hyphenateProps) {\n        if (typeof styles == 'string')\n            return styles;\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var propLabel = hyphenateProps ? hyphenate(prop) : prop;\n                var value = styles[prop];\n                if (value !== null) {\n                    str = concatString(str, propLabel + \":\" + value, ';');\n                }\n            }\n        }\n        return str;\n    }\n    function isHostStylingActive(directiveOrSourceId) {\n        return directiveOrSourceId !== TEMPLATE_DIRECTIVE_INDEX;\n    }\n    /**\n     * Converts the provided styling map array into a string.\n     *\n     * Classes => `one two three`\n     * Styles => `prop:value; prop2:value2`\n     */\n    function stylingMapToString(map, isClassBased) {\n        var str = '';\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var prop = getMapProp(map, i);\n            var value = getMapValue(map, i);\n            var attrValue = concatString(prop, isClassBased ? '' : value, ':');\n            str = concatString(str, attrValue, isClassBased ? ' ' : '; ');\n        }\n        return str;\n    }\n    /**\n     * Converts the provided styling map array into a key value map.\n     */\n    function stylingMapToStringMap(map) {\n        var stringMap = {};\n        if (map) {\n            for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(map, i);\n                var value = getMapValue(map, i);\n                stringMap[prop] = value;\n            }\n        }\n        return stringMap;\n    }\n    /**\n     * Inserts the provided item into the provided styling array at the right spot.\n     *\n     * The `StylingMapArray` type is a sorted key/value array of entries. This means\n     * that when a new entry is inserted it must be placed at the right spot in the\n     * array. This function figures out exactly where to place it.\n     */\n    function addItemToStylingMap(stylingMapArr, prop, value, allowOverwrite) {\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            var propAtIndex = getMapProp(stylingMapArr, j);\n            if (prop <= propAtIndex) {\n                var applied = false;\n                if (propAtIndex === prop) {\n                    var valueAtIndex = stylingMapArr[j];\n                    if (allowOverwrite || !isStylingValueDefined(valueAtIndex)) {\n                        applied = true;\n                        setMapValue(stylingMapArr, j, value);\n                    }\n                }\n                else {\n                    applied = true;\n                    stylingMapArr.splice(j, 0, prop, value);\n                }\n                return applied;\n            }\n        }\n        stylingMapArr.push(prop, value);\n        return true;\n    }\n    /**\n     * Used to convert a {key:value} map into a `StylingMapArray` array.\n     *\n     * This function will either generate a new `StylingMapArray` instance\n     * or it will patch the provided `newValues` map value into an\n     * existing `StylingMapArray` value (this only happens if `bindingValue`\n     * is an instance of `StylingMapArray`).\n     *\n     * If a new key/value map is provided with an old `StylingMapArray`\n     * value then all properties will be overwritten with their new\n     * values or with `null`. This means that the array will never\n     * shrink in size (but it will also not be created and thrown\n     * away whenever the `{key:value}` map entries change).\n     */\n    function normalizeIntoStylingMap(bindingValue, newValues, normalizeProps) {\n        var stylingMapArr = Array.isArray(bindingValue) ? bindingValue : allocStylingMapArray(null);\n        stylingMapArr[0 /* RawValuePosition */] = newValues;\n        // because the new values may not include all the properties\n        // that the old ones had, all values are set to `null` before\n        // the new values are applied. This way, when flushed, the\n        // styling algorithm knows exactly what style/class values\n        // to remove from the element (since they are `null`).\n        for (var j = 1 /* ValuesStartPosition */; j < stylingMapArr.length; j += 2 /* TupleSize */) {\n            setMapValue(stylingMapArr, j, null);\n        }\n        var props = null;\n        var map;\n        var allValuesTrue = false;\n        if (typeof newValues === 'string') { // [class] bindings allow string values\n            props = splitOnWhitespace(newValues);\n            allValuesTrue = props !== null;\n        }\n        else {\n            props = newValues ? Object.keys(newValues) : null;\n            map = newValues;\n        }\n        if (props) {\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                var newProp = normalizeProps ? hyphenate(prop) : prop;\n                var value = allValuesTrue ? true : map[prop];\n                addItemToStylingMap(stylingMapArr, newProp, value, true);\n            }\n        }\n        return stylingMapArr;\n    }\n    function splitOnWhitespace(text) {\n        var array = null;\n        var length = text.length;\n        var start = 0;\n        var foundChar = false;\n        for (var i = 0; i < length; i++) {\n            var char = text.charCodeAt(i);\n            if (char <= 32 /*' '*/) {\n                if (foundChar) {\n                    if (array === null)\n                        array = [];\n                    array.push(text.substring(start, i));\n                    foundChar = false;\n                }\n                start = i + 1;\n            }\n            else {\n                foundChar = true;\n            }\n        }\n        if (foundChar) {\n            if (array === null)\n                array = [];\n            array.push(text.substring(start, length));\n            foundChar = false;\n        }\n        return array;\n    }\n    // TODO (matsko|AndrewKushnir): refactor this once we figure out how to generate separate\n    // `input('class') + classMap()` instructions.\n    function selectClassBasedInputName(inputs) {\n        return inputs.hasOwnProperty('class') ? 'class' : 'className';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`)\n     * in same location in `LView`. This is because we don't want to pre-allocate space for it\n     * because the storage is sparse. This file contains utilities for dealing with such data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Returns `LView` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLView(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLView()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (typeof value[TYPE] === 'object')\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Returns `LContainer` or `null` if not found.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`\n     */\n    function unwrapLContainer(value) {\n        while (Array.isArray(value)) {\n            // This check is same as `isLContainer()` but we don't call at as we don't want to call\n            // `Array.isArray()` twice and give JITer more work for inlining.\n            if (value[TYPE] === true)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    /**\n     * Retrieve an `RNode` for a given `TNode` and `LView`.\n     *\n     * This function guarantees in dev mode to retrieve a non-null `RNode`.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNode(tNode, lView) {\n        ngDevMode && assertTNodeForLView(tNode, lView);\n        ngDevMode && assertDataInRange(lView, tNode.index);\n        var node = unwrapRNode(lView[tNode.index]);\n        ngDevMode && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n        return node;\n    }\n    /**\n     * Retrieve an `RNode` or `null` for a given `TNode` and `LView`.\n     *\n     * Some `TNode`s don't have associated `RNode`s. For example `Projection`\n     *\n     * @param tNode\n     * @param lView\n     */\n    function getNativeByTNodeOrNull(tNode, lView) {\n        var index = tNode.index;\n        if (index !== -1) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            var node = unwrapRNode(lView[index]);\n            ngDevMode && node !== null && !isProceduralRenderer(lView[RENDERER]) && assertDomNode(node);\n            return node;\n        }\n        return null;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function load(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentLViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        ngDevMode && assertDataInRange(hostView, nodeIndex);\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME] || null;\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /** Returns a constant from `TConstants` instance. */\n    function getConstant(consts, index) {\n        return consts === null || index == null ? null : consts[index];\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given an `LView`, find the closest declaration view which is not an embedded view.\n     *\n     * This method searches for the `LView` associated with the component which declared the `LView`.\n     *\n     * This function may return itself if the `LView` passed in is not an embedded `LView`. Otherwise\n     * it walks the declaration parents until it finds a component view (non-embedded-view.)\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        var declaredView;\n        while (rootTNode !== null && rootTNode.type === 2 /* View */ &&\n            (declaredView = lView[DECLARATION_VIEW]) !== null) {\n            lView = declaredView;\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'expected firstCreatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstCreatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentIndex = getParentInjectorIndex(parentLoc);\n            var parentLView = getParentInjectorView(parentLoc, hostView);\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, tView, token) {\n        bloomAdd(injectorIndex, tView, token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ɵcmp = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        if (attrNameToInject === 'class') {\n            return getInitialStylingValue(tNode.classes);\n        }\n        if (attrNameToInject === 'style') {\n            return getInitialStylingValue(tNode.styles);\n        }\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    while (i < attrsLength && typeof attrs[i] === 'string') {\n                        i++;\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode !== null) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                enterDI(lView, tNode);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    leaveDI();\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponentHost(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, currentTView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param tView The tView we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, tView, token, canAccessViewProviders, isHostSpecialCase) {\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lView, index, tNode) {\n        var value = lView[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            enterDI(lView, tNode);\n            try {\n                value = lView[index] = factory.factory(undefined, tData, lView, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                leaveDI();\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        if (isForwardRef(type)) {\n            return (function () {\n                var factory = ɵɵgetFactoryOf(resolveForwardRef(typeAny));\n                return factory ? factory() : null;\n            });\n        }\n        var factory = getFactoryDef(typeAny);\n        if (factory === null) {\n            var injectorDef = getInjectorDef(typeAny);\n            factory = injectorDef && injectorDef.factory;\n        }\n        return factory || null;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = proto[NG_FACTORY_DEF] || ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentLViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentLViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵcmp;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ɵdir;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNodeOrNull(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentLViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentLViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 2 /* isComponentHost */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 2 /* isComponentHost */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n            var directiveDef = tView.data[i];\n            if (directiveDef.afterContentInit) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n            }\n            if (directiveDef.afterContentChecked) {\n                (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n            }\n            if (directiveDef.afterViewInit) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n            }\n            if (directiveDef.afterViewChecked) {\n                (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n            }\n            if (directiveDef.onDestroy != null) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes pre-order check hooks ( OnChanges, DoChanges) given a view where all the init hooks were\n     * executed once. This is a light version of executeInitAndCheckPreOrderHooks where we can skip read\n     * / write of the init-hooks related flags.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeCheckHooks(lView, hooks, nodeIndex) {\n        callHooks(lView, hooks, 3 /* InitPhaseCompleted */, nodeIndex);\n    }\n    /**\n     * Executes post-order init and check hooks (one of AfterContentInit, AfterContentChecked,\n     * AfterViewInit, AfterViewChecked) given a view where there are pending init hooks to be executed.\n     * @param lView The LView where hooks are defined\n     * @param hooks Hooks to be run\n     * @param initPhase A phase for which hooks should be run\n     * @param nodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeInitAndCheckHooks(lView, hooks, initPhase, nodeIndex) {\n        ngDevMode && assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init pre-order hooks should not be called more than once');\n        if ((lView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n            callHooks(lView, hooks, initPhase, nodeIndex);\n        }\n    }\n    function incrementInitPhaseFlags(lView, initPhase) {\n        ngDevMode &&\n            assertNotEqual(initPhase, 3 /* InitPhaseCompleted */, 'Init hooks phase should not be incremented after all init hooks have been run.');\n        var flags = lView[FLAGS];\n        if ((flags & 3 /* InitPhaseStateMask */) === initPhase) {\n            flags &= 1023 /* IndexWithinInitPhaseReset */;\n            flags += 1 /* InitPhaseStateIncrementer */;\n            lView[FLAGS] = flags;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending on the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        ngDevMode && assertEqual(getCheckNoChangesMode(), false, 'Hooks should never be run in the check no changes mode.');\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$4 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$5 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd = unusedValueExportToPlacateAjd$1 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5 + unusedValueExportToPlacateAjd$3 + unusedValueExportToPlacateAjd;\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function applyToElementOrContainer(action, renderer, parent, lNodeToHandle, beforeNode) {\n        // If this slot was allocated for a text node dynamically created by i18n, the text node itself\n        // won't be created until i18nApply() in the update block, so this node should be skipped.\n        // For more info, see \"ICU expressions should work inside an ngTemplateOutlet inside an ngFor\"\n        // in `i18n_spec.ts`.\n        if (lNodeToHandle != null) {\n            var lContainer = void 0;\n            var isComponent = false;\n            // We are expecting an RNode, but in the case of a component or LContainer the `RNode` is\n            // wrapped in an array which needs to be unwrapped. We need to know if it is a component and if\n            // it has LContainer so that we can process all of those cases appropriately.\n            if (isLContainer(lNodeToHandle)) {\n                lContainer = lNodeToHandle;\n            }\n            else if (isLView(lNodeToHandle)) {\n                isComponent = true;\n                ngDevMode && assertDefined(lNodeToHandle[HOST], 'HOST must be defined for a component LView');\n                lNodeToHandle = lNodeToHandle[HOST];\n            }\n            var rNode = unwrapRNode(lNodeToHandle);\n            ngDevMode && !isProceduralRenderer(renderer) && assertDomNode(rNode);\n            if (action === 0 /* Create */ && parent !== null) {\n                if (beforeNode == null) {\n                    nativeAppendChild(renderer, parent, rNode);\n                }\n                else {\n                    nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n                }\n            }\n            else if (action === 1 /* Insert */ && parent !== null) {\n                nativeInsertBefore(renderer, parent, rNode, beforeNode || null);\n            }\n            else if (action === 2 /* Detach */) {\n                nativeRemoveNode(renderer, rNode, isComponent);\n            }\n            else if (action === 3 /* Destroy */) {\n                ngDevMode && ngDevMode.rendererDestroyNode++;\n                renderer.destroyNode(rNode);\n            }\n            if (lContainer != null) {\n                applyContainer(renderer, action, lContainer, parent, beforeNode);\n            }\n        }\n    }\n    function createTextNode(value, renderer) {\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        ngDevMode && ngDevMode.rendererSetText++;\n        return isProceduralRenderer(renderer) ? renderer.createText(value) :\n            renderer.createTextNode(value);\n    }\n    function addRemoveViewFromContainer(lView, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(lView[TVIEW].node, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = lView[RENDERER];\n            var action = insertMode ? 1 /* Insert */ : 2 /* Detach */;\n            applyView(renderer, action, lView, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        applyView(lView[RENDERER], 2 /* Detach */, lView, null, null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            addToArray(lContainer, CONTAINER_HEADER_OFFSET + index, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // track views where declaration and insertion points are different\n        var declarationLContainer = lView[DECLARATION_LCONTAINER];\n        if (declarationLContainer !== null && lContainer !== declarationLContainer) {\n            trackMovedView(declarationLContainer, lView);\n        }\n        // notify query that a new view has been added\n        var lQueries = lView[QUERIES];\n        if (lQueries !== null) {\n            lQueries.insertView(lView[TVIEW]);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Track views created from the declaration container (TemplateRef) and inserted into a\n     * different LContainer.\n     */\n    function trackMovedView(declarationContainer, lView) {\n        ngDevMode && assertDefined(lView, 'LView required');\n        ngDevMode && assertLContainer(declarationContainer);\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var insertedLContainer = lView[PARENT];\n        ngDevMode && assertLContainer(insertedLContainer);\n        var insertedComponentLView = insertedLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n        ngDevMode && assertDefined(insertedComponentLView, 'Missing insertedComponentLView');\n        var insertedComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) !== 16 /* CheckAlways */;\n        if (insertedComponentIsOnPush) {\n            var declaredComponentLView = lView[DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(declaredComponentLView, 'Missing declaredComponentLView');\n            if (declaredComponentLView !== insertedComponentLView) {\n                // At this point the declaration-component is not same as insertion-component and we are in\n                // on-push mode, this means that this is a transplanted view. Mark the declared lView as\n                // having\n                // transplanted views so that those views can participate in CD.\n                declarationContainer[ACTIVE_INDEX] |= 1 /* HAS_TRANSPLANTED_VIEWS */;\n            }\n        }\n        if (movedViews === null) {\n            declarationContainer[MOVED_VIEWS] = [lView];\n        }\n        else {\n            movedViews.push(lView);\n        }\n    }\n    function detachMovedView(declarationContainer, lView) {\n        ngDevMode && assertLContainer(declarationContainer);\n        ngDevMode && assertDefined(declarationContainer[MOVED_VIEWS], 'A projected view should belong to a non-empty projected views collection');\n        var movedViews = declarationContainer[MOVED_VIEWS];\n        var declaredViewIndex = movedViews.indexOf(lView);\n        movedViews.splice(declaredViewIndex, 1);\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method removes the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            var declarationLContainer = viewToDetach[DECLARATION_LCONTAINER];\n            if (declarationLContainer !== null && declarationLContainer !== lContainer) {\n                detachMovedView(declarationLContainer, viewToDetach);\n            }\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            var removedLView = removeFromArray(lContainer, CONTAINER_HEADER_OFFSET + removeIndex);\n            addRemoveViewFromContainer(viewToDetach, false, null);\n            // notify query that a view has been removed\n            var lQueries = removedLView[QUERIES];\n            if (lQueries !== null) {\n                lQueries.detachView(removedLView[TVIEW]);\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param lView The view to be destroyed.\n     */\n    function destroyLView(lView) {\n        if (!(lView[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = lView[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                applyView(renderer, 3 /* Destroy */, lView, null, null);\n            }\n            destroyViewTree(lView);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            var declarationContainer = view[DECLARATION_LCONTAINER];\n            // we are dealing with an embedded view that is still inserted into a container\n            if (declarationContainer !== null && isLContainer(view[PARENT])) {\n                // and this is a projected view\n                if (declarationContainer !== view[PARENT]) {\n                    detachMovedView(declarationContainer, view);\n                }\n                // For embedded views still attached to a container: remove query result from this view.\n                var lQueries = view[QUERIES];\n                if (lQueries !== null) {\n                    lQueries.detachView(view[TVIEW]);\n                }\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup !== null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parentTNode = tNode.parent;\n        while (parentTNode != null && (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */)) {\n            tNode = parentTNode;\n            parentTNode = tNode.parent;\n        }\n        // If the parent tNode is null, then we are inserting across views: either into an embedded view\n        // or a component view.\n        if (parentTNode == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                ngDevMode && assertNodeOfPossibleTypes(hostTNode, 3 /* Element */);\n                return currentView[HOST];\n            }\n        }\n        else {\n            var isIcuCase = tNode && tNode.type === 5 /* IcuContainer */;\n            // If the parent of this node is an ICU container, then it is represented by comment node and we\n            // need to use it as an anchor. If it is projected then it's direct parent node is the renderer.\n            if (isIcuCase && tNode.flags & 4 /* isProjected */) {\n                return getNativeByTNode(tNode, currentView).parentNode;\n            }\n            ngDevMode && assertNodeType(parentTNode, 3 /* Element */);\n            if (parentTNode.flags & 2 /* isComponentHost */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parentTNode.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        ngDevMode && assertDefined(parent, 'parent node must be defined');\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode !== null) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            if (lContainer === null)\n                return null;\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                for (var i = 0; i < childEl.length; i++) {\n                    nativeAppendOrInsertBefore(renderer, renderParent, childEl[i], anchorNode);\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Returns the first native node for a given LView, starting from the provided TNode.\n     *\n     * Native nodes are returned in the order in which those appear in the native tree (DOM).\n     */\n    function getFirstNativeNode(lView, tNode) {\n        if (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */, 5 /* IcuContainer */, 1 /* Projection */);\n            var tNodeType = tNode.type;\n            if (tNodeType === 3 /* Element */) {\n                return getNativeByTNode(tNode, lView);\n            }\n            else if (tNodeType === 0 /* Container */) {\n                return getBeforeNodeForView(-1, lView[tNode.index]);\n            }\n            else if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                var elIcuContainerChild = tNode.child;\n                if (elIcuContainerChild !== null) {\n                    return getFirstNativeNode(lView, elIcuContainerChild);\n                }\n                else {\n                    return getNativeByTNode(tNode, lView);\n                }\n            }\n            else {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedTNode = componentHost.projection[tNode.projection];\n                if (firstProjectedTNode != null) {\n                    return getFirstNativeNode(parentView, firstProjectedTNode);\n                }\n                else {\n                    return getFirstNativeNode(lView, tNode.next);\n                }\n            }\n        }\n        return null;\n    }\n    function getBeforeNodeForView(viewIndexInContainer, lContainer) {\n        var nextViewIndex = CONTAINER_HEADER_OFFSET + viewIndexInContainer + 1;\n        if (nextViewIndex < lContainer.length) {\n            var lView = lContainer[nextViewIndex];\n            var firstTNodeOfView = lView[TVIEW].firstChild;\n            if (firstTNodeOfView !== null) {\n                return getFirstNativeNode(lView, firstTNodeOfView);\n            }\n        }\n        return lContainer[NATIVE];\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Performs the operation of `action` on the node. Typically this involves inserting or removing\n     * nodes on the LView or projection boundary.\n     */\n    function applyNodes(renderer, action, tNode, lView, renderParent, beforeNode, isProjection) {\n        while (tNode != null) {\n            ngDevMode && assertTNodeForLView(tNode, lView);\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */, 1 /* Projection */, 1 /* Projection */, 5 /* IcuContainer */);\n            var rawSlotValue = lView[tNode.index];\n            var tNodeType = tNode.type;\n            if (isProjection) {\n                if (action === 0 /* Create */) {\n                    rawSlotValue && attachPatchData(unwrapRNode(rawSlotValue), lView);\n                    tNode.flags |= 4 /* isProjected */;\n                }\n            }\n            if ((tNode.flags & 64 /* isDetached */) !== 64 /* isDetached */) {\n                if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                    applyNodes(renderer, action, tNode.child, lView, renderParent, beforeNode, false);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n                else if (tNodeType === 1 /* Projection */) {\n                    applyProjectionRecursive(renderer, action, lView, tNode, renderParent, beforeNode);\n                }\n                else {\n                    ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */);\n                    applyToElementOrContainer(action, renderer, renderParent, rawSlotValue, beforeNode);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n    }\n    /**\n     * `applyView` performs operation on the view as specified in `action` (insert, detach, destroy)\n     *\n     * Inserting a view without projection or containers at top level is simple. Just iterate over the\n     * root nodes of the View, and for each node perform the `action`.\n     *\n     * Things get more complicated with containers and projections. That is because coming across:\n     * - Container: implies that we have to insert/remove/destroy the views of that container as well\n     *              which in turn can have their own Containers at the View roots.\n     * - Projection: implies that we have to insert/remove/destroy the nodes of the projection. The\n     *               complication is that the nodes we are projecting can themselves have Containers\n     *               or other Projections.\n     *\n     * As you can see this is a very recursive problem. Yes recursion is not most efficient but the\n     * code is complicated enough that trying to implemented with recursion becomes unmaintainable.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyView(renderer, action, lView, renderParent, beforeNode) {\n        var tView = lView[TVIEW];\n        ngDevMode && assertNodeType(tView.node, 2 /* View */);\n        var viewRootTNode = tView.node.child;\n        applyNodes(renderer, action, viewRootTNode, lView, renderParent, beforeNode, false);\n    }\n    /**\n     * `applyProjection` performs operation on the projection.\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     */\n    function applyProjection(lView, tProjectionNode) {\n        var renderer = lView[RENDERER];\n        var renderParent = getRenderParent(tProjectionNode, lView);\n        var parentTNode = tProjectionNode.parent || lView[T_HOST];\n        var beforeNode = getNativeAnchorNode(parentTNode, lView);\n        applyProjectionRecursive(renderer, 0 /* Create */, lView, tProjectionNode, renderParent, beforeNode);\n    }\n    /**\n     * `applyProjectionRecursive` performs operation on the projection specified by `action` (insert,\n     * detach, destroy)\n     *\n     * Inserting a projection requires us to locate the projected nodes from the parent component. The\n     * complication is that those nodes themselves could be re-projected from their parent component.\n     *\n     * @param renderer Render to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lView The LView which needs to be inserted, detached, destroyed.\n     * @param tProjectionNode node to project\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyProjectionRecursive(renderer, action, lView, tProjectionNode, renderParent, beforeNode) {\n        var componentLView = findComponentView(lView);\n        var componentNode = componentLView[T_HOST];\n        ngDevMode &&\n            assertEqual(typeof tProjectionNode.projection, 'number', 'expecting projection index');\n        var nodeToProjectOrRNodes = componentNode.projection[tProjectionNode.projection];\n        if (Array.isArray(nodeToProjectOrRNodes)) {\n            // This should not exist, it is a bit of a hack. When we bootstrap a top level node and we\n            // need to support passing projectable nodes, so we cheat and put them in the TNode\n            // of the Host TView. (Yes we put instance info at the T Level). We can get away with it\n            // because we know that that TView is not shared and therefore it will not be a problem.\n            // This should be refactored and cleaned up.\n            for (var i = 0; i < nodeToProjectOrRNodes.length; i++) {\n                var rNode = nodeToProjectOrRNodes[i];\n                applyToElementOrContainer(action, renderer, renderParent, rNode, beforeNode);\n            }\n        }\n        else {\n            var nodeToProject = nodeToProjectOrRNodes;\n            var projectedComponentLView = componentLView[PARENT];\n            applyNodes(renderer, action, nodeToProject, projectedComponentLView, renderParent, beforeNode, true);\n        }\n    }\n    /**\n     * `applyContainer` performs an operation on the container and its views as specified by\n     * `action` (insert, detach, destroy)\n     *\n     * Inserting a Container is complicated by the fact that the container may have Views which\n     * themselves have containers or projections.\n     *\n     * @param renderer Renderer to use\n     * @param action action to perform (insert, detach, destroy)\n     * @param lContainer The LContainer which needs to be inserted, detached, destroyed.\n     * @param renderParent parent DOM element for insertion/removal.\n     * @param beforeNode Before which node the insertions should happen.\n     */\n    function applyContainer(renderer, action, lContainer, renderParent, beforeNode) {\n        ngDevMode && assertLContainer(lContainer);\n        var anchor = lContainer[NATIVE]; // LContainer has its own before node.\n        var native = unwrapRNode(lContainer);\n        // An LContainer can be created dynamically on any node by injecting ViewContainerRef.\n        // Asking for a ViewContainerRef on an element will result in a creation of a separate anchor node\n        // (comment in the DOM) that will be different from the LContainer's host node. In this particular\n        // case we need to execute action on 2 nodes:\n        // - container's host node (this is done in the executeActionOnElementOrContainer)\n        // - container's host node (this is done here)\n        if (anchor !== native) {\n            // This is very strange to me (Misko). I would expect that the native is same as anchor. I don't\n            // see a reason why they should be different, but they are.\n            //\n            // If they are we need to process the second anchor as well.\n            applyToElementOrContainer(action, renderer, renderParent, anchor, beforeNode);\n        }\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var lView = lContainer[i];\n            applyView(renderer, action, lView, renderParent, anchor);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_TYPE = 'ngType';\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getType(error) {\n        return error[ERROR_TYPE];\n    }\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SafeValueImpl = /** @class */ (function () {\n        function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n            this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n        }\n        SafeValueImpl.prototype.toString = function () {\n            return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n                \" (see http://g.co/ng/security#xss)\";\n        };\n        return SafeValueImpl;\n    }());\n    var SafeHtmlImpl = /** @class */ (function (_super) {\n        __extends(SafeHtmlImpl, _super);\n        function SafeHtmlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeHtmlImpl.prototype.getTypeName = function () { return \"HTML\" /* Html */; };\n        return SafeHtmlImpl;\n    }(SafeValueImpl));\n    var SafeStyleImpl = /** @class */ (function (_super) {\n        __extends(SafeStyleImpl, _super);\n        function SafeStyleImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeStyleImpl.prototype.getTypeName = function () { return \"Style\" /* Style */; };\n        return SafeStyleImpl;\n    }(SafeValueImpl));\n    var SafeScriptImpl = /** @class */ (function (_super) {\n        __extends(SafeScriptImpl, _super);\n        function SafeScriptImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeScriptImpl.prototype.getTypeName = function () { return \"Script\" /* Script */; };\n        return SafeScriptImpl;\n    }(SafeValueImpl));\n    var SafeUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeUrlImpl, _super);\n        function SafeUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeUrlImpl.prototype.getTypeName = function () { return \"URL\" /* Url */; };\n        return SafeUrlImpl;\n    }(SafeValueImpl));\n    var SafeResourceUrlImpl = /** @class */ (function (_super) {\n        __extends(SafeResourceUrlImpl, _super);\n        function SafeResourceUrlImpl() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        SafeResourceUrlImpl.prototype.getTypeName = function () { return \"ResourceURL\" /* ResourceUrl */; };\n        return SafeResourceUrlImpl;\n    }(SafeValueImpl));\n    function unwrapSafeValue(value) {\n        return value instanceof SafeValueImpl ? value.changingThisBreaksApplicationSecurity :\n            value;\n    }\n    function allowSanitizationBypassAndThrow(value, type) {\n        var actualType = getSanitizationBypassType(value);\n        if (actualType != null && actualType !== type) {\n            // Allow ResourceURLs in URL contexts, they are strictly more trusted.\n            if (actualType === \"ResourceURL\" /* ResourceUrl */ && type === \"URL\" /* Url */)\n                return true;\n            throw new Error(\"Required a safe \" + type + \", got a \" + actualType + \" (see http://g.co/ng/security#xss)\");\n        }\n        return actualType === type;\n    }\n    function getSanitizationBypassType(value) {\n        return value instanceof SafeValueImpl && value.getTypeName() || null;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return new SafeHtmlImpl(trustedHtml);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` hich has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return new SafeStyleImpl(trustedStyle);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return new SafeScriptImpl(trustedScript);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url`  which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return new SafeUrlImpl(trustedUrl);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return new SafeResourceUrlImpl(trustedResourceUrl);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /* A pattern that matches safe srcset values */\n    var SAFE_SRCSET_PATTERN = /^(?:(?:https?|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|Z|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeHtml, \"HTML\" /* Html */)) {\n            return unwrapSafeValue(unsafeHtml);\n        }\n        return _sanitizeHtml(getDocument(), renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeStyle, \"Style\" /* Style */)) {\n            return unwrapSafeValue(unsafeStyle);\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeUrl, \"URL\" /* Url */)) {\n            return unwrapSafeValue(unsafeUrl);\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeResourceUrl, \"ResourceURL\" /* ResourceUrl */)) {\n            return unwrapSafeValue(unsafeResourceUrl);\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypassAndThrow(unsafeScript, \"Script\" /* Script */)) {\n            return unwrapSafeValue(unsafeScript);\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value, mode) {\n        mode = mode || 3 /* ValidateAndSanitize */;\n        var doSanitizeValue = true;\n        if (mode & 1 /* ValidateProperty */) {\n            doSanitizeValue = prop === 'background-image' || prop === 'background' ||\n                prop === 'border-image' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image' || prop === 'clip-path';\n        }\n        if (mode & 2 /* SanitizeOnly */) {\n            return doSanitizeValue ? ɵɵsanitizeStyle(value) : value;\n        }\n        else {\n            return doSanitizeValue;\n        }\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * THIS FILE CONTAINS CODE WHICH SHOULD BE TREE SHAKEN AND NEVER CALLED FROM PRODUCTION CODE!!!\n     */\n    /**\n     * Creates an `Array` construction with a given name. This is useful when\n     * looking for memory consumption to see what time of array it is.\n     *\n     *\n     * @param name Name to give to the constructor\n     * @returns A subclass of `Array` if possible. This can only be done in\n     *          environments which support `class` construct.\n     */\n    function createNamedArrayType(name) {\n        // This should never be called in prod mode, so let's verify that is the case.\n        if (ngDevMode) {\n            try {\n                // We need to do it this way so that TypeScript does not down-level the below code.\n                var FunctionConstructor = createNamedArrayType.constructor;\n                return (new FunctionConstructor('Array', \"return class \" + name + \" extends Array{}\"))(Array);\n            }\n            catch (e) {\n                // If it does not work just give up and fall back to regular Array.\n                return Array;\n            }\n        }\n        else {\n            throw new Error('Looks like we are in \\'prod mode\\', but we are creating a named Array type, which is wrong! Check your code');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$1 = unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$5;\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        // we lowercase the class attribute value to be able to match\n        // selectors without case-sensitivity\n        // (selectors are already in lowercase when generated)\n        var matchIndex = nodeClassAttrVal.toLowerCase().indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.classes) {\n                    if (!isCssClassMatching(getInitialStylingValue(tNode.classes), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        // we lowercase the attribute value to be able to match\n                        // selectors without case-sensitivity\n                        // (selectors are already in lowercase when generated)\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1].toLowerCase();\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * ===========================================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes | I18n\n     * Attributes\n     * ===========================================================================================================\n     * Inline + Projection     | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES                 | NO\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO                  | YES\n     * -----------------------------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO                  | YES\n     * ===========================================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */ || maybeAttrName === 6 /* I18n */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */ || maybeAttrName === 2 /* Styles */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    // these values will get filled in the very first time this is accessed...\n    var _state = {\n        element: null,\n        directiveIndex: -1,\n        sourceIndex: -1,\n        classesBitMask: -1,\n        classesIndex: -1,\n        stylesBitMask: -1,\n        stylesIndex: -1,\n        lastDirectClassMap: null,\n        lastDirectStyleMap: null,\n    };\n    var BIT_MASK_START_VALUE = 0;\n    // the `0` start value is reserved for [map]-based entries\n    var INDEX_START_VALUE = 1;\n    /**\n     * Returns (or instantiates) the styling state for the given element.\n     *\n     * Styling state is accessed and processed each time a style or class binding\n     * is evaluated.\n     *\n     * If and when the provided `element` doesn't match the current element in the\n     * state then this means that styling was recently cleared or the element has\n     * changed in change detection. In both cases the styling state is fully reset.\n     *\n     * If and when the provided `directiveIndex` doesn't match the current directive\n     * index in the state then this means that a new source has introduced itself into\n     * the styling code (or, in other words, another directive or component has started\n     * to apply its styling host bindings to the element).\n     */\n    function getStylingState(element, directiveIndex) {\n        if (_state.element !== element) {\n            _state.element = element;\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex = directiveIndex === TEMPLATE_DIRECTIVE_INDEX ? 0 : 1;\n            _state.classesBitMask = BIT_MASK_START_VALUE;\n            _state.classesIndex = INDEX_START_VALUE;\n            _state.stylesBitMask = BIT_MASK_START_VALUE;\n            _state.stylesIndex = INDEX_START_VALUE;\n            _state.lastDirectClassMap = null;\n            _state.lastDirectStyleMap = null;\n        }\n        else if (_state.directiveIndex !== directiveIndex) {\n            _state.directiveIndex = directiveIndex;\n            _state.sourceIndex++;\n        }\n        return _state;\n    }\n    /**\n     * Clears the styling state so that it can be used by another element's styling code.\n     */\n    function resetStylingState() {\n        _state.element = null;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var VALUE_IS_EXTERNALLY_MODIFIED = {};\n    /**\n     * --------\n     *\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TStylingNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * The guard/update mask bit index location for map-based bindings.\n     *\n     * All map-based bindings (i.e. `[style]` and `[class]` )\n     */\n    var STYLING_INDEX_FOR_MAP_BINDING = 0;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.classesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngClass])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, false, firstUpdatePass, true);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular CSS class need to be\n                // applied again because on or more of the bindings for the CSS\n                // class have changed.\n                state.classesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time it's called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleViaContext(context, tNode, data, element, directiveIndex, prop, bindingIndex, value, sanitizer, forceUpdate, firstUpdatePass) {\n        var isMapBased = !prop;\n        var state = getStylingState(element, directiveIndex);\n        var countIndex = isMapBased ? STYLING_INDEX_FOR_MAP_BINDING : state.stylesIndex++;\n        // even if the initial value is a `NO_CHANGE` value (e.g. interpolation or [ngStyle])\n        // then we still need to register the binding within the context so that the context\n        // is aware of the binding even if things change after the first update pass.\n        if (firstUpdatePass || value !== NO_CHANGE) {\n            var sanitizationRequired = isMapBased ?\n                true :\n                (sanitizer ? sanitizer(prop, null, 1 /* ValidateProperty */) : false);\n            var updated = updateBindingData(context, tNode, data, countIndex, state.sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, false);\n            if (updated || forceUpdate) {\n                // We flip the bit in the bitMask to reflect that the binding\n                // at the `index` slot has changed. This identifies to the flushing\n                // phase that the bindings for this particular property need to be\n                // applied again because on or more of the bindings for the CSS\n                // property have changed.\n                state.stylesBitMask |= 1 << countIndex;\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Called each time a binding value has changed within the provided `TStylingContext`.\n     *\n     * This function is designed to be called from `updateStyleBinding` and `updateClassBinding`.\n     * If called during the first update pass, the binding will be registered in the context.\n     *\n     * This function will also update binding slot in the provided `LStylingData` with the\n     * new binding entry (if it has changed).\n     *\n     * @returns whether or not the binding value was updated in the `LStylingData`.\n     */\n    function updateBindingData(context, tNode, data, counterIndex, sourceIndex, prop, bindingIndex, value, forceUpdate, sanitizationRequired, firstUpdatePass, isClassBased) {\n        var hostBindingsMode = isHostStylingActive(sourceIndex);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (firstUpdatePass) {\n            // this will only happen during the first update pass of the\n            // context. The reason why we can't use `tView.firstCreatePass`\n            // here is because its not guaranteed to be true when the first\n            // update pass is executed (remember that all styling instructions\n            // are run in the update phase, and, as a result, are no more\n            // styling instructions that are run in the creation phase).\n            registerBinding(context, tNode, counterIndex, sourceIndex, prop, bindingIndex, sanitizationRequired, isClassBased);\n        }\n        var changed = forceUpdate || hasValueChanged(data[bindingIndex], value);\n        if (changed) {\n            setValue(data, bindingIndex, value);\n            var doSetValuesAsStale = hasConfig(tNode, hostBindingsFlag) && !hostBindingsMode && (prop ? !value : true);\n            if (doSetValuesAsStale) {\n                renderHostBindingsAsStale(context, tNode, data, prop, isClassBased);\n            }\n        }\n        return changed;\n    }\n    /**\n     * Iterates over all host-binding values for the given `prop` value in the context and sets their\n     * corresponding binding values to `null`.\n     *\n     * Whenever a template binding changes its value to `null`, all host-binding values should be\n     * re-applied\n     * to the element when the host bindings are evaluated. This may not always happen in the event\n     * that none of the bindings changed within the host bindings code. For this reason this function\n     * is expected to be called each time a template binding becomes falsy or when a map-based template\n     * binding changes.\n     */\n    function renderHostBindingsAsStale(context, tNode, data, prop, isClassBased) {\n        var valuesCount = getValuesCount(context);\n        var hostBindingsFlag = isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */;\n        if (prop !== null && hasConfig(tNode, hostBindingsFlag)) {\n            var itemsPerRow = 4 /* BindingsStartOffset */ + valuesCount;\n            var i = 2 /* ValuesStartPosition */;\n            var found = false;\n            while (i < context.length) {\n                if (getProp(context, i) === prop) {\n                    found = true;\n                    break;\n                }\n                i += itemsPerRow;\n            }\n            if (found) {\n                var bindingsStart = i + 4 /* BindingsStartOffset */;\n                var valuesStart = bindingsStart + 1; // the first column is template bindings\n                var valuesEnd = bindingsStart + valuesCount - 1;\n                for (var i_1 = valuesStart; i_1 < valuesEnd; i_1++) {\n                    var bindingIndex = context[i_1];\n                    if (bindingIndex !== 0) {\n                        setValue(data, bindingIndex, null);\n                    }\n                }\n            }\n        }\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            var bindingsStart = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */;\n            var valuesStart = bindingsStart + 1; // the first column is template bindings\n            var valuesEnd = bindingsStart + valuesCount - 1;\n            for (var i = valuesStart; i < valuesEnd; i++) {\n                var stylingMap = getValue(data, context[i]);\n                if (stylingMap) {\n                    setMapAsDirty(stylingMap);\n                }\n            }\n        }\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     *\n     * Note that this function is also used for map-based styling bindings. They are treated\n     * much the same as prop-based bindings, but, their property name value is set as `[MAP]`.\n     */\n    function registerBinding(context, tNode, countId, sourceIndex, prop, bindingValue, sanitizationRequired, isClassBased) {\n        var found = false;\n        prop = prop || MAP_BASED_ENTRY_PROP_NAME;\n        var totalSources = getTotalSources(context);\n        // if a new source is detected then a new column needs to be allocated into\n        // the styling context. The column is basically a new allocation of binding\n        // sources that will be available to each property.\n        while (totalSources <= sourceIndex) {\n            addNewSourceColumn(context);\n            totalSources++;\n        }\n        var collisionFlag = isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */;\n        var isBindingIndexValue = typeof bindingValue === 'number';\n        var entriesPerRow = 4 /* BindingsStartOffset */ + getValuesCount(context);\n        var i = 2 /* ValuesStartPosition */;\n        // all style/class bindings are sorted by property name\n        while (i < context.length) {\n            var p = getProp(context, i);\n            if (prop <= p) {\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop, sanitizationRequired);\n                }\n                else if (isBindingIndexValue) {\n                    patchConfig(tNode, collisionFlag);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n                found = true;\n                break;\n            }\n            i += entriesPerRow;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop, sanitizationRequired);\n            addBindingIntoContext(context, i, bindingValue, countId, sourceIndex);\n        }\n    }\n    /**\n     * Inserts a new row into the provided `TStylingContext` and assigns the provided `prop` value as\n     * the property entry.\n     */\n    function allocateNewContextEntry(context, index, prop, sanitizationRequired) {\n        var config = sanitizationRequired ? 1 /* SanitizationRequired */ :\n            0 /* Default */;\n        context.splice(index, 0, config, // 1) config value\n        DEFAULT_GUARD_MASK_VALUE, // 2) template bit mask\n        DEFAULT_GUARD_MASK_VALUE, // 3) host bindings bit mask\n        prop);\n        index += 4; // the 4 values above\n        // 5...) default binding index for the template value\n        // depending on how many sources already exist in the context,\n        // multiple default index entries may need to be inserted for\n        // the new value in the context.\n        var totalBindingsPerEntry = getTotalSources(context);\n        for (var i = 0; i < totalBindingsPerEntry; i++) {\n            context.splice(index, 0, DEFAULT_BINDING_INDEX);\n            index++;\n        }\n        // 6) default binding value for the new entry\n        context.splice(index, 0, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, bitIndex, sourceIndex) {\n        if (typeof bindingValue === 'number') {\n            var hostBindingsMode = isHostStylingActive(sourceIndex);\n            var cellIndex = index + 4 /* BindingsStartOffset */ + sourceIndex;\n            context[cellIndex] = bindingValue;\n            var updatedBitMask = getGuardMask(context, index, hostBindingsMode) | (1 << bitIndex);\n            setGuardMask(context, index, updatedBitMask, hostBindingsMode);\n        }\n        else if (bindingValue !== null && getDefaultValue(context, index) === null) {\n            setDefaultValue(context, index, bindingValue);\n        }\n    }\n    /**\n     * Registers a new column into the provided `TStylingContext`.\n     *\n     * If and when a new source is detected then a new column needs to\n     * be allocated into the styling context. The column is basically\n     * a new allocation of binding sources that will be available to each\n     * property.\n     *\n     * Each column that exists in the styling context resembles a styling\n     * source. A styling source an either be the template or one or more\n     * components or directives all containing styling host bindings.\n     */\n    function addNewSourceColumn(context) {\n        // we use -1 here because we want to insert right before the last value (the default value)\n        var insertOffset = 4 /* BindingsStartOffset */ + getValuesCount(context) - 1;\n        var index = 2 /* ValuesStartPosition */;\n        while (index < context.length) {\n            index += insertOffset;\n            context.splice(index++, 0, DEFAULT_BINDING_INDEX);\n            // the value was inserted just before the default value, but the\n            // next entry in the context starts just after it. Therefore++.\n            index++;\n        }\n        context[0 /* TotalSourcesPosition */]++;\n    }\n    /**\n     * Applies all pending style and class bindings to the provided element.\n     *\n     * This function will attempt to flush styling via the provided `classesContext`\n     * and `stylesContext` context values. This function is designed to be run from\n     * the internal `stylingApply` function (which is scheduled to run at the very\n     * end of change detection for an element if one or more style/class bindings\n     * were processed) and will rely on any state values that are set from when\n     * any of the styling bindings executed.\n     *\n     * This function is designed to be called twice: one when change detection has\n     * processed an element within the template bindings (i.e. just as `advance()`\n     * is called) and when host bindings have been processed. In both cases the\n     * styles and classes in both contexts will be applied to the element, but the\n     * algorithm will selectively decide which bindings to run depending on the\n     * columns in the context. The provided `directiveIndex` value will help the\n     * algorithm determine which bindings to apply: either the template bindings or\n     * the host bindings (see `applyStylingToElement` for more information).\n     *\n     * Note that once this function is called all temporary styling state data\n     * (i.e. the `bitMask` and `counter` values for styles and classes will be cleared).\n     */\n    function flushStyling(renderer, data, tNode, classesContext, stylesContext, element, directiveIndex, styleSanitizer, firstUpdatePass) {\n        ngDevMode && ngDevMode.flushStyling++;\n        var state = getStylingState(element, directiveIndex);\n        var hostBindingsMode = isHostStylingActive(state.sourceIndex);\n        if (stylesContext) {\n            firstUpdatePass && syncContextInitialStyling(stylesContext, tNode, false);\n            if (state.stylesBitMask !== 0) {\n                applyStylingViaContext(stylesContext, tNode, renderer, element, data, state.stylesBitMask, setStyle, styleSanitizer, hostBindingsMode, false);\n            }\n        }\n        if (classesContext) {\n            firstUpdatePass && syncContextInitialStyling(classesContext, tNode, true);\n            if (state.classesBitMask !== 0) {\n                applyStylingViaContext(classesContext, tNode, renderer, element, data, state.classesBitMask, setClass, null, hostBindingsMode, true);\n            }\n        }\n        resetStylingState();\n    }\n    /**\n     * Registers all static styling values into the context as default values.\n     *\n     * Static styles are stored on the `tNode.styles` and `tNode.classes`\n     * properties as instances of `StylingMapArray`. When an instance of\n     * `TStylingContext` is assigned to `tNode.styles` and `tNode.classes`\n     * then the existing initial styling values are copied into the the\n     * `InitialStylingValuePosition` slot.\n     *\n     * Because all static styles/classes are collected and registered on\n     * the initial styling array each time a directive is instantiated,\n     * the context may not yet know about the static values. When this\n     * function is called it will copy over all the static style/class\n     * values from the initial styling array into the context as default\n     * values for each of the matching entries in the context.\n     *\n     * Let's imagine the following example:\n     *\n     * ```html\n     * <div style=\"color:red\"\n     *     [style.color]=\"myColor\"\n     *     dir-that-has-static-height>\n     *   ...\n     * </div>\n     * ```\n     *\n     * When the code above is processed, the underlying element/styling\n     * instructions will create an instance of `TStylingContext` for\n     * the `tNode.styles` property. Here's what that looks like:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, null, // [style.color] binding\n     * ]\n     * ```\n     *\n     * After this function is called it will balance out the context with\n     * the static `color` and `height` values and set them as defaults within\n     * the context:\n     *\n     * ```typescript\n     * tNode.styles = [\n     *   // ...\n     *   // initial styles\n     *   ['color:red; height:200px', 'color', 'red', 'height', '200px'],\n     *\n     *   0, 0b1, 0b0, 'color', 20, 'red',\n     *   0, 0b0, 0b0, 'height', 0, '200px',\n     * ]\n     * ```\n     */\n    function syncContextInitialStyling(context, tNode, isClassBased) {\n        // the TStylingContext always has initial style/class values which are\n        // stored in styling array format.\n        updateInitialStylingOnContext(context, tNode, getStylingMapArray(context), isClassBased);\n    }\n    /**\n     * Registers all initial styling entries into the provided context.\n     *\n     * This function will iterate over all entries in the provided `initialStyling` ar}ray and register\n     * them as default (initial) values in the provided context. Initial styling values in a context are\n     * the default values that are to be applied unless overwritten by a binding.\n     *\n     * The reason why this function exists and isn't a part of the context construction is because\n     * host binding is evaluated at a later stage after the element is created. This means that\n     * if a directive or component contains any initial styling code (i.e. `<div class=\"foo\">`)\n     * then that initial styling data can only be applied once the styling for that element\n     * is first applied (at the end of the update phase). Once that happens then the context will\n     * update itself with the complete initial styling for the element.\n     */\n    function updateInitialStylingOnContext(context, tNode, initialStyling, isClassBased) {\n        // `-1` is used here because all initial styling data is not a apart\n        // of a binding (since it's static)\n        var COUNT_ID_FOR_STYLING = -1;\n        var hasInitialStyling = false;\n        for (var i = 1 /* ValuesStartPosition */; i < initialStyling.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(initialStyling, i);\n            if (value) {\n                var prop = getMapProp(initialStyling, i);\n                registerBinding(context, tNode, COUNT_ID_FOR_STYLING, 0, prop, value, false, isClassBased);\n                hasInitialStyling = true;\n            }\n        }\n        if (hasInitialStyling) {\n            patchConfig(tNode, 256 /* hasInitialStyling */);\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * This function will iterate over all entries present in the provided\n     * `TStylingContext` array (both prop-based and map-based bindings).-\n     *\n     * Each entry, within the `TStylingContext` array, is stored alphabetically\n     * and this means that each prop/value entry will be applied in order\n     * (so long as it is marked dirty in the provided `bitMask` value).\n     *\n     * If there are any map-based entries present (which are applied to the\n     * element via the `[style]` and `[class]` bindings) then those entries\n     * will be applied as well. However, the code for that is not a part of\n     * this function. Instead, each time a property is visited, then the\n     * code below will call an external function called `stylingMapsSyncFn`\n     * and, if present, it will keep the application of styling values in\n     * map-based bindings up to sync with the application of prop-based\n     * bindings.\n     *\n     * Visit `styling/map_based_bindings.ts` to learn more about how the\n     * algorithm works for map-based styling bindings.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * the `flushStyling` function so that it can call this function for both\n     * the styles and classes contexts).\n     */\n    function applyStylingViaContext(context, tNode, renderer, element, bindingData, bitMaskValue, applyStylingFn, sanitizer, hostBindingsMode, isClassBased) {\n        var bitMask = normalizeBitMaskValue(bitMaskValue);\n        var stylingMapsSyncFn = null;\n        var applyAllValues = false;\n        var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n        if (hasConfig(tNode, mapBindingsFlag)) {\n            stylingMapsSyncFn = getStylingMapsSyncFn();\n            var mapsGuardMask = getGuardMask(context, 2 /* ValuesStartPosition */, hostBindingsMode);\n            applyAllValues = (bitMask & mapsGuardMask) !== 0;\n        }\n        var valuesCount = getValuesCount(context);\n        var totalBindingsToVisit = 1;\n        var mapsMode = applyAllValues ? 1 /* ApplyAllValues */ : 0 /* TraverseValues */;\n        if (hostBindingsMode) {\n            mapsMode |= 8 /* RecurseInnerMaps */;\n            totalBindingsToVisit = valuesCount - 1;\n        }\n        var i = getPropValuesStartPosition(context, tNode, isClassBased);\n        while (i < context.length) {\n            var guardMask = getGuardMask(context, i, hostBindingsMode);\n            if (bitMask & guardMask) {\n                var valueApplied = false;\n                var prop = getProp(context, i);\n                var defaultValue = getDefaultValue(context, i);\n                // Part 1: Visit the `[styling.prop]` value\n                for (var j = 0; j < totalBindingsToVisit; j++) {\n                    var bindingIndex = getBindingValue(context, i, j);\n                    if (!valueApplied && bindingIndex !== 0) {\n                        var value = getValue(bindingData, bindingIndex);\n                        if (isStylingValueDefined(value)) {\n                            var checkValueOnly = hostBindingsMode && j === 0;\n                            if (!checkValueOnly) {\n                                var finalValue = sanitizer && isSanitizationRequired(context, i) ?\n                                    sanitizer(prop, value, 2 /* SanitizeOnly */) :\n                                    unwrapSafeValue(value);\n                                applyStylingFn(renderer, element, prop, finalValue, bindingIndex);\n                            }\n                            valueApplied = true;\n                        }\n                    }\n                    // Part 2: Visit the `[style]` or `[class]` map-based value\n                    if (stylingMapsSyncFn) {\n                        // determine whether or not to apply the target property or to skip it\n                        var mode = mapsMode | (valueApplied ? 4 /* SkipTargetProp */ :\n                            2 /* ApplyTargetProp */);\n                        // the first column in the context (when `j == 0`) is special-cased for\n                        // template bindings. If and when host bindings are being processed then\n                        // the first column will still be iterated over, but the values will only\n                        // be checked against (not applied). If and when this happens we need to\n                        // notify the map-based syncing code to know not to apply the values it\n                        // comes across in the very first map-based binding (which is also located\n                        // in column zero).\n                        if (hostBindingsMode && j === 0) {\n                            mode |= 16 /* CheckValuesOnly */;\n                        }\n                        var valueAppliedWithinMap = stylingMapsSyncFn(context, renderer, element, bindingData, j, applyStylingFn, sanitizer, mode, prop, defaultValue);\n                        valueApplied = valueApplied || valueAppliedWithinMap;\n                    }\n                }\n                // Part 3: apply the default value (e.g. `<div style=\"width:200\">` => `200px` gets applied)\n                // if the value has not yet been applied then a truthy value does not exist in the\n                // prop-based or map-based bindings code. If and when this happens, just apply the\n                // default value (even if the default value is `null`).\n                if (!valueApplied) {\n                    applyStylingFn(renderer, element, prop, defaultValue);\n                }\n            }\n            i += 4 /* BindingsStartOffset */ + valuesCount;\n        }\n        // the map-based styling entries may have not applied all their\n        // values. For this reason, one more call to the sync function\n        // needs to be issued at the end.\n        if (stylingMapsSyncFn) {\n            if (hostBindingsMode) {\n                mapsMode |= 16 /* CheckValuesOnly */;\n            }\n            stylingMapsSyncFn(context, renderer, element, bindingData, 0, applyStylingFn, sanitizer, mapsMode);\n        }\n    }\n    /**\n     * Applies the provided styling map to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has three different cases that can occur (for each item in the map):\n     *\n     * - Case 1: Attempt to apply the current value in the map to the element (if it's `non null`).\n     *\n     * - Case 2: If a map value fails to be applied then the algorithm will find a matching entry in\n     *           the initial values present in the context and attempt to apply that.\n     *\n     * - Default Case: If the initial value cannot be applied then a default value of `null` will be\n     *                 applied (which will remove the style/class value from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the styling map was applied to the element.\n     */\n    function applyStylingMapDirectly(renderer, context, tNode, element, data, bindingIndex, value, isClassBased, sanitizer, forceUpdate, bindingValueContainsInitial) {\n        var oldValue = getValue(data, bindingIndex);\n        if (forceUpdate || hasValueChanged(oldValue, value)) {\n            var hasInitial = hasConfig(tNode, 256 /* hasInitialStyling */);\n            var initialValue = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n            setValue(data, bindingIndex, value);\n            // the cached value is the last snapshot of the style or class\n            // attribute value and is used in the if statement below to\n            // keep track of internal/external changes.\n            var cachedValueIndex = bindingIndex + 1;\n            var cachedValue = getValue(data, cachedValueIndex);\n            if (cachedValue === NO_CHANGE) {\n                cachedValue = initialValue;\n            }\n            cachedValue = typeof cachedValue !== 'string' ? '' : cachedValue;\n            // If a class/style value was modified externally then the styling\n            // fast pass cannot guarantee that the external values are retained.\n            // When this happens, the algorithm will bail out and not write to\n            // the style or className attribute directly.\n            var propBindingsFlag = isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */;\n            var writeToAttrDirectly = !hasConfig(tNode, propBindingsFlag);\n            if (writeToAttrDirectly &&\n                checkIfExternallyModified(element, cachedValue, isClassBased)) {\n                writeToAttrDirectly = false;\n                if (oldValue !== VALUE_IS_EXTERNALLY_MODIFIED) {\n                    // direct styling will reset the attribute entirely each time,\n                    // and, for this reason, if the algorithm decides it cannot\n                    // write to the class/style attributes directly then it must\n                    // reset all the previous style/class values before it starts\n                    // to apply values in the non-direct way.\n                    removeStylingValues(renderer, element, oldValue, isClassBased);\n                    // this will instruct the algorithm not to apply class or style\n                    // values directly anymore.\n                    setValue(data, cachedValueIndex, VALUE_IS_EXTERNALLY_MODIFIED);\n                }\n            }\n            if (writeToAttrDirectly) {\n                var initialValue_1 = hasInitial && !bindingValueContainsInitial ? getInitialStylingValue(context) : null;\n                var valueToApply = writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue_1);\n                setValue(data, cachedValueIndex, valueToApply || null);\n            }\n            else {\n                var applyFn = isClassBased ? setClass : setStyle;\n                var map = normalizeIntoStylingMap(oldValue, value, !isClassBased);\n                var initialStyles = hasInitial ? getStylingMapArray(context) : null;\n                for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n                    var prop = getMapProp(map, i);\n                    var value_1 = getMapValue(map, i);\n                    // case 1: apply the map value (if it exists)\n                    var applied = applyStylingValue(renderer, element, prop, value_1, applyFn, bindingIndex, sanitizer);\n                    // case 2: apply the initial value (if it exists)\n                    if (!applied && initialStyles) {\n                        applied = findAndApplyMapValue(renderer, element, applyFn, initialStyles, prop, bindingIndex, sanitizer);\n                    }\n                    // default case: apply `null` to remove the value\n                    if (!applied) {\n                        applyFn(renderer, element, prop, null, bindingIndex);\n                    }\n                }\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                if (isClassBased) {\n                    state.lastDirectClassMap = map;\n                }\n                else {\n                    state.lastDirectStyleMap = map;\n                }\n            }\n        }\n    }\n    function writeStylingValueDirectly(renderer, element, value, isClassBased, initialValue) {\n        var valueToApply;\n        if (isClassBased) {\n            valueToApply = typeof value === 'string' ? value : objectToClassName(value);\n            if (initialValue !== null) {\n                valueToApply = concatString(initialValue, valueToApply, ' ');\n            }\n            setClassName(renderer, element, valueToApply);\n        }\n        else {\n            valueToApply = forceStylesAsString(value, true);\n            if (initialValue !== null) {\n                valueToApply = initialValue + ';' + valueToApply;\n            }\n            setStyleAttr(renderer, element, valueToApply);\n        }\n        return valueToApply;\n    }\n    /**\n     * Applies the provided styling prop/value to the element directly (without context resolution).\n     *\n     * This function is designed to be run from the styling instructions and will be called\n     * automatically. This function is intended to be used for performance reasons in the\n     * event that there is no need to apply styling via context resolution.\n     *\n     * This function has four different cases that can occur:\n     *\n     * - Case 1: Apply the provided prop/value (style or class) entry to the element\n     *           (if it is `non null`).\n     *\n     * - Case 2: If value does not get applied (because its `null` or `undefined`) then the algorithm\n     *           will check to see if a styling map value was applied to the element as well just\n     *           before this (via `styleMap` or `classMap`). If and when a map is present then the\n      *          algorithm will find the matching property in the map and apply its value.\n      *\n     * - Case 3: If a map value fails to be applied then the algorithm will check to see if there\n     *           are any initial values present and attempt to apply a matching value based on\n     *           the target prop.\n     *\n     * - Default Case: If a matching initial value cannot be applied then a default value\n     *                 of `null` will be applied (which will remove the style/class value\n     *                 from the element).\n     *\n     * See `allowDirectStylingApply` to learn the logic used to determine whether any style/class\n     * bindings can be directly applied.\n     *\n     * @returns whether or not the prop/value styling was applied to the element.\n     */\n    function applyStylingValueDirectly(renderer, context, tNode, element, data, bindingIndex, prop, value, isClassBased, sanitizer) {\n        var applied = false;\n        if (hasValueChanged(data[bindingIndex], value)) {\n            setValue(data, bindingIndex, value);\n            var applyFn = isClassBased ? setClass : setStyle;\n            // case 1: apply the provided value (if it exists)\n            applied = applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer);\n            // case 2: find the matching property in a styling map and apply the detected value\n            var mapBindingsFlag = isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            if (!applied && hasConfig(tNode, mapBindingsFlag)) {\n                var state = getStylingState(element, TEMPLATE_DIRECTIVE_INDEX);\n                var map = isClassBased ? state.lastDirectClassMap : state.lastDirectStyleMap;\n                applied = map ?\n                    findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) :\n                    false;\n            }\n            // case 3: apply the initial value (if it exists)\n            if (!applied && hasConfig(tNode, 256 /* hasInitialStyling */)) {\n                var map = getStylingMapArray(context);\n                applied =\n                    map ? findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex) : false;\n            }\n            // default case: apply `null` to remove the value\n            if (!applied) {\n                applyFn(renderer, element, prop, null, bindingIndex);\n            }\n        }\n        return applied;\n    }\n    function applyStylingValue(renderer, element, prop, value, applyFn, bindingIndex, sanitizer) {\n        var valueToApply = unwrapSafeValue(value);\n        if (isStylingValueDefined(valueToApply)) {\n            valueToApply =\n                sanitizer ? sanitizer(prop, value, 3 /* ValidateAndSanitize */) : valueToApply;\n            applyFn(renderer, element, prop, valueToApply, bindingIndex);\n            return true;\n        }\n        return false;\n    }\n    function findAndApplyMapValue(renderer, element, applyFn, map, prop, bindingIndex, sanitizer) {\n        for (var i = 1 /* ValuesStartPosition */; i < map.length; i += 2 /* TupleSize */) {\n            var p = getMapProp(map, i);\n            if (p === prop) {\n                var valueToApply = getMapValue(map, i);\n                valueToApply = sanitizer ?\n                    sanitizer(prop, valueToApply, 3 /* ValidateAndSanitize */) :\n                    valueToApply;\n                applyFn(renderer, element, prop, valueToApply, bindingIndex);\n                return true;\n            }\n            if (p > prop) {\n                break;\n            }\n        }\n        return false;\n    }\n    function normalizeBitMaskValue(value) {\n        // if pass => apply all values (-1 implies that all bits are flipped to true)\n        if (value === true)\n            return -1;\n        // if pass => skip all values\n        if (value === false)\n            return 0;\n        // return the bit mask value as is\n        return value;\n    }\n    var _activeStylingMapApplyFn = null;\n    function getStylingMapsSyncFn() {\n        return _activeStylingMapApplyFn;\n    }\n    function setStylingMapsSyncFn(fn) {\n        _activeStylingMapApplyFn = fn;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle = function (renderer, native, prop, value) {\n        if (renderer !== null) {\n            // Use `isStylingValueDefined` to account for falsy values that should be bound like 0.\n            if (isStylingValueDefined(value)) {\n                // opacity, z-index and flexbox all have number values\n                // and these need to be converted into strings so that\n                // they can be assigned properly.\n                value = value.toString();\n                ngDevMode && ngDevMode.rendererSetStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    // The reason why native style may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.setProperty(prop, value);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveStyle++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase);\n                }\n                else {\n                    var nativeStyle = native.style;\n                    if (nativeStyle != null) {\n                        nativeStyle.removeProperty(prop);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass = function (renderer, native, className, value) {\n        if (renderer !== null && className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.addClass(native, className);\n                }\n                else {\n                    // the reason why classList may be `null` is either because\n                    // it's a container element or it's a part of a test\n                    // environment that doesn't have styling. In either\n                    // case it's safe not to apply styling to the element.\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.add(className);\n                    }\n                }\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                if (isProceduralRenderer(renderer)) {\n                    renderer.removeClass(native, className);\n                }\n                else {\n                    var classList = native.classList;\n                    if (classList != null) {\n                        classList.remove(className);\n                    }\n                }\n            }\n        }\n    };\n    var setClassName = function (renderer, native, className) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'class', className);\n            }\n            else {\n                native.className = className;\n            }\n        }\n    };\n    var setStyleAttr = function (renderer, native, value) {\n        if (renderer !== null) {\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(native, 'style', value);\n            }\n            else {\n                native.setAttribute('style', value);\n            }\n        }\n    };\n    /**\n     * Iterates over all provided styling entries and renders them on the element.\n     *\n     * This function is used alongside a `StylingMapArray` entry. This entry is not\n     * the same as the `TStylingContext` and is only really used when an element contains\n     * initial styling values (e.g. `<div style=\"width:200px\">`), but no style/class bindings\n     * are present. If and when that happens then this function will be called to render all\n     * initial styling values on an element.\n     */\n    function renderStylingMap(renderer, element, stylingValues, isClassBased) {\n        var stylingMapArr = getStylingMapArray(stylingValues);\n        if (stylingMapArr) {\n            for (var i = 1 /* ValuesStartPosition */; i < stylingMapArr.length; i += 2 /* TupleSize */) {\n                var prop = getMapProp(stylingMapArr, i);\n                var value = getMapValue(stylingMapArr, i);\n                if (isClassBased) {\n                    setClass(renderer, element, prop, value, null);\n                }\n                else {\n                    setStyle(renderer, element, prop, value, null);\n                }\n            }\n        }\n    }\n    function objectToClassName(obj) {\n        var str = '';\n        if (obj) {\n            for (var key in obj) {\n                var value = obj[key];\n                if (value) {\n                    str += (str.length ? ' ' : '') + key;\n                }\n            }\n        }\n        return str;\n    }\n    /**\n     * Determines whether or not an element style/className value has changed since the last update.\n     *\n     * This function helps Angular determine if a style or class attribute value was\n     * modified by an external plugin or API outside of the style binding code. This\n     * means any JS code that adds/removes class/style values on an element outside\n     * of Angular's styling binding algorithm.\n     *\n     * @returns true when the value was modified externally.\n     */\n    function checkIfExternallyModified(element, cachedValue, isClassBased) {\n        // this means it was checked before and there is no reason\n        // to compare the style/class values again. Either that or\n        // web workers are being used.\n        if (_global.Node === 'undefined' || cachedValue === VALUE_IS_EXTERNALLY_MODIFIED)\n            return true;\n        // comparing the DOM value against the cached value is the best way to\n        // see if something has changed.\n        var currentValue = (isClassBased ? element.className : (element.style && element.style.cssText)) || '';\n        return currentValue !== (cachedValue || '');\n    }\n    /**\n     * Removes provided styling values from the element\n     */\n    function removeStylingValues(renderer, element, values, isClassBased) {\n        var arr;\n        if (isStylingMapArray(values)) {\n            arr = values;\n        }\n        else {\n            arr = normalizeIntoStylingMap(null, values, !isClassBased);\n        }\n        var applyFn = isClassBased ? setClass : setStyle;\n        for (var i = 1 /* ValuesStartPosition */; i < arr.length; i += 2 /* TupleSize */) {\n            var value = getMapValue(arr, i);\n            if (value) {\n                var prop = getMapProp(arr, i);\n                applyFn(renderer, element, prop, false);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Advances to an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n      *   if (rf & 1) {\n      *     text(0, 'Hello');\n      *     text(1, 'Goodbye')\n      *     element(2, 'div');\n      *   }\n      *   if (rf & 2) {\n      *     advance(2); // Advance twice to the <div>.\n      *     property('title', 'test');\n      *   }\n      *  }\n      * ```\n      * @param delta Number of elements to advance forwards by.\n      *\n      * @codeGenApi\n      */\n    function ɵɵadvance(delta) {\n        ngDevMode && assertGreaterThan(delta, 0, 'Can only advance forward');\n        selectIndexInternal(getLView(), getSelectedIndex() + delta, getCheckNoChangesMode());\n    }\n    /**\n     * Selects an element for later binding instructions.\n     * @deprecated No longer being generated, but still used in unit tests.\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        selectIndexInternal(getLView(), index, getCheckNoChangesMode());\n    }\n    function selectIndexInternal(lView, index, checkNoChangesMode) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        if (hasActiveElementFlag(1 /* RunExitFn */)) {\n            executeElementExitFn();\n        }\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n        if (!checkNoChangesMode) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = lView[TVIEW].preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, index);\n                }\n            }\n            else {\n                var preOrderHooks = lView[TVIEW].preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, index);\n                }\n            }\n        }\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵadvance` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$6 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an instance of a `Proxy` and creates with an empty target object and binds it to the\n     * provided handler.\n     *\n     * The reason why this function exists is because IE doesn't support\n     * the `Proxy` class. For this reason an error must be thrown.\n     */\n    function createProxy(handler) {\n        var g = _global;\n        if (!g.Proxy) {\n            throw new Error('Proxy is not supported in this browser');\n        }\n        return new g.Proxy({}, handler);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * --------\n     *\n     * This file contains the algorithm logic for applying map-based bindings\n     * such as `[style]` and `[class]`.\n     *\n     * --------\n     */\n    /**\n     * Enables support for map-based styling bindings (e.g. `[style]` and `[class]` bindings).\n     */\n    function activateStylingMapFeature() {\n        setStylingMapsSyncFn(syncStylingMap);\n    }\n    /**\n     * Used to apply styling values presently within any map-based bindings on an element.\n     *\n     * Angular supports map-based styling bindings which can be applied via the\n     * `[style]` and `[class]` bindings which can be placed on any HTML element.\n     * These bindings can work independently, together or alongside prop-based\n     * styling bindings (e.g. `<div [style]=\"x\" [style.width]=\"w\">`).\n     *\n     * If a map-based styling binding is detected by the compiler, the following\n     * AOT code is produced:\n     *\n     * ```typescript\n     * styleMap(ctx.styles); // styles = {key:value}\n     * classMap(ctx.classes); // classes = {key:value}|string\n     * ```\n     *\n     * If and when either of the instructions above are evaluated, then the code\n     * present in this file is included into the bundle. The mechanism used, to\n     * activate support for map-based bindings at runtime is possible via the\n     * `activeStylingMapFeature` function (which is also present in this file).\n     *\n     * # The Algorithm\n     * Whenever a map-based binding updates (which is when the identity of the\n     * map-value changes) then the map is iterated over and a `StylingMapArray` array\n     * is produced. The `StylingMapArray` instance is stored in the binding location\n     * where the `BINDING_INDEX` is situated when the `styleMap()` or `classMap()`\n     * instruction were called. Once the binding changes, then the internal `bitMask`\n     * value is marked as dirty.\n     *\n     * Styling values are applied once CD exits the element (which happens when\n     * the `advance(n)` instruction is called or the template function exits). When\n     * this occurs, all prop-based bindings are applied. If a map-based binding is\n     * present then a special flushing function (called a sync function) is made\n     * available and it will be called each time a styling property is flushed.\n     *\n     * The flushing algorithm is designed to apply styling for a property (which is\n     * a CSS property or a className value) one by one. If map-based bindings\n     * are present, then the flushing algorithm will keep calling the maps styling\n     * sync function each time a property is visited. This way, the flushing\n     * behavior of map-based bindings will always be at the same property level\n     * as the current prop-based property being iterated over (because everything\n     * is alphabetically sorted).\n     *\n     * Let's imagine we have the following HTML template code:\n     *\n     * ```html\n     * <div [style]=\"{width:'100px', height:'200px', 'z-index':'10'}\"\n     *      [style.width.px]=\"200\">...</div>\n     * ```\n     *\n     * When CD occurs, both the `[style]` and `[style.width]` bindings\n     * are evaluated. Then when the styles are flushed on screen, the\n     * following operations happen:\n     *\n     * 1. `[style.width]` is attempted to be written to the element.\n     *\n     * 2.  Once that happens, the algorithm instructs the map-based\n     *     entries (`[style]` in this case) to \"catch up\" and apply\n     *     all values up to the `width` value. When this happens the\n     *     `height` value is applied to the element (since it is\n     *     alphabetically situated before the `width` property).\n     *\n     * 3. Since there are no more prop-based entries anymore, the\n     *    loop exits and then, just before the flushing ends, it\n     *    instructs all map-based bindings to \"finish up\" applying\n     *    their values.\n     *\n     * 4. The only remaining value within the map-based entries is\n     *    the `z-index` value (`width` got skipped because it was\n     *    successfully applied via the prop-based `[style.width]`\n     *    binding). Since all map-based entries are told to \"finish up\",\n     *    the `z-index` value is iterated over and it is then applied\n     *    to the element.\n     *\n     * The most important thing to take note of here is that prop-based\n     * bindings are evaluated in order alongside map-based bindings.\n     * This allows all styling across an element to be applied in O(n)\n     * time (a similar algorithm is that of the array merge algorithm\n     * in merge sort).\n     */\n    var syncStylingMap = function (context, renderer, element, data, sourceIndex, applyStylingFn, sanitizer, mode, targetProp, defaultValue) {\n        var targetPropValueWasApplied = false;\n        // once the map-based styling code is activate it is never deactivated. For this reason a\n        // check to see if the current styling context has any map based bindings is required.\n        var totalMaps = getValuesCount(context);\n        if (totalMaps) {\n            var runTheSyncAlgorithm = true;\n            var loopUntilEnd = !targetProp;\n            // If the code is told to finish up (run until the end), but the mode\n            // hasn't been flagged to apply values (it only traverses values) then\n            // there is no point in iterating over the array because nothing will\n            // be applied to the element.\n            if (loopUntilEnd && (mode & 1 /* ApplyAllValues */) === 0) {\n                runTheSyncAlgorithm = false;\n                targetPropValueWasApplied = true;\n            }\n            if (runTheSyncAlgorithm) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp || null, sourceIndex, defaultValue || null);\n            }\n            if (loopUntilEnd) {\n                resetSyncCursors();\n            }\n        }\n        return targetPropValueWasApplied;\n    };\n    /**\n     * Recursive function designed to apply map-based styling to an element one map at a time.\n     *\n     * This function is designed to be called from the `syncStylingMap` function and will\n     * apply map-based styling data one map at a time to the provided `element`.\n     *\n     * This function is recursive and it will call itself if a follow-up map value is to be\n     * processed. To learn more about how the algorithm works, see `syncStylingMap`.\n     */\n    function innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex, defaultValue) {\n        var totalMaps = getValuesCount(context) - 1; // maps have no default value\n        var mapsLimit = totalMaps - 1;\n        var recurseInnerMaps = currentMapIndex < mapsLimit && (mode & 8 /* RecurseInnerMaps */) !== 0;\n        var checkValuesOnly = (mode & 16 /* CheckValuesOnly */) !== 0;\n        if (checkValuesOnly) {\n            // inner modes do not check values ever (that can only happen\n            // when sourceIndex === 0)\n            mode &= ~16 /* CheckValuesOnly */;\n        }\n        var targetPropValueWasApplied = false;\n        if (currentMapIndex <= mapsLimit) {\n            var cursor = getCurrentSyncCursor(currentMapIndex);\n            var bindingIndex = getBindingValue(context, 2 /* ValuesStartPosition */, currentMapIndex);\n            var stylingMapArr = getValue(data, bindingIndex);\n            if (stylingMapArr) {\n                while (cursor < stylingMapArr.length) {\n                    var prop = getMapProp(stylingMapArr, cursor);\n                    var iteratedTooFar = targetProp && prop > targetProp;\n                    var isTargetPropMatched = !iteratedTooFar && prop === targetProp;\n                    var value = getMapValue(stylingMapArr, cursor);\n                    var valueIsDefined = isStylingValueDefined(value);\n                    // the recursive code is designed to keep applying until\n                    // it reaches or goes past the target prop. If and when\n                    // this happens then it will stop processing values, but\n                    // all other map values must also catch up to the same\n                    // point. This is why a recursive call is still issued\n                    // even if the code has iterated too far.\n                    var innerMode = iteratedTooFar ? mode : resolveInnerMapMode(mode, valueIsDefined, isTargetPropMatched);\n                    var innerProp = iteratedTooFar ? targetProp : prop;\n                    var valueApplied = recurseInnerMaps ?\n                        innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, innerMode, innerProp, currentMapIndex + 1, defaultValue) :\n                        false;\n                    if (iteratedTooFar) {\n                        if (!targetPropValueWasApplied) {\n                            targetPropValueWasApplied = valueApplied;\n                        }\n                        break;\n                    }\n                    if (!valueApplied && isValueAllowedToBeApplied(mode, isTargetPropMatched)) {\n                        valueApplied = true;\n                        if (!checkValuesOnly) {\n                            var useDefault = isTargetPropMatched && !valueIsDefined;\n                            var bindingIndexToApply = isTargetPropMatched ? bindingIndex : null;\n                            var finalValue = void 0;\n                            if (useDefault) {\n                                finalValue = defaultValue;\n                            }\n                            else {\n                                finalValue = sanitizer ?\n                                    sanitizer(prop, value, 3 /* ValidateAndSanitize */) :\n                                    (value ? unwrapSafeValue(value) : null);\n                            }\n                            applyStylingFn(renderer, element, prop, finalValue, bindingIndexToApply);\n                        }\n                    }\n                    targetPropValueWasApplied = valueApplied && isTargetPropMatched;\n                    cursor += 2 /* TupleSize */;\n                }\n                setCurrentSyncCursor(currentMapIndex, cursor);\n                // this is a fallback case in the event that the styling map is `null` for this\n                // binding but there are other map-based bindings that need to be evaluated\n                // afterwards. If the `prop` value is falsy then the intention is to cycle\n                // through all of the properties in the remaining maps as well. If the current\n                // styling map is too short then there are no values to iterate over. In either\n                // case the follow-up maps need to be iterated over.\n                if (recurseInnerMaps &&\n                    (stylingMapArr.length === 1 /* ValuesStartPosition */ || !targetProp)) {\n                    targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n                }\n            }\n            else if (recurseInnerMaps) {\n                targetPropValueWasApplied = innerSyncStylingMap(context, renderer, element, data, applyStylingFn, sanitizer, mode, targetProp, currentMapIndex + 1, defaultValue);\n            }\n        }\n        return targetPropValueWasApplied;\n    }\n    /**\n     * Used to determine the mode for the inner recursive call.\n     *\n     * If an inner map is iterated on then this is done so for one\n     * of two reasons:\n     *\n     * - value is being applied:\n     *   if the value is being applied from this current styling\n     *   map then there is no need to apply it in a deeper map\n     *   (i.e. the `SkipTargetProp` flag is set)\n     *\n     * - value is being not applied:\n     *   apply the value if it is found in a deeper map.\n     *   (i.e. the `SkipTargetProp` flag is unset)\n     *\n     * When these reasons are encountered the flags will for the\n     * inner map mode will be configured.\n     */\n    function resolveInnerMapMode(currentMode, valueIsDefined, isTargetPropMatched) {\n        var innerMode = currentMode;\n        // the statements below figures out whether or not an inner styling map\n        // is allowed to apply its value or not. The main thing to keep note\n        // of is that if the target prop isn't matched then its expected that\n        // all values before it are allowed to be applied so long as \"apply all values\"\n        // is set to true.\n        var applyAllValues = currentMode & 1 /* ApplyAllValues */;\n        var applyTargetProp = currentMode & 2 /* ApplyTargetProp */;\n        var allowInnerApply = !valueIsDefined && (isTargetPropMatched ? applyTargetProp : applyAllValues);\n        if (allowInnerApply) {\n            // case 1: set the mode to apply the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 2 /* ApplyTargetProp */;\n            innerMode &= ~4 /* SkipTargetProp */;\n        }\n        else {\n            // case 2: set the mode to skip the targeted prop value if it\n            // ends up being encountered in another map value\n            innerMode |= 4 /* SkipTargetProp */;\n            innerMode &= ~2 /* ApplyTargetProp */;\n        }\n        return innerMode;\n    }\n    /**\n     * Decides whether or not a prop/value entry will be applied to an element.\n     *\n     * To determine whether or not a value is to be applied,\n     * the following procedure is evaluated:\n     *\n     * First check to see the current `mode` status:\n     *  1. If the mode value permits all props to be applied then allow.\n     *    - But do not allow if the current prop is set to be skipped.\n     *  2. Otherwise if the current prop is permitted then allow.\n     */\n    function isValueAllowedToBeApplied(mode, isTargetPropMatched) {\n        var doApplyValue = (mode & 1 /* ApplyAllValues */) !== 0;\n        if (!doApplyValue) {\n            if (mode & 2 /* ApplyTargetProp */) {\n                doApplyValue = isTargetPropMatched;\n            }\n        }\n        else if ((mode & 4 /* SkipTargetProp */) && isTargetPropMatched) {\n            doApplyValue = false;\n        }\n        return doApplyValue;\n    }\n    /**\n     * Used to keep track of concurrent cursor values for multiple map-based styling bindings present on\n     * an element.\n     */\n    var MAP_CURSORS = [];\n    /**\n     * Used to reset the state of each cursor value being used to iterate over map-based styling\n     * bindings.\n     */\n    function resetSyncCursors() {\n        for (var i = 0; i < MAP_CURSORS.length; i++) {\n            MAP_CURSORS[i] = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Returns an active cursor value at a given mapIndex location.\n     */\n    function getCurrentSyncCursor(mapIndex) {\n        if (mapIndex >= MAP_CURSORS.length) {\n            MAP_CURSORS.push(1 /* ValuesStartPosition */);\n        }\n        return MAP_CURSORS[mapIndex];\n    }\n    /**\n     * Sets a cursor value at a given mapIndex location.\n     */\n    function setCurrentSyncCursor(mapIndex, indexValue) {\n        MAP_CURSORS[mapIndex] = indexValue;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context\n     */\n    function attachStylingDebugObject(context, tNode, isClassBased) {\n        var debug = new TStylingContextDebug(context, tNode, isClassBased);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context, _tNode, _isClassBased) {\n            this.context = context;\n            this._tNode = _tNode;\n            this._isClassBased = _isClassBased;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `DebugStylingContextEntry`.\n             */\n            get: function () {\n                var context = this.context;\n                var totalColumns = getValuesCount(context);\n                var entries = {};\n                var start = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp(context, i);\n                    var templateBitMask = getGuardMask(context, i, false);\n                    var hostBindingsBitMask = getGuardMask(context, i, true);\n                    var defaultValue = getDefaultValue(context, i);\n                    var sanitizationRequired = isSanitizationRequired(context, i);\n                    var bindingsStartPosition = i + 4 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < totalColumns; j++) {\n                        var bindingIndex = context[bindingsStartPosition + j];\n                        if (bindingIndex !== 0) {\n                            sources.push(bindingIndex);\n                        }\n                    }\n                    entries[prop] = {\n                        prop: prop,\n                        templateBitMask: templateBitMask,\n                        hostBindingsBitMask: hostBindingsBitMask,\n                        sanitizationRequired: sanitizationRequired,\n                        valuesCount: sources.length, defaultValue: defaultValue, sources: sources,\n                    };\n                    i += 4 /* BindingsStartOffset */ + totalColumns;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Prints a detailed summary of each styling source grouped together with each binding index in\n         * the context.\n         */\n        TStylingContextDebug.prototype.printSources = function () {\n            var output = '\\n';\n            var context = this.context;\n            var prefix = this._isClassBased ? 'class' : 'style';\n            var bindingsBySource = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            for (var i = 0; i < totalColumns; i++) {\n                var isDefaultColumn = i === totalColumns - 1;\n                var hostBindingsMode = i !== TEMPLATE_DIRECTIVE_INDEX;\n                var type = getTypeFromColumn(i, totalColumns);\n                var entries = [];\n                var j = 2 /* ValuesStartPosition */;\n                while (j < context.length) {\n                    var value = getBindingValue(context, j, i);\n                    if (isDefaultColumn || value > 0) {\n                        var bitMask = getGuardMask(context, j, hostBindingsMode);\n                        var bindingIndex = isDefaultColumn ? -1 : value;\n                        var prop = getProp(context, j);\n                        var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                        var binding = \"\" + prefix + (isMapBased ? '' : '.' + prop);\n                        entries.push({ binding: binding, value: value, bindingIndex: bindingIndex, bitMask: bitMask });\n                    }\n                    j += itemsPerRow;\n                }\n                bindingsBySource.push({ type: type, entries: entries.sort(function (a, b) { return a.bindingIndex - b.bindingIndex; }) });\n            }\n            bindingsBySource.forEach(function (entry) {\n                output += \"[\" + entry.type.toUpperCase() + \"]\\n\";\n                output += repeat('-', entry.type.length + 2) + '\\n';\n                var tab = '  ';\n                entry.entries.forEach(function (entry) {\n                    var isDefault = typeof entry.value !== 'number';\n                    var value = entry.value;\n                    if (!isDefault || value !== null) {\n                        output += tab + \"[\" + entry.binding + \"] = `\" + value + \"`\";\n                        output += '\\n';\n                    }\n                });\n                output += '\\n';\n            });\n            /* tslint:disable */\n            console.log(output);\n        };\n        /**\n         * Prints a detailed table of the entire styling context.\n         */\n        TStylingContextDebug.prototype.printTable = function () {\n            // IE (not Edge) is the only browser that doesn't support this feature. Because\n            // these debugging tools are not apart of the core of Angular (they are just\n            // extra tools) we can skip-out on older browsers.\n            if (!console.table) {\n                throw new Error('This feature is not supported in your browser');\n            }\n            var context = this.context;\n            var table = [];\n            var totalColumns = getValuesCount(context);\n            var itemsPerRow = 4 /* BindingsStartOffset */ + totalColumns;\n            var totalProps = Math.floor(context.length / itemsPerRow);\n            var i = 2 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var prop = getProp(context, i);\n                var isMapBased = prop === MAP_BASED_ENTRY_PROP_NAME;\n                var entry = {\n                    prop: prop,\n                    'tpl mask': generateBitString(getGuardMask(context, i, false), isMapBased, totalProps),\n                    'host mask': generateBitString(getGuardMask(context, i, true), isMapBased, totalProps),\n                };\n                for (var j = 0; j < totalColumns; j++) {\n                    var key = getTypeFromColumn(j, totalColumns);\n                    var value = getBindingValue(context, i, j);\n                    entry[key] = value;\n                }\n                i += itemsPerRow;\n                table.push(entry);\n            }\n            /* tslint:disable */\n            console.table(table);\n        };\n        return TStylingContextDebug;\n    }());\n    function generateBitString(value, isMapBased, totalProps) {\n        if (isMapBased || value > 1) {\n            return \"0b\" + leftPad(value.toString(2), totalProps, '0');\n        }\n        return null;\n    }\n    function leftPad(value, max, pad) {\n        return repeat(pad, max - value.length) + value;\n    }\n    function getTypeFromColumn(index, totalColumns) {\n        if (index === TEMPLATE_DIRECTIVE_INDEX) {\n            return 'template';\n        }\n        else if (index === totalColumns - 1) {\n            return 'defaults';\n        }\n        else {\n            return \"dir #\" + index;\n        }\n    }\n    function repeat(c, times) {\n        var s = '';\n        for (var i = 0; i < times; i++) {\n            s += c;\n        }\n        return s;\n    }\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _tNode, _data, _isClassBased) {\n            this._tNode = _tNode;\n            this._data = _data;\n            this._isClassBased = _isClassBased;\n            this._sanitizer = null;\n            this._debugContext = isStylingContext(context) ?\n                new TStylingContextDebug(context, _tNode, _isClassBased) :\n                context;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"context\", {\n            get: function () { return this._debugContext; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Overrides the sanitizer used to process styles.\n         */\n        NodeStylingDebug.prototype.overrideSanitizer = function (sanitizer) { this._sanitizer = sanitizer; };\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `LStylingSummary`.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var isClassBased = this._isClassBased;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value, bindingIndex) {\n                    entries[prop] = { prop: prop, value: value, bindingIndex: bindingIndex };\n                });\n                // because the styling algorithm runs into two different\n                // modes: direct and context-resolution, the output of the entries\n                // object is different because the removed values are not\n                // saved between updates. For this reason a proxy is created\n                // so that the behavior is the same when examining values\n                // that are no longer active on the element.\n                return createProxy({\n                    get: function (target, prop) {\n                        var value = entries[prop];\n                        if (!value) {\n                            value = {\n                                prop: prop,\n                                value: isClassBased ? false : null,\n                                bindingIndex: null,\n                            };\n                        }\n                        return value;\n                    },\n                    set: function (target, prop, value) { return false; },\n                    ownKeys: function () { return Object.keys(entries); },\n                    getOwnPropertyDescriptor: function (k) {\n                        // we use a special property descriptor here so that enumeration operations\n                        // such as `Object.keys` will work on this proxy.\n                        return {\n                            enumerable: true,\n                            configurable: true,\n                        };\n                    },\n                });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"config\", {\n            get: function () { return buildConfig(this._tNode, this._isClassBased); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                var config = this.config;\n                var data = this._data;\n                // the direct pass code doesn't convert [style] or [class] values\n                // into StylingMapArray instances. For this reason, the values\n                // need to be converted ahead of time since the styling debug\n                // relies on context resolution to figure out what styling\n                // values have been added/removed on the element.\n                if (config.allowDirectStyling && config.hasMapBindings) {\n                    data = data.concat([]); // make a copy\n                    this._convertMapBindingsToStylingMapArrays(data);\n                }\n                this._mapValues(data, function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._convertMapBindingsToStylingMapArrays = function (data) {\n            var context = this.context.context;\n            var limit = getPropValuesStartPosition(context, this._tNode, this._isClassBased);\n            for (var i = 2 /* ValuesStartPosition */ + 4 /* BindingsStartOffset */; i < limit; i++) {\n                var bindingIndex = context[i];\n                var bindingValue = bindingIndex !== 0 ? getValue(data, bindingIndex) : null;\n                if (bindingValue && !Array.isArray(bindingValue)) {\n                    var stylingMapArray = normalizeIntoStylingMap(null, bindingValue, !this._isClassBased);\n                    setValue(data, bindingIndex, stylingMapArray);\n                }\n            }\n        };\n        NodeStylingDebug.prototype._mapValues = function (data, fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var mapBindingsFlag = this._isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */;\n            var hasMaps = hasConfig(this._tNode, mapBindingsFlag);\n            if (hasMaps) {\n                activateStylingMapFeature();\n            }\n            var mapFn = function (renderer, element, prop, value, bindingIndex) { return fn(prop, value, bindingIndex || null); };\n            var sanitizer = this._isClassBased ? null : (this._sanitizer || getCurrentStyleSanitizer());\n            // run the template bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, false, this._isClassBased);\n            // and also the host bindings\n            applyStylingViaContext(this.context.context, this._tNode, null, mockElement, data, true, mapFn, sanitizer, true, this._isClassBased);\n        };\n        return NodeStylingDebug;\n    }());\n    function buildConfig(tNode, isClassBased) {\n        var hasMapBindings = hasConfig(tNode, isClassBased ? 512 /* hasClassMapBindings */ : 16384 /* hasStyleMapBindings */);\n        var hasPropBindings = hasConfig(tNode, isClassBased ? 1024 /* hasClassPropBindings */ : 32768 /* hasStylePropBindings */);\n        var hasCollisions = hasConfig(tNode, isClassBased ? 8192 /* hasDuplicateClassBindings */ : 262144 /* hasDuplicateStyleBindings */);\n        var hasTemplateBindings = hasConfig(tNode, isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */);\n        var hasHostBindings = hasConfig(tNode, isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */);\n        // `firstTemplatePass` here is false because the context has already been constructed\n        // directly within the behavior of the debugging tools (outside of style/class debugging,\n        // the context is constructed during the first template pass).\n        var allowDirectStyling$1 = allowDirectStyling(tNode, isClassBased, false);\n        return {\n            hasMapBindings: hasMapBindings,\n            hasPropBindings: hasPropBindings,\n            hasCollisions: hasCollisions,\n            hasTemplateBindings: hasTemplateBindings,\n            hasHostBindings: hasHostBindings,\n            allowDirectStyling: allowDirectStyling$1,\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_DEV_MODE = ((typeof ngDevMode === 'undefined' || !!ngDevMode) && initNgDevMode());\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    var LVIEW_COMPONENT_CACHE;\n    var LVIEW_EMBEDDED_CACHE;\n    var LVIEW_ROOT;\n    /**\n     * This function clones a blueprint and creates LView.\n     *\n     * Simple slice will keep the same type, and we need it to be LView\n     */\n    function cloneToLViewFromTViewBlueprint(tView) {\n        var debugTView = tView;\n        var lView = getLViewToClone(debugTView.type, tView.template && tView.template.name);\n        return lView.concat(tView.blueprint);\n    }\n    function getLViewToClone(type, name) {\n        switch (type) {\n            case 0 /* Root */:\n                if (LVIEW_ROOT === undefined)\n                    LVIEW_ROOT = new (createNamedArrayType('LRootView'))();\n                return LVIEW_ROOT;\n            case 1 /* Component */:\n                if (LVIEW_COMPONENT_CACHE === undefined)\n                    LVIEW_COMPONENT_CACHE = new Map();\n                var componentArray = LVIEW_COMPONENT_CACHE.get(name);\n                if (componentArray === undefined) {\n                    componentArray = new (createNamedArrayType('LComponentView' + nameSuffix(name)))();\n                    LVIEW_COMPONENT_CACHE.set(name, componentArray);\n                }\n                return componentArray;\n            case 2 /* Embedded */:\n                if (LVIEW_EMBEDDED_CACHE === undefined)\n                    LVIEW_EMBEDDED_CACHE = new Map();\n                var embeddedArray = LVIEW_EMBEDDED_CACHE.get(name);\n                if (embeddedArray === undefined) {\n                    embeddedArray = new (createNamedArrayType('LEmbeddedView' + nameSuffix(name)))();\n                    LVIEW_EMBEDDED_CACHE.set(name, embeddedArray);\n                }\n                return embeddedArray;\n        }\n        throw new Error('unreachable code');\n    }\n    function nameSuffix(text) {\n        if (text == null)\n            return '';\n        var index = text.lastIndexOf('_Template');\n        return '_' + (index === -1 ? text : text.substr(0, index));\n    }\n    /**\n     * This class is a debug version of Object literal so that we can have constructor name show up\n     * in\n     * debug tools in ngDevMode.\n     */\n    var TViewConstructor = /** @class */ (function () {\n        function TView(type, //\n        id, //\n        blueprint, //\n        template, //\n        queries, //\n        viewQuery, //\n        node, //\n        data, //\n        bindingStartIndex, //\n        expandoStartIndex, //\n        expandoInstructions, //\n        firstCreatePass, //\n        firstUpdatePass, //\n        staticViewQueries, //\n        staticContentQueries, //\n        preOrderHooks, //\n        preOrderCheckHooks, //\n        contentHooks, //\n        contentCheckHooks, //\n        viewHooks, //\n        viewCheckHooks, //\n        destroyHooks, //\n        cleanup, //\n        contentQueries, //\n        components, //\n        directiveRegistry, //\n        pipeRegistry, //\n        firstChild, //\n        schemas, //\n        consts) {\n            this.type = type;\n            this.id = id;\n            this.blueprint = blueprint;\n            this.template = template;\n            this.queries = queries;\n            this.viewQuery = viewQuery;\n            this.node = node;\n            this.data = data;\n            this.bindingStartIndex = bindingStartIndex;\n            this.expandoStartIndex = expandoStartIndex;\n            this.expandoInstructions = expandoInstructions;\n            this.firstCreatePass = firstCreatePass;\n            this.firstUpdatePass = firstUpdatePass;\n            this.staticViewQueries = staticViewQueries;\n            this.staticContentQueries = staticContentQueries;\n            this.preOrderHooks = preOrderHooks;\n            this.preOrderCheckHooks = preOrderCheckHooks;\n            this.contentHooks = contentHooks;\n            this.contentCheckHooks = contentCheckHooks;\n            this.viewHooks = viewHooks;\n            this.viewCheckHooks = viewCheckHooks;\n            this.destroyHooks = destroyHooks;\n            this.cleanup = cleanup;\n            this.contentQueries = contentQueries;\n            this.components = components;\n            this.directiveRegistry = directiveRegistry;\n            this.pipeRegistry = pipeRegistry;\n            this.firstChild = firstChild;\n            this.schemas = schemas;\n            this.consts = consts;\n        }\n        Object.defineProperty(TView.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                processTNodeChildren(this.firstChild, buf);\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TView;\n    }());\n    var TNodeConstructor = /** @class */ (function () {\n        function TNode(tView_, //\n        type, //\n        index, //\n        injectorIndex, //\n        directiveStart, //\n        directiveEnd, //\n        propertyBindings, //\n        flags, //\n        providerIndexes, //\n        tagName, //\n        attrs, //\n        localNames, //\n        initialInputs, //\n        inputs, //\n        outputs, //\n        tViews, //\n        next, //\n        projectionNext, //\n        child, //\n        parent, //\n        projection, //\n        styles, //\n        classes) {\n            this.tView_ = tView_;\n            this.type = type;\n            this.index = index;\n            this.injectorIndex = injectorIndex;\n            this.directiveStart = directiveStart;\n            this.directiveEnd = directiveEnd;\n            this.propertyBindings = propertyBindings;\n            this.flags = flags;\n            this.providerIndexes = providerIndexes;\n            this.tagName = tagName;\n            this.attrs = attrs;\n            this.localNames = localNames;\n            this.initialInputs = initialInputs;\n            this.inputs = inputs;\n            this.outputs = outputs;\n            this.tViews = tViews;\n            this.next = next;\n            this.projectionNext = projectionNext;\n            this.child = child;\n            this.parent = parent;\n            this.projection = projection;\n            this.styles = styles;\n            this.classes = classes;\n        }\n        Object.defineProperty(TNode.prototype, \"type_\", {\n            get: function () {\n                switch (this.type) {\n                    case 0 /* Container */:\n                        return 'TNodeType.Container';\n                    case 3 /* Element */:\n                        return 'TNodeType.Element';\n                    case 4 /* ElementContainer */:\n                        return 'TNodeType.ElementContainer';\n                    case 5 /* IcuContainer */:\n                        return 'TNodeType.IcuContainer';\n                    case 1 /* Projection */:\n                        return 'TNodeType.Projection';\n                    case 2 /* View */:\n                        return 'TNodeType.View';\n                    default:\n                        return 'TNodeType.???';\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"flags_\", {\n            get: function () {\n                var flags = [];\n                if (this.flags & 16 /* hasClassInput */)\n                    flags.push('TNodeFlags.hasClassInput');\n                if (this.flags & 8 /* hasContentQuery */)\n                    flags.push('TNodeFlags.hasContentQuery');\n                if (this.flags & 32 /* hasStyleInput */)\n                    flags.push('TNodeFlags.hasStyleInput');\n                if (this.flags & 256 /* hasInitialStyling */)\n                    flags.push('TNodeFlags.hasInitialStyling');\n                if (this.flags & 128 /* hasHostBindings */)\n                    flags.push('TNodeFlags.hasHostBindings');\n                if (this.flags & 2 /* isComponentHost */)\n                    flags.push('TNodeFlags.isComponentHost');\n                if (this.flags & 1 /* isDirectiveHost */)\n                    flags.push('TNodeFlags.isDirectiveHost');\n                if (this.flags & 64 /* isDetached */)\n                    flags.push('TNodeFlags.isDetached');\n                if (this.flags & 4 /* isProjected */)\n                    flags.push('TNodeFlags.isProjected');\n                return flags.join('|');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TNode.prototype, \"template_\", {\n            get: function () {\n                var buf = [];\n                buf.push('<', this.tagName || this.type_);\n                if (this.attrs) {\n                    for (var i = 0; i < this.attrs.length;) {\n                        var attrName = this.attrs[i++];\n                        if (typeof attrName == 'number') {\n                            break;\n                        }\n                        var attrValue = this.attrs[i++];\n                        buf.push(' ', attrName, '=\"', attrValue, '\"');\n                    }\n                }\n                buf.push('>');\n                processTNodeChildren(this.child, buf);\n                buf.push('</', this.tagName || this.type_, '>');\n                return buf.join('');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TNode;\n    }());\n    function processTNodeChildren(tNode, buf) {\n        while (tNode) {\n            buf.push(tNode.template_);\n            tNode = tNode.next;\n        }\n    }\n    var TViewData = NG_DEV_MODE && createNamedArrayType('TViewData') || null;\n    var TVIEWDATA_EMPTY; // can't initialize here or it will not be tree shaken, because `LView`\n    // constructor could have side-effects.\n    /**\n     * This function clones a blueprint and creates TData.\n     *\n     * Simple slice will keep the same type, and we need it to be TData\n     */\n    function cloneToTViewData(list) {\n        if (TVIEWDATA_EMPTY === undefined)\n            TVIEWDATA_EMPTY = new TViewData();\n        return TVIEWDATA_EMPTY.concat(list);\n    }\n    var LViewBlueprint = NG_DEV_MODE && createNamedArrayType('LViewBlueprint') || null;\n    var MatchesArray = NG_DEV_MODE && createNamedArrayType('MatchesArray') || null;\n    var TViewComponents = NG_DEV_MODE && createNamedArrayType('TViewComponents') || null;\n    var TNodeLocalNames = NG_DEV_MODE && createNamedArrayType('TNodeLocalNames') || null;\n    var TNodeInitialInputs = NG_DEV_MODE && createNamedArrayType('TNodeInitialInputs') || null;\n    var TNodeInitialData = NG_DEV_MODE && createNamedArrayType('TNodeInitialData') || null;\n    var LCleanup = NG_DEV_MODE && createNamedArrayType('LCleanup') || null;\n    var TCleanup = NG_DEV_MODE && createNamedArrayType('TCleanup') || null;\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements\n     * (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element\n     * itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = '>' + node.innerHTML + '<';\n                return (outerHTML.split(innerHTML)[0]) + '>';\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"html\", {\n            get: function () { return (this.nodes || []).map(function (node) { return toHtml(node.native, true); }).join(''); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into\n             * a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tView\", {\n            get: function () { return this._raw_lView[TVIEW]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"cleanup\", {\n            get: function () { return this._raw_lView[CLEANUP]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"injector\", {\n            get: function () { return this._raw_lView[INJECTOR$1]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"rendererFactory\", {\n            get: function () { return this._raw_lView[RENDERER_FACTORY]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"renderer\", {\n            get: function () { return this._raw_lView[RENDERER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"sanitizer\", {\n            get: function () { return this._raw_lView[SANITIZER]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childHead\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_HEAD]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lView[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childTail\", {\n            get: function () { return toDebug(this._raw_lView[CHILD_TAIL]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"declarationView\", {\n            get: function () { return toDebug(this._raw_lView[DECLARATION_VIEW]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lView[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"tHost\", {\n            get: function () { return this._raw_lView[T_HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                debugNodes.push(buildDebugNode(tNodeCursor, lView, tNodeCursor.index));\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    function buildDebugNode(tNode, lView, nodeIndex) {\n        var rawValue = lView[nodeIndex];\n        var native = unwrapRNode(rawValue);\n        var componentLViewDebug = toDebug(readLViewValue(rawValue));\n        var styles = isStylingContext(tNode.styles) ?\n            new NodeStylingDebug(tNode.styles, tNode, lView, false) :\n            null;\n        var classes = isStylingContext(tNode.classes) ?\n            new NodeStylingDebug(tNode.classes, tNode, lView, true) :\n            null;\n        return {\n            html: toHtml(native),\n            native: native, styles: styles, classes: classes,\n            nodes: toDebugNodes(tNode.child, lView),\n            component: componentLViewDebug,\n        };\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return getLContainerActiveIndex(this._raw_lContainer); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"hasTransplantedViews\", {\n            get: function () {\n                return (this._raw_lContainer[ACTIVE_INDEX] & 1 /* HAS_TRANSPLANTED_VIEWS */) ===\n                    1 /* HAS_TRANSPLANTED_VIEWS */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"movedViews\", {\n            get: function () { return this._raw_lContainer[MOVED_VIEWS]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"next\", {\n            get: function () { return toDebug(this._raw_lContainer[NEXT]); },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, lView) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions !== null) {\n                var bindingRootIndex = setBindingIndex(tView.expandoStartIndex);\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            // It is important that this be called first before the actual instructions\n                            // are run because this way the first directive ID value is not zero.\n                            incrementActiveDirectiveId();\n                            setBindingIndex(bindingRootIndex);\n                            var hostCtx = unwrapRNode(lView[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes all content queries declared by directives in a given view */\n    function refreshContentQueries(tView, lView) {\n        var contentQueries = tView.contentQueries;\n        if (contentQueries !== null) {\n            for (var i = 0; i < contentQueries.length; i += 2) {\n                var queryStartIdx = contentQueries[i];\n                var directiveDefIdx = contentQueries[i + 1];\n                if (directiveDefIdx !== -1) {\n                    var directiveDef = tView.data[directiveDefIdx];\n                    ngDevMode &&\n                        assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                    setCurrentQueryIndex(queryStartIdx);\n                    directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n                }\n            }\n        }\n    }\n    /** Refreshes child components in the current view (update mode). */\n    function refreshChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            refreshComponent(hostLView, components[i]);\n        }\n    }\n    /** Renders child components in the current view (creation mode). */\n    function renderChildComponents(hostLView, components) {\n        for (var i = 0; i < components.length; i++) {\n            renderComponent(hostLView, components[i]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param renderer A renderer to use\n     * @returns the element created\n     */\n    function elementCreate(name, renderer, namespace) {\n        if (isProceduralRenderer(renderer)) {\n            return renderer.createElement(name, namespace);\n        }\n        else {\n            return namespace === null ? renderer.createElement(name) :\n                renderer.createElementNS(namespace, name);\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = ngDevMode ? cloneToLViewFromTViewBlueprint(tView) : tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        lView[DECLARATION_COMPONENT_VIEW] = tView.type == 2 /* Embedded */ ?\n            (parentLView === null ? null : parentLView[DECLARATION_COMPONENT_VIEW]) :\n            lView;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function getOrCreateTNode(tView, tHostNode, index, type, name, attrs) {\n        // Keep this function short, so that the VM will inline it.\n        var adjustedIndex = index + HEADER_OFFSET;\n        var tNode = tView.data[adjustedIndex] ||\n            createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs);\n        setPreviousOrParentTNode(tNode, true);\n        return tNode;\n    }\n    function createTNodeAtIndex(tView, tHostNode, adjustedIndex, type, name, attrs) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var parent = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && parent !== tHostNode;\n        var tParentNode = parentInSameView ? parent : null;\n        var tNode = tView.data[adjustedIndex] =\n            createTNode(tView, tParentNode, type, adjustedIndex, name, attrs);\n        // Assign a pointer to the first child node of a given view. The first node is not always the one\n        // at index 0, in case of i18n, index 0 can be the instruction `i18nStart` and the first node has\n        // the index 1 or more, so we can't just check node index.\n        if (tView.firstChild === null) {\n            tView.firstChild = tNode;\n        }\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tView, tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     *\n     * @param view The LView containing the blueprint to adjust\n     * @param numSlotsToAlloc The number of slots to alloc in the LView, should be >0\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        ngDevMode && assertGreaterThan(numSlotsToAlloc, 0, 'The number of slots to alloc should be greater than 0');\n        if (numSlotsToAlloc > 0) {\n            var tView = view[TVIEW];\n            if (tView.firstCreatePass) {\n                for (var i = 0; i < numSlotsToAlloc; i++) {\n                    tView.blueprint.push(null);\n                    tView.data.push(null);\n                    view.push(null);\n                }\n                // We should only increment the expando start index if there aren't already directives\n                // and injectors saved in the \"expando\" section\n                if (!tView.expandoInstructions) {\n                    tView.expandoStartIndex += numSlotsToAlloc;\n                }\n                else {\n                    // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                    // bindings know that they should skip x slots\n                    tView.expandoInstructions.push(numSlotsToAlloc);\n                }\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Processes a view in the creation mode. This includes a number of steps in a specific order:\n     * - creating view query functions (if any);\n     * - executing a template function in the creation mode;\n     * - updating static queries (if any);\n     * - creating child components defined in a given view.\n     */\n    function renderView(lView, tView, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), true, 'Should be run in creation mode');\n        enterView(lView, lView[T_HOST]);\n        try {\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(1 /* Create */, viewQuery, context);\n            }\n            // Execute a template associated with this view, if it exists. A template function might not be\n            // defined for the root component views.\n            var templateFn = tView.template;\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 1 /* Create */, context);\n            }\n            // This needs to be set before children are processed to support recursive components.\n            // This must be set to false immediately after the first creation run because in an\n            // ngFor loop, all the views will be created together before update mode runs and turns\n            // off firstCreatePass. If we don't set it here, instances will perform directive\n            // matching, etc again and again.\n            if (tView.firstCreatePass) {\n                tView.firstCreatePass = false;\n            }\n            // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n            // content queries are resolved during change detection (i.e. update mode), after embedded\n            // views are refreshed (see block above).\n            if (tView.staticContentQueries) {\n                refreshContentQueries(tView, lView);\n            }\n            // We must materialize query results before child components are processed\n            // in case a child component has projected a container. The LContainer needs\n            // to exist so the embedded views are properly attached by the container.\n            if (tView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, tView.viewQuery, context);\n            }\n            // Render child component views.\n            var components = tView.components;\n            if (components !== null) {\n                renderChildComponents(lView, components);\n            }\n        }\n        finally {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n            leaveView();\n        }\n    }\n    /**\n     * Processes a view in update mode. This includes a number of steps in a specific order:\n     * - executing a template function in update mode;\n     * - executing hooks;\n     * - refreshing queries;\n     * - setting host bindings;\n     * - refreshing child (embedded and component) views.\n     */\n    function refreshView(lView, tView, templateFn, context) {\n        ngDevMode && assertEqual(isCreationMode(lView), false, 'Should be run in update mode');\n        enterView(lView, lView[T_HOST]);\n        var flags = lView[FLAGS];\n        try {\n            resetPreOrderHookFlags(lView);\n            setBindingIndex(tView.bindingStartIndex);\n            if (templateFn !== null) {\n                executeTemplate(lView, templateFn, 2 /* Update */, context);\n            }\n            var checkNoChangesMode = getCheckNoChangesMode();\n            var hooksInitPhaseCompleted = (flags & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            // execute pre-order hooks (OnInit, OnChanges, DoChanges)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var preOrderCheckHooks = tView.preOrderCheckHooks;\n                    if (preOrderCheckHooks !== null) {\n                        executeCheckHooks(lView, preOrderCheckHooks, null);\n                    }\n                }\n                else {\n                    var preOrderHooks = tView.preOrderHooks;\n                    if (preOrderHooks !== null) {\n                        executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                    }\n                    incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n                }\n            }\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            if (tView.contentQueries !== null) {\n                refreshContentQueries(tView, lView);\n            }\n            // execute content hooks (AfterContentInit, AfterContentChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var contentCheckHooks = tView.contentCheckHooks;\n                    if (contentCheckHooks !== null) {\n                        executeCheckHooks(lView, contentCheckHooks);\n                    }\n                }\n                else {\n                    var contentHooks = tView.contentHooks;\n                    if (contentHooks !== null) {\n                        executeInitAndCheckHooks(lView, contentHooks, 1 /* AfterContentInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 1 /* AfterContentInitHooksToBeRun */);\n                }\n            }\n            setHostBindings(tView, lView);\n            // Refresh child component views.\n            var components = tView.components;\n            if (components !== null) {\n                refreshChildComponents(lView, components);\n            }\n            // View queries must execute after refreshing child components because a template in this view\n            // could be inserted in a child component. If the view query executes before child component\n            // refresh, the template might not yet be inserted.\n            var viewQuery = tView.viewQuery;\n            if (viewQuery !== null) {\n                executeViewQueryFn(2 /* Update */, viewQuery, context);\n            }\n            // execute view hooks (AfterViewInit, AfterViewChecked)\n            // PERF WARNING: do NOT extract this to a separate function without running benchmarks\n            if (!checkNoChangesMode) {\n                if (hooksInitPhaseCompleted) {\n                    var viewCheckHooks = tView.viewCheckHooks;\n                    if (viewCheckHooks !== null) {\n                        executeCheckHooks(lView, viewCheckHooks);\n                    }\n                }\n                else {\n                    var viewHooks = tView.viewHooks;\n                    if (viewHooks !== null) {\n                        executeInitAndCheckHooks(lView, viewHooks, 2 /* AfterViewInitHooksToBeRun */);\n                    }\n                    incrementInitPhaseFlags(lView, 2 /* AfterViewInitHooksToBeRun */);\n                }\n            }\n        }\n        finally {\n            if (tView.firstUpdatePass === true) {\n                tView.firstUpdatePass = false;\n            }\n            lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n            leaveViewProcessExit();\n        }\n    }\n    function renderComponentOrTemplate(hostView, templateFn, context) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            var tView = hostView[TVIEW];\n            if (creationModeIsActive) {\n                renderView(hostView, tView, context);\n            }\n            refreshView(hostView, tView, templateFn, context);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n        }\n    }\n    function executeTemplate(lView, templateFn, rf, context) {\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            if (rf & 2 /* Update */ && lView.length > HEADER_OFFSET) {\n                // When we're updating, inherently select 0 so we don't\n                // have to generate that instruction for most update blocks.\n                selectIndexInternal(lView, 0, getCheckNoChangesMode());\n            }\n            templateFn(rf, context);\n        }\n        finally {\n            if (hasActiveElementFlag(1 /* RunExitFn */)) {\n                executeElementExitFn();\n            }\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances.\n     */\n    function createDirectivesInstances(tView, lView, tNode) {\n        if (!getBindingsEnabled())\n            return;\n        instantiateAllDirectives(tView, lView, tNode, getNativeByTNode(tNode, lView));\n        if ((tNode.flags & 128 /* hasHostBindings */) === 128 /* hasHostBindings */) {\n            invokeDirectivesHostBindings(tView, lView, tNode);\n        }\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTComponentView(def) {\n        return def.tView ||\n            (def.tView = createTView(1 /* Component */, -1, def.template, def.decls, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas, def.consts));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     * @param consts Constants for this view\n     */\n    function createTView(type, viewIndex, templateFn, decls, vars, directives, pipes, viewQuery, schemas, consts) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + decls;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = ngDevMode ?\n            new TViewConstructor(type, viewIndex, // id: number,\n            blueprint, // blueprint: LView,\n            templateFn, // template: ComponentTemplate<{}>|null,\n            null, // queries: TQueries|null\n            viewQuery, // viewQuery: ViewQueriesFunction<{}>|null,\n            null, // node: TViewNode|TElementNode|null,\n            cloneToTViewData(blueprint).fill(null, bindingStartIndex), // data: TData,\n            bindingStartIndex, // bindingStartIndex: number,\n            initialViewLength, // expandoStartIndex: number,\n            null, // expandoInstructions: ExpandoInstructions|null,\n            true, // firstCreatePass: boolean,\n            true, // firstUpdatePass: boolean,\n            false, // staticViewQueries: boolean,\n            false, // staticContentQueries: boolean,\n            null, // preOrderHooks: HookData|null,\n            null, // preOrderCheckHooks: HookData|null,\n            null, // contentHooks: HookData|null,\n            null, // contentCheckHooks: HookData|null,\n            null, // viewHooks: HookData|null,\n            null, // viewCheckHooks: HookData|null,\n            null, // destroyHooks: HookData|null,\n            null, // cleanup: any[]|null,\n            null, // contentQueries: number[]|null,\n            null, // components: number[]|null,\n            typeof directives === 'function' ?\n                directives() :\n                directives, // directiveRegistry: DirectiveDefList|null,\n            typeof pipes === 'function' ? pipes() : pipes, // pipeRegistry: PipeDefList|null,\n            null, // firstChild: TNode|null,\n            schemas, // schemas: SchemaMetadata[]|null,\n            consts) : // consts: TConstants|null\n            {\n                type: type,\n                id: viewIndex,\n                blueprint: blueprint,\n                template: templateFn,\n                queries: null,\n                viewQuery: viewQuery,\n                node: null,\n                data: blueprint.slice().fill(null, bindingStartIndex),\n                bindingStartIndex: bindingStartIndex,\n                expandoStartIndex: initialViewLength,\n                expandoInstructions: null,\n                firstCreatePass: true,\n                firstUpdatePass: true,\n                staticViewQueries: false,\n                staticContentQueries: false,\n                preOrderHooks: null,\n                preOrderCheckHooks: null,\n                contentHooks: null,\n                contentCheckHooks: null,\n                viewHooks: null,\n                viewCheckHooks: null,\n                destroyHooks: null,\n                cleanup: null,\n                contentQueries: null,\n                components: null,\n                directiveRegistry: typeof directives === 'function' ? directives() : directives,\n                pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n                firstChild: null,\n                schemas: schemas,\n                consts: consts,\n            };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = ngDevMode ? new LViewBlueprint() : [];\n        for (var i = 0; i < initialViewLength; i++) {\n            blueprint.push(i < bindingStartIndex ? null : NO_CHANGE);\n        }\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    function assertHostNodeExists(rElement, elementOrSelector) {\n        if (!rElement) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param rendererFactory Factory function to create renderer instance.\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     * @param encapsulation View Encapsulation defined for component that requests host element.\n     */\n    function locateHostElement(rendererFactory, elementOrSelector, encapsulation) {\n        var renderer = rendererFactory.createRenderer(null, null);\n        if (isProceduralRenderer(renderer)) {\n            // When using native Shadow DOM, do not clear host element to allow native slot projection\n            var preserveContent = encapsulation === exports.ViewEncapsulation.ShadowDom;\n            return renderer.selectRootElement(elementOrSelector, preserveContent);\n        }\n        var rElement = typeof elementOrSelector === 'string' ?\n            renderer.querySelector(elementOrSelector) :\n            elementOrSelector;\n        ngDevMode && assertHostNodeExists(rElement, elementOrSelector);\n        // Always clear host element's content when Renderer3 is in use. For procedural renderer case we\n        // make it depend on whether ShadowDom encapsulation is used (in which case the content should be\n        // preserved to allow native slot projection). ShadowDom encapsulation requires procedural\n        // renderer, and procedural renderer case is handled above.\n        rElement.textContent = '';\n        return rElement;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstCreatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstCreatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param tView `TView` to which this `TNode` belongs (used only in `ngDevMode`)\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tView, tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        var injectorIndex = tParent ? tParent.injectorIndex : -1;\n        return ngDevMode ? new TNodeConstructor(tView, // tView_: TView\n        type, // type: TNodeType\n        adjustedIndex, // index: number\n        injectorIndex, // injectorIndex: number\n        -1, // directiveStart: number\n        -1, // directiveEnd: number\n        null, // propertyBindings: number[]|null\n        0, // flags: TNodeFlags\n        0, // providerIndexes: TNodeProviderIndexes\n        tagName, // tagName: string|null\n        attrs, // attrs: (string|AttributeMarker|(string|SelectorFlags)[])[]|null\n        null, // localNames: (string|number)[]|null\n        undefined, // initialInputs: (string[]|null)[]|null|undefined\n        undefined, // inputs: PropertyAliases|null|undefined\n        undefined, // outputs: PropertyAliases|null|undefined\n        null, // tViews: ITView|ITView[]|null\n        null, // next: ITNode|null\n        null, // projectionNext: ITNode|null\n        null, // child: ITNode|null\n        tParent, // parent: TElementNode|TContainerNode|null\n        null, // projection: number|(ITNode|RNode[])[]|null\n        null, // styles: TStylingContext|null\n        null) :\n            {\n                type: type,\n                index: adjustedIndex,\n                injectorIndex: injectorIndex,\n                directiveStart: -1,\n                directiveEnd: -1,\n                propertyBindings: null,\n                flags: 0,\n                providerIndexes: 0,\n                tagName: tagName,\n                attrs: attrs,\n                localNames: null,\n                initialInputs: undefined,\n                inputs: undefined,\n                outputs: undefined,\n                tViews: null,\n                next: null,\n                projectionNext: null,\n                child: null,\n                parent: tParent,\n                projection: null,\n                styles: null,\n                classes: null,\n            };\n    }\n    function generatePropertyAliases(inputAliasMap, directiveDefIdx, propStore) {\n        for (var publicName in inputAliasMap) {\n            if (inputAliasMap.hasOwnProperty(publicName)) {\n                propStore = propStore === null ? {} : propStore;\n                var internalName = inputAliasMap[publicName];\n                if (propStore.hasOwnProperty(publicName)) {\n                    propStore[publicName].push(directiveDefIdx, publicName, internalName);\n                }\n                else {\n                    (propStore[publicName] = [directiveDefIdx, publicName, internalName]);\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Initializes data structures required to work with directive outputs and outputs.\n     * Initialization is done for all directives matched on a given TNode.\n     */\n    function initializeInputAndOutputAliases(tView, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var defs = tView.data;\n        var tNodeAttrs = tNode.attrs;\n        var inputsFromAttrs = ngDevMode ? new TNodeInitialInputs() : [];\n        var inputsStore = null;\n        var outputsStore = null;\n        for (var i = start; i < end; i++) {\n            var directiveDef = defs[i];\n            var directiveInputs = directiveDef.inputs;\n            inputsFromAttrs.push(tNodeAttrs !== null ? generateInitialInputs(directiveInputs, tNodeAttrs) : null);\n            inputsStore = generatePropertyAliases(directiveInputs, i, inputsStore);\n            outputsStore = generatePropertyAliases(directiveDef.outputs, i, outputsStore);\n        }\n        if (inputsStore !== null) {\n            if (inputsStore.hasOwnProperty('class') || inputsStore.hasOwnProperty('className')) {\n                tNode.flags |= 16 /* hasClassInput */;\n            }\n            if (inputsStore.hasOwnProperty('style')) {\n                tNode.flags |= 32 /* hasStyleInput */;\n            }\n        }\n        tNode.initialInputs = inputsFromAttrs;\n        tNode.inputs = inputsStore;\n        tNode.outputs = outputsStore;\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     *\n     * Performance note: this function is written as a series of if checks (instead of, say, a property\n     * object lookup) for performance reasons - the series of `if` checks seems to be the fastest way of\n     * mapping property names. Do NOT change without benchmarking.\n     *\n     * Note: this mapping has to be kept in sync with the equally named mapping in the template\n     * type-checking machinery of ngtsc.\n     */\n    function mapPropName(name) {\n        if (name === 'class')\n            return 'className';\n        if (name === 'for')\n            return 'htmlFor';\n        if (name === 'formaction')\n            return 'formAction';\n        if (name === 'innerHtml')\n            return 'innerHTML';\n        if (name === 'readonly')\n            return 'readOnly';\n        if (name === 'tabindex')\n            return 'tabIndex';\n        return name;\n    }\n    function elementPropertyInternal(lView, index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData = tNode.inputs;\n        var dataValue;\n        if (!nativeOnly && inputData != null && (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponentHost(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = mapPropName(propName);\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                if (!validateProperty(lView, element, propName, tNode)) {\n                    // Return here since we only log warnings for unknown properties.\n                    warnAboutUnknownProperty(propName, tNode);\n                    return;\n                }\n                ngDevMode.rendererSetProperty++;\n            }\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the\n            // property is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                warnAboutUnknownProperty(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentLViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, dataValue, value) {\n        if (type === 3 /* Element */ || type === 0 /* Container */) {\n            /**\n             * dataValue is an array containing runtime input or output names for the directives:\n             * i+0: directive instance index\n             * i+1: publicName\n             * i+2: privateName\n             *\n             * e.g. [0, 'change', 'change-minified']\n             * we want to set the reflected property with the privateName: dataValue[i+2]\n             */\n            for (var i = 0; i < dataValue.length; i += 3) {\n                setNgReflectProperty(lView, element, type, dataValue[i + 2], value);\n            }\n        }\n    }\n    function validateProperty(hostView, element, propName, tNode) {\n        // The property is considered valid if the element matches the schema, it exists on the element\n        // or it is synthetic, and we are in a browser context (web worker nodes should be skipped).\n        return matchingSchemas(hostView, tNode.tagName) || propName in element ||\n            isAnimationProp(propName) || typeof Node !== 'function' || !(element instanceof Node);\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Logs a warning that a property is not supported on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the property.\n     */\n    function warnAboutUnknownProperty(propName, tNode) {\n        console.warn(\"Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, lView, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, lView, def);\n        }\n        var directive = getNodeInjectable(tView.data, lView, lView.length - 1, rootTNode);\n        attachPatchData(directive, lView);\n        var native = getNativeByTNode(rootTNode, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, lView, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in\n        // tsickle.\n        ngDevMode && assertFirstCreatePass(tView);\n        if (!getBindingsEnabled())\n            return false;\n        var directives = findDirectiveMatches(tView, lView, tNode);\n        var exportsMap = localRefs === null ? null : { '': -1 };\n        var hasDirectives = false;\n        if (directives !== null) {\n            hasDirectives = true;\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, lView, def);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                if (def.contentQueries !== null)\n                    tNode.flags |= 8 /* hasContentQuery */;\n                if (def.hostBindings !== null)\n                    tNode.flags |= 128 /* hasHostBindings */;\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n            initializeInputAndOutputAliases(tView, tNode);\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        return hasDirectives;\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode, native) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstCreatePass) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        attachPatchData(native, lView);\n        var initialInputs = tNode.initialInputs;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var isComponent = isComponentDef(def);\n            if (isComponent) {\n                ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */);\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            attachPatchData(directive, lView);\n            if (initialInputs !== null) {\n                setInputsFromAttrs(lView, i - start, directive, def, tNode, initialInputs);\n            }\n            if (isComponent) {\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                componentView[CONTEXT] = directive;\n            }\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstCreatePass = tView.firstCreatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    // It is important that this be called first before the actual instructions\n                    // are run because this way the first directive ID value is not zero.\n                    incrementActiveDirectiveId();\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass);\n                }\n                else if (firstCreatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(null);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstCreatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstCreatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstCreatePass, true, 'Expando block should only be generated on first create pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 4 /* ElementContainer */, 0 /* Container */);\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = ngDevMode ? new MatchesArray() : []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, viewData), tView, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 2 /* isComponentHost */)\n                            throwMultipleComponentError(tNode);\n                        markAsComponentHost(tView, tNode);\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /**\n     * Marks a given TNode as a component's host. This consists of:\n     * - setting appropriate TNode flags;\n     * - storing index of component's host element so it will be queued for view refresh during CD.\n    */\n    function markAsComponentHost(tView, hostTNode) {\n        ngDevMode && assertFirstCreatePass(tView);\n        hostTNode.flags |= 2 /* isComponentHost */;\n        (tView.components || (tView.components = ngDevMode ? new TViewComponents() : [])).push(hostTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames =\n                ngDevMode ? new TNodeLocalNames() : [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        tNode.flags |= 1 /* isDirectiveHost */;\n        // When the first directive is created on a node, save the index\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def) {\n        tView.data.push(def);\n        var directiveFactory = def.factory || (def.factory = getFactoryDef(def.type, true));\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, hostTNode, def) {\n        var native = getNativeByTNode(hostTNode, lView);\n        var tView = getOrCreateTComponentView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, native, hostTNode, rendererFactory, rendererFactory.createRenderer(native, def)));\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[hostTNode.index] = componentView;\n    }\n    function elementAttributeInternal(index, name, value, lView, sanitizer, namespace) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && validateAgainstEventAttributes(name);\n        var element = getNativeByIndex(index, lView);\n        var renderer = lView[RENDERER];\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                element.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            var tNode = getTNode(index, lView);\n            var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setAttribute(element, name, strValue, namespace);\n            }\n            else {\n                namespace ? element.setAttributeNS(namespace, name, strValue) :\n                    element.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param lView Current LView that is being processed.\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(lView, directiveIndex, instance, def, tNode, initialInputData) {\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs !== null) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput !== null) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param inputs The list of inputs from the directive def\n     * @param attrs The static attrs on this node\n     */\n    function generateInitialInputs(inputs, attrs) {\n        var inputsToStore = null;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            if (inputs.hasOwnProperty(attrName)) {\n                if (inputsToStore === null)\n                    inputsToStore = [];\n                inputsToStore.push(attrName, inputs[attrName], attrs[i + 1]);\n            }\n            i += 2;\n        }\n        return inputsToStore;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    // Not sure why I need to do `any` here but TS complains later.\n    var LContainerArray = ((typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode()) &&\n        createNamedArrayType('LContainer');\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode) {\n        ngDevMode && assertLView(currentView);\n        ngDevMode && !isProceduralRenderer(currentView[RENDERER]) && assertDomNode(native);\n        // https://jsperf.com/array-literal-vs-new-array-really\n        var lContainer = new (ngDevMode ? LContainerArray : Array)(hostNative, // host native\n        true, // Boolean `true` in this position signifies that this is an `LContainer`\n        -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */ << 1 /* SHIFT */, // active index\n        currentView, // parent\n        null, // next\n        null, // queries\n        tNode, // t_host\n        native, // native,\n        null);\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes\n     * them by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        var viewOrContainer = lView[CHILD_HEAD];\n        while (viewOrContainer !== null) {\n            // Note: viewOrContainer can be an LView or an LContainer instance, but here we are only\n            // interested in LContainer\n            var activeIndexFlag = void 0;\n            if (isLContainer(viewOrContainer) &&\n                (activeIndexFlag = viewOrContainer[ACTIVE_INDEX]) >> 1 /* SHIFT */ ===\n                    -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < viewOrContainer.length; i++) {\n                    var embeddedLView = viewOrContainer[i];\n                    var embeddedTView = embeddedLView[TVIEW];\n                    ngDevMode && assertDefined(embeddedTView, 'TView must be allocated');\n                    refreshView(embeddedLView, embeddedTView, embeddedTView.template, embeddedLView[CONTEXT]);\n                }\n                if ((activeIndexFlag & 1 /* HAS_TRANSPLANTED_VIEWS */) !== 0) {\n                    // We should only CD moved views if the component where they were inserted does not match\n                    // the component where they were declared and insertion is on-push. Moved views also\n                    // contains intra component moves, or check-always which need to be skipped.\n                    refreshTransplantedViews(viewOrContainer, lView[DECLARATION_COMPONENT_VIEW]);\n                }\n            }\n            viewOrContainer = viewOrContainer[NEXT];\n        }\n    }\n    /**\n     * Refresh transplanted LViews.\n     *\n     * See: `ActiveIndexFlag.HAS_TRANSPLANTED_VIEWS` and `LView[DECLARATION_COMPONENT_VIEW]` for\n     * explanation of transplanted views.\n     *\n     * @param lContainer The `LContainer` which has transplanted views.\n     * @param declaredComponentLView The `lContainer` parent component `LView`.\n     */\n    function refreshTransplantedViews(lContainer, declaredComponentLView) {\n        var movedViews = lContainer[MOVED_VIEWS];\n        ngDevMode && assertDefined(movedViews, 'Transplanted View flags set but missing MOVED_VIEWS');\n        for (var i = 0; i < movedViews.length; i++) {\n            var movedLView = movedViews[i];\n            var insertionLContainer = movedLView[PARENT];\n            ngDevMode && assertLContainer(insertionLContainer);\n            var insertedComponentLView = insertionLContainer[PARENT][DECLARATION_COMPONENT_VIEW];\n            ngDevMode && assertDefined(insertedComponentLView, 'Missing LView');\n            // Check if we have a transplanted view by compering declaration and insertion location.\n            if (insertedComponentLView !== declaredComponentLView) {\n                // Yes the `LView` is transplanted.\n                // Here we would like to know if the component is `OnPush`. We don't have\n                // explicit `OnPush` flag instead we set `CheckAlways` to false (which is `OnPush`)\n                // Not to be confused with `ManualOnPush` which is used with wether a DOM event\n                // should automatically mark a view as dirty.\n                var insertionComponentIsOnPush = (insertedComponentLView[FLAGS] & 16 /* CheckAlways */) === 0;\n                if (insertionComponentIsOnPush) {\n                    // Here we know that the template has been transplanted across components and is\n                    // on-push (not just moved within a component). If the insertion is marked dirty, then\n                    // there is no need to CD here as we will do it again later when we get to insertion\n                    // point.\n                    var movedTView = movedLView[TVIEW];\n                    ngDevMode && assertDefined(movedTView, 'TView must be allocated');\n                    refreshView(movedLView, movedTView, movedTView.template, movedLView[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param componentHostIdx  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function refreshComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), false, 'Should be run in update mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        // Only attached components that are CheckAlways or OnPush and dirty should be refreshed\n        if (viewAttachedToChangeDetector(componentView) &&\n            componentView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            var tView = componentView[TVIEW];\n            refreshView(componentView, tView, tView.template, componentView[CONTEXT]);\n        }\n    }\n    function renderComponent(hostLView, componentHostIdx) {\n        ngDevMode && assertEqual(isCreationMode(hostLView), true, 'Should be run in creation mode');\n        var componentView = getComponentLViewByIndex(componentHostIdx, hostLView);\n        syncViewWithBlueprint(componentView);\n        renderView(componentView, componentView[TVIEW], componentView[CONTEXT]);\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView.push(componentTView.blueprint[i]);\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer\n        // to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out\n        // of\n        // order, the change detection will run out of order, as the act of retrieving the the\n        // LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_1 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_1) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_1;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            var lView = readPatchedLView(rootComponent);\n            var tView = lView[TVIEW];\n            renderComponentOrTemplate(lView, tView.template, rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            var tView = view[TVIEW];\n            refreshView(view, tView, tView.template, context);\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    function executeViewQueryFn(flags, viewQueryFn, component) {\n        ngDevMode && assertDefined(viewQueryFn, 'View queries function to execute must be defined.');\n        setCurrentQueryIndex(0);\n        viewQueryFn(flags, component);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Stores meta-data for a property binding to be used by TestBed's `DebugElement.properties`.\n     *\n     * In order to support TestBed's `DebugElement.properties` we need to save, for each binding:\n     * - a bound property name;\n     * - a static parts of interpolated strings;\n     *\n     * A given property metadata is saved at the binding's index in the `TView.data` (in other words, a\n     * property binding metadata will be stored in `TView.data` at the same index as a bound value in\n     * `LView`). Metadata are represented as `INTERPOLATION_DELIMITER`-delimited string with the\n     * following format:\n     * - `propertyName` for bound properties;\n     * - `propertyName�prefix�interpolation_static_part1�..interpolation_static_partN�suffix` for\n     * interpolated properties.\n     *\n     * @param tData `TData` where meta-data will be saved;\n     * @param nodeIndex index of a `TNode` that is a target of the binding;\n     * @param propertyName bound property name;\n     * @param bindingIndex binding index in `LView`\n     * @param interpolationParts static interpolation parts (for property interpolations)\n     */\n    function storePropertyBindingMetadata(tData, nodeIndex, propertyName, bindingIndex) {\n        var interpolationParts = [];\n        for (var _i = 4; _i < arguments.length; _i++) {\n            interpolationParts[_i - 4] = arguments[_i];\n        }\n        // Binding meta-data are stored only the first time a given property instruction is processed.\n        // Since we don't have a concept of the \"first update pass\" we need to check for presence of the\n        // binding meta-data to decide if one should be stored (or if was stored already).\n        if (tData[bindingIndex] === null) {\n            var tNode = tData[nodeIndex + HEADER_OFFSET];\n            if (tNode.inputs == null || !tNode.inputs[propertyName]) {\n                var propBindingIdxs = tNode.propertyBindings || (tNode.propertyBindings = []);\n                propBindingIdxs.push(bindingIndex);\n                var bindingMetadata = propertyName;\n                if (interpolationParts.length > 0) {\n                    bindingMetadata +=\n                        INTERPOLATION_DELIMITER + interpolationParts.join(INTERPOLATION_DELIMITER);\n                }\n                tData[bindingIndex] = bindingMetadata;\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = ngDevMode ? new LCleanup() : []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = ngDevMode ? new TCleanup() : []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    /**\n     * Updates a text binding at a given index in a given LView.\n     */\n    function textBindingInternal(lView, index, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'value should not be NO_CHANGE');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var element = getNativeByIndex(index, lView);\n        ngDevMode && assertDefined(element, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        var renderer = lView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.setValue(element, value) : element.textContent = value;\n    }\n    /**\n     * Renders all initial styling (class and style values) on to the element from the tNode.\n     *\n     * All initial styling data (i.e. any values extracted from the `style` or `class` attributes\n     * on an element) are collected into the `tNode.styles` and `tNode.classes` data structures.\n     * These values are populated during the creation phase of an element and are then later\n     * applied once the element is instantiated. This function applies each of the static\n     * style and class entries to the element.\n     */\n    function renderInitialStyling(renderer, native, tNode, append) {\n        if (tNode.classes !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.classes, true);\n            }\n            else {\n                var classes = getInitialStylingValue(tNode.classes);\n                writeStylingValueDirectly(renderer, native, classes, true, null);\n            }\n        }\n        if (tNode.styles !== null) {\n            if (append) {\n                renderStylingMap(renderer, native, tNode.styles, false);\n            }\n            else {\n                var styles = getInitialStylingValue(tNode.styles);\n                writeStylingValueDirectly(renderer, native, styles, false, null);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var lView = getLView();\n        var tNode = containerInternal(lView, index, null, null);\n        if (lView[TVIEW].firstCreatePass) {\n            tNode.tViews = [];\n        }\n        setIsNotParent();\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param decls The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrsIndex Index of template attributes in the `consts` array.\n     * @param localRefs Index of the local references in the `consts` array.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, decls, vars, tagName, attrsIndex, localRefsIndex, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(lView, index, tagName || null, getConstant(tViewConsts, attrsIndex));\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            resolveDirectives(tView, lView, tContainerNode, localRefs);\n            registerPostOrderHooks(tView, tContainerNode);\n            var embeddedTView = tContainerNode.tViews = createTView(2 /* Embedded */, -1, templateFn, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, tView.schemas, tViewConsts);\n            var embeddedTViewNode = createTNode(tView, null, 2 /* View */, -1, null, null);\n            embeddedTViewNode.injectorIndex = tContainerNode.injectorIndex;\n            embeddedTView.node = embeddedTViewNode;\n            if (tView.queries !== null) {\n                tView.queries.template(tView, tContainerNode);\n                embeddedTView.queries = tView.queries.embeddedTView(tContainerNode);\n            }\n        }\n        if (isDirectiveHost(tContainerNode)) {\n            createDirectivesInstances(tView, lView, tContainerNode);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tContainerNode, localRefExtractor);\n        }\n        setIsNotParent();\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = load(tView.data, index);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setPreviousOrParentTNode(previousOrParentTNode, true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        if (!getCheckNoChangesMode()) {\n            var hooksInitPhaseCompleted = (lView[FLAGS] & 3 /* InitPhaseStateMask */) === 3 /* InitPhaseCompleted */;\n            if (hooksInitPhaseCompleted) {\n                var preOrderCheckHooks = tView.preOrderCheckHooks;\n                if (preOrderCheckHooks !== null) {\n                    executeCheckHooks(lView, preOrderCheckHooks, null);\n                }\n            }\n            else {\n                var preOrderHooks = tView.preOrderHooks;\n                if (preOrderHooks !== null) {\n                    executeInitAndCheckHooks(lView, preOrderHooks, 0 /* OnInitHooksToBeRun */, null);\n                }\n                incrementInitPhaseFlags(lView, 0 /* OnInitHooksToBeRun */);\n            }\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = getLContainerActiveIndex(lContainer);\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    function containerInternal(lView, nodeIndex, tagName, attrs) {\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = nodeIndex + HEADER_OFFSET;\n        ngDevMode && assertDataInRange(lView, nodeIndex + HEADER_OFFSET);\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var comment = lView[adjustedIndex] =\n            lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 0 /* Container */, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(comment, lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        attachPatchData(comment, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    function getLContainerActiveIndex(lContainer) {\n        return lContainer[ACTIVE_INDEX] >> 1 /* SHIFT */;\n    }\n    function setLContainerActiveIndex(lContainer, index) {\n        lContainer[ACTIVE_INDEX] = index << 1 /* SHIFT */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(\n        /**\n         * This represents `LView` associated with the component when ViewRef is a ChangeDetectorRef.\n         *\n         * When ViewRef is created for a dynamic component, this also represents the `LView` for the\n         * component.\n         *\n         * For a \"regular\" ViewRef created for an embedded view, this is the `LView` for the embedded\n         * view.\n         *\n         * @internal\n         */\n        _lView, \n        /**\n         * This represents the `LView` associated with the point where `ChangeDetectorRef` was\n         * requested.\n         *\n         * This may be different from `_lView` if the `_cdRefInjectingView` is an embedded view.\n         */\n        _cdRefInjectingView) {\n            this._lView = _lView;\n            this._cdRefInjectingView = _cdRefInjectingView;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView.child, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._cdRefInjectingView || this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, tNode, result, isProjection) {\n        if (isProjection === void 0) { isProjection = false; }\n        while (tNode !== null) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 1 /* Projection */, 4 /* ElementContainer */, 5 /* IcuContainer */);\n            var lNode = lView[tNode.index];\n            if (lNode !== null) {\n                result.push(unwrapRNode(lNode));\n            }\n            // A given lNode can represent either a native node or a LContainer (when it is a host of a\n            // ViewContainerRef). When we find a LContainer we need to descend into it to collect root nodes\n            // from the views in this container.\n            if (isLContainer(lNode)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < lNode.length; i++) {\n                    var lViewInAContainer = lNode[i];\n                    var lViewFirstChildTNode = lViewInAContainer[TVIEW].firstChild;\n                    if (lViewFirstChildTNode !== null) {\n                        collectNativeNodes(lViewInAContainer, lViewFirstChildTNode, result);\n                    }\n                }\n            }\n            var tNodeType = tNode.type;\n            if (tNodeType === 4 /* ElementContainer */ || tNodeType === 5 /* IcuContainer */) {\n                collectNativeNodes(lView, tNode.child, result);\n            }\n            else if (tNodeType === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var firstProjectedNode = componentHost.projection[tNode.projection];\n                if (firstProjectedNode !== null && parentView !== null) {\n                    collectNativeNodes(parentView, firstProjectedNode, result, true);\n                }\n            }\n            tNode = isProjection ? tNode.projectionNext : tNode.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node on which a TemplateRef is requested\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance or null if we can't create a TemplateRef on a given node type\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationView, _declarationTContainer, elementRef) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationView = _declarationView;\n                    _this._declarationTContainer = _declarationTContainer;\n                    _this.elementRef = elementRef;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context) {\n                    var embeddedTView = this._declarationTContainer.tViews;\n                    var lView = createLView(this._declarationView, embeddedTView, context, 16 /* CheckAlways */, null, embeddedTView.node);\n                    var declarationLContainer = this._declarationView[this._declarationTContainer.index];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    lView[DECLARATION_LCONTAINER] = declarationLContainer;\n                    var declarationViewLQueries = this._declarationView[QUERIES];\n                    if (declarationViewLQueries !== null) {\n                        lView[QUERIES] = declarationViewLQueries.createEmbeddedView(embeddedTView);\n                    }\n                    renderView(lView, embeddedTView, context);\n                    var viewRef = new ViewRef(lView);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, hostTNode, createElementRef(ElementRefToken, hostTNode, hostView));\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length > 0) {\n                        this.remove(this.length - 1);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) {\n                    return this._lContainer[VIEW_REFS] !== null && this._lContainer[VIEW_REFS][index] || null;\n                };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer.length - CONTAINER_HEADER_OFFSET; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var viewRef = templateRef.createEmbeddedView(context || {});\n                    this.insert(viewRef, index);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        // DO NOT REFACTOR. The code here used to have a `value || undefined` expression\n                        // which seems to cause internal google apps to fail. This is documented in the\n                        // following internal bug issue: go/b/142967802\n                        var result = contextInjector.get(NgModuleRef, null);\n                        if (result) {\n                            ngModuleRef = result;\n                        }\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    this.allocateContainerIfNeeded();\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    addToArray(this._lContainer[VIEW_REFS], adjustedIdx, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) {\n                    return this._lContainer[VIEW_REFS] !== null ?\n                        this._lContainer[VIEW_REFS].indexOf(viewRef) :\n                        0;\n                };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    this.allocateContainerIfNeeded();\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && removeFromArray(this._lContainer[VIEW_REFS], adjustedIdx) != null;\n                    return wasDetached ? new ViewRef(view) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                ViewContainerRef_.prototype.allocateContainerIfNeeded = function () {\n                    if (this._lContainer[VIEW_REFS] === null) {\n                        this._lContainer[VIEW_REFS] = [];\n                    }\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            setLContainerActiveIndex(lContainer, -1 /* DYNAMIC_EMBEDDED_VIEWS_ONLY */);\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef(isPipe) {\n        if (isPipe === void 0) { isPipe = false; }\n        return createViewRef(getPreviousOrParentTNode(), getLView(), isPipe);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param tNode The node that is requesting a ChangeDetectorRef\n     * @param lView The view to which the node belongs\n     * @param isPipe Whether the view is being injected into a pipe.\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(tNode, lView, isPipe) {\n        // `isComponentView` will be true for Component and Directives (but not for Pipes).\n        // See https://github.com/angular/angular/pull/33072 for proper fix\n        var isComponentView = !isPipe && isComponentHost(tNode);\n        if (isComponentView) {\n            // The LView represents the location where the component is declared.\n            // Instead we want the LView for the component View and so we need to look it up.\n            var componentView = getComponentLViewByIndex(tNode.index, lView); // look down\n            return new ViewRef(componentView, componentView);\n        }\n        else if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */ ||\n            tNode.type === 4 /* ElementContainer */) {\n            // The LView represents the location where the injection is requested from.\n            // We need to locate the containing LView (in case where the `lView` is an embedded view)\n            var hostComponentView = findComponentView(lView); // look up\n            return new ViewRef(hostComponentView, lView);\n        }\n        return null;\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Injects a Renderer2 for the current component. */\n    function injectRenderer2() {\n        // We need the Renderer to be based on the component that it's being injected into, however since\n        // DI happens before we've entered its view, `getLView` will return the parent view instead.\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var nodeAtIndex = getComponentLViewByIndex(tNode.index, lView);\n        return getOrCreateRenderer2(isLView(nodeAtIndex) ? nodeAtIndex : lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = newArray(paramAnnotations.length);\n            }\n            else {\n                result = newArray(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] && paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return newArray(type.length);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else if (param === ChangeDetectorRef) {\n                    meta.token = param;\n                    meta.resolved = compiler.R3ResolvedDependencyType.ChangeDetectorRef;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * injectable def (`ɵprov`) onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var ngInjectableDef = null;\n        var ngFactoryDef = null;\n        // if NG_PROV_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_PROV_DEF)) {\n            Object.defineProperty(type, NG_PROV_DEF, {\n                get: function () {\n                    if (ngInjectableDef === null) {\n                        ngInjectableDef = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275prov.js\", getInjectableMetadata(type, srcMeta));\n                    }\n                    return ngInjectableDef;\n                },\n            });\n        }\n        // if NG_FACTORY_DEF is already defined on this class then don't overwrite it\n        if (!type.hasOwnProperty(NG_FACTORY_DEF)) {\n            Object.defineProperty(type, NG_FACTORY_DEF, {\n                get: function () {\n                    if (ngFactoryDef === null) {\n                        var metadata = getInjectableMetadata(type, srcMeta);\n                        var compiler = getCompilerFacade();\n                        ngFactoryDef = compiler.compileFactory(angularCoreDiEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", {\n                            name: metadata.name,\n                            type: metadata.type,\n                            typeArgumentCount: metadata.typeArgumentCount,\n                            deps: reflectDependencies(type),\n                            injectFn: 'inject',\n                            target: compiler.R3FactoryTarget.Pipe\n                        });\n                    }\n                    return ngFactoryDef;\n                },\n                // Leave this configurable so that the factories from directives or pipes can take precedence.\n                configurable: true\n            });\n        }\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n    function getInjectableMetadata(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var compilerMeta = {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            providedIn: meta.providedIn,\n            userDeps: undefined,\n        };\n        if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n            compilerMeta.userDeps = convertDependencies(meta.deps);\n        }\n        if (isUseClassProvider(meta)) {\n            // The user explicitly specified useClass, and may or may not have provided deps.\n            compilerMeta.useClass = resolveForwardRef(meta.useClass);\n        }\n        else if (isUseValueProvider(meta)) {\n            // The user explicitly specified useValue.\n            compilerMeta.useValue = resolveForwardRef(meta.useValue);\n        }\n        else if (isUseFactoryProvider(meta)) {\n            // The user explicitly specified useFactory.\n            compilerMeta.useFactory = meta.useFactory;\n        }\n        else if (isUseExistingProvider(meta)) {\n            // The user explicitly specified useExisting.\n            compilerMeta.useExisting = resolveForwardRef(meta.useExisting);\n        }\n        return compilerMeta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var EMPTY_ARRAY$1 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$2 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return ɵɵinject(resolveForwardRef(existingProvider_1.useExisting)); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$1))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = (resolveForwardRef(classProvider_1.useClass))).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ɵprov = ɵɵdefineInjectable({\n                token: injectableType,\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var INJECTOR_SCOPE = new InjectionToken('Set Injector scope.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             * - `null` value implies that we don't have the record. Used by tree-shakable injectors\n             * to prevent further searches.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            var dedupStack = [];\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in additional providers then do the same for `def`. This order is\n            // important because `def` may include providers that override ones in additionalProviders.\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            var record = this.records.get(INJECTOR_SCOPE);\n            this.scope = record != null ? record.value : null;\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an injectable\n                        // def with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an injectable def and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                        }\n                        else {\n                            record = null;\n                        }\n                        this.records.set(token, record);\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record != null /* NOT null || undefined */) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                // Set the notFoundValue based on the Optional flag - if optional is set and notFoundValue\n                // is undefined, the value is null, otherwise it's the notFoundValue.\n                notFoundValue = (flags & exports.InjectFlags.Optional) && notFoundValue === THROW_IF_NOT_FOUND ?\n                    null :\n                    notFoundValue;\n                return nextInjector.get(token, notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         *\n         * If an `InjectorTypeWithProviders` that declares providers besides the type is specified,\n         * the function will return \"true\" to indicate that the providers of the type definition need\n         * to be processed. This allows us to process providers of injector types after all imports of\n         * an injector definition are processed. (following View Engine semantics: see FW-1349)\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return false;\n            // Either the defOrWrappedDef is an InjectorType (with injector def) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the injector def (`ɵinj`).\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return false;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                var importTypesWithProviders_1;\n                try {\n                    deepForEach(def.imports, function (imported) {\n                        if (_this.processInjectorType(imported, parents, dedupStack)) {\n                            if (importTypesWithProviders_1 === undefined)\n                                importTypesWithProviders_1 = [];\n                            // If the processed import is an injector type with providers, we store it in the\n                            // list of import types with providers, so that we can process those afterwards.\n                            importTypesWithProviders_1.push(imported);\n                        }\n                    });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n                // Imports which are declared with providers (TypeWithProviders) need to be processed\n                // after all imported modules are processed. This is similar to how View Engine\n                // processes/merges module imports in the metadata resolver. See: FW-1349.\n                if (importTypesWithProviders_1 !== undefined) {\n                    var _loop_1 = function (i) {\n                        var _a = importTypesWithProviders_1[i], ngModule_1 = _a.ngModule, providers = _a.providers;\n                        deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModule_1, providers || EMPTY_ARRAY$2); });\n                    };\n                    for (var i = 0; i < importTypesWithProviders_1.length; i++) {\n                        _loop_1(i);\n                    }\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            return (ngModule !== undefined &&\n                defOrWrappedDef.providers !== undefined);\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === this.scope);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an injectable def directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        var factory = injectableDef !== null ? injectableDef.factory : getFactoryDef(token);\n        if (factory !== null) {\n            return factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its injector def\n        // (`ɵinj`)\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an injectable def (ɵprov) and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing a \\u0275prov definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = newArray(paramLength, '?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an injectable\n        // def from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return function () { return inheritedInjectableDef.factory(token); };\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            var factory = providerToFactory(provider, ngModuleType, providers);\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__PRE_R3__(providers, parent, name) {\n        return new StaticInjector(providers, parent, name);\n    }\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ɵprov = ɵɵdefineInjectable({\n            token: Injector,\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR$1 = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var NO_NEW_LINE$1 = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = Injector.NULL; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            this.scope = recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var records = this._records;\n            var record = records.get(token);\n            if (record === undefined) {\n                // This means we have never seen this record, see if it is tree shakable provider.\n                var injectableDef = getInjectableDef(token);\n                if (injectableDef) {\n                    var providedIn = injectableDef && injectableDef.providedIn;\n                    if (providedIn === 'any' || providedIn != null && providedIn === this.scope) {\n                        records.set(token, record = resolveProvider({ provide: token, useFactory: injectableDef.factory, deps: EMPTY }));\n                    }\n                }\n                if (record === undefined) {\n                    // Set record to null to make sure that we don't go through expensive lookup above again.\n                    records.set(token, null);\n                }\n            }\n            var lastInjector = setCurrentInjector(this);\n            try {\n                return tryResolveToken(token, record, records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n            finally {\n                setCurrentInjector(lastInjector);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) {\n            // Just use IDENT\n        }\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        var scope = null;\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (Array.isArray(provider)) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    scope = recursivelyProcessProviders(records, provider[i]) || scope;\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                if (token === INJECTOR_SCOPE) {\n                    scope = resolvedProvider.value;\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n        return scope;\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR$1) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR$1) {\n                throw Error(NO_NEW_LINE$1 + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR$1;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? Injector.NULL : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        else if (!(flags & exports.InjectFlags.Optional)) {\n            value = Injector.NULL.get(token, notFoundValue);\n        }\n        else {\n            value = Injector.NULL.get(token, typeof notFoundValue !== 'undefined' ? notFoundValue : null);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (Array.isArray(token)) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (Array.isArray(b)) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = [];\n            this.objs = [];\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = [];\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = [];\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     * @deprecated Since 9.0.0. With Ivy, this property is no longer necessary.\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ɵcmp for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function isComponentDefPendingResolution(type) {\n        return componentDefPendingResolution.has(type);\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function restoreComponentResolutionQueue(queue) {\n        componentDefPendingResolution.clear();\n        queue.forEach(function (_, type) { return componentDefPendingResolution.add(type); });\n        componentResourceResolutionQueue = queue;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstCreatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstCreatePass, true, 'Should only be called in first create pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (Object.is(oldValue, value)) {\n            return false;\n        }\n        else {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            elementAttributeInternal(getSelectedIndex(), name, value, lView, sanitizer, namespace);\n        }\n        return ɵɵattribute;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(lView, values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var isBindingUpdated = false;\n        var bindingIndex = getBindingIndex();\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            isBindingUpdated = bindingUpdated(lView, bindingIndex++, values[i]) || isBindingUpdated;\n        }\n        setBindingIndex(bindingIndex);\n        if (!isBindingUpdated) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(lView, prefix, v0, suffix) {\n        var different = bindingUpdated(lView, nextBindingIndex(), v0);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     */\n    function interpolation2(lView, prefix, v0, i0, v1, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        incrementBindingIndex(2);\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     */\n    function interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        incrementBindingIndex(3);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     */\n    function interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        incrementBindingIndex(4);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     */\n    function interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        incrementBindingIndex(5);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     */\n    function interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        incrementBindingIndex(6);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     */\n    function interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        incrementBindingIndex(7);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     */\n    function interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var bindingIndex = getBindingIndex();\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        incrementBindingIndex(8);\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(index, attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolatedValue, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            elementAttributeInternal(getSelectedIndex(), attrName, interpolated, lView, sanitizer, namespace);\n        }\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    /**\n     * Used to perform change detection on the whole application.\n     *\n     * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n     * executes lifecycle hooks and conditionally checks components based on their\n     * `ChangeDetectionStrategy` and dirtiness.\n     *\n     * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n     * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n     * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n     * be changed when calling `renderComponent` and providing the `scheduler` option.\n     */\n    function tick(component) {\n        var rootView = getRootView(component);\n        var rootContext = rootView[CONTEXT];\n        tickRootContext(rootContext);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return load(contextLView, index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        return getOrCreateInjectable(tNode, lView, resolveForwardRef(token), flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Throws an error indicating that a factory function could not be generated by the compiler for a\n     * particular class.\n     *\n     * This instruction allows the actual error message to be optimized away when ngDevMode is turned\n     * off, saving bytes of generated code while still providing a good experience in dev mode.\n     *\n     * The name of the class is not mentioned here, but will be in the generated factory function name\n     * and thus in the stack trace.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinvalidFactory() {\n        var msg = ngDevMode ? \"This constructor was not compatible with Dependency Injection.\" : 'invalid';\n        throw new Error(msg);\n    }\n\n    /**\n     * --------\n     *\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     *\n     * --------\n     */\n    /**\n     * Sets the current style sanitizer function which will then be used\n     * within all follow-up prop and map-based style binding instructions\n     * for the given element.\n     *\n     * Note that once styling has been applied to the element (i.e. once\n     * `advance(n)` is executed or the hostBindings/template function exits)\n     * then the active `sanitizerFn` will be set to `null`. This means that\n     * once styling is applied to another element then a another call to\n     * `styleSanitizer` will need to be made.\n     *\n     * @param sanitizerFn The sanitization function that will be used to\n     *       process style prop/value entries.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleSanitizer(sanitizer) {\n        setCurrentStyleSanitizer(sanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param prop A valid CSS property.\n     * @param value New value to write (`null` or an empty string to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(prop, value, suffix) {\n        stylePropInternal(getSelectedIndex(), prop, value, suffix);\n    }\n    /**\n     * Internal function for applying a single style to an element.\n     *\n     * The reason why this function has been separated from `ɵɵstyleProp` is because\n     * it is also called from `ɵɵstylePropInterpolate`.\n     */\n    function stylePropInternal(elementIndex, prop, value, suffix) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 32768 /* hasStylePropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, resolveStylePropValue(value, suffix), false);\n        if (ngDevMode) {\n            ngDevMode.styleProp++;\n            if (updated) {\n                ngDevMode.stylePropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param prop A valid CSS class (only one).\n     * @param value A true/false value which will turn the class on or off.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding function.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(className, value) {\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = nextBindingIndex();\n        var lView = getLView();\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 1024 /* hasClassPropBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        var updated = stylingProp(tNode, firstUpdatePass, lView, bindingIndex, className, value, true);\n        if (ngDevMode) {\n            ngDevMode.classProp++;\n            if (updated) {\n                ngDevMode.classPropCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Shared function used to update a prop-based styling binding for an element.\n     *\n     * Depending on the state of the `tNode.styles` styles context, the style/prop\n     * value may be applied directly to the element instead of being processed\n     * through the context. The reason why this occurs is for performance and fully\n     * depends on the state of the context (i.e. whether or not there are duplicate\n     * bindings or whether or not there are map-based bindings and property bindings\n     * present together).\n     */\n    function stylingProp(tNode, firstUpdatePass, lView, bindingIndex, prop, value, isClassBased) {\n        var updated = false;\n        var native = getNativeByTNode(tNode, lView);\n        var context = isClassBased ? getClassesContext(tNode) : getStylesContext(tNode);\n        var sanitizer = isClassBased ? null : getCurrentStyleSanitizer();\n        // [style.prop] and [class.name] bindings do not use `bind()` and will\n        // therefore manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && getCheckNoChangesMode()) {\n            var oldValue = getValue(lView, bindingIndex);\n            if (hasValueChanged(oldValue, value)) {\n                throwErrorIfNoChangesMode(false, oldValue, value);\n            }\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class value directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            updated = applyStylingValueDirectly(renderer, context, tNode, native, lView, bindingIndex, prop, value, isClassBased, sanitizerToUse);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            // Context Resolution (or first update) Case: save the value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            var directiveIndex = getActiveDirectiveId();\n            if (isClassBased) {\n                updated = updateClassViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, false, firstUpdatePass);\n            }\n            else {\n                updated = updateStyleViaContext(context, tNode, lView, native, directiveIndex, prop, bindingIndex, value, sanitizer, false, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        return updated;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getStylesContext(tNode);\n        var hasDirectiveInput = hasStyleInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && styles !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, styles, false, firstUpdatePass);\n            styles = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 16384 /* hasStyleMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), false);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, styles, false, hasDirectiveInput);\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        classMapInternal(getSelectedIndex(), classes);\n    }\n    /**\n     * Internal function for applying a class string or key/value map of classes to an element.\n     *\n     * The reason why this function has been separated from `ɵɵclassMap` is because\n     * it is also called from `ɵɵclassMapInterpolate`.\n     */\n    function classMapInternal(elementIndex, classes) {\n        var lView = getLView();\n        var tNode = getTNode(elementIndex, lView);\n        var firstUpdatePass = lView[TVIEW].firstUpdatePass;\n        var context = getClassesContext(tNode);\n        var hasDirectiveInput = hasClassInput(tNode);\n        // if a value is interpolated then it may render a `NO_CHANGE` value.\n        // in this case we do not need to do anything, but the binding index\n        // still needs to be incremented because all styling binding values\n        // are stored inside of the lView.\n        var bindingIndex = incrementBindingIndex(2);\n        var hostBindingsMode = isHostStyling();\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!hostBindingsMode && hasDirectiveInput && classes !== NO_CHANGE) {\n            updateDirectiveInputValue(context, lView, tNode, bindingIndex, classes, true, firstUpdatePass);\n            classes = NO_CHANGE;\n        }\n        // we check for this in the instruction code so that the context can be notified\n        // about prop or map bindings so that the direct apply check can decide earlier\n        // if it allows for context resolution to be bypassed.\n        if (firstUpdatePass) {\n            patchConfig(tNode, 512 /* hasClassMapBindings */);\n            patchHostStylingFlag(tNode, isHostStyling(), true);\n        }\n        stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, classes, true, hasDirectiveInput);\n    }\n    /**\n     * Shared function used to update a map-based styling binding for an element.\n     *\n     * When this function is called it will activate support for `[style]` and\n     * `[class]` bindings in Angular.\n     */\n    function stylingMap(context, tNode, firstUpdatePass, lView, bindingIndex, value, isClassBased, hasDirectiveInput) {\n        var directiveIndex = getActiveDirectiveId();\n        var native = getNativeByTNode(tNode, lView);\n        var oldValue = getValue(lView, bindingIndex);\n        var sanitizer = getCurrentStyleSanitizer();\n        var valueHasChanged = hasValueChanged(oldValue, value);\n        // [style] and [class] bindings do not use `bind()` and will therefore\n        // manage accessing and updating the new value in the lView directly.\n        // For this reason, the checkNoChanges situation must also be handled here\n        // as well.\n        if (ngDevMode && valueHasChanged && getCheckNoChangesMode()) {\n            throwErrorIfNoChangesMode(false, oldValue, value);\n        }\n        // Direct Apply Case: bypass context resolution and apply the\n        // style/class map values directly to the element\n        if (allowDirectStyling(tNode, isClassBased, firstUpdatePass)) {\n            var sanitizerToUse = isClassBased ? null : sanitizer;\n            var renderer = getRenderer(tNode, lView);\n            applyStylingMapDirectly(renderer, context, tNode, native, lView, bindingIndex, value, isClassBased, sanitizerToUse, valueHasChanged, hasDirectiveInput);\n            if (sanitizerToUse) {\n                // it's important we remove the current style sanitizer once the\n                // element exits, otherwise it will be used by the next styling\n                // instructions for the next element.\n                setElementExitFn(stylingApply);\n            }\n        }\n        else {\n            var stylingMapArr = value === NO_CHANGE ? NO_CHANGE : normalizeIntoStylingMap(oldValue, value, !isClassBased);\n            activateStylingMapFeature();\n            // Context Resolution (or first update) Case: save the map value\n            // and defer to the context to flush and apply the style/class binding\n            // value to the element.\n            if (isClassBased) {\n                updateClassViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, valueHasChanged, firstUpdatePass);\n            }\n            else {\n                updateStyleViaContext(context, tNode, lView, native, directiveIndex, null, bindingIndex, stylingMapArr, sanitizer, valueHasChanged, firstUpdatePass);\n            }\n            setElementExitFn(stylingApply);\n        }\n        if (ngDevMode) {\n            isClassBased ? ngDevMode.classMap : ngDevMode.styleMap++;\n            if (valueHasChanged) {\n                isClassBased ? ngDevMode.classMapCacheMiss : ngDevMode.styleMapCacheMiss++;\n            }\n        }\n    }\n    /**\n     * Writes a value to a directive's `style` or `class` input binding (if it has changed).\n     *\n     * If a directive has a `@Input` binding that is set on `style` or `class` then that value\n     * will take priority over the underlying style/class styling bindings. This value will\n     * be updated for the binding each time during change detection.\n     *\n     * When this occurs this function will attempt to write the value to the input binding\n     * depending on the following situations:\n     *\n     * - If `oldValue !== newValue`\n     * - If `newValue` is `null` (but this is skipped if it is during the first update pass)\n     */\n    function updateDirectiveInputValue(context, lView, tNode, bindingIndex, newValue, isClassBased, firstUpdatePass) {\n        var oldValue = getValue(lView, bindingIndex);\n        if (hasValueChanged(oldValue, newValue)) {\n            // even if the value has changed we may not want to emit it to the\n            // directive input(s) in the event that it is falsy during the\n            // first update pass.\n            if (isStylingValueDefined(newValue) || !firstUpdatePass) {\n                var inputName = isClassBased ? selectClassBasedInputName(tNode.inputs) : 'style';\n                var inputs = tNode.inputs[inputName];\n                var initialValue = getInitialStylingValue(context);\n                var value = normalizeStylingDirectiveInputValue(initialValue, newValue, isClassBased);\n                setInputsForProperty(lView, inputs, value);\n                setElementExitFn(stylingApply);\n            }\n            setValue(lView, bindingIndex, newValue);\n        }\n    }\n    /**\n     * Returns the appropriate directive input value for `style` or `class`.\n     *\n     * Earlier versions of Angular expect a binding value to be passed into directive code\n     * exactly as it is unless there is a static value present (in which case both values\n     * will be stringified and concatenated).\n     */\n    function normalizeStylingDirectiveInputValue(initialValue, bindingValue, isClassBased) {\n        var value = bindingValue;\n        // we only concat values if there is an initial value, otherwise we return the value as is.\n        // Note that this is to satisfy backwards-compatibility in Angular.\n        if (initialValue.length) {\n            if (isClassBased) {\n                value = concatString(initialValue, forceClassesAsString(bindingValue));\n            }\n            else {\n                value = concatString(initialValue, forceStylesAsString(bindingValue, true), ';');\n            }\n        }\n        return value;\n    }\n    /**\n     * Flushes all styling code to the element.\n     *\n     * This function is designed to be scheduled from any of the four styling instructions\n     * in this file. When called it will flush all style and class bindings to the element\n     * via the context resolution algorithm.\n     */\n    function stylingApply() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var elementIndex = getSelectedIndex();\n        var tNode = getTNode(elementIndex, lView);\n        var native = getNativeByTNode(tNode, lView);\n        var directiveIndex = getActiveDirectiveId();\n        var renderer = getRenderer(tNode, lView);\n        var sanitizer = getCurrentStyleSanitizer();\n        var classesContext = isStylingContext(tNode.classes) ? tNode.classes : null;\n        var stylesContext = isStylingContext(tNode.styles) ? tNode.styles : null;\n        flushStyling(renderer, lView, tNode, classesContext, stylesContext, native, directiveIndex, sanitizer, tView.firstUpdatePass);\n        resetCurrentStyleSanitizer();\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingOnTNode(tNode, attrs, startIndex) {\n        var hasAdditionalInitialStyling = false;\n        var styles = getStylingMapArray(tNode.styles);\n        var classes = getStylingMapArray(tNode.classes);\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classes = classes || allocStylingMapArray(null);\n                addItemToStylingMap(classes, attr, true);\n                hasAdditionalInitialStyling = true;\n            }\n            else if (mode == 2 /* Styles */) {\n                var value = attrs[++i];\n                styles = styles || allocStylingMapArray(null);\n                addItemToStylingMap(styles, attr, value);\n                hasAdditionalInitialStyling = true;\n            }\n        }\n        if (classes && classes.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.classes) {\n                tNode.classes = classes;\n            }\n            updateRawValueOnContext(tNode.classes, stylingMapToString(classes, true));\n        }\n        if (styles && styles.length > 1 /* ValuesStartPosition */) {\n            if (!tNode.styles) {\n                tNode.styles = styles;\n            }\n            updateRawValueOnContext(tNode.styles, stylingMapToString(styles, false));\n        }\n        if (hasAdditionalInitialStyling) {\n            tNode.flags |= 256 /* hasInitialStyling */;\n        }\n        return hasAdditionalInitialStyling;\n    }\n    function updateRawValueOnContext(context, value) {\n        var stylingMapArr = getStylingMapArray(context);\n        stylingMapArr[0 /* RawValuePosition */] = value;\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.classes : tNode.styles;\n        if (!isStylingContext(context)) {\n            var hasDirectives = isDirectiveHost(tNode);\n            context = allocTStylingContext(context, hasDirectives);\n            if (ngDevMode) {\n                attachStylingDebugObject(context, tNode, isClassBased);\n            }\n            if (isClassBased) {\n                tNode.classes = context;\n            }\n            else {\n                tNode.styles = context;\n            }\n        }\n        return context;\n    }\n    function resolveStylePropValue(value, suffix) {\n        if (value === NO_CHANGE)\n            return value;\n        var resolvedValue = null;\n        if (isStylingValueDefined(value)) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                resolvedValue = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a string value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                resolvedValue = value;\n            }\n        }\n        return resolvedValue;\n    }\n    /**\n     * Whether or not the style/class binding being applied was executed within a host bindings\n     * function.\n     */\n    function isHostStyling() {\n        return isHostStylingActive(getActiveDirectiveId());\n    }\n    function patchHostStylingFlag(tNode, hostBindingsMode, isClassBased) {\n        var flag = hostBindingsMode ?\n            isClassBased ? 4096 /* hasHostClassBindings */ : 131072 /* hasHostStyleBindings */ :\n            isClassBased ? 2048 /* hasTemplateClassBindings */ : 65536 /* hasTemplateStyleBindings */;\n        patchConfig(tNode, flag);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'elements should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var renderer = lView[RENDERER];\n        var native = lView[index + HEADER_OFFSET] = elementCreate(name, renderer, getNamespace());\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 3 /* Element */, name, attrs);\n        if (attrs != null) {\n            var lastAttrIndex = setUpAttributes(renderer, native, attrs);\n            if (tView.firstCreatePass) {\n                registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n            }\n        }\n        if ((tNode.flags & 256 /* hasInitialStyling */) === 256 /* hasInitialStyling */) {\n            renderInitialStyling(renderer, native, tNode, false);\n        }\n        appendChild(native, tNode, lView);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            var hasDirectives = resolveDirectives(tView, lView, tNode, localRefs);\n            ngDevMode && validateElement(lView, native, tNode, hasDirectives);\n            if (tView.queries !== null) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDefined(previousOrParentTNode, 'No parent node to close.');\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        var tNode = previousOrParentTNode;\n        ngDevMode && assertNodeType(tNode, 3 /* Element */);\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        decreaseElementDepthCount();\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n        if (hasClassInput(tNode)) {\n            var inputName = selectClassBasedInputName(tNode.inputs);\n            setDirectiveStylingInput(tNode.classes, lView, tNode.inputs[inputName]);\n        }\n        if (hasStyleInput(tNode)) {\n            setDirectiveStylingInput(tNode.styles, lView, tNode.inputs['style']);\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrsIndex Index of the element's attributes in the `consts` array.\n     * @param localRefsIndex Index of the element's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrsIndex, localRefsIndex) {\n        ɵɵelementStart(index, name, attrsIndex, localRefsIndex);\n        ɵɵelementEnd();\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(lView[RENDERER], native, attrs);\n            if (tView.firstCreatePass) {\n                var stylingNeedsToBeRendered = registerInitialStylingOnTNode(tNode, attrs, lastAttrIndex);\n                // this is only called during the first template pass in the\n                // event that this current directive assigned initial style/class\n                // host attribute values to the element. Because initial styling\n                // values are applied before directives are first rendered (within\n                // `createElement`) this means that initial styling for any directives\n                // still needs to be applied. Note that this will only happen during\n                // the first template pass and not each time a directive applies its\n                // attribute values to the element.\n                if (stylingNeedsToBeRendered) {\n                    var renderer = lView[RENDERER];\n                    renderInitialStyling(renderer, native, tNode, true);\n                }\n            }\n        }\n    }\n    function setDirectiveStylingInput(context, lView, stylingInputs) {\n        // older versions of Angular treat the input as `null` in the\n        // event that the value does not exist at all. For this reason\n        // we can't have a styling value be an empty string.\n        var value = (context && getInitialStylingValue(context)) || null;\n        // Ivy does an extra `[class]` write with a falsy value since the value\n        // is applied during creation mode. This is a deviation from VE and should\n        // be (Jira Issue = FW-1467).\n        setInputsForProperty(lView, stylingInputs, value);\n    }\n    function validateElement(hostView, element, tNode, hasDirectives) {\n        var tagName = tNode.tagName;\n        // If the element matches any directive, it's considered as valid.\n        if (!hasDirectives && tagName !== null) {\n            // The element is unknown if it's an instance of HTMLUnknownElement or it isn't registered\n            // as a custom element. Note that unknown elements with a dash in their name won't be instances\n            // of HTMLUnknownElement in browsers that support web components.\n            var isUnknown = (typeof HTMLUnknownElement === 'function' && element instanceof HTMLUnknownElement) ||\n                (typeof customElements !== 'undefined' && tagName.indexOf('-') > -1 &&\n                    !customElements.get(tagName));\n            if (isUnknown && !matchingSchemas(hostView, tagName)) {\n                var errorMessage = \"'\" + tagName + \"' is not a known element:\\n\";\n                errorMessage +=\n                    \"1. If '\" + tagName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n                if (tagName && tagName.indexOf('-') > -1) {\n                    errorMessage +=\n                        \"2. If '\" + tagName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n                }\n                else {\n                    errorMessage +=\n                        \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                throw new Error(errorMessage);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrsIndex, localRefsIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        var tViewConsts = tView.consts;\n        var attrs = getConstant(tViewConsts, attrsIndex);\n        var localRefs = getConstant(tViewConsts, localRefsIndex);\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var native = lView[index + HEADER_OFFSET] = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = getOrCreateTNode(tView, lView[T_HOST], index, 4 /* ElementContainer */, tagName, attrs);\n        if (attrs && tView.firstCreatePass) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            registerInitialStylingOnTNode(tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        attachPatchData(native, lView);\n        if (tView.firstCreatePass) {\n            ngDevMode && ngDevMode.firstCreatePass++;\n            resolveDirectives(tView, lView, tNode, localRefs);\n            if (tView.queries) {\n                tView.queries.elementStart(tView, tNode);\n            }\n        }\n        if (isDirectiveHost(tNode)) {\n            createDirectivesInstances(tView, lView, tNode);\n            executeContentQueries(tView, tNode, lView);\n        }\n        if (localRefs != null) {\n            saveResolvedLocalsInData(lView, tNode);\n        }\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsNotParent();\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode, false);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        if (tView.firstCreatePass) {\n            registerPostOrderHooks(tView, previousOrParentTNode);\n            if (isContentQueryHost(previousOrParentTNode)) {\n                tView.queries.elementEnd(previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Creates an empty logical container using {@link elementContainerStart}\n     * and {@link elementContainerEnd}\n     *\n     * @param index Index of the element in the LView array\n     * @param attrsIndex Index of the container attributes in the `consts` array.\n     * @param localRefsIndex Index of the container's local references in the `consts` array.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainer(index, attrsIndex, localRefsIndex) {\n        ɵɵelementContainerStart(index, attrsIndex, localRefsIndex);\n        ɵɵelementContainerEnd();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, decls, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, getLContainerActiveIndex(lContainer), viewBlockId);\n        if (viewToRender) {\n            setIsParent();\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, decls, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, getLContainerActiveIndex(lContainer));\n            }\n            lContainer[ACTIVE_INDEX] += 2 /* INCREMENT */;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param decls The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, decls, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(2 /* Embedded */, viewIndex, null, decls, vars, tView.directiveRegistry, tView.pipeRegistry, null, null, tView.consts);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var viewHost = lView[T_HOST];\n        var context = lView[CONTEXT];\n        if (isCreationMode(lView)) {\n            renderView(lView, tView, context); // creation mode pass\n        }\n        refreshView(lView, tView, tView.template, context); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveViewProcessExit();\n        setPreviousOrParentTNode(viewHost, false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        listenerInternal(lView, lView[RENDERER], tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵlistener;\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var renderer = loadComponentRenderer(tNode, lView);\n        listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver);\n        return ɵɵcomponentHostSyntheticListener;\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(lView, renderer, tNode, eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        var tView = lView[TVIEW];\n        var isTNodeDirectiveHost = isDirectiveHost(tNode);\n        var firstCreatePass = tView.firstCreatePass;\n        var tCleanup = firstCreatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && isTNodeDirectiveHost) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener to coalesced listeners list, maintaining the order in which\n                    // listeners are registered. For performance reasons, we keep a reference to the last\n                    // listener in that list (in `__ngLastListenerFn__` field), so we can avoid going through\n                    // the entire set each time we need to add a new listener.\n                    var lastListenerFn = existingListener.__ngLastListenerFn__ || existingListener;\n                    lastListenerFn.__ngNextListenerFn__ = listenerFn;\n                    existingListener.__ngLastListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs != null && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, tNode, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // Ivy uses `Function` as a special token that allows us to unwrap the function\n            // so that it can be invoked programmatically by `DebugNode.triggerEventHandler`.\n            if (e === Function) {\n                return listenerFn;\n            }\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 2 /* isComponentHost */ ?\n                getComponentLViewByIndex(tNode.index, lView) :\n                lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, tNode, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, tNode, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Checks a given node against matching projection slots and returns the\n     * determined slot index. Returns \"null\" if no slot matched the given node.\n     *\n     * This function takes into account the parsed ngProjectAs selector from the\n     * node's attributes. If present, it will check whether the ngProjectAs selector\n     * matches any of the projection slot selectors.\n     */\n    function matchingProjectionSlotIndex(tNode, projectionSlots) {\n        var wildcardNgContentIndex = null;\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < projectionSlots.length; i++) {\n            var slotValue = projectionSlots[i];\n            // The last wildcard projection slot should match all nodes which aren't matching\n            // any selector. This is necessary to be backwards compatible with view engine.\n            if (slotValue === '*') {\n                wildcardNgContentIndex = i;\n                continue;\n            }\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, slotValue, /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, slotValue)) {\n                return i; // first matching selector \"captures\" a given node\n            }\n        }\n        return wildcardNgContentIndex;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param projectionSlots? A collection of projection slots. A projection slot can be based\n     *        on a parsed CSS selectors or set to the wildcard selector (\"*\") in order to match\n     *        all nodes which do not match any selector. If not specified, a single wildcard\n     *        selector projection slot will be defined.\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(projectionSlots) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            // If no explicit projection slots are defined, fall back to a single\n            // projection slot with the wildcard selector.\n            var numProjectionSlots = projectionSlots ? projectionSlots.length : 1;\n            var projectionHeads = componentNode.projection =\n                newArray(numProjectionSlots, null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var slotIndex = projectionSlots ? matchingProjectionSlotIndex(componentChild, projectionSlots) : 0;\n                if (slotIndex !== null) {\n                    if (tails[slotIndex]) {\n                        tails[slotIndex].projectionNext = componentChild;\n                    }\n                    else {\n                        projectionHeads[slotIndex] = componentChild;\n                    }\n                    tails[slotIndex] = componentChild;\n                }\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    var delayProjection = false;\n    function setDelayProjection(value) {\n        delayProjection = value;\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], nodeIndex, 1 /* Projection */, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsNotParent();\n        // We might need to delay the projection of nodes if they are in the middle of an i18n block\n        if (!delayProjection) {\n            // re-distribution of projectable nodes is stored on a component's view level\n            applyProjection(lView, tProjectionNode);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵproperty;\n    }\n\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(lView, getSelectedIndex(), propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, getSelectedIndex(), propName, getBindingIndex() - 1, prefix, suffix);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 2, prefix, i0, suffix);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode &&\n                storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 3, prefix, i0, i1, suffix);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 4, prefix, i0, i1, i2, suffix);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 5, prefix, i0, i1, i2, i3, suffix);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 6, prefix, i0, i1, i2, i3, i4, suffix);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 7, prefix, i0, i1, i2, i3, i4, i5, suffix);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, getBindingIndex() - 8, prefix, i0, i1, i2, i3, i4, i5, i6, suffix);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        if (interpolatedValue !== NO_CHANGE) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, interpolatedValue, sanitizer);\n            if (ngDevMode) {\n                var interpolationInBetween = [values[0]]; // prefix\n                for (var i = 2; i < values.length; i += 2) {\n                    interpolationInBetween.push(values[i]);\n                }\n                storePropertyBindingMetadata.apply(void 0, __spread([lView[TVIEW].data, nodeIndex, propName,\n                    getBindingIndex() - interpolationInBetween.length + 1], interpolationInBetween));\n            }\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Static string value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        if (value === void 0) { value = ''; }\n        var lView = getLView();\n        ngDevMode && assertEqual(getBindingIndex(), lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        var textNative = lView[index + HEADER_OFFSET] = createTextNode(value, lView[RENDERER]);\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, 3 /* Element */, null, null);\n        // Text nodes are self closing.\n        setIsNotParent();\n        appendChild(textNative, tNode, lView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update text content with a lone bound value\n     *\n     * Used when a text node has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div>{{v0}}</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate(v0);\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate(v0) {\n        ɵɵtextInterpolate1('', v0, '');\n        return ɵɵtextInterpolate;\n    }\n    /**\n     *\n     * Update text content with single bound value surrounded by other text.\n     *\n     * Used when a text node has 1 interpolated value in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate1('prefix', v0, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation1(lView, prefix, v0, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate1;\n    }\n    /**\n     *\n     * Update text content with 2 bound values surrounded by other text.\n     *\n     * Used when a text node has 2 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate2;\n    }\n    /**\n     *\n     * Update text content with 3 bound values surrounded by other text.\n     *\n     * Used when a text node has 3 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate3;\n    }\n    /**\n     *\n     * Update text content with 4 bound values surrounded by other text.\n     *\n     * Used when a text node has 4 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see ɵɵtextInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate4;\n    }\n    /**\n     *\n     * Update text content with 5 bound values surrounded by other text.\n     *\n     * Used when a text node has 5 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate5;\n    }\n    /**\n     *\n     * Update text content with 6 bound values surrounded by other text.\n     *\n     * Used when a text node has 6 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change. @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate6;\n    }\n    /**\n     *\n     * Update text content with 7 bound values surrounded by other text.\n     *\n     * Used when a text node has 7 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate7;\n    }\n    /**\n     *\n     * Update text content with 8 bound values surrounded by other text.\n     *\n     * Used when a text node has 8 interpolated values in it:\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     * @returns itself, so that it may be chained.\n     * @see textInterpolateV\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolated = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolate8;\n    }\n    /**\n     * Update text content with 9 or more bound values other surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 8.\n     *\n     * ```html\n     * <div>prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix</div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵtextInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     *\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵtextInterpolateV(values) {\n        var lView = getLView();\n        var interpolated = interpolationV(lView, values);\n        if (interpolated !== NO_CHANGE) {\n            textBindingInternal(lView, getSelectedIndex(), interpolated);\n        }\n        return ɵɵtextInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated class on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate1('prefix', v0, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate1(prefix, v0, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate2('prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate3(\n     * 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate4(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate5(\n     * 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate6(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate7(\n     *    'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     *\n     * Update an interpolated class on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolate8(\n     *  'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolate8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n    /**\n     * Update an interpolated class on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  class=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵclassMapInterpolateV(\n     *  ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @codeGenApi\n     */\n    function ɵɵclassMapInterpolateV(values) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        classMapInternal(getSelectedIndex(), interpolatedValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     *\n     * Update an interpolated style property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate1(0, 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate1(prop, prefix, v0, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation1(lView, prefix, v0, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate2(0, 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate2(prop, prefix, v0, i0, v1, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation2(lView, prefix, v0, i0, v1, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate3(0, 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate3(prop, prefix, v0, i0, v1, i1, v2, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation3(lView, prefix, v0, i0, v1, i1, v2, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate4(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate4(prop, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation4(lView, prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate5(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate5(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation5(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate6(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate6(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation6(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate7(\n     *    0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate7(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation7(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated style property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolate8(0, 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6,\n     * '-', v7, 'suffix');\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolate8(prop, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolation8(lView, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolate8;\n    }\n    /**\n     * Update an interpolated style property on an element with 8 or more bound values surrounded by\n     * text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  style.color=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\">\n     * </div>\n     * ```\n     *\n     * Its compiled representation is:\n     *\n     * ```ts\n     * ɵɵstylePropInterpolateV(\n     *  0, ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`..\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param valueSuffix Optional suffix. Used with scalar values to add unit such as `px`.\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵstylePropInterpolateV(prop, values, valueSuffix) {\n        var lView = getLView();\n        var interpolatedValue = interpolationV(lView, values);\n        stylePropInternal(getSelectedIndex(), prop, interpolatedValue, valueSuffix);\n        return ɵɵstylePropInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a host element. Only applies to native node properties, not inputs.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵhostProperty(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵhostProperty;\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     *\n     * @codeGenApi\n     */\n    function ɵɵupdateSyntheticHostBinding(propName, value, sanitizer) {\n        var lView = getLView();\n        var bindingIndex = nextBindingIndex();\n        if (bindingUpdated(lView, bindingIndex, value)) {\n            var nodeIndex = getSelectedIndex();\n            elementPropertyInternal(lView, nodeIndex, propName, value, sanitizer, true, loadComponentRenderer);\n            ngDevMode && storePropertyBindingMetadata(lView[TVIEW].data, nodeIndex, propName, bindingIndex);\n        }\n        return ɵɵupdateSyntheticHostBinding;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return null;\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return Injector.NULL;\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (context === null)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target, false);\n        if (context === null)\n            return {};\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    /**\n     * Retrieves the rendered text for a given component.\n     *\n     * This function retrieves the host element of a component and\n     * and then returns the `textContent` for that element. This implies\n     * that the text returned will include re-projected content of\n     * the component as well.\n     *\n     * @param component The component to return the content text for.\n     */\n    function getRenderedText(component) {\n        var hostElement = getHostElement(component);\n        return hostElement.textContent || '';\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        if (!(element instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        var lContext = loadLContext(element, false);\n        if (lContext === null)\n            return [];\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n    /**\n     * Returns the attached `DebugNode` instance for an element in the DOM.\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * @publicApi\n     */\n    function getDebugNode(element) {\n        var debugNode = null;\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var nodeIndex = lContext.nodeIndex;\n        if (nodeIndex !== -1) {\n            var valueInLView = lView[nodeIndex];\n            // this means that value in the lView is a component with its own\n            // data. In this situation the TNode is not accessed at the same spot.\n            var tNode = isLView(valueInLView) ? valueInLView[T_HOST] :\n                getTNode(nodeIndex - HEADER_OFFSET, lView);\n            debugNode = buildDebugNode(tNode, lView, nodeIndex);\n        }\n        return debugNode;\n    }\n    /**\n     * Retrieve the component `LView` from component/element.\n     *\n     * NOTE: `LView` is a private and should not be leaked outside.\n     *       Don't export this method to `ng.*` on window.\n     *\n     * @param target Component or Element instance.\n     */\n    function getComponentLView(target) {\n        var lContext = loadLContext(target);\n        var nodeIndx = lContext.nodeIndex;\n        var lView = lContext.lView;\n        var componentLView = lView[nodeIndx];\n        ngDevMode && assertLView(componentLView);\n        return componentLView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getDebugNode', getDebugNode);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        if (typeof COMPILED === 'undefined' || !COMPILED) {\n            // Note: we can't export `ng` when using closure enhanced optimization as:\n            // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n            // - we can't declare a closure extern as the namespace `ng` is already used within Google\n            //   for typings for AngularJS (via `goog.provide('ng....')`).\n            var w = _global;\n            ngDevMode && assertDefined(fn, 'function not defined');\n            if (w) {\n                var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n                if (!container) {\n                    container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n                }\n                container[name] = fn;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: A hack to not pull in the NullInjector from @angular/core.\n    var NULL_INJECTOR$1 = {\n        get: function (token, notFoundValue) {\n            throw new Error('NullInjector: Not found: ' + stringifyForError(token));\n        }\n    };\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent$1(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag, componentDef.encapsulation);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n        var rootView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            // create mode pass\n            renderView(rootView, rootTView, null);\n            // update mode pass\n            refreshView(rootView, rootTView, null, null);\n        }\n        finally {\n            leaveView();\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        var tView = rootView[TVIEW];\n        ngDevMode && assertDataInRange(rootView, 0 + HEADER_OFFSET);\n        rootView[0 + HEADER_OFFSET] = rNode;\n        var tNode = getOrCreateTNode(tView, null, 0, 3 /* Element */, null, null);\n        var componentView = createLView(rootView, getOrCreateTComponentView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstCreatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), tView, def.type);\n            markAsComponentHost(tView, tNode);\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        addToViewTree(rootView, componentView);\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstCreatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            incrementActiveDirectiveId();\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstCreatePass);\n            setActiveHostElement(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵcmp || superType.ɵdir;\n            }\n            else {\n                if (superType.ɵcmp) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ɵdir;\n            }\n            if (superDef) {\n                // Some fields in the definition may be empty, if there were no values to put in them that\n                // would've justified object creation. Unwrap them if necessary.\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    for (var i = 0; i < features.length; i++) {\n                        var feature = features[i];\n                        if (feature && feature.ngInherit) {\n                            feature(definition);\n                        }\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    superHostBindings(rf, ctx, elementIndex);\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Fields which exist on either directive or component definitions, and need to be copied from\n     * parent to child classes by the `ɵɵCopyDefinitionFeature`.\n     */\n    var COPY_DIRECTIVE_FIELDS = [\n        // The child class should use the providers of its parent.\n        'providersResolver',\n    ];\n    /**\n     * Fields which exist only on component definitions, and need to be copied from parent to child\n     * classes by the `ɵɵCopyDefinitionFeature`.\n     *\n     * The type here allows any field of `ComponentDef` which is not also a property of `DirectiveDef`,\n     * since those should go in `COPY_DIRECTIVE_FIELDS` above.\n     */\n    var COPY_COMPONENT_FIELDS = [\n        // The child class should use the template function of its parent, including all template\n        // semantics.\n        'template',\n        'decls',\n        'consts',\n        'vars',\n        'onPush',\n        'ngContentSelectors',\n        // The child class should use the CSS styles of its parent, including all styling semantics.\n        'styles',\n        'encapsulation',\n        // The child class should be checked by the runtime in the same way as its parent.\n        'schemas',\n    ];\n    /**\n     * Copies the fields not handled by the `ɵɵInheritDefinitionFeature` from the supertype of a\n     * definition.\n     *\n     * This exists primarily to support ngcc migration of an existing View Engine pattern, where an\n     * entire decorator is inherited from a parent to a child class. When ngcc detects this case, it\n     * generates a skeleton definition on the child class, and applies this feature.\n     *\n     * The `ɵɵCopyDefinitionFeature` then copies any needed fields from the parent class' definition,\n     * including things like the component template function.\n     *\n     * @param definition The definition of a child class which inherits from a parent class with its\n     * own definition.\n     *\n     * @codeGenApi\n     */\n    function ɵɵCopyDefinitionFeature(definition) {\n        var e_1, _a, e_2, _b;\n        var superType = getSuperType(definition.type);\n        var superDef = undefined;\n        if (isComponentDef(definition)) {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵcmp;\n        }\n        else {\n            // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n            superDef = superType.ɵdir;\n        }\n        // Needed because `definition` fields are readonly.\n        var defAny = definition;\n        try {\n            // Copy over any fields that apply to either directives or components.\n            for (var COPY_DIRECTIVE_FIELDS_1 = __values(COPY_DIRECTIVE_FIELDS), COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next(); !COPY_DIRECTIVE_FIELDS_1_1.done; COPY_DIRECTIVE_FIELDS_1_1 = COPY_DIRECTIVE_FIELDS_1.next()) {\n                var field = COPY_DIRECTIVE_FIELDS_1_1.value;\n                defAny[field] = superDef[field];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (COPY_DIRECTIVE_FIELDS_1_1 && !COPY_DIRECTIVE_FIELDS_1_1.done && (_a = COPY_DIRECTIVE_FIELDS_1.return)) _a.call(COPY_DIRECTIVE_FIELDS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (isComponentDef(superDef)) {\n            try {\n                // Copy over any component-specific fields.\n                for (var COPY_COMPONENT_FIELDS_1 = __values(COPY_COMPONENT_FIELDS), COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next(); !COPY_COMPONENT_FIELDS_1_1.done; COPY_COMPONENT_FIELDS_1_1 = COPY_COMPONENT_FIELDS_1.next()) {\n                    var field = COPY_COMPONENT_FIELDS_1_1.value;\n                    defAny[field] = superDef[field];\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (COPY_COMPONENT_FIELDS_1_1 && !COPY_COMPONENT_FIELDS_1_1.done && (_b = COPY_COMPONENT_FIELDS_1.return)) _b.call(COPY_COMPONENT_FIELDS_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ɵcmp = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), tView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * ```ts\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ɵcmp = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    decls: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        ɵɵtext(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        ɵɵtextInterpolate(ctx.greeter.greet());\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     * ```\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * Base class for a factory that can create a component dynamically.\n     * Instantiate a factory for a given type of component with `resolveComponentFactory()`.\n     * Use the resulting `ComponentFactory.create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     *\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    function getComponent$1(error) {\n        return error[ERROR_COMPONENT];\n    }\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * A simple registry that maps `Components` to generated `ComponentFactory` classes\n     * that can be used to create instances of components.\n     * Use to obtain the factory for a given component type,\n     * then use the factory's `create()` method to create a component of that type.\n     *\n     * @see [Dynamic Components](guide/dynamic-component-loader)\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        /** @nocollapse */\n        Sanitizer.ɵprov = ɵɵdefineInjectable({\n            token: Sanitizer,\n            providedIn: 'root',\n            factory: function () { return null; },\n        });\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('9.0.0-rc.1+106.sha-e25b256.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ɵprov = ɵɵdefineInjectable({\n            token: IterableDiffers,\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ɵprov = ɵɵdefineInjectable({\n            token: KeyValueDiffers,\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Node instance data.\n     *\n     * We have a separate type per NodeType to save memory\n     * (TextData | ElementData | ProviderData | PureExpressionData | QueryList<any>)\n     *\n     * To keep our code monomorphic,\n     * we prohibit using `NodeData` directly but enforce the use of accessors (`asElementData`, ...).\n     * This way, no usage site can get a `NodeData` from view.nodes and then use it for different\n     * purposes.\n     */\n    var NodeData = /** @class */ (function () {\n        function NodeData() {\n        }\n        return NodeData;\n    }());\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var scope = null;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === INJECTOR_SCOPE) {\n                scope = provider.value;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            scope: scope,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = newArray(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        var providedIn = def.providedIn;\n        return providedIn != null && (providedIn === 'any' || providedIn === ngModule._def.scope ||\n            moduleTransitivelyPresent(ngModule, providedIn));\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = [];\n                for (var i = 0; i < len; i++) {\n                    depValues.push(resolveDep(view, elDef, allowPrivateServices, deps[i]));\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            // default to 'div' in case this component has an attribute selector\n            _this.selector = componentDef.selectors[0][0] || 'div';\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? componentDef.ngContentSelectors : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = rootSelectorOrNode ?\n                locateHostElement(rendererFactory, rootSelectorOrNode, this.componentDef.encapsulation) :\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef), null);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootTView = createTView(0 /* Root */, -1, null, 1, 0, null, null, null, null, null);\n            var rootLView = createLView(null, rootTView, rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            // TODO(misko): it looks like we are entering view here but we don't really need to as\n            // `renderView` does that. However as the code is written it is needed because\n            // `createRootComponentView` and `createRootComponent` both read global state. Fixing those\n            // issues would allow us to drop this.\n            enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                renderView(rootLView, rootTView, null);\n            }\n            finally {\n                leaveView();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (!rootSelectorOrNode || isIsolated) {\n                // The host element of the internal or isolated root view is attached to the component's host\n                // view node.\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Creates a ComponentFactoryResolver and stores it on the injector. Or, if the\n     * ComponentFactoryResolver\n     * already exists, retrieves the existing ComponentFactoryResolver.\n     *\n     * @returns The ComponentFactoryResolver instance to use\n     */\n    function injectComponentFactoryResolver() {\n        return componentFactoryResolver;\n    }\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            if (this.destroyCbs) {\n                this.destroyCbs.forEach(function (fn) { return fn(); });\n                this.destroyCbs = null;\n                !this.hostView.destroyed && this.hostView.destroy();\n            }\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            if (this.destroyCbs) {\n                this.destroyCbs.push(callback);\n            }\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // NOTE: we need to have it in IIFE so that the tree-shaker is happy.\n        (function () {\n            // tslint:disable-next-line:no-toplevel-property-access\n            _global['ngI18nClosureMode'] =\n                // TODO(FW-1250): validate that this actually, you know, works.\n                // tslint:disable-next-line:no-toplevel-property-access\n                typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n        })();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // THIS CODE IS GENERATED - DO NOT MODIFY\n    // See angular/tools/gulp-tasks/cldr/extract.js\n    var u = undefined;\n    function plural(n) {\n        var i = Math.floor(Math.abs(n)), v = n.toString().replace(/^[^.]*\\.?/, '').length;\n        if (i === 1 && v === 0)\n            return 1;\n        return 5;\n    }\n    var localeEn = [\n        'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n        [\n            ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n        ],\n        u,\n        [\n            ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            [\n                'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n                'October', 'November', 'December'\n            ]\n        ],\n        u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n        ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n        ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n        ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n        ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n    ];\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This const is used to store the locale data registered with `registerLocaleData`\n     */\n    var LOCALE_DATA = {};\n    /**\n     * Register locale data to be used internally by Angular. See the\n     * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n     *\n     * The signature `registerLocaleData(data: any, extraData?: any)` is deprecated since v5.1\n     */\n    function registerLocaleData(data, localeId, extraData) {\n        if (typeof localeId !== 'string') {\n            extraData = localeId;\n            localeId = data[exports.ɵLocaleDataIndex.LocaleId];\n        }\n        localeId = localeId.toLowerCase().replace(/_/g, '-');\n        LOCALE_DATA[localeId] = data;\n        if (extraData) {\n            LOCALE_DATA[localeId][exports.ɵLocaleDataIndex.ExtraData] = extraData;\n        }\n    }\n    /**\n     * Finds the locale data for a given locale.\n     *\n     * @param locale The locale code.\n     * @returns The locale data.\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function findLocaleData(locale) {\n        var normalizedLocale = normalizeLocale(locale);\n        var match = getLocaleData(normalizedLocale);\n        if (match) {\n            return match;\n        }\n        // let's try to find a parent locale\n        var parentLocale = normalizedLocale.split('-')[0];\n        match = getLocaleData(parentLocale);\n        if (match) {\n            return match;\n        }\n        if (parentLocale === 'en') {\n            return localeEn;\n        }\n        throw new Error(\"Missing locale data for the locale \\\"\" + locale + \"\\\".\");\n    }\n    /**\n     * Retrieves the plural function used by ICU expressions to determine the plural case to use\n     * for a given locale.\n     * @param locale A locale code for the locale format rules to use.\n     * @returns The plural function for the locale.\n     * @see `NgPlural`\n     * @see [Internationalization (i18n) Guide](https://angular.io/guide/i18n)\n     */\n    function getLocalePluralCase(locale) {\n        var data = findLocaleData(locale);\n        return data[exports.ɵLocaleDataIndex.PluralCase];\n    }\n    /**\n     * Helper function to get the given `normalizedLocale` from `LOCALE_DATA`\n     * or from the global `ng.common.locale`.\n     */\n    function getLocaleData(normalizedLocale) {\n        if (!(normalizedLocale in LOCALE_DATA)) {\n            LOCALE_DATA[normalizedLocale] = _global.ng && _global.ng.common && _global.ng.common.locales &&\n                _global.ng.common.locales[normalizedLocale];\n        }\n        return LOCALE_DATA[normalizedLocale];\n    }\n    /**\n     * Helper function to remove all the locale data from `LOCALE_DATA`.\n     */\n    function unregisterAllLocaleData() {\n        LOCALE_DATA = {};\n    }\n    (function (LocaleDataIndex) {\n        LocaleDataIndex[LocaleDataIndex[\"LocaleId\"] = 0] = \"LocaleId\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsFormat\"] = 1] = \"DayPeriodsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DayPeriodsStandalone\"] = 2] = \"DayPeriodsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysFormat\"] = 3] = \"DaysFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DaysStandalone\"] = 4] = \"DaysStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsFormat\"] = 5] = \"MonthsFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"MonthsStandalone\"] = 6] = \"MonthsStandalone\";\n        LocaleDataIndex[LocaleDataIndex[\"Eras\"] = 7] = \"Eras\";\n        LocaleDataIndex[LocaleDataIndex[\"FirstDayOfWeek\"] = 8] = \"FirstDayOfWeek\";\n        LocaleDataIndex[LocaleDataIndex[\"WeekendRange\"] = 9] = \"WeekendRange\";\n        LocaleDataIndex[LocaleDataIndex[\"DateFormat\"] = 10] = \"DateFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"TimeFormat\"] = 11] = \"TimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"DateTimeFormat\"] = 12] = \"DateTimeFormat\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberSymbols\"] = 13] = \"NumberSymbols\";\n        LocaleDataIndex[LocaleDataIndex[\"NumberFormats\"] = 14] = \"NumberFormats\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencySymbol\"] = 15] = \"CurrencySymbol\";\n        LocaleDataIndex[LocaleDataIndex[\"CurrencyName\"] = 16] = \"CurrencyName\";\n        LocaleDataIndex[LocaleDataIndex[\"Currencies\"] = 17] = \"Currencies\";\n        LocaleDataIndex[LocaleDataIndex[\"PluralCase\"] = 18] = \"PluralCase\";\n        LocaleDataIndex[LocaleDataIndex[\"ExtraData\"] = 19] = \"ExtraData\";\n    })(exports.ɵLocaleDataIndex || (exports.ɵLocaleDataIndex = {}));\n    /**\n     * Returns the canonical form of a locale name - lowercase with `_` replaced with `-`.\n     */\n    function normalizeLocale(locale) {\n        return locale.toLowerCase().replace(/_/g, '-');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the plural case based on the locale\n     */\n    function getPluralCase(value, locale) {\n        var plural = getLocalePluralCase(locale)(value);\n        switch (plural) {\n            case 0:\n                return 'zero';\n            case 1:\n                return 'one';\n            case 2:\n                return 'two';\n            case 3:\n                return 'few';\n            case 4:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * The locale id that the application is using by default (for translations and ICU expressions).\n     */\n    var DEFAULT_LOCALE_ID = 'en-US';\n\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*!]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICU_PLACEHOLDERS_REGEXP = /{([A-Z0-9_]+)}/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else {\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        results.push(substring);\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (cases.length > values.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�!{index}(:{block})�`/`�/!{index}(:{block})�`: *Projection Placeholder*:  Marks the\n     *   beginning and end of <ng-content> that was embedded in the original translation block.\n     *   The placeholder `index` points to the element index in the template instructions set.\n     *   An optional `block` that matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        // We need to delay projections until `i18nEnd`\n        setDelayProjection(true);\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(lView, tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(lView, tView, index, message, subTemplateIndex) {\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== lView[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = replaceNgsp(templateTranslation).split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === \"#\" /* ELEMENT */) {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === \"#\" /* ELEMENT */) {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        if (i18nVarsCount > 0) {\n            allocExpando(lView, i18nVarsCount);\n        }\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, lView);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode, lView) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== lView[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        // If the placeholder to append is a projection, we need to move the projected nodes instead\n        if (tNode.type === 1 /* Projection */) {\n            applyProjection(lView, tNode);\n            return tNode;\n        }\n        appendChild(getNativeByTNode(tNode, lView), tNode, lView);\n        var slotValue = lView[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, lView);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n     * 4. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                var placeholders = matches_1[content] || [];\n                if (!placeholders.length) {\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders;\n                }\n                if (!placeholders.length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all placeholders used inside ICUs in a form of {PLACEHOLDER}\n         */\n        result = result.replace(PP_ICU_PLACEHOLDERS_REGEXP, function (match, key) {\n            return replacements.hasOwnProperty(key) ? replacements[key] : match;\n        });\n        /**\n         * Step 4: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(lView, tView);\n        // Stop delaying projections\n        setDelayProjection(false);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(lView, tView) {\n        ngDevMode && assertEqual(getBindingIndex(), tView.bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, lView);\n        // Remove deleted nodes\n        var index = rootIndex + 1;\n        while (index <= lastCreatedNode.index - HEADER_OFFSET) {\n            if (visitedNodes.indexOf(index) === -1) {\n                removeNode(index, lView, /* markAsDetached */ true);\n            }\n            // Check if an element has any local refs and skip them\n            var tNode = getTNode(index, lView);\n            if (tNode && (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) &&\n                tNode.localNames !== null) {\n                // Divide by 2 to get the number of local refs,\n                // since they are stored as an array that also includes directive indexes,\n                // i.e. [\"localRef\", directiveIndex, ...]\n                index += tNode.localNames.length >> 1;\n            }\n            index++;\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(lView, index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n        lView[index + HEADER_OFFSET] = native;\n        var tNode = getOrCreateTNode(lView[TVIEW], lView[T_HOST], index, type, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode && previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, lView) {\n        var renderer = lView[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createDynamicNodeAtIndex(lView, textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsNotParent();\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = lView[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, lView);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode, lView);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, lView);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode, currentTNode.type === 3 /* Element */);\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, lView);\n                        setPreviousOrParentTNode(currentTNode, false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        // This code is used for ICU expressions only, since we don't support\n                        // directives/components in ICUs, we don't need to worry about inputs here\n                        elementAttributeInternal(elementNodeIndex, attrName, attrValue, lView);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, lView);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsNotParent();\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(lView, elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsNotParent();\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var propName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementPropertyInternal(viewData, nodeIndex, propName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBindingInternal(viewData, nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    // Remove DOM element, but do *not* mark TNode as detached, since we are\n                                                    // just switching ICU cases (while keeping the same TNode), so a DOM element\n                                                    // representing a new ICU case will be re-created.\n                                                    removeNode(nodeIndex_1, viewData, /* markAsDetached */ false);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData, markAsDetached) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(viewData, index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        if (markAsDetached) {\n            // Define this node as detached to avoid projecting it later\n            removedPhTNode.flags |= 64 /* isDetached */;\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nAttributesFirstPass(lView, tView, index, values);\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(lView, tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) {\n                    // Odd indexes are ICU expressions\n                    // TODO(ocombe): support ICU expressions in attributes\n                    throw new Error('ICU expressions are not yet supported in attributes');\n                }\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                        }\n                    }\n                    else {\n                        var tNode = getTNode(previousElementIndex, lView);\n                        // Set attributes for Elements only, for other types (like ElementContainer),\n                        // only set inputs below\n                        if (tNode.type === 3 /* Element */) {\n                            elementAttributeInternal(previousElementIndex, attrName, value, lView);\n                        }\n                        // Check if that attribute is a directive input\n                        var dataValue = tNode.inputs && tNode.inputs[attrName];\n                        if (dataValue) {\n                            setInputsForProperty(lView, dataValue, value);\n                            if (ngDevMode) {\n                                var element = getNativeByIndex(previousElementIndex, lView);\n                                setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (tView.firstCreatePass && tView.data[index + HEADER_OFFSET] === null) {\n            tView.data[index + HEADER_OFFSET] = updateOpCodes;\n        }\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param value The binding's value\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `i18nExp(ctx.name)(ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(value) {\n        var lView = getLView();\n        if (bindingUpdated(lView, nextBindingIndex(), value)) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n        return ɵɵi18nExp;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = getBindingIndex() - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    var resolvedCase = getPluralCase(bindingValue, getLocaleId());\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(getDocument());\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    /**\n     * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n     * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n     * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n     * and later on replaced by a space. We are re-implementing the same idea here, since translations\n     * might contain this special character.\n     */\n    var NGSP_UNICODE_REGEXP = /\\uE500/g;\n    function replaceNgsp(value) {\n        return value.replace(NGSP_UNICODE_REGEXP, ' ');\n    }\n    /**\n     * The locale id that the application is currently using (for translations and ICU expressions).\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    var LOCALE_ID = DEFAULT_LOCALE_ID;\n    /**\n     * Sets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     *\n     * @param localeId\n     */\n    function setLocaleId(localeId) {\n        assertDefined(localeId, \"Expected localeId to be defined\");\n        if (typeof localeId === 'string') {\n            LOCALE_ID = localeId.toLowerCase().replace(/_/g, '-');\n        }\n    }\n    /**\n     * Gets the locale id that will be used for translations and ICU expressions.\n     * This is the ivy version of `LOCALE_ID` that was defined as an injection token for the view engine\n     * but is now defined as a global value.\n     */\n    function getLocaleId() {\n        return LOCALE_ID;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(ngModuleType) {\n        if (ngModuleType.ɵmod.id !== null) {\n            var id = ngModuleType.ɵmod.id;\n            var existing = modules.get(id);\n            assertSameOrNotExisting(id, existing, ngModuleType);\n            modules.set(id, ngModuleType);\n        }\n        var imports = ngModuleType.ɵmod.imports;\n        if (imports instanceof Function) {\n            imports = imports();\n        }\n        if (imports) {\n            imports.forEach(function (i) { return registerNgModuleType(i); });\n        }\n    }\n    function clearModulesForTest() {\n        modules.clear();\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id) || autoRegisterModuleById[id];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            var ngLocaleIdDef = getNgLocaleIdDef(ngModuleType);\n            if (ngLocaleIdDef) {\n                setLocaleId(ngLocaleIdDef);\n            }\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            var ngModuleDef = getNgModuleDef(moduleType);\n            if (ngModuleDef !== null) {\n                // Register the NgModule with Angular's module registry. The location (and hence timing) of\n                // this call is critical to ensure this works correctly (modules get registered when expected)\n                // without bloating bundles (modules are registered when otherwise not referenced).\n                //\n                // In View Engine, registration occurs in the .ngfactory.js file as a side effect. This has\n                // several practical consequences:\n                //\n                // - If an .ngfactory file is not imported from, the module won't be registered (and can be\n                //   tree shaken).\n                // - If an .ngfactory file is imported from, the module will be registered even if an instance\n                //   is not actually created (via `create` below).\n                // - Since an .ngfactory file in View Engine references the .ngfactory files of the NgModule's\n                //   imports,\n                //\n                // In Ivy, things are a bit different. .ngfactory files still exist for compatibility, but are\n                // not a required API to use - there are other ways to obtain an NgModuleFactory for a given\n                // NgModule. Thus, relying on a side effect in the .ngfactory file is not sufficient. Instead,\n                // the side effect of registration is added here, in the constructor of NgModuleFactory,\n                // ensuring no matter how a factory is created, the module is registered correctly.\n                //\n                // An alternative would be to include the registration side effect inline following the actual\n                // NgModule definition. This also has the correct timing, but breaks tree-shaking - modules\n                // will be registered and retained even if they're otherwise never referenced.\n                registerNgModuleType(moduleType);\n            }\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign(__assign({}, clazz.propDecorators), propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |-------decls------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return lView[bindingIndex] === NO_CHANGE ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstCreatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeFactory = pipeDef.factory || (pipeDef.factory = getFactoryDef(pipeDef.type, true));\n        var pipeInstance = pipeFactory();\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var lView = getLView();\n        var pipeInstance = load(lView, index);\n        return unwrapValue$1(lView, isPure(lView, index) ?\n            ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(lView, index) {\n        return lView[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(lView, newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = getBindingIndex();\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in components with the `@Output` directive to emit custom events\n     * synchronously or asynchronously, and register handlers for those events\n     * by subscribing to an instance.\n     *\n     * @usageNotes\n     *\n     * Extends\n     * [RxJS `Subject`](https://rxjs.dev/api/index/class/Subject)\n     * for Angular by adding the `emit()` method.\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```html\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```html\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * @see [Observables in Angular](guide/observables-in-angular)\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function symbolIterator() {\n        return this._results[getSymbolIterator()]();\n    }\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n            // This function should be declared on the prototype, but doing so there will cause the class\n            // declaration to have side-effects and become not tree-shakable. For this reason we do it in\n            // the constructor.\n            // [getSymbolIterator()](): Iterator<T> { ... }\n            var symbol = getSymbolIterator();\n            var proto = QueryList.prototype;\n            if (!proto[symbol])\n                proto[symbol] = symbolIterator;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The query results to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$7 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n    // failure based on types.\n    var unusedValueExportToPlacateAjd$8 = 1;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var unusedValueToPlacateAjd$2 = unusedValueExportToPlacateAjd$7 + unusedValueExportToPlacateAjd$2 + unusedValueExportToPlacateAjd$4 + unusedValueExportToPlacateAjd$8;\n    var LQuery_ = /** @class */ (function () {\n        function LQuery_(queryList) {\n            this.queryList = queryList;\n            this.matches = null;\n        }\n        LQuery_.prototype.clone = function () { return new LQuery_(this.queryList); };\n        LQuery_.prototype.setDirty = function () { this.queryList.setDirty(); };\n        return LQuery_;\n    }());\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        LQueries_.prototype.createEmbeddedView = function (tView) {\n            var tQueries = tView.queries;\n            if (tQueries !== null) {\n                var noOfInheritedQueries = tView.contentQueries !== null ? tView.contentQueries[0] : tQueries.length;\n                var viewLQueries = [];\n                // An embedded view has queries propagated from a declaration view at the beginning of the\n                // TQueries collection and up until a first content query declared in the embedded view. Only\n                // propagated LQueries are created at this point (LQuery corresponding to declared content\n                // queries will be instantiated from the content query instructions for each directive).\n                for (var i = 0; i < noOfInheritedQueries; i++) {\n                    var tQuery = tQueries.getByIndex(i);\n                    var parentLQuery = this.queries[tQuery.indexInDeclarationView];\n                    viewLQueries.push(parentLQuery.clone());\n                }\n                return new LQueries_(viewLQueries);\n            }\n            return null;\n        };\n        LQueries_.prototype.insertView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.detachView = function (tView) { this.dirtyQueriesWithMatches(tView); };\n        LQueries_.prototype.dirtyQueriesWithMatches = function (tView) {\n            for (var i = 0; i < this.queries.length; i++) {\n                if (getTQuery(tView, i).matches !== null) {\n                    this.queries[i].setDirty();\n                }\n            }\n        };\n        return LQueries_;\n    }());\n    var TQueryMetadata_ = /** @class */ (function () {\n        function TQueryMetadata_(predicate, descendants, isStatic, read) {\n            if (read === void 0) { read = null; }\n            this.predicate = predicate;\n            this.descendants = descendants;\n            this.isStatic = isStatic;\n            this.read = read;\n        }\n        return TQueryMetadata_;\n    }());\n    var TQueries_ = /** @class */ (function () {\n        function TQueries_(queries) {\n            if (queries === void 0) { queries = []; }\n            this.queries = queries;\n        }\n        TQueries_.prototype.elementStart = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementStart(tView, tNode);\n            }\n        };\n        TQueries_.prototype.elementEnd = function (tNode) {\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].elementEnd(tNode);\n            }\n        };\n        TQueries_.prototype.embeddedTView = function (tNode) {\n            var queriesForTemplateRef = null;\n            for (var i = 0; i < this.length; i++) {\n                var childQueryIndex = queriesForTemplateRef !== null ? queriesForTemplateRef.length : 0;\n                var tqueryClone = this.getByIndex(i).embeddedTView(tNode, childQueryIndex);\n                if (tqueryClone) {\n                    tqueryClone.indexInDeclarationView = i;\n                    if (queriesForTemplateRef !== null) {\n                        queriesForTemplateRef.push(tqueryClone);\n                    }\n                    else {\n                        queriesForTemplateRef = [tqueryClone];\n                    }\n                }\n            }\n            return queriesForTemplateRef !== null ? new TQueries_(queriesForTemplateRef) : null;\n        };\n        TQueries_.prototype.template = function (tView, tNode) {\n            ngDevMode && assertFirstCreatePass(tView, 'Queries should collect results on the first template pass only');\n            for (var i = 0; i < this.queries.length; i++) {\n                this.queries[i].template(tView, tNode);\n            }\n        };\n        TQueries_.prototype.getByIndex = function (index) {\n            ngDevMode && assertDataInRange(this.queries, index);\n            return this.queries[index];\n        };\n        Object.defineProperty(TQueries_.prototype, \"length\", {\n            get: function () { return this.queries.length; },\n            enumerable: true,\n            configurable: true\n        });\n        TQueries_.prototype.track = function (tquery) { this.queries.push(tquery); };\n        return TQueries_;\n    }());\n    var TQuery_ = /** @class */ (function () {\n        function TQuery_(metadata, nodeIndex) {\n            if (nodeIndex === void 0) { nodeIndex = -1; }\n            this.metadata = metadata;\n            this.matches = null;\n            this.indexInDeclarationView = -1;\n            this.crossesNgTemplate = false;\n            /**\n             * A flag indicating if a given query still applies to nodes it is crossing. We use this flag\n             * (alongside with _declarationNodeIndex) to know when to stop applying content queries to\n             * elements in a template.\n             */\n            this._appliesToNextNode = true;\n            this._declarationNodeIndex = nodeIndex;\n        }\n        TQuery_.prototype.elementStart = function (tView, tNode) {\n            if (this.isApplyingToNode(tNode)) {\n                this.matchTNode(tView, tNode);\n            }\n        };\n        TQuery_.prototype.elementEnd = function (tNode) {\n            if (this._declarationNodeIndex === tNode.index) {\n                this._appliesToNextNode = false;\n            }\n        };\n        TQuery_.prototype.template = function (tView, tNode) { this.elementStart(tView, tNode); };\n        TQuery_.prototype.embeddedTView = function (tNode, childQueryIndex) {\n            if (this.isApplyingToNode(tNode)) {\n                this.crossesNgTemplate = true;\n                // A marker indicating a `<ng-template>` element (a placeholder for query results from\n                // embedded views created based on this `<ng-template>`).\n                this.addMatch(-tNode.index, childQueryIndex);\n                return new TQuery_(this.metadata);\n            }\n            return null;\n        };\n        TQuery_.prototype.isApplyingToNode = function (tNode) {\n            if (this._appliesToNextNode && this.metadata.descendants === false) {\n                return this._declarationNodeIndex === (tNode.parent ? tNode.parent.index : -1);\n            }\n            return this._appliesToNextNode;\n        };\n        TQuery_.prototype.matchTNode = function (tView, tNode) {\n            if (Array.isArray(this.metadata.predicate)) {\n                var localNames = this.metadata.predicate;\n                for (var i = 0; i < localNames.length; i++) {\n                    this.matchTNodeWithReadOption(tView, tNode, getIdxOfMatchingSelector(tNode, localNames[i]));\n                }\n            }\n            else {\n                var typePredicate = this.metadata.predicate;\n                if (typePredicate === TemplateRef) {\n                    if (tNode.type === 0 /* Container */) {\n                        this.matchTNodeWithReadOption(tView, tNode, -1);\n                    }\n                }\n                else {\n                    this.matchTNodeWithReadOption(tView, tNode, locateDirectiveOrProvider(tNode, tView, typePredicate, false, false));\n                }\n            }\n        };\n        TQuery_.prototype.matchTNodeWithReadOption = function (tView, tNode, nodeMatchIdx) {\n            if (nodeMatchIdx !== null) {\n                var read = this.metadata.read;\n                if (read !== null) {\n                    if (read === ElementRef || read === ViewContainerRef ||\n                        read === TemplateRef && tNode.type === 0 /* Container */) {\n                        this.addMatch(tNode.index, -2);\n                    }\n                    else {\n                        var directiveOrProviderIdx = locateDirectiveOrProvider(tNode, tView, read, false, false);\n                        if (directiveOrProviderIdx !== null) {\n                            this.addMatch(tNode.index, directiveOrProviderIdx);\n                        }\n                    }\n                }\n                else {\n                    this.addMatch(tNode.index, nodeMatchIdx);\n                }\n            }\n        };\n        TQuery_.prototype.addMatch = function (tNodeIdx, matchIdx) {\n            if (this.matches === null) {\n                this.matches = [tNodeIdx, matchIdx];\n            }\n            else {\n                this.matches.push(tNodeIdx, matchIdx);\n            }\n        };\n        return TQuery_;\n    }());\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames !== null) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    function createResultByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        else if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function createResultForNode(lView, tNode, matchingIdx, read) {\n        if (matchingIdx === -1) {\n            // if read token and / or strategy is not specified, detect it using appropriate tNode type\n            return createResultByTNodeType(tNode, lView);\n        }\n        else if (matchingIdx === -2) {\n            // read a special token from a node injector\n            return createSpecialToken(lView, tNode, read);\n        }\n        else {\n            // read a token\n            return getNodeInjectable(lView[TVIEW].data, lView, matchingIdx, tNode);\n        }\n    }\n    function createSpecialToken(lView, tNode, read) {\n        if (read === ElementRef) {\n            return createElementRef(ElementRef, tNode, lView);\n        }\n        else if (read === TemplateRef) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, lView);\n        }\n        else if (read === ViewContainerRef) {\n            ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n            return createContainerRef(ViewContainerRef, ElementRef, tNode, lView);\n        }\n        else {\n            ngDevMode &&\n                throwError(\"Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got \" + stringify(read) + \".\");\n        }\n    }\n    /**\n     * A helper function that creates query results for a given view. This function is meant to do the\n     * processing once and only once for a given view instance (a set of results for a given view\n     * doesn't change).\n     */\n    function materializeViewResults(lView, tQuery, queryIndex) {\n        var lQuery = lView[QUERIES].queries[queryIndex];\n        if (lQuery.matches === null) {\n            var tViewData = lView[TVIEW].data;\n            var tQueryMatches = tQuery.matches;\n            var result = [];\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var matchedNodeIdx = tQueryMatches[i];\n                if (matchedNodeIdx < 0) {\n                    // we at the <ng-template> marker which might have results in views created based on this\n                    // <ng-template> - those results will be in separate views though, so here we just leave\n                    // null as a placeholder\n                    result.push(null);\n                }\n                else {\n                    ngDevMode && assertDataInRange(tViewData, matchedNodeIdx);\n                    var tNode = tViewData[matchedNodeIdx];\n                    result.push(createResultForNode(lView, tNode, tQueryMatches[i + 1], tQuery.metadata.read));\n                }\n            }\n            lQuery.matches = result;\n        }\n        return lQuery.matches;\n    }\n    /**\n     * A helper function that collects (already materialized) query results from a tree of views,\n     * starting with a provided LView.\n     */\n    function collectQueryResults(lView, queryIndex, result) {\n        var tQuery = lView[TVIEW].queries.getByIndex(queryIndex);\n        var tQueryMatches = tQuery.matches;\n        if (tQueryMatches !== null) {\n            var lViewResults = materializeViewResults(lView, tQuery, queryIndex);\n            for (var i = 0; i < tQueryMatches.length; i += 2) {\n                var tNodeIdx = tQueryMatches[i];\n                if (tNodeIdx > 0) {\n                    var viewResult = lViewResults[i / 2];\n                    ngDevMode && assertDefined(viewResult, 'materialized query result should be defined');\n                    result.push(viewResult);\n                }\n                else {\n                    var childQueryIndex = tQueryMatches[i + 1];\n                    var declarationLContainer = lView[-tNodeIdx];\n                    ngDevMode && assertLContainer(declarationLContainer);\n                    // collect matches for views inserted in this container\n                    for (var i_1 = CONTAINER_HEADER_OFFSET; i_1 < declarationLContainer.length; i_1++) {\n                        var embeddedLView = declarationLContainer[i_1];\n                        if (embeddedLView[DECLARATION_LCONTAINER] === embeddedLView[PARENT]) {\n                            collectQueryResults(embeddedLView, childQueryIndex, result);\n                        }\n                    }\n                    // collect matches for views created from this declaration container and inserted into\n                    // different containers\n                    if (declarationLContainer[MOVED_VIEWS] !== null) {\n                        var embeddedLViews = declarationLContainer[MOVED_VIEWS];\n                        for (var i_2 = 0; i_2 < embeddedLViews.length; i_2++) {\n                            collectQueryResults(embeddedLViews[i_2], childQueryIndex, result);\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var lView = getLView();\n        var queryIndex = getCurrentQueryIndex();\n        setCurrentQueryIndex(queryIndex + 1);\n        var tQuery = getTQuery(lView[TVIEW], queryIndex);\n        if (queryList.dirty && (isCreationMode(lView) === tQuery.metadata.isStatic)) {\n            if (tQuery.matches === null) {\n                queryList.reset([]);\n            }\n            else {\n                var result = tQuery.crossesNgTemplate ? collectQueryResults(lView, queryIndex, []) :\n                    materializeViewResults(lView, tQuery, queryIndex);\n                queryList.reset(result);\n                queryList.notifyOnChanges();\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, true);\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(predicate, descend, read) {\n        viewQueryInternal(getLView(), predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, predicate, descend, read, isStatic) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), -1);\n            if (isStatic) {\n                tView.staticViewQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, false, getPreviousOrParentTNode(), directiveIndex);\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, read) {\n        contentQueryInternal(getLView(), predicate, descend, read, true, getPreviousOrParentTNode(), directiveIndex);\n    }\n    function contentQueryInternal(lView, predicate, descend, read, isStatic, tNode, directiveIndex) {\n        var tView = lView[TVIEW];\n        if (tView.firstCreatePass) {\n            createTQuery(tView, new TQueryMetadata_(predicate, descend, isStatic, read), tNode.index);\n            saveContentQueryAndDirectiveIndex(tView, directiveIndex);\n            if (isStatic) {\n                tView.staticContentQueries = true;\n            }\n        }\n        createLQuery(lView);\n    }\n    /**\n     * Loads a QueryList corresponding to the current view or content query.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadQuery() {\n        return loadQueryInternal(getLView(), getCurrentQueryIndex());\n    }\n    function loadQueryInternal(lView, queryIndex) {\n        ngDevMode &&\n            assertDefined(lView[QUERIES], 'LQueries should be defined when trying to load a query');\n        ngDevMode && assertDataInRange(lView[QUERIES].queries, queryIndex);\n        return lView[QUERIES].queries[queryIndex].queryList;\n    }\n    function createLQuery(lView) {\n        var queryList = new QueryList();\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        if (lView[QUERIES] === null)\n            lView[QUERIES] = new LQueries_();\n        lView[QUERIES].queries.push(new LQuery_(queryList));\n    }\n    function createTQuery(tView, metadata, nodeIndex) {\n        if (tView.queries === null)\n            tView.queries = new TQueries_();\n        tView.queries.track(new TQuery_(metadata, nodeIndex));\n    }\n    function saveContentQueryAndDirectiveIndex(tView, directiveIndex) {\n        var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        var lastSavedDirectiveIndex = tView.contentQueries.length ? tViewContentQueries[tViewContentQueries.length - 1] : -1;\n        if (directiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(tView.queries.length - 1, directiveIndex);\n        }\n    }\n    function getTQuery(tView, index) {\n        ngDevMode && assertDefined(tView.queries, 'TQueries must be defined to retrieve a TQuery');\n        return tView.queries.getByIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n    /**\n     * Returns the appropriate `ChangeDetectorRef` for a pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectPipeChangeDetectorRef(flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        var value = injectChangeDetectorRef(true);\n        if (value == null && !(flags & exports.InjectFlags.Optional)) {\n            throw new Error(\"No provider for ChangeDetectorRef!\");\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵinvalidFactory': ɵɵinvalidFactory,\n        'ɵɵinjectPipeChangeDetectorRef': ɵɵinjectPipeChangeDetectorRef,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵCopyDefinitionFeature': ɵɵCopyDefinitionFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵelementContainer': ɵɵelementContainer,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵupdateSyntheticHostBinding': ɵɵupdateSyntheticHostBinding,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵhostProperty': ɵɵhostProperty,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadQuery': ɵɵloadQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵclassMapInterpolate1': ɵɵclassMapInterpolate1,\n        'ɵɵclassMapInterpolate2': ɵɵclassMapInterpolate2,\n        'ɵɵclassMapInterpolate3': ɵɵclassMapInterpolate3,\n        'ɵɵclassMapInterpolate4': ɵɵclassMapInterpolate4,\n        'ɵɵclassMapInterpolate5': ɵɵclassMapInterpolate5,\n        'ɵɵclassMapInterpolate6': ɵɵclassMapInterpolate6,\n        'ɵɵclassMapInterpolate7': ɵɵclassMapInterpolate7,\n        'ɵɵclassMapInterpolate8': ɵɵclassMapInterpolate8,\n        'ɵɵclassMapInterpolateV': ɵɵclassMapInterpolateV,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylePropInterpolate1': ɵɵstylePropInterpolate1,\n        'ɵɵstylePropInterpolate2': ɵɵstylePropInterpolate2,\n        'ɵɵstylePropInterpolate3': ɵɵstylePropInterpolate3,\n        'ɵɵstylePropInterpolate4': ɵɵstylePropInterpolate4,\n        'ɵɵstylePropInterpolate5': ɵɵstylePropInterpolate5,\n        'ɵɵstylePropInterpolate6': ɵɵstylePropInterpolate6,\n        'ɵɵstylePropInterpolate7': ɵɵstylePropInterpolate7,\n        'ɵɵstylePropInterpolate8': ɵɵstylePropInterpolate8,\n        'ɵɵstylePropInterpolateV': ɵɵstylePropInterpolateV,\n        'ɵɵstyleSanitizer': ɵɵstyleSanitizer,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵadvance': ɵɵadvance,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextInterpolate': ɵɵtextInterpolate,\n        'ɵɵtextInterpolate1': ɵɵtextInterpolate1,\n        'ɵɵtextInterpolate2': ɵɵtextInterpolate2,\n        'ɵɵtextInterpolate3': ɵɵtextInterpolate3,\n        'ɵɵtextInterpolate4': ɵɵtextInterpolate4,\n        'ɵɵtextInterpolate5': ɵɵtextInterpolate5,\n        'ɵɵtextInterpolate6': ɵɵtextInterpolate6,\n        'ɵɵtextInterpolate7': ɵɵtextInterpolate7,\n        'ɵɵtextInterpolate8': ɵɵtextInterpolate8,\n        'ɵɵtextInterpolateV': ɵɵtextInterpolateV,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ɵmod` and `ɵinj` properties to the module class.\n     *\n     * It's possible to compile a module via this API which will allow duplicate declarations in its\n     * root.\n     */\n    function compileNgModuleDefs(moduleType, ngModule, allowDuplicateDeclarationsInRoot) {\n        if (allowDuplicateDeclarationsInRoot === void 0) { allowDuplicateDeclarationsInRoot = false; }\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MOD_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    if (ngDevMode && ngModule.imports && ngModule.imports.indexOf(moduleType) > -1) {\n                        // We need to assert this immediately, because allowing it to continue will cause it to\n                        // go into an infinite loop before we've reached the point where we throw all the errors.\n                        throw new Error(\"'\" + stringifyForError(moduleType) + \"' module can't import itself\");\n                    }\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275mod.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$4)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJ_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/\\u0275inj.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType, allowDuplicateDeclarationsInRoot, importingModule) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef;\n        if (importingModule) {\n            ngModuleDef = getNgModuleDef(moduleType);\n            if (!ngModuleDef) {\n                throw new Error(\"Unexpected value '\" + moduleType.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n        else {\n            ngModuleDef = getNgModuleDef(moduleType, true);\n        }\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n            verifySemanticsOfNgModuleImport(mod, moduleType);\n            verifySemanticsOfNgModuleDef(mod, false, moduleType);\n        });\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        declarations.forEach(verifyDirectivesHaveSelector);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(function (decl) { return verifyDeclarationIsUnique(decl, allowDuplicateDeclarationsInRoot); });\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(function (mod) {\n                    verifySemanticsOfNgModuleImport(mod, moduleType);\n                    verifySemanticsOfNgModuleDef(mod, false, moduleType);\n                });\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyCorrectBootstrapType);\n            ngModule.bootstrap && deepForEach(ngModule.bootstrap, verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents &&\n                deepForEach(ngModule.entryComponents, verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyDirectivesHaveSelector(type) {\n            type = resolveForwardRef(type);\n            var def = getDirectiveDef(type);\n            if (!getComponentDef(type) && def && def.selectors.length == 0) {\n                errors.push(\"Directive \" + stringifyForError(type) + \" has no selector, please add it!\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type, suppressErrors) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                if (!suppressErrors) {\n                    var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                    errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                        (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                        (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n                }\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    deepForEach(component.entryComponents, verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n        function verifySemanticsOfNgModuleImport(type, importingModule) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type) || getDirectiveDef(type)) {\n                throw new Error(\"Unexpected directive '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n            if (getPipeDef(type)) {\n                throw new Error(\"Unexpected pipe '\" + type.name + \"' imported by the module '\" + importingModule.name + \"'. Please add an @NgModule annotation.\");\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type, false);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ɵcmp set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMP_DEF)) {\n                // A `ɵcmp` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIR_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) {\n                return dir.hasOwnProperty(NG_COMP_DEF) ? getComponentDef(dir) : getDirectiveDef(dir);\n            })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have a module def (\\u0275mod property)\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has a ɵcmp or ɵdir, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have a \\u0275mod property\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have a\n            // ɵcmp as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * component def (ɵcmp) onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ɵcmp`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        // Initialize ngDevMode. This must be the first statement in compileComponent.\n        // See the `initNgDevMode` docstring for more information.\n        (typeof ngDevMode === 'undefined' || ngDevMode) && initNgDevMode();\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        // Note that we're using the same function as `Directive`, because that's only subset of metadata\n        // that we need to create the ngFactoryDef. We're avoiding using the component metadata\n        // because we'd have to resolve the asynchronous templates.\n        addDirectiveFactoryDef(type, metadata);\n        Object.defineProperty(type, NG_COMP_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    var compiler = getCompilerFacade();\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign(__assign({}, directiveMetadata(type, metadata)), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addDirectiveDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * directive def onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        addDirectiveFactoryDef(type, directive || {});\n        Object.defineProperty(type, NG_DIR_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    // `directive` can be null in the case of abstract directives as a base class\n                    // that use `@Directive()` with no selector. In that case, pass empty object to the\n                    // `directiveMetadata` function instead of null.\n                    var meta = getDirectiveMetadata(type, directive || {});\n                    ngDirectiveDef =\n                        getCompilerFacade().compileDirective(angularCoreEnv, meta.sourceMapUrl, meta.metadata);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getDirectiveMetadata(type, metadata) {\n        var name = type && type.name;\n        var sourceMapUrl = \"ng:///\" + name + \"/\\u0275dir.js\";\n        var compiler = getCompilerFacade();\n        var facade = directiveMetadata(type, metadata);\n        facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name, sourceMapUrl);\n        if (facade.usesInheritance) {\n            addDirectiveDefToUndecoratedParents(type);\n        }\n        return { metadata: facade, sourceMapUrl: sourceMapUrl };\n    }\n    function addDirectiveFactoryDef(type, metadata) {\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var meta = getDirectiveMetadata(type, metadata);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + type.name + \"/\\u0275fac.js\", __assign(__assign({}, meta.metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Directive }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector !== undefined ? metadata.selector : null,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: usesLifecycleHook(type, 'ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery)\n        };\n    }\n    /**\n     * Adds a directive definition to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addDirectiveDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the def if there are no annotations and the def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) &&\n                shouldAddAbstractDirective(parent)) {\n                compileDirective(parent, null);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnnotation)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        return exportAs === undefined ? null : splitByComma(exportAs);\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnnotation(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    function usesLifecycleHook(type, name) {\n        var prototype = type.prototype;\n        return prototype && prototype.hasOwnProperty(name);\n    }\n    var LIFECYCLE_HOOKS = [\n        'ngOnChanges', 'ngOnInit', 'ngOnDestroy', 'ngDoCheck', 'ngAfterViewInit', 'ngAfterViewChecked',\n        'ngAfterContentInit', 'ngAfterContentChecked'\n    ];\n    function shouldAddAbstractDirective(type) {\n        if (LIFECYCLE_HOOKS.some(function (hookName) { return usesLifecycleHook(type, hookName); })) {\n            return true;\n        }\n        var propMetadata = getReflect().ownPropMetadata(type);\n        for (var field in propMetadata) {\n            var annotations = propMetadata[field];\n            for (var i = 0; i < annotations.length; i++) {\n                var current = annotations[i];\n                var metadataName = current.ngMetadataName;\n                if (isInputAnnotation(current) || isContentQuery(current) || isViewQuery(current) ||\n                    metadataName === 'Output' || metadataName === 'HostBinding' ||\n                    metadataName === 'HostListener') {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        var ngFactoryDef = null;\n        Object.defineProperty(type, NG_FACTORY_DEF, {\n            get: function () {\n                if (ngFactoryDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    var compiler = getCompilerFacade();\n                    ngFactoryDef = compiler.compileFactory(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275fac.js\", __assign(__assign({}, metadata), { injectFn: 'directiveInject', target: compiler.R3FactoryTarget.Pipe }));\n                }\n                return ngFactoryDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var metadata = getPipeMetadata(type, meta);\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + metadata.name + \"/\\u0275pipe.js\", metadata);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function getPipeMetadata(type, meta) {\n        return {\n            type: type,\n            typeArgumentCount: 0,\n            name: type.name,\n            deps: reflectDependencies(type),\n            pipeName: meta.name,\n            pure: meta.pure !== undefined ? meta.pure : true\n        };\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Decorator that binds a DOM event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     *\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```ts\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ɵinj = ɵɵdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The existence of this constant (in this particular file) informs the Angular compiler that the\n     * current program is actually @angular/core, which needs to be compiled specially.\n     */\n    var ITS_JUST_ANGULAR = true;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ɵfac = function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); };\n        ApplicationInitStatus.ɵprov = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function (t) { return ApplicationInitStatus.ɵfac(t); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }] }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ɵfac = function Console_Factory(t) { return new (t || Console)(); };\n        Console.ɵprov = ɵɵdefineInjectable({ token: Console, factory: function (t) { return Console.ɵfac(t); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID$1 = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ɵfac = function Compiler_Factory(t) { return new (t || Compiler)(); };\n        Compiler.ɵprov = ɵɵdefineInjectable({ token: Compiler, factory: function (t) { return Compiler.ɵfac(t); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     * @deprecated the Web Tracing Framework is no longer supported in Angular\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getNativeRequestAnimationFrame() {\n        var nativeRequestAnimationFrame = _global['requestAnimationFrame'];\n        var nativeCancelAnimationFrame = _global['cancelAnimationFrame'];\n        if (typeof Zone !== 'undefined' && nativeRequestAnimationFrame && nativeCancelAnimationFrame) {\n            // use unpatched version of requestAnimationFrame(native delegate) if possible\n            // to avoid another Change detection\n            var unpatchedRequestAnimationFrame = nativeRequestAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedRequestAnimationFrame) {\n                nativeRequestAnimationFrame = unpatchedRequestAnimationFrame;\n            }\n            var unpatchedCancelAnimationFrame = nativeCancelAnimationFrame[Zone.__symbol__('OriginalDelegate')];\n            if (unpatchedCancelAnimationFrame) {\n                nativeCancelAnimationFrame = unpatchedCancelAnimationFrame;\n            }\n        }\n        return { nativeRequestAnimationFrame: nativeRequestAnimationFrame, nativeCancelAnimationFrame: nativeCancelAnimationFrame };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b, _c = _a.shouldCoalesceEventChangeDetection, shouldCoalesceEventChangeDetection = _c === void 0 ? false : _c;\n            this.hasPendingMacrotasks = false;\n            this.hasPendingMicrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            self.shouldCoalesceEventChangeDetection = shouldCoalesceEventChangeDetection;\n            self.lastRequestAnimationFrameId = -1;\n            self.nativeRequestAnimationFrame = getNativeRequestAnimationFrame().nativeRequestAnimationFrame;\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function delayChangeDetectionForEvents(zone) {\n        if (zone.lastRequestAnimationFrameId !== -1) {\n            return;\n        }\n        zone.lastRequestAnimationFrameId = zone.nativeRequestAnimationFrame.call(_global, function () {\n            zone.lastRequestAnimationFrameId = -1;\n            updateMicroTaskStatus(zone);\n            checkStable(zone);\n        });\n        updateMicroTaskStatus(zone);\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        var delayChangeDetectionForEventsDelegate = function () { delayChangeDetectionForEvents(zone); };\n        var maybeDelayChangeDetection = !!zone.shouldCoalesceEventChangeDetection &&\n            zone.nativeRequestAnimationFrame && delayChangeDetectionForEventsDelegate;\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true, 'maybeDelayChangeDetection': maybeDelayChangeDetection },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    if (maybeDelayChangeDetection && task.type === 'eventTask') {\n                        maybeDelayChangeDetection();\n                    }\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone._hasPendingMicrotasks = hasTaskState.microTask;\n                        updateMicroTaskStatus(zone);\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function updateMicroTaskStatus(zone) {\n        if (zone._hasPendingMicrotasks ||\n            (zone.shouldCoalesceEventChangeDetection && zone.lastRequestAnimationFrameId !== -1)) {\n            zone.hasPendingMicrotasks = true;\n        }\n        else {\n            zone.hasPendingMicrotasks = false;\n        }\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            return fn.apply(applyThis, applyArgs);\n        };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ɵfac = function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); };\n        Testability.ɵprov = ɵɵdefineInjectable({ token: Testability, factory: function (t) { return Testability.ɵfac(t); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ɵfac = function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); };\n        TestabilityRegistry.ɵprov = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function (t) { return TestabilityRegistry.ɵfac(t); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    // the `window.ng` global utilities are only available in non-VE versions of\n    // Angular. The function switch below will make sure that the code is not\n    // included into Angular when PRE mode is active.\n    function publishDefaultGlobalUtils__PRE_R3__() { }\n    function publishDefaultGlobalUtils__POST_R3__() {\n        ngDevMode && publishDefaultGlobalUtils();\n    }\n    var publishDefaultGlobalUtils$1 = publishDefaultGlobalUtils__POST_R3__;\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        publishDefaultGlobalUtils$1();\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true }, {\n                        provide: INJECTOR_SCOPE,\n                        useValue: 'platform'\n                    });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZoneEventCoalescing = (options && options.ngZoneEventCoalescing) || false;\n            var ngZone = getNgZone(ngZoneOption, ngZoneEventCoalescing);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                // If the `LOCALE_ID` provider is defined at bootstrap we set the value for runtime i18n (ivy)\n                if (ivyEnabled) {\n                    var localeId = moduleRef.injector.get(LOCALE_ID$1, DEFAULT_LOCALE_ID);\n                    setLocaleId(localeId || DEFAULT_LOCALE_ID);\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ɵfac = function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); };\n        PlatformRef.ɵprov = ɵɵdefineInjectable({ token: PlatformRef, factory: function (t) { return PlatformRef.ɵfac(t); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{ type: Injector }]; }, null);\n    function getNgZone(ngZoneOption, ngZoneEventCoalescing) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) || new NgZone({\n                enableLongStackTrace: isDevMode(),\n                shouldCoalesceEventChangeDetection: ngZoneEventCoalescing\n            });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign(__assign({}, dst), objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? undefined : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var e_1, _a, e_2, _b;\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ɵfac = function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); };\n        ApplicationRef.ɵprov = ɵɵdefineInjectable({ token: ApplicationRef, factory: function (t) { return ApplicationRef.ɵfac(t); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{ type: NgZone }, { type: Console }, { type: Injector }, { type: ErrorHandler }, { type: ComponentFactoryResolver }, { type: ApplicationInitStatus }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = getRegisteredNgModuleType(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ɵfac = function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); };\n        SystemJsNgModuleLoader.ɵprov = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function (t) { return SystemJsNgModuleLoader.ɵfac(t); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{ type: Compiler }, { type: SystemJsNgModuleLoaderConfig, decorators: [{\n                    type: Optional\n                }] }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _a;\n            var _this = this;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () {\n                return getComponent(this.nativeNode) || getContext$1(this.nativeNode);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () {\n                try {\n                    var context = loadLContext(this.nativeNode);\n                    var lView = context.lView;\n                    var tData = lView[TVIEW].data;\n                    var tNode = tData[context.nodeIndex];\n                    return tNode.tagName;\n                }\n                catch (e) {\n                    return this.nativeNode.nodeName;\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                if (className) {\n                    properties['className'] =\n                        properties['className'] ? properties['className'] + (\" \" + className) : className;\n                }\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (!element) {\n                    return attributes;\n                }\n                var context = loadLContext(element, false);\n                if (context == null) {\n                    return {};\n                }\n                var lView = context.lView;\n                var tNodeAttrs = lView[TVIEW].data[context.nodeIndex].attrs;\n                var lowercaseTNodeAttrs = [];\n                // For debug nodes we take the element's attribute directly from the DOM since it allows us\n                // to account for ones that weren't set via bindings (e.g. ViewEngine keeps track of the ones\n                // that are set through `Renderer2`). The problem is that the browser will lowercase all names,\n                // however since we have the attributes already on the TNode, we can preserve the case by going\n                // through them once, adding them to the `attributes` map and putting their lower-cased name\n                // into an array. Afterwards when we're going through the native DOM attributes, we can check\n                // whether we haven't run into an attribute already through the TNode.\n                if (tNodeAttrs) {\n                    var i = 0;\n                    while (i < tNodeAttrs.length) {\n                        var attrName = tNodeAttrs[i];\n                        // Stop as soon as we hit a marker. We only care about the regular attributes. Everything\n                        // else will be handled below when we read the final attributes off the DOM.\n                        if (typeof attrName !== 'string')\n                            break;\n                        var attrValue = tNodeAttrs[i + 1];\n                        attributes[attrName] = attrValue;\n                        lowercaseTNodeAttrs.push(attrName.toLowerCase());\n                        i += 2;\n                    }\n                }\n                var eAttrs = element.attributes;\n                for (var i = 0; i < eAttrs.length; i++) {\n                    var attr = eAttrs[i];\n                    // Make sure that we don't assign the same attribute both in its\n                    // case-sensitive form and the lower-cased one from the browser.\n                    if (lowercaseTNodeAttrs.indexOf(attr.name) === -1) {\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                if (this.nativeElement && this.nativeElement.style) {\n                    return this.nativeElement.style;\n                }\n                return {};\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                if (!this._classesProxy) {\n                    var element_1 = this.nativeElement;\n                    // we use a proxy here because VE code expects `.classes` to keep\n                    // track of which classes have been added and removed. Because we\n                    // do not make use of a debug renderer anymore, the return value\n                    // must always be `false` in the event that a class does not exist\n                    // on the element (even if it wasn't added and removed beforehand).\n                    this._classesProxy = createProxy({\n                        get: function (target, prop) {\n                            return element_1 ? element_1.classList.contains(prop) : false;\n                        },\n                        set: function (target, prop, value) {\n                            return element_1 ? element_1.classList.toggle(prop, !!value) : false;\n                        },\n                        ownKeys: function () { return element_1 ? Array.from(element_1.classList).sort() : []; },\n                        getOwnPropertyDescriptor: function (k) {\n                            // we use a special property descriptor here so that enumeration operations\n                            // such as `Object.keys` will work on this proxy.\n                            return {\n                                enumerable: true,\n                                configurable: true,\n                            };\n                        },\n                    });\n                }\n                return this._classesProxy;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            var node = this.nativeNode;\n            var invokedListeners = [];\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    var callback = listener.callback;\n                    callback(eventObj);\n                    invokedListeners.push(callback);\n                }\n            });\n            // We need to check whether `eventListeners` exists, because it's something\n            // that Zone.js only adds to `EventTarget` in browser environments.\n            if (typeof node.eventListeners === 'function') {\n                // Note that in Ivy we wrap event listeners with a call to `event.preventDefault` in some\n                // cases. We use `Function` as a special token that gives us access to the actual event\n                // listener.\n                node.eventListeners(eventName).forEach(function (listener) {\n                    var unwrappedListener = listener(Function);\n                    return invokedListeners.indexOf(unwrappedListener) === -1 && unwrappedListener(eventObj);\n                });\n            }\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        var nativeNode = getNativeByTNodeOrNull(tNode, lView);\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponentHost(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentLViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild) {\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n            else {\n                if (tNode.child) {\n                    // Otherwise, its children have to be processed.\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n                // We also have to query the DOM directly in order to catch elements inserted through\n                // Renderer2. Note that this is __not__ optimal, because we're walking similar trees multiple\n                // times. ViewEngine could do it more efficiently, because all the insertions go through\n                // Renderer2, however that's not the case in Ivy. This approach is being used because:\n                // 1. Matching the ViewEngine behavior would mean potentially introducing a depedency\n                //    from `Renderer2` to Ivy which could bring Ivy code into ViewEngine.\n                // 2. We would have to make `Renderer3` \"know\" about debug nodes.\n                // 3. It allows us to capture nodes that were inserted directly via the DOM.\n                nativeNode && _queryNativeNodeDescendants(nativeNode, predicate, matches, elementsOnly);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode_1 = head_1_1.value;\n                        _addQueryMatchR3(nativeNode_1, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else if (head) {\n                var nextLView = componentView[PARENT];\n                var nextTNode = nextLView[TVIEW].data[head.index];\n                _queryNodeChildrenR3(nextTNode, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.child) {\n            // Case 4: the TNode is a view.\n            _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        // We don't want to go to the next sibling of the root node.\n        if (rootNativeNode !== nativeNode) {\n            // To determine the next node to be processed, we need to use the next or the projectionNext\n            // link, depending on whether the current node has been projected.\n            var nextTNode = (tNode.flags & 4 /* isProjected */) ? tNode.projectionNext : tNode.next;\n            if (nextTNode) {\n                _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which predicate should not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode$1(nativeNode);\n            if (!debugNode) {\n                return;\n            }\n            // Type of the \"predicate and \"matches\" array are set based on the value of\n            // the \"elementsOnly\" parameter. TypeScript is not able to properly infer these\n            // types with generics, so we manually cast the parameters accordingly.\n            if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n            else if (!elementsOnly && predicate(debugNode) &&\n                matches.indexOf(debugNode) === -1) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Match all the descendants of a DOM node against a predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryNativeNodeDescendants(parentNode, predicate, matches, elementsOnly) {\n        var nodes = parentNode.childNodes;\n        var length = nodes.length;\n        for (var i = 0; i < length; i++) {\n            var node = nodes[i];\n            var debugNode = getDebugNode$1(node);\n            if (debugNode) {\n                if (elementsOnly && debugNode instanceof DebugElement__POST_R3__ && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                else if (!elementsOnly && predicate(debugNode) &&\n                    matches.indexOf(debugNode) === -1) {\n                    matches.push(debugNode);\n                }\n                _queryNativeNodeDescendants(node, predicate, matches, elementsOnly);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndexes = tNode.propertyBindings;\n        if (bindingIndexes !== null) {\n            for (var i = 0; i < bindingIndexes.length; i++) {\n                var bindingIndex = bindingIndexes[i];\n                var propMetadata = tData[bindingIndex];\n                var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n                var propertyName = metadataParts[0];\n                if (metadataParts.length > 1) {\n                    var value = metadataParts[1];\n                    for (var j = 1; j < metadataParts.length - 1; j++) {\n                        value += renderStringify(lView[bindingIndex + j - 1]) + metadataParts[j + 1];\n                    }\n                    properties[propertyName] = value;\n                }\n                else {\n                    properties[propertyName] = lView[bindingIndex];\n                }\n            }\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    var NG_DEBUG_PROPERTY = '__ng_debug__';\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            if (!(nativeNode.hasOwnProperty(NG_DEBUG_PROPERTY))) {\n                nativeNode[NG_DEBUG_PROPERTY] = nativeNode.nodeType == Node.ELEMENT_NODE ?\n                    new DebugElement__POST_R3__(nativeNode) :\n                    new DebugNode__POST_R3__(nativeNode);\n            }\n            return nativeNode[NG_DEBUG_PROPERTY];\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode$1 = getDebugNode__POST_R3__;\n    function getAllDebugNodes() {\n        return Array.from(_nativeNodeToDebugNode.values());\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__POST_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        locale = locale || getGlobalLocale();\n        if (ivyEnabled) {\n            setLocaleId(locale);\n        }\n        return locale;\n    }\n    /**\n     * Work out the locale from the potential global properties.\n     *\n     * * Closure Compiler: use `goog.LOCALE`.\n     * * Ivy enabled: use `$localize.locale`\n     */\n    function getGlobalLocale() {\n        if (ngI18nClosureMode && typeof goog !== 'undefined' && goog.LOCALE !== 'en') {\n            // * The default `goog.LOCALE` value is `en`, while Angular used `en-US`.\n            // * In order to preserve backwards compatibility, we use Angular default value over\n            //   Closure Compiler's one.\n            return goog.LOCALE;\n        }\n        else {\n            // KEEP `typeof $localize !== 'undefined' && $localize.locale` IN SYNC WITH THE LOCALIZE\n            // COMPILE-TIME INLINER.\n            //\n            // * During compile time inlining of translations the expression will be replaced\n            //   with a string literal that is the current locale. Other forms of this expression are not\n            //   guaranteed to be replaced.\n            //\n            // * During runtime translation evaluation, the developer is required to set `$localize.locale`\n            //   if required, or just to provide their own `LOCALE_ID` provider.\n            return (ivyEnabled && typeof $localize !== 'undefined' && $localize.locale) ||\n                DEFAULT_LOCALE_ID;\n        }\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID$1,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID$1), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ɵmod = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ɵinj = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{ type: ApplicationRef }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = [];\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = [];\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, newArray(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, newArray(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = [];\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames.push(key);\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = [];\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings.push({\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = [];\n                    if (bindLen > 0)\n                        value.push(v0);\n                    if (bindLen > 1)\n                        value.push(v1);\n                    if (bindLen > 2)\n                        value.push(v2);\n                    if (bindLen > 3)\n                        value.push(v3);\n                    if (bindLen > 4)\n                        value.push(v4);\n                    if (bindLen > 5)\n                        value.push(v5);\n                    if (bindLen > 6)\n                        value.push(v6);\n                    if (bindLen > 7)\n                        value.push(v7);\n                    if (bindLen > 8)\n                        value.push(v8);\n                    if (bindLen > 9)\n                        value.push(v9);\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = [];\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            var debugNode = getDebugNode$1(node);\n            removeDebugNodeFromIndex(debugNode);\n            if (debugNode instanceof DebugNode__PRE_R3__) {\n                debugNode.listeners.length = 0;\n            }\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(newChild);\n            var debugRefEl = getDebugNode$1(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode$1(parent);\n            var debugChildEl = getDebugNode$1(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode$1(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode$1(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            scope: def.scope, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    if (ngDevMode) {\n        // This helper is to give a reasonable error message to people upgrading to v9 that have not yet\n        // installed `@angular/localize` in their app.\n        // tslint:disable-next-line: no-toplevel-property-access\n        _global.$localize = _global.$localize || function () {\n            throw new Error('It looks like your application or one of its dependencies is using i18n.\\n' +\n                'Angular 9 introduced a global `$localize()` function that needs to be loaded.\\n' +\n                'Please run `ng add @angular/localize` from the Angular CLI.\\n' +\n                '(For non-CLI projects, add `import \\'@angular/localize/init\\';` to your polyfills.ts file)');\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_ID = APP_ID;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.ApplicationModule = ApplicationModule;\n    exports.ApplicationRef = ApplicationRef;\n    exports.Attribute = Attribute;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.Component = Component;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ComponentRef = ComponentRef;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.Directive = Directive;\n    exports.ElementRef = ElementRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ErrorHandler = ErrorHandler;\n    exports.EventEmitter = EventEmitter;\n    exports.Host = Host;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.INJECTOR = INJECTOR;\n    exports.Inject = Inject;\n    exports.Injectable = Injectable;\n    exports.InjectionToken = InjectionToken;\n    exports.Injector = Injector;\n    exports.Input = Input;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.LOCALE_ID = LOCALE_ID$1;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgProbeToken = NgProbeToken;\n    exports.NgZone = NgZone;\n    exports.Optional = Optional;\n    exports.Output = Output;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.Pipe = Pipe;\n    exports.PlatformRef = PlatformRef;\n    exports.Query = Query;\n    exports.QueryList = QueryList;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.Sanitizer = Sanitizer;\n    exports.Self = Self;\n    exports.SimpleChange = SimpleChange;\n    exports.SkipSelf = SkipSelf;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.TemplateRef = TemplateRef;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.Type = Type;\n    exports.VERSION = VERSION;\n    exports.Version = Version;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.ViewRef = ViewRef$1;\n    exports.WrappedValue = WrappedValue;\n    exports.asNativeElements = asNativeElements;\n    exports.assertPlatform = assertPlatform;\n    exports.createPlatform = createPlatform;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.defineInjectable = defineInjectable;\n    exports.destroyPlatform = destroyPlatform;\n    exports.enableProdMode = enableProdMode;\n    exports.forwardRef = forwardRef;\n    exports.getDebugNode = getDebugNode$1;\n    exports.getModuleFactory = getModuleFactory;\n    exports.getPlatform = getPlatform;\n    exports.inject = inject;\n    exports.isDevMode = isDevMode;\n    exports.platformCore = platformCore;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ɵConsole = Console;\n    exports.ɵDEFAULT_LOCALE_ID = DEFAULT_LOCALE_ID;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵINJECTOR_SCOPE = INJECTOR_SCOPE;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵNG_COMP_DEF = NG_COMP_DEF;\n    exports.ɵNG_DIR_DEF = NG_DIR_DEF;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_INJ_DEF = NG_INJ_DEF;\n    exports.ɵNG_MOD_DEF = NG_MOD_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_PROV_DEF = NG_PROV_DEF;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵallowSanitizationBypassAndThrow = allowSanitizationBypassAndThrow;\n    exports.ɵand = anchorDef;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵfindLocaleData = findLocaleData;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵgetLocalePluralCase = getLocalePluralCase;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵgetSanitizationBypassType = getSanitizationBypassType;\n    exports.ɵglobal = _global;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵpid = pipeDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵqud = queryDef;\n    exports.ɵregisterLocaleData = registerLocaleData;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵrenderComponent = renderComponent$1;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵsetDocument = setDocument;\n    exports.ɵsetLocaleId = setLocaleId;\n    exports.ɵstore = store;\n    exports.ɵstringify = stringify;\n    exports.ɵted = textDef;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵunregisterLocaleData = unregisterAllLocaleData;\n    exports.ɵunv = unwrapValue;\n    exports.ɵunwrapSafeValue = unwrapSafeValue;\n    exports.ɵvid = viewDef;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵCopyDefinitionFeature = ɵɵCopyDefinitionFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵadvance = ɵɵadvance;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵclassMapInterpolate1 = ɵɵclassMapInterpolate1;\n    exports.ɵɵclassMapInterpolate2 = ɵɵclassMapInterpolate2;\n    exports.ɵɵclassMapInterpolate3 = ɵɵclassMapInterpolate3;\n    exports.ɵɵclassMapInterpolate4 = ɵɵclassMapInterpolate4;\n    exports.ɵɵclassMapInterpolate5 = ɵɵclassMapInterpolate5;\n    exports.ɵɵclassMapInterpolate6 = ɵɵclassMapInterpolate6;\n    exports.ɵɵclassMapInterpolate7 = ɵɵclassMapInterpolate7;\n    exports.ɵɵclassMapInterpolate8 = ɵɵclassMapInterpolate8;\n    exports.ɵɵclassMapInterpolateV = ɵɵclassMapInterpolateV;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵelementContainer = ɵɵelementContainer;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵhostProperty = ɵɵhostProperty;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵinject = ɵɵinject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵinjectPipeChangeDetectorRef = ɵɵinjectPipeChangeDetectorRef;\n    exports.ɵɵinvalidFactory = ɵɵinvalidFactory;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵloadQuery = ɵɵloadQuery;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylePropInterpolate1 = ɵɵstylePropInterpolate1;\n    exports.ɵɵstylePropInterpolate2 = ɵɵstylePropInterpolate2;\n    exports.ɵɵstylePropInterpolate3 = ɵɵstylePropInterpolate3;\n    exports.ɵɵstylePropInterpolate4 = ɵɵstylePropInterpolate4;\n    exports.ɵɵstylePropInterpolate5 = ɵɵstylePropInterpolate5;\n    exports.ɵɵstylePropInterpolate6 = ɵɵstylePropInterpolate6;\n    exports.ɵɵstylePropInterpolate7 = ɵɵstylePropInterpolate7;\n    exports.ɵɵstylePropInterpolate8 = ɵɵstylePropInterpolate8;\n    exports.ɵɵstylePropInterpolateV = ɵɵstylePropInterpolateV;\n    exports.ɵɵstyleSanitizer = ɵɵstyleSanitizer;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵtextInterpolate = ɵɵtextInterpolate;\n    exports.ɵɵtextInterpolate1 = ɵɵtextInterpolate1;\n    exports.ɵɵtextInterpolate2 = ɵɵtextInterpolate2;\n    exports.ɵɵtextInterpolate3 = ɵɵtextInterpolate3;\n    exports.ɵɵtextInterpolate4 = ɵɵtextInterpolate4;\n    exports.ɵɵtextInterpolate5 = ɵɵtextInterpolate5;\n    exports.ɵɵtextInterpolate6 = ɵɵtextInterpolate6;\n    exports.ɵɵtextInterpolate7 = ɵɵtextInterpolate7;\n    exports.ɵɵtextInterpolate8 = ɵɵtextInterpolate8;\n    exports.ɵɵtextInterpolateV = ɵɵtextInterpolateV;\n    exports.ɵɵupdateSyntheticHostBinding = ɵɵupdateSyntheticHostBinding;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}