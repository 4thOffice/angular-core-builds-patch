{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","inject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","ViewEncapsulation","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","template","styleUrls","clearResolutionOfComponentResourcesQueue","clear","unwrapResponse","response","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","resolveWindow","element","ownerDocument","defaultView","resolveDocument","resolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","throwError","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","styles","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","setComponentScope","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","TYPE","ACTIVE_INDEX","VIEWS","NATIVE","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initHooks","checkHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","firstPassHooks","initPhase","hooksToCall","callHooks","arr","initHooksCount","isInitHook","directive","hook","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","getFactoryOf$1","getInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","warn","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","tagName","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeHtml","getSanitizer","sanitize","HTML","document","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","sanitizeScript","unsafeScript","SCRIPT","sanitizeUrlOrResourceUrl","tag","getUrlSanitizer","defaultStyleSanitizer","isPromise","then","isObservable","subscribe","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","a","isNaN","devModeEqual$1","isListLikeIterableA","isListLikeIterable$1","isListLikeIterableB","areIterablesEqual$1","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject$1","throwMultipleComponentError","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","toDebug","debug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","initPhaseState","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","nodes","cleanup","rendererFactory","renderer","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","splice","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","lViewOrLContainer","cleanUpView","getParentState","viewOrContainer","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","initialStyles","initialClasses","allocateDirectiveIntoContext","directiveRef","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","initializeStaticContext","attrs","attr","patchInitialStylingValue","initialStyling","existingValue","renderInitialStyles","renderInitialStylingValues","renderInitialClasses","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","patchStylingMapIntoContext","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","allowValueChange","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","flag","prepareInitialFlag","insertNewMultiProperty","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setDirectiveDirty","updateSingleStylingValue","offset","input","isClassBased","forceOverride","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setContextPlayersDirty","store","DashCase","style","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","getInitialIndex","getMultiClassesStartIndex","getMultiStylesStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","dirs","getDirectiveRegistryValuesIndexOf","classesStartIndex","registerMultiMapEntry","keyValues","dirtyYes","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","readCachedMapValue","isMultiValueCacheHit","count","limit","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","applyOnCreateInstructions","fns","onElementCreationFns","_CLEAN_PROMISE","Promise","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentTView","checkView","directiveDefIdx","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","level","nextContextImpl","walkUpViews","nestingLevel","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","currentQueries","addNode","clone","executeContentQueries","isContentQueryHost","elementContainerEnd","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","overriddenRenderer","rendererToUse","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","listener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","componentHostSyntheticListener","loadComponentRenderer","loadRendererFn","lCleanupIndex","getCleanup","wrapListener","listen","generatePropertyAliases","propsLength","subscription","idx","decreaseElementDepthCount","setInputsForProperty","getInitialStyleStringValue","initialStyleValues","styleString","elementAttribute","namespace","element_1","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","propertyMetadataStartIndex","propertyMetadataEndIndex","tParent","initialInputs","tViews","privateName","direction","propStore","isInput","defs","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","initElementStyling","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","elementHostAttrs","patchContextWithStaticAttrs","startingIndex","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","stillDirty","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","booleanOrNull","updateClassProp","elementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","ignoreAllStyleUpdates","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","multiClassesEndIndex","textNative","textBinding","element_2","previousExpandoLength","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","tContainerNode","containerInternal","addTContainerToQueries","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","markViewDirty","preventDefault","returnValue","parent_2","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","markDirty","storeBindingMetadata","allocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","load","directiveInject","injectAttribute","attrNameToInject","injectAttributeImpl","CLEAN_PROMISE","getCurrentView","getTViewCleanup","errorHandler","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","NgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","InheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike$1","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","delete","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","viewAttachedToContainer","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","startIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","scope","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","_data","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","renderNode$$1","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","ComponentFactory$$1","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","ELEMENT_MARKER","marker","COMMENT_MARKER","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","i18nVarsCount","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","tIcuIndex","text$$1","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","icus","appendI18nNode","previousTNode","cursor","i18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedNodes","readCreateOpCodes","lastCreatedNode","findLastNode","removeNode","createDynamicNodeAtIndex","currentTNode","opCode","textRNode","destinationNodeIndex","destinationTNode","elementNodeIndex","commentValue","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","max","opCodes","parseNodes","currentNode","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_r3Injector","NgModuleFactory$1","NgModuleFactory$$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue$1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","flatten$1","flat","flatItem","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","queryRefresh","queryListImpl","staticViewQuery","loadViewQuery","contentQuery","tViewContentQueries","staticContentQuery","loadContentQuery","templateRefExtractor","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵcomponentHostSyntheticListener","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵqueryRefresh","ɵviewQuery","ɵstaticViewQuery","ɵstaticContentQuery","ɵloadViewQuery","ɵcontentQuery","ɵloadContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵresolveWindow","ɵresolveDocument","ɵresolveBody","ɵsetComponentScope","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","ɵsanitizeUrl","ɵsanitizeUrlOrResourceUrl","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__POST_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$2","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","isContentQuery","lifecycle","usesOnChanges","usesInheritance","extendsDirectlyFromObject","extractExportAs","part","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","convertToR3QueryPredicate","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","promise","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","ApplicationRef_Factory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":";;;;;CAMC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,QAASA,QAAQ,mBACvF,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,iBAAkB,UAAW,OAAQ,kBAAmBJ,GAClFA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,OAAUR,EAAOQ,GAAGC,SAAYT,EAAOU,KAAMV,EAAOU,KAAKC,WAHnH,CAIEC,KAAM,SAAUV,EAASQ,EAAMC,GAAa,aAkB1C,IAAIE,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,iBAChBC,wBAA2BC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GAGnF,IAAII,EAAW,WAQX,OAPAA,EAAWX,OAAOY,QAAU,SAASD,EAASE,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIX,KADTU,EAAIG,UAAUF,GACOf,OAAOS,UAAUJ,eAAec,KAAKL,EAAGV,KAAIS,EAAET,GAAKU,EAAEV,IAE9E,OAAOS,IAEKO,MAAMxB,KAAMqB,YAGhC,SAASI,EAASC,GACd,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWV,EAAI,EAChE,OAAIQ,EAAUA,EAAEJ,KAAKG,IAEjBI,KAAM,WAEF,OADIJ,GAAKP,GAAKO,EAAEJ,SAAQI,OAAI,IACnBK,MAAOL,GAAKA,EAAEP,KAAMa,MAAON,KAKhD,SAASO,EAAOP,EAAGN,GACf,IAAIO,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBQ,EAAYC,EAA3BhB,EAAIQ,EAAEJ,KAAKG,GAAOU,KACtB,IACI,WAAc,IAANhB,GAAgBA,KAAM,MAAQc,EAAIf,EAAEW,QAAQE,MAAMI,EAAGC,KAAKH,EAAEH,OAExE,MAAOO,GAASH,GAAMG,MAAOA,GAC7B,QACI,IACQJ,IAAMA,EAAEF,OAASL,EAAIR,EAAU,SAAIQ,EAAEJ,KAAKJ,GAElD,QAAU,GAAIgB,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAASG,IACL,IAAK,IAAIH,KAASjB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CiB,EAAKA,EAAGI,OAAOP,EAAOZ,UAAUF,KACpC,OAAOiB;;;;;;;OAUX,IAAIK,EAAc,kBACdC,EAAa,iBACbC,EAAgB,qBAIpB,SAASC,EAAcC,EAAMC,EAAOC,EAAaC,EAAsBC,GACnE,IAAIC,EAAWC,EAAiBL,GAChC,SAASM,IAEL,IADA,IAIIC,EAJAC,KACKC,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCD,EAAKC,GAAMlC,UAAUkC,GAGzB,GAAIvD,gBAAgBoD,EAEhB,OADAF,EAAS3B,KAAKC,MAAM0B,EAAUX,GAAUvC,MAAOsD,IACxCtD,KAEX,IAAIwD,EAAqB,KAAMH,EAAKD,GAAkBK,KAAKjC,MAAM6B,EAAId,QAAU,GAASe,KACxF,OAAO,SAASI,EAAcC,GAW1B,OAVIV,GACAA,EAAOzB,WAAM,EAAQe,GAAUoB,GAAML,KAGvBK,EAAIlD,eAAegC,GACjCkB,EAAIlB,GACJrC,OAAOwD,eAAeD,EAAKlB,GAAeV,WAAaU,IAC/CJ,KAAKmB,GACbR,GACAA,EAAqBW,GAClBA,GAQf,OALIZ,IACAK,EAAiBvC,UAAYT,OAAOU,OAAOiC,EAAYlC,YAE3DuC,EAAiBvC,UAAUgD,eAAiBhB,EAC5CO,EAAiBU,cAAgBV,EAC1BA,EAEX,SAASD,EAAiBL,GACtB,OAAO,SAASiB,IAEZ,IADA,IAAIT,KACKC,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCD,EAAKC,GAAMlC,UAAUkC,GAEzB,GAAIT,EAAO,CACP,IAAIkB,EAASlB,EAAMtB,WAAM,EAAQe,EAASe,IAC1C,IAAK,IAAIW,KAAYD,EACjBhE,KAAKiE,GAAYD,EAAOC,KAKxC,SAASC,EAAmBrB,EAAMC,EAAOC,GACrC,IAAIG,EAAWC,EAAiBL,GAChC,SAASqB,IAEL,IADA,IAIId,EAJAC,KACKC,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCD,EAAKC,GAAMlC,UAAUkC,GAGzB,GAAIvD,gBAAgBmE,EAEhB,OADAjB,EAAS1B,MAAMxB,KAAMsD,GACdtD,KAEX,IAAIwD,EAAqB,KAAMH,EAAKc,GAAuBV,KAAKjC,MAAM6B,EAAId,QAAU,GAASe,KAE7F,OADAc,EAAeC,WAAab,EACrBY,EACP,SAASA,EAAeT,EAAKW,EAAWC,GAQpC,IALA,IAAIC,EAAab,EAAIlD,eAAeiC,GAChCiB,EAAIjB,GACJtC,OAAOwD,eAAeD,EAAKjB,GAAcX,WAAaW,GAGnD8B,EAAWlD,QAAUiD,GACxBC,EAAWnC,KAAK,MAGpB,OADCmC,EAAWD,GAASC,EAAWD,QAAclC,KAAKmB,GAC5CG,GAQf,OALIZ,IACAoB,EAAsBtD,UAAYT,OAAOU,OAAOiC,EAAYlC,YAEhEsD,EAAsBtD,UAAUgD,eAAiBhB,EACjDsB,EAAsBL,cAAgBK,EAC/BA,EAEX,SAASM,EAAkB5B,EAAMC,EAAOC,EAAaC,GACjD,IAAIE,EAAWC,EAAiBL,GAChC,SAAS4B,IAEL,IADA,IAIIrB,EAJAC,KACKC,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCD,EAAKC,GAAMlC,UAAUkC,GAGzB,GAAIvD,gBAAgB0E,EAEhB,OADAxB,EAAS1B,MAAMxB,KAAMsD,GACdtD,KAEX,IAAI2E,EAAoB,KAAMtB,EAAKqB,GAAsBjB,KAAKjC,MAAM6B,EAAId,QAAU,GAASe,KAa3F,OAZA,SAASsB,EAAcC,EAAQhC,GAC3B,IAAIjC,EAAciE,EAAOjE,YAGrBkE,EAAOlE,EAAYH,eAAekC,GAClC/B,EAAY+B,GACZvC,OAAOwD,eAAehD,EAAa+B,GAAiBZ,WAAaY,GACrEmC,EAAKjC,GAAQiC,EAAKrE,eAAeoC,IAASiC,EAAKjC,OAC/CiC,EAAKjC,GAAMkC,QAAQJ,GACf3B,GACAA,EAAqBxB,WAAM,EAAQe,GAAUsC,EAAQhC,GAAOS,KASxE,OALIP,IACA2B,EAAqB7D,UAAYT,OAAOU,OAAOiC,EAAYlC,YAE/D6D,EAAqB7D,UAAUgD,eAAiBhB,EAChD6B,EAAqBZ,cAAgBY,EAC9BA;;;;;;;OAgBX,IA4CWM,EA5CPC,EAASf,EAAmB,SAAU,SAAUgB,GAAS,OAAUA,MAAOA,KAO1EC,EAAWjB,EAAmB,YAO9BkB,EAAOlB,EAAmB,QAO1BmB,EAAWnB,EAAmB,YAO9BoB,EAAOpB,EAAmB,QAO1BqB,EAAYrB,EAAmB,YAAa,SAAUsB,GAAiB,OAAUA,cAAeA;;;;;;;;AAiCpG,SAASC,EAAuBC,GAC5B,IAAK,IAAIC,KAAOD,EACZ,GAAIA,EAAyBC,KAASF,EAClC,OAAOE,EAGf,MAAMC,MAAM,qDAQhB,SAASC,EAAehB,EAAQiB,GAC5B,IAAK,IAAIH,KAAOG,EACRA,EAAOrF,eAAekF,KAASd,EAAOpE,eAAekF,KACrDd,EAAOc,GAAOG,EAAOH;;;;;;;OA4BjC,SAASI,EAAiBC,GACtB,OACIC,WAAYD,EAAKC,YAAc,KAAM5G,QAAS2G,EAAK3G,QAAS0C,WAAOmE,GAuB3E,SAASC,EAAeC,GACpB,OACI/G,QAAS+G,EAAQ/G,QAASgH,UAAWD,EAAQC,cAAiBC,QAASF,EAAQE,aAQvF,SAASC,EAAiBC,GACtB,OAAOA,GAAQA,EAAK/F,eAAegG,GAAqBD,EAAKC,GAAqB,KAOtF,SAASC,EAAeF,GACpB,OAAOA,GAAQA,EAAK/F,eAAekG,GAAmBH,EAAKG,GAAmB;;;;;;;;AAjHvE3B,EAeR1F,EAAQ0F,cAAgB1F,EAAQ0F,iBAZnBA,EAAqB,QAAI,GAAK,UAK1CA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAkB,KAAI,GAAK,OAEvCA,EAAYA,EAAsB,SAAI,GAAK,WAE3CA,EAAYA,EAAsB,SAAI,GAAK,WAqG/C,IAAIyB,EAAoBhB,GAAyBmB,gBAAiBnB,IAC9DkB,EAAkBlB,GAAyBoB,cAAepB;;;;;;;;AAS9D,SAASqB,EAAU5B,GACf,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAIA,aAAiB3E,MACjB,MAAO,IAAM2E,EAAM6B,IAAID,GAAWE,KAAK,MAAQ,IAEnD,GAAa,MAAT9B,EACA,MAAO,GAAKA,EAEhB,GAAIA,EAAM+B,eACN,MAAO,GAAK/B,EAAM+B,eAEtB,GAAI/B,EAAMrC,KACN,MAAO,GAAKqC,EAAMrC,KAEtB,IAAIqE,EAAMhC,EAAMiC,WAChB,GAAW,MAAPD,EACA,MAAO,GAAKA,EAEhB,IAAIE,EAAeF,EAAIG,QAAQ,MAC/B,OAAyB,IAAlBD,EAAsBF,EAAMA,EAAII,UAAU,EAAGF;;;;;;;OAUxD,IAAIG,EAAkB9B,GAAyB8B,gBAAiB9B,IAahE,SAAS+B,EAAWC,GAGhB,OAFAA,EAAaF,gBAAkBC,EAC/BC,EAAaN,SAAW,WAAc,OAAOL,EAAU9G,SAChDyH,EAeX,SAASC,EAAkBlB,GACvB,IAAImB,EAAKnB,EACT,MAAkB,mBAAPmB,GAAqBA,EAAGlH,eAAe8G,IAC9CI,EAAGJ,kBAAoBC,EAChBG,IAGAnB;;;;;;;OAsBf,IASIoB,EATAC,EAXJ,SAASC,IACL,IAAIC,EAAqC,oBAAfC,YAA8BA,WACpDC,EAA6B,oBAAXC,QAA0BA,OAC5CC,EAAyB,oBAATxI,MAAqD,oBAAtByI,mBAC/CzI,gBAAgByI,mBAAqBzI,KACrC0I,EAA6B,oBAAXjJ,QAA0BA,OAIhD,OAAO2I,GAAgBM,GAAYJ,GAAYE,EAErCL;;;;;;;;;;;;;;;AAsBd,SAASQ,IACL,IAAIC,EAAWV,EAAY,GAC3B,IAAKU,IAAaA,EAASC,gBACvB,MAAM,IAAI5C,MAAM,+VAKpB,OAAO2C,EAASC;;;;;;;QApBpB,SAAWZ,GACPA,EAAyBA,EAAgC,MAAI,GAAK,QAClEA,EAAyBA,EAAoC,UAAI,GAAK,YAF1E,CAGGA,IAA6BA,OAiChC,IAeIa,EAfAC,OAAmBxC,EACvB,SAASyC,EAAmBC,GACxB,IAAIC,EAASH,EAEb,OADAA,EAAmBE,EACZC,EAeX,SAASC,EAAwBC,GAC7B,IAAIC,EAAWP,EAEf,OADAA,EAAwBM,EACjBC,EAcX,SAASC,EAAO/D,EAAOgE,GAEnB,YADc,IAAVA,IAAoBA,EAAQ5J,EAAQ0F,YAAYmE,UAC5CV,GAdZ,SAASW,EAAmBlE,EAAOgE,GAE/B,QADc,IAAVA,IAAoBA,EAAQ5J,EAAQ0F,YAAYmE,cAC3BjD,IAArBwC,EACA,MAAM,IAAI9C,MAAM,qDAEf,OAAyB,OAArB8C,EACEW,EAAmBnE,OAAOgB,EAAWgD,GAGrCR,EAAiBY,IAAIpE,EAAOgE,EAAQ5J,EAAQ0F,YAAYG,SAAW,UAAOe,EAAWgD,KAK3ChE,EAAOgE,GAShE,SAASG,EAAmBnE,EAAOqE,EAAeL,GAC9C,IAAIM,EAAgBjD,EAAiBrB,GACrC,GAAIsE,GAA6C,QAA5BA,EAAcvD,WAC/B,YAA+BC,IAAxBsD,EAAczH,MAAsByH,EAAczH,MAAQyH,EAAcnK,UAC3EmK,EAAczH,MAEtB,GAAImH,EAAQ5J,EAAQ0F,YAAYG,SAC5B,OAAO,KACX,QAAsBe,IAAlBqD,EACA,OAAOA,EACX,MAAM,IAAI3D,MAAM,wBAA0BkB,EAAU5B,GAAS,KAEjE,SAASuE,EAAWC,GAEhB,IADA,IAAIpG,KACKnC,EAAI,EAAGA,EAAIuI,EAAMpI,OAAQH,IAAK,CACnC,IAAIwI,EAAMD,EAAMvI,GAChB,GAAIZ,MAAMqJ,QAAQD,GAAM,CACpB,GAAmB,IAAfA,EAAIrI,OACJ,MAAM,IAAIsE,MAAM,wCAIpB,IAFA,IAAIY,OAAON,EACPgD,EAAQ5J,EAAQ0F,YAAYmE,QACvBU,EAAI,EAAGA,EAAIF,EAAIrI,OAAQuI,IAAK,CACjC,IAAI/E,EAAO6E,EAAIE,GACX/E,aAAgBK,GAAoC,aAAxBL,EAAKjB,eACjCqF,GAAS5J,EAAQ0F,YAAYG,SAExBL,aAAgBO,GAAoC,aAAxBP,EAAKjB,eACtCqF,GAAS5J,EAAQ0F,YAAYK,SAExBP,aAAgBM,GAAgC,SAAxBN,EAAKjB,eAClCqF,GAAS5J,EAAQ0F,YAAYI,KAG7BoB,EADK1B,aAAgBG,EACdH,EAAKI,MAGLJ,EAGfxB,EAAKjB,KAAK4G,EAAOzC,EAAM0C,SAGvB5F,EAAKjB,KAAK4G,EAAOU,IAGzB,OAAOrG;;;;;;;OAeX,IAAIwG,GACA/D,iBAAoBA,EACpBI,eAAkBA,EAClB8C,OAAUA,EACVc,gBAEJ,SAASC,EAAaxD,GAClB,IAAIyD,EAAUzD,EACV0D,EAAM3D,EAAiB0D,IAAYvD,EAAeuD,GACtD,OAAKC,QAAuBhE,IAAhBgE,EAAI7K,QAGT6K,EAAI7K,QAFA;;;;;;;SAsBX8K,EAAOC,SACX,SAASC,EAAOC,GACZ,MAAoB,mBAANA;;;;;;;OAalB,IAAIC,EAAgB,6DAChBC,EAAkB,4CAClBC,EAA4B,mEAC5BC,EAAwC,WACxC,SAASA,EAAuBC,GAC5B3K,KAAK4K,SAAWD,GAAW9C,EAAiB,QA4MhD,OA1MA6C,EAAuB7J,UAAUgK,oBAAsB,WAAc,OAAO,GAC5EH,EAAuB7J,UAAUxB,QAAU,SAAU4B,GAAK,OAAO,WAE7D,IADA,IAAIqC,KACKC,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCD,EAAKC,GAAMlC,UAAUkC,GAEzB,OAAO,IAAKtC,EAAEwC,KAAKjC,MAAMP,EAAGsB,QAAU,GAASe,OAGnDoH,EAAuB7J,UAAUiK,wBAA0B,SAAUC,EAAYC,GAC7E,IAAIC,EAEAA,OADsB,IAAfF,EACE,IAAIxK,MAAMyK,EAAiB1J,QAG3B,IAAIf,MAAMwK,EAAWzJ,QAElC,IAAK,IAAIH,EAAI,EAAGA,EAAI8J,EAAO3J,OAAQH,IAK3B8J,EAAO9J,QADe,IAAf4J,KAGFA,EAAW5J,IAAMf,QACT2K,EAAW5J,OAKxB6J,GAA2C,MAAvBA,EAAiB7J,KACrC8J,EAAO9J,GAAK8J,EAAO9J,GAAGqB,OAAOwI,EAAiB7J,KAGtD,OAAO8J,GAEXP,EAAuB7J,UAAUqK,eAAiB,SAAU1E,EAAM2E,GAC9D,IAAIC,EAAU5E,EAAKW,WAQnB,GAAIoD,EAAcc,KAAKD,IAClBZ,EAAgBa,KAAKD,KAAaX,EAA0BY,KAAKD,GAClE,OAAO,KAGX,GAAI5E,EAAKhC,YAAcgC,EAAKhC,aAAe2G,EAAW3G,WAClD,OAAOgC,EAAKhC,WAGhB,IAAI8G,EAAoB9E,EAAK+E,eAC7B,GAAID,GAAqBA,IAAsBH,EAAWI,eAAgB,CAGtE,IAAIA,EAA8C,mBAAtBD,EAAmCA,IAAsBA,EACjFE,EAAeD,EAAexE,IAAI,SAAU0E,GAAa,OAAOA,GAAaA,EAAUjF,OACvFkF,EAAqBH,EAAexE,IAAI,SAAU0E,GAClD,OAAOA,GAAaE,GAAoCF,EAAUG,cAEtE,OAAO5L,KAAK8K,wBAAwBU,EAAcE,GAGtD,IAAIV,EAAmBxE,EAAK/F,eAAeiC,IAAe8D,EAAK9D,GAC3DqI,EAAa/K,KAAK4K,UAAY5K,KAAK4K,SAASiB,gBAC5C7L,KAAK4K,SAASiB,eAAe,oBAAqBrF,GACtD,OAAIuE,GAAcC,EACPhL,KAAK8K,wBAAwBC,EAAYC,GAM7C,IAAIzK,MAAMiG,EAAKlF,QAAQwK,UAAK5F,IAEvCwE,EAAuB7J,UAAU2D,WAAa,SAAUgC,GAGpD,IAAK6D,EAAO7D,GACR,SAEJ,IAAI2E,EAAaY,GAAcvF,GAC3BhC,EAAaxE,KAAKkL,eAAe1E,EAAM2E,GAI3C,OAHK3G,GAAc2G,IAAe/K,SAC9BoE,EAAaxE,KAAKwE,WAAW2G,IAE1B3G,OAEXkG,EAAuB7J,UAAUmL,gBAAkB,SAAUC,EAAYd,GAErE,GAAIc,EAAWC,aAAeD,EAAWC,cAAgBf,EAAWe,YAAa,CAC7E,IAAIA,EAAcD,EAAWC,YAI7B,MAH2B,mBAAhBA,GAA8BA,EAAYA,cACjDA,EAAcA,EAAYA,aAEvBA,EAGX,OAAID,EAAWL,YAAcK,EAAWL,aAAeT,EAAWS,WACvDD,GAAoCM,EAAWL,YAGtDK,EAAWxL,eAAegC,GACnBwJ,EAAWxJ,GAEf,MAEXiI,EAAuB7J,UAAUqL,YAAc,SAAUD,GACrD,IAAK5B,EAAO4B,GACR,SAEJ,IAAId,EAAaY,GAAcE,GAC3BE,EAAiBnM,KAAKgM,gBAAgBC,EAAYd,OAEtD,OADwBA,IAAe/K,OAASJ,KAAKkM,YAAYf,OACxC3I,OAAO2J,IAEpCzB,EAAuB7J,UAAUuL,iBAAmB,SAAUH,EAAYd,GAEtE,GAAIc,EAAWI,cACXJ,EAAWI,eAAiBlB,EAAWkB,aAAc,CACrD,IAAIA,EAAeJ,EAAWI,aAI9B,MAH4B,mBAAjBA,GAA+BA,EAAaA,eACnDA,EAAeA,EAAaA,cAEzBA,EAGX,GAAIJ,EAAWK,gBACXL,EAAWK,iBAAmBnB,EAAWmB,eAAgB,CACzD,IAAIC,EAAmBN,EAAWK,eAC9BE,KAIJ,OAHApM,OAAOqM,KAAKF,GAAkBG,QAAQ,SAAUC,GAC5CH,EAAeG,GAAQhB,GAAoCY,EAAiBI,MAEzEH,EAGX,OAAIP,EAAWxL,eAAekC,GACnBsJ,EAAWtJ,GAEf,MAEX+H,EAAuB7J,UAAUwL,aAAe,SAAUJ,GACtD,IAAK5B,EAAO4B,GACR,SAEJ,IAAId,EAAaY,GAAcE,GAC3BI,KACJ,GAAIlB,IAAe/K,OAAQ,CACvB,IAAIwM,EAAuB5M,KAAKqM,aAAalB,GAC7C/K,OAAOqM,KAAKG,GAAsBF,QAAQ,SAAUzI,GAChDoI,EAAapI,GAAY2I,EAAqB3I,KAGtD,IAAI4I,EAAkB7M,KAAKoM,iBAAiBH,EAAYd,GAWxD,OAVI0B,GACAzM,OAAOqM,KAAKI,GAAiBH,QAAQ,SAAUzI,GAC3C,IAAI2H,KACAS,EAAa5L,eAAewD,IAC5B2H,EAAWvJ,KAAKb,MAAMoK,EAAYrJ,EAAS8J,EAAapI,KAE5D2H,EAAWvJ,KAAKb,MAAMoK,EAAYrJ,EAASsK,EAAgB5I,KAC3DoI,EAAapI,GAAY2H,IAG1BS,GAEX3B,EAAuB7J,UAAUgM,gBAAkB,SAAUZ,GACzD,OAAK5B,EAAO4B,IAGLjM,KAAKoM,iBAAiBH,EAAY7L,aAE7CsK,EAAuB7J,UAAUiM,iBAAmB,SAAUtG,EAAMuG,GAChE,OAAOvG,aAAgB2D,GAAQ4C,KAAcvG,EAAK3F,WAEtD6J,EAAuB7J,UAAUmM,OAAS,SAAUxG,GAAQ,UAC5DkE,EAAuB7J,UAAUoM,OAAS,SAAUpK,GAAQ,OAAO,IAAIuH,SAAS,IAAK,YAAcvH,EAAO,MAC1G6H,EAAuB7J,UAAUqM,OAAS,SAAUrK,GAChD,OAAO,IAAIuH,SAAS,IAAK,IAAK,YAAcvH,EAAO,UAEvD6H,EAAuB7J,UAAUsM,OAAS,SAAUtK,GAEhD,OAAO,IAAIuH,SAAS,IAAK,OADN,UAAYvH,EAAO,wBAA0BA,EAAO,wCAA0CA,EAAO,qBAI5H6H,EAAuB7J,UAAUuM,UAAY,SAAU5G,GAEnD,MAAoB,iBAATA,GAAqBA,EAAe,SACpCA,EAAe,SAGnB,KAAOM,EAAUN,IAE5BkE,EAAuB7J,UAAUwM,YAAc,SAAU7G,GAAQ,MAAO,KAAOM,EAAUN,IACzFkE,EAAuB7J,UAAUyM,kBAAoB,SAAUzK,EAAM0K,EAAWC,EAASC,GACrF,OAAOA,GAEX/C,EAAuB7J,UAAU6M,YAAc,SAAUC,EAAgB9K,GAAQ,OAAO8K,EAAe9K,IAChG6H,EA9MgC,GAgN3C,SAASiB,GAAoCiC,GACzC,OAAKA,EAGEA,EAAqB7G,IAAI,SAAU8G,GACtC,IACI/J,EADgB+J,EAAoBrH,KACN1C,cAElC,OAAO,IAAKA,EAAcL,KAAKjC,MAAMsC,EAAevB,QAAU,GADzCsL,EAAoBvK,KAAOuK,EAAoBvK,gBAI5E,SAASyI,GAAchI,GACnB,IAAI+J,EAAc/J,EAAKlD,UAAYT,OAAO2N,eAAehK,EAAKlD,WAAa,KAI3E,OAHiBiN,EAAcA,EAAYlN,YAAc,OAGpCR;;;;;;;OAUzB,IAAIwK,GAAW,KACf,SAASoD,KACL,OAAQpD,GAAWA,IAAY,IAAIF,EAEvC,SAASuD,GAAoBzH,GACzB,OAAO0H,GAAoBF,KAAaxJ,WAAWgC,IAEvD,SAAS0H,GAAoBC,GACzB,IAAIC,EAAW9F,IACf,OAAO6F,EAAKpH,IAAI,SAAUsH,GAAO,OAErC,SAASC,EAAkBF,EAAUC,GACjC,IAAIvJ,GACAI,MAAO,KACPqJ,MAAM,EACNC,UAAU,EACVC,SAAUL,EAASxG,yBAAyB8G,MAC5C/O,MAAM,EACNgP,UAAU,GAEd,SAASC,EAAwB1J,GAC7BJ,EAAK2J,SAAWL,EAASxG,yBAAyB8G,MAClD5J,EAAKI,MAAQA,EAEjB,GAAI3E,MAAMqJ,QAAQyE,GAAM,CACpB,GAAmB,IAAfA,EAAI/M,OACJ,MAAM,IAAIsE,MAAM,yCAEpB,IAAK,IAAIiE,EAAI,EAAGA,EAAIwE,EAAI/M,OAAQuI,IAAK,CACjC,IAAIgF,EAAQR,EAAIxE,GAChB,QAAc3D,IAAV2I,EAIC,GAAIA,aAAiB1J,GAA+C,aAAnC0J,EAAMvO,UAAUuD,eAClDiB,EAAK0J,UAAW,OAEf,GAAIK,aAAiBxJ,GAA+C,aAAnCwJ,EAAMvO,UAAUuD,eAClDiB,EAAK6J,UAAW,OAEf,GAAIE,aAAiBzJ,GAA2C,SAAnCyJ,EAAMvO,UAAUuD,eAC9CiB,EAAKnF,MAAO,OAEX,GAAIkP,aAAiBvJ,GAA2C,SAAnCuJ,EAAMvO,UAAUuD,eAC9CiB,EAAKyJ,MAAO,OAEX,GAAIM,aAAiB5J,EACtBH,EAAKI,MAAQ2J,EAAM3J,WAElB,GAAI2J,aAAiBtJ,EAAW,CACjC,QAA4BW,IAAxB2I,EAAMrJ,cACN,MAAM,IAAII,MAAM,mCAEpBd,EAAKI,MAAQ2J,EAAMrJ,cACnBV,EAAK2J,SAAWL,EAASxG,yBAAyBrC,eAGlDqJ,EAAwBC,SAKhCD,EAAwBP,GAE5B,OAAOvJ;;;;;;;OAvDiCwJ,CAAkBF,EAAUC,KA6HxE,IAAIS,GAAYrJ,GAAyBsJ,QAASC,OAAQC,SAAUxJ,IACpE,SAASyJ,GAAmBpK,GACxB,YAAyBoB,IAAlBpB,EAAKqK,SAEhB,SAASC,GAAmBtK,GACxB,OAAOgK,MAAahK,EAExB,SAASuK,GAAqBvK,GAC1B,YAA2BoB,IAApBpB,EAAKwK,WAEhB,SAASC,GAAsBzK,GAC3B,YAA4BoB,IAArBpB,EAAK0K;;;;;;;OAUE/J,GAAyBsJ,QAASC,OAAQC,SAAUxJ,IAAtE,IAQIgK,GAAa7M,EAAc,kBAAcsD,OAAWA,OAAWA,EAAW,SAAUM,EAAM1B,GAAQ,OAAO4K,GAA0BlJ,EAAM1B,KACzI6K,GAtFJ,SAASC,GAAkBpJ,EAAMqJ,GAC7B,IAAI3F,EAAM,KAEN1D,EAAK/F,eAAegG,IAExBrG,OAAOwD,eAAe4C,EAAMC,GACxB6C,IAAK,WACD,GAAY,OAARY,EAAc,CAEd,IAAIpF,EAAO+K,IAAa5J,WAAY,MAChC6J,EAAeZ,GAAmBpK,IAASuK,GAAqBvK,IAChEsK,GAAmBtK,IAASyK,GAAsBzK,GAClDiL,GACAlN,KAAM2D,EAAK3D,KACX2D,KAAMA,EACNwJ,kBAAmB,EACnB/J,WAAYnB,EAAKmB,WACjBgK,SAAUhC,GAAoBzH,GAC9B0J,cAAUhK,GAKd,IAHKgJ,GAAmBpK,IAASuK,GAAqBvK,UAAwBoB,IAAdpB,EAAKqJ,OACjE4B,EAAaG,SAAWhC,GAAoBpJ,EAAKqJ,OAEhD2B,EAOA,GAAIZ,GAAmBpK,GAExBiL,EAAaZ,SAAWrK,EAAKqK,cAE5B,GAAIC,GAAmBtK,GAExBiL,EAAad,SAAWnK,EAAKmK,cAE5B,GAAII,GAAqBvK,GAE1BiL,EAAaT,WAAaxK,EAAKwK,eAE9B,CAAA,IAAIC,GAAsBzK,GAM3B,MAAM,IAAIc,MAAM,sBAJhBmK,EAAaP,YAAc1K,EAAK0K,iBAhBhCO,EAAaZ,SAAW3I,EAsB5B0D,EAAM5B,IAAoBsH,kBAAkB9F,EAAkB,QAAUtD,EAAK3D,KAAO,sBAAuBkN,GAE/G,OAAO7F,MAmCfwF,GAA4BC,GAiD5BQ,GAAgC,WAChC,SAASA,EAAeC,EAAOhK,GAC3BpG,KAAKoQ,MAAQA,EAEbpQ,KAAK6D,eAAiB,iBACtB7D,KAAK4G,qBAAkBV,EACD,iBAAXE,EAIPpG,KAAKqQ,kBAAoBjK,OAERF,IAAZE,IACLpG,KAAK4G,gBAAkBb,GACnBE,WAAYG,EAAQH,YAAc,OAClC5G,QAAS+G,EAAQ/G,WAK7B,OADA8Q,EAAetP,UAAUsG,SAAW,WAAc,MAAO,kBAAoBnH,KAAKoQ,OAC3ED,EApBwB,GA8B/BG,GAAS,WACTC,GAAsB,IAAInQ,OAC1BoQ,GAAqBD,GASrBE,GAAW,IAAIN,GAAe,YAAa,GAE3CO,GAA8B,WAC9B,SAASA,KAeT,OAbAA,EAAa7P,UAAUyI,IAAM,SAAUpE,EAAOqE,GAE1C,QADsB,IAAlBA,IAA4BA,EAAgBgH,IAC5ChH,IAAkBgH,GAAqB,CAKvC,IAAIjO,EAAQ,IAAIsD,MAAM,sCAAwCkB,EAAU5B,GAAS,KAEjF,MADA5C,EAAMO,KAAO,oBACPP,EAEV,OAAOiH,GAEJmH,EAhBsB,GAkC7BC,GAA0B,WAC1B,SAASA,KA8BT,OApBAA,EAAS7P,OAAS,SAAUsF,EAASwK,GACjC,OAAIrQ,MAAMqJ,QAAQxD,GACP,IAAIyK,GAAezK,EAASwK,GAG5B,IAAIC,GAAezK,EAAQC,UAAWD,EAAQwK,OAAQxK,EAAQvD,MAAQ,OAGrF8N,EAASH,mBAAqBD,GAC9BI,EAASG,KAAO,IAAIJ,GAEpBC,EAAS/J,gBAAkBb,GACvBE,WAAY,MACZ5G,QAAS,WAAc,OAAO4J,EAAOwH,OAMzCE,EAASN,mBAAqB,EACvBM,EA/BkB,GAiCzBI,GAAQ,SAAUhP,GAClB,OAAOA,GAEPiP,MACAC,GAAWF,GACXG,GAAoB,WACpB,OAAO3Q,MAAMM,UAAUsQ,MAAM5P,KAAKF,YAElC+P,GAAc3L,GAAyBsJ,QAASC,OAAQC,SAAUxJ,IAClE4L,GAAgB,cAChBC,GAAqB,kBACrBC,GAAgBZ,GAASG,KACzBU,GAAW,OACXC,GAAc,IACdZ,GAAgC,WAChC,SAASA,EAAexK,EAAWuK,EAAQ9K,QACxB,IAAX8K,IAAqBA,EAASW,SACnB,IAAXzL,IAAqBA,EAAS,MAClC9F,KAAK4Q,OAASA,EACd5Q,KAAK8F,OAASA,EACd,IAAI4L,EAAU1R,KAAK2R,SAAW,IAAIC,IAClCF,EAAQG,IAAIlB,IAAYzL,MAAOyL,GAAUhJ,GAAIoJ,GAAO5C,KAAM6C,GAAOjP,MAAO/B,KAAM8R,QAAQ,IACtFJ,EAAQG,IAAIpB,IAAYvL,MAAOuL,GAAU9I,GAAIoJ,GAAO5C,KAAM6C,GAAOjP,MAAO/B,KAAM8R,QAAQ,IAkD9F,SAASC,EAA4BL,EAASM,GAC1C,GAAIA,EAEA,IADAA,EAAWtK,EAAkBsK,cACLzR,MAEpB,IAAK,IAAIY,EAAI,EAAGA,EAAI6Q,EAAS1Q,OAAQH,IACjC4Q,EAA4BL,EAASM,EAAS7Q,QAGjD,CAAA,GAAwB,mBAAb6Q,EAGZ,MAAMC,GAAY,+BAAgCD,GAEjD,IAAIA,GAAgC,iBAAbA,IAAyBA,EAASjD,QAiC1D,MAAMkD,GAAY,sBAAuBD,GA/BzC,IAAI9M,EAAQwC,EAAkBsK,EAASjD,SACnCmD,EA/ChB,SAASC,EAAgBH,GACrB,IAAI7D,EA8IR,SAASiE,EAAYJ,GACjB,IAAI7D,EAAO6C,GACPqB,EAAeL,EAAS7D,KAC5B,GAAIkE,GAAgBA,EAAa/Q,OAAQ,CACrC6M,KACA,IAAK,IAAIhN,EAAI,EAAGA,EAAIkR,EAAa/Q,OAAQH,IAAK,CAC1C,IAAIiF,EAAU,EAEd,IADIlB,EAAQwC,EAAkB2K,EAAalR,eACtBZ,MACjB,IAAK,IAAIsJ,EAAI,EAAGqC,EAAchH,EAAO2E,EAAIqC,EAAY5K,OAAQuI,IAAK,CAC9D,IAAIxF,EAAa6H,EAAYrC,GACzBxF,aAAsBc,GAAYd,GAAcc,EAChDiB,GAAoB,EAEf/B,aAAsBgB,GAAYhB,GAAcgB,EACrDe,IAAoB,EAEf/B,aAAsBe,GAAQf,GAAce,EACjDgB,IAAoB,EAGpBlB,EADKb,aAAsBY,EACnBZ,EAAWa,MAGXwC,EAAkBrD,GAItC8J,EAAK9L,MAAO6C,MAAOA,EAAOkB,QAASA,UAGtC,GAAI4L,EAASxC,YAAa,CAC3B,IAAItK,EACJiJ,IAAUjJ,MADNA,EAAQwC,EAAkBsK,EAASxC,aACfpJ,QAAS,SAEhC,KAAKiM,GAAkBjB,MAAeY,GAEvC,MAAMC,GAAY,kBAAqBD,GAE3C,OAAO7D,EArLIiE,CAAYJ,GACnBrK,EAAKoJ,GACLhP,EAAQiP,GACRc,GAAS,EACT/C,EAAUrH,EAAkBsK,EAASjD,SACzC,GAAIqC,MAAeY,EAEfjQ,EAAQiQ,EAAS/C,cAEhB,GAAI+C,EAAS1C,WACd3H,EAAKqK,EAAS1C,gBAEb,GAAI0C,EAASxC,kBACb,GAAIwC,EAAS7C,SACd2C,GAAS,EACTnK,EAAKD,EAAkBsK,EAAS7C,cAE/B,CAAA,GAAsB,mBAAXJ,EAKZ,MAAMkD,GAAY,sGAAuGD,GAJzHF,GAAS,EACTnK,EAAKoH,EAKT,OAASZ,KAAMA,EAAMxG,GAAIA,EAAImK,OAAQA,EAAQ/P,MAAOA,GAsBrBoQ,CAAgBH,GACvC,IAAuB,IAAnBA,EAASM,MAAgB,CAEzB,IAAIC,EAAgBb,EAAQpI,IAAIpE,GAChC,GAAIqN,GACA,GAAIA,EAAc5K,KAAOuJ,GACrB,MAAMsB,GAAsBtN,QAKhCwM,EAAQG,IAAI3M,EAAOqN,GACfrN,MAAO8M,EAASjD,QAChBZ,QACA2D,QAAQ,EACRnK,GAAIuJ,GACJnP,MAAOiP,KAKfuB,EAAcpE,KAAK9L,MAAO6C,MAD1BA,EAAQ8M,EACgC5L,QAAS,IAErD,IAAIqM,EAASf,EAAQpI,IAAIpE,GACzB,GAAIuN,GAAUA,EAAO9K,IAAMuJ,GACvB,MAAMsB,GAAsBtN,GAEhCwM,EAAQG,IAAI3M,EAAOgN,IA7FvBH,CAA4BL,EAASrL,GAiBzC,OAfAwK,EAAehQ,UAAUyI,IAAM,SAAUpE,EAAOqE,EAAeL,QAC7C,IAAVA,IAAoBA,EAAQ5J,EAAQ0F,YAAYmE,SACpD,IAAIsJ,EAASzS,KAAK2R,SAASrI,IAAIpE,GAC/B,IACI,OA8FZ,SAASwN,EAAgBxN,EAAOuN,EAAQf,EAASd,EAAQrH,EAAeL,GACpE,IACI,OAgBR,SAASyJ,EAAazN,EAAOuN,EAAQf,EAASd,EAAQrH,EAAeL,GACjE,IAAI7F,EACAtB,EACJ,IAAI0Q,GAAYvJ,EAAQ5J,EAAQ0F,YAAYK,SAoCjC6D,EAAQ5J,EAAQ0F,YAAYI,OACnCrD,EAAQ6O,EAAOtH,IAAIpE,EAAOqE,EAAejK,EAAQ0F,YAAYmE,cArCV,CAInD,IADApH,EAAQ0Q,EAAO1Q,QACFkP,GACT,MAAMrL,MAAM6L,GAAc,uBAEzB,GAAI1P,IAAUiP,GAAO,CACtByB,EAAO1Q,MAAQkP,GACf,IACIa,EAASW,EAAOX,OAChBnK,EAAK8K,EAAO9K,GACZiL,EAAaH,EAAOtE,KACpBA,EAAO6C,GACX,GAAI4B,EAAWtR,OAAQ,CACnB6M,KACA,IAAK,IAAIhN,EAAI,EAAGA,EAAIyR,EAAWtR,OAAQH,IAAK,CACxC,IAAI0R,EAAYD,EAAWzR,GACvBiF,EAAUyM,EAAUzM,QACpB0M,EAAwB,EAAV1M,EAA8BsL,EAAQpI,IAAIuJ,EAAU3N,YAASgB,EAC/EiI,EAAK9L,KAAKqQ,EAEVG,EAAU3N,MAGV4N,EAEApB,EAGCoB,GAA2B,EAAV1M,EAAiDwK,EAAhBW,GAAkC,EAAVnL,EAA6B,KAAOuK,GAASH,mBAAoBlR,EAAQ0F,YAAYmE,WAGxKsJ,EAAO1Q,MAAQA,EAAQ+P,EAAS,KAAMzO,EAAKsE,GAAIlE,KAAKjC,MAAM6B,EAAId,QAAU,GAAS4L,KAAYxG,EAAGnG,WAxBtF0E,EAwBiGiI,IAMnH,OAAOpM,EA1DI4Q,CAAazN,EAAOuN,EAAQf,EAASd,EAAQrH,EAAeL,GAEvE,MAAO/G,GAWH,MATMA,aAAayD,QACfzD,EAAI,IAAIyD,MAAMzD,KAEPA,EAAEmP,IAAsBnP,EAAEmP,SAChCvM,QAAQG,GACTuN,GAAUA,EAAO1Q,OAASkP,KAE1BwB,EAAO1Q,MAAQiP,IAEb7O,GA7GKuQ,CAAgBxN,EAAOuN,EAAQzS,KAAK2R,SAAU3R,KAAK4Q,OAAQrH,EAAeL,GAErF,MAAO/G,GACH,OAAO4Q,GAAmB5Q,EAAG+C,EAAO,sBAAuBlF,KAAK8F,UAGxE+K,EAAehQ,UAAUsG,SAAW,WAChC,IAAI6L,KAEJ,OAF2BhT,KAAK2R,SACxBjF,QAAQ,SAAUpC,EAAGpF,GAAS,OAAO8N,EAAO3Q,KAAKyE,EAAU5B,MAC5D,kBAAoB8N,EAAOhM,KAAK,MAAQ,KAE5C6J,EA1BwB,GAuDnC,SAAS2B,GAAsBtN,GAC3B,OAAO+M,GAAY,mDAAoD/M,GA4J3E,SAAS6N,GAAmB5Q,EAAG+C,EAAO+N,EAAmBnN,GACrD,IAAIoN,EAAY/Q,EAAEmP,IAOlB,MANIpM,EAAMoL,KACN4C,EAAUnO,QAAQG,EAAMoL,KAE5BnO,EAAEgR,QAAUC,GAAY,KAAOjR,EAAEgR,QAASD,EAAWD,EAAmBnN,GACxE3D,EAAEkP,IAAiB6B,EACnB/Q,EAAEmP,IAAsB,KAClBnP,EAEV,SAASiR,GAAYC,EAAMC,EAAKL,EAAmBnN,QAChC,IAAXA,IAAqBA,EAAS,MAClCuN,EAAOA,GAA2B,OAAnBA,EAAKE,OAAO,IAAeF,EAAKE,OAAO,IAAM9B,GAAc4B,EAAKG,OAAO,GAAKH,EAC3F,IAAII,EAAU3M,EAAUwM,GACxB,GAAIA,aAAe/S,MACfkT,EAAUH,EAAIvM,IAAID,GAAWE,KAAK,aAEjC,GAAmB,iBAARsM,EAAkB,CAC9B,IAAII,KACJ,IAAK,IAAI/N,KAAO2N,EACZ,GAAIA,EAAI7S,eAAekF,GAAM,CACzB,IAAI5D,EAAQuR,EAAI3N,GAChB+N,EAAMrR,KAAKsD,EAAM,KAAwB,iBAAV5D,EAAqB4R,KAAK7M,UAAU/E,GAAS+E,EAAU/E,KAG9F0R,EAAU,IAAMC,EAAM1M,KAAK,MAAQ,IAEvC,OAAYiM,GAAqBnN,EAAS,IAAMA,EAAS,IAAM,IAAM,IAAM2N,EAAU,MAAQJ,EAAKO,QAAQpC,GAAU,QAExH,SAASS,GAAYoB,EAAMC,GACvB,OAAO,IAAI1N,MAAMwN,GAAYC,EAAMC,EAAK;;;;;;;OAU5C,IAAIO,GAAsB,iBACtBC,GAAuB,kBACvBC,GAAe,gBA0BnB,SAASC,GAAuBvH,GAC5B,OAAIA,EAAKnL,OAAS,EAGP;;;;;;;;AAff,SAAS2S,EAAqBxH,GAE1B,IADA,IAAIvF,KACK/F,EAAI,EAAGA,EAAIsL,EAAKnL,SAAUH,EAAG,CAClC,GAAI+F,EAAIG,QAAQoF,EAAKtL,KAAO,EAExB,OADA+F,EAAI7E,KAAKoK,EAAKtL,IACP+F,EAEXA,EAAI7E,KAAKoK,EAAKtL,IAElB,OAAO+F,EAIY+M,CAAqBxH,EAAK0E,QAAQ+C,WACxBnN,IAAI,SAAUoN,GAAK,OAAOrN,EAAUqN,EAAEjP,SACvC8B,KAAK,QAAU,IAEpC,GAEX,SAASoN,GAAexL,EAAUjD,EAAK0O,EAA2BC,GAC9D,IAAI7H,GAAQ9G,GACR4O,EAASF,EAA0B5H,GACnCnK,EAASgS,EApCjB,SAASE,EAAarB,EAASmB,GAC3B,IAAIG,EAAMtB,EAAU,gBAAkBmB,aAAyB1O,MAAQ0O,EAAcnB,QAAUmB,GAC3FhS,EAAQsD,MAAM6O,GAElB,OADAnS,EAAMwR,IAAwBQ,EACvBhS,EAgCsBkS,CAAaD,EAAQD,GAAiB1O,MAAM2O,GAMzE,OALAjS,EAAMoS,OAASA,GACfpS,EAAMmK,KAAOA,EACbnK,EAAMqS,WAAa/L,GACnBtG,EAAM+R,0BAA4BA,EAClC/R,EAAMwR,IAAwBQ,EACvBhS,EAEX,SAASoS,GAAO9L,EAAUjD,GACtB3F,KAAK2U,UAAUtS,KAAKuG,GACpB5I,KAAKyM,KAAKpK,KAAKsD,GAEf3F,KAAKmT,QAAUnT,KAAKqU,0BAA0BrU,KAAKyM,MA0HvD,SAASmI,GAAkB3I,EAAY4I,GAEnC,IADA,IAAIC,KACK3T,EAAI,EAAG4T,EAAKF,EAAOvT,OAAQH,EAAI4T,EAAI5T,IAAK,CAC7C,IAAI6T,EAAYH,EAAO1T,GAKnB2T,EAAUzS,KAJT2S,GAAiC,GAApBA,EAAU1T,OAIT0T,EAAUjO,IAAID,GAAWE,KAAK,KAH9B,KAMvB,OAAOpB,MAAM,sCAAyCkB,EAAUmF,GAAc,KAC1E6I,EAAU9N,KAAK,MAAQ,2GAEvBF,EAAUmF,GAAc;;;;;;;;AA+DhC,IAAIgJ,GAA+B,WAI/B,SAASA,EAAc/P,EAAOgQ,GAG1B,GAFAlV,KAAKkF,MAAQA,EACblF,KAAKkV,GAAKA,GACLhQ,EACD,MAAM,IAAIU,MAAM,0BAEpB5F,KAAKmV,YAAcrO,EAAU9G,KAAKkF,OAgBtC,OAXA+P,EAAc3L,IAAM,SAAUpE,GAC1B,OAAOkQ,GAAmB9L,IAAI5B,EAAkBxC,KAEpD9E,OAAOwD,eAAeqR,EAAe,gBAIjC3L,IAAK,WAAc,OAAO8L,GAAmBC,cAC7CC,YAAY,EACZC,cAAc,IAEXN,EA1BuB,GAiD9BG,GAAqB,IArBQ,WAC7B,SAASI,IACLxV,KAAKyV,SAAW,IAAI7D,IAiBxB,OAfA4D,EAAY3U,UAAUyI,IAAM,SAAUpE,GAClC,GAAIA,aAAiB+P,GACjB,OAAO/P,EACX,GAAIlF,KAAKyV,SAASC,IAAIxQ,GAClB,OAAOlF,KAAKyV,SAASnM,IAAIpE,GAE7B,IAAIyQ,EAAS,IAAIV,GAAc/P,EAAO+P,GAAcI,cAEpD,OADArV,KAAKyV,SAAS5D,IAAI3M,EAAOyQ,GAClBA,GAEXvV,OAAOwD,eAAe4R,EAAY3U,UAAW,gBACzCyI,IAAK,WAAc,OAAOtJ,KAAKyV,SAASG,MACxCN,YAAY,EACZC,cAAc,IAEXC,EAnBqB,IA6E5BK,GAAY,IA3Ce,WAC3B,SAASC,EAAUC,GACf/V,KAAK+V,uBAAyBA,EA2BlC,OAzBAD,EAAUjV,UAAUmV,mBAAqB,SAAUC,GAAQjW,KAAK+V,uBAAyBE,GACzFH,EAAUjV,UAAUxB,QAAU,SAAUmH,GAAQ,OAAOxG,KAAK+V,uBAAuB1W,QAAQmH,IAC3FsP,EAAUjV,UAAU2D,WAAa,SAAUyH,GACvC,OAAOjM,KAAK+V,uBAAuBvR,WAAWyH,IAElD6J,EAAUjV,UAAUqL,YAAc,SAAUD,GACxC,OAAOjM,KAAK+V,uBAAuB7J,YAAYD,IAEnD6J,EAAUjV,UAAUwL,aAAe,SAAUJ,GACzC,OAAOjM,KAAK+V,uBAAuB1J,aAAaJ,IAEpD6J,EAAUjV,UAAUiM,iBAAmB,SAAUtG,EAAMuG,GACnD,OAAO/M,KAAK+V,uBAAuBjJ,iBAAiBtG,EAAMuG,IAE9D+I,EAAUjV,UAAUoM,OAAS,SAAUpK,GAAQ,OAAO7C,KAAK+V,uBAAuB9I,OAAOpK,IACzFiT,EAAUjV,UAAUqM,OAAS,SAAUrK,GAAQ,OAAO7C,KAAK+V,uBAAuB7I,OAAOrK,IACzFiT,EAAUjV,UAAUsM,OAAS,SAAUtK,GAAQ,OAAO7C,KAAK+V,uBAAuB5I,OAAOtK,IACzFiT,EAAUjV,UAAUuM,UAAY,SAAU5G,GAAQ,OAAOxG,KAAK+V,uBAAuB3I,UAAU5G,IAC/FsP,EAAUjV,UAAUwM,YAAc,SAAU7G,GAAQ,OAAOxG,KAAK+V,uBAAuB1I,YAAY7G,IACnGsP,EAAUjV,UAAUyM,kBAAoB,SAAUzK,EAAM0K,EAAWC,EAASC,GACxE,OAAOzN,KAAK+V,uBAAuBzI,kBAAkBzK,EAAM0K,EAAWC,EAASC,IAEnFqI,EAAUjV,UAAU6M,YAAc,SAAUwI,EAAYrT,GACpD,OAAO7C,KAAK+V,uBAAuBrI,YAAYwI,EAAYrT,IAExDiT,EA7BmB,GA2Cd,CAAc,IAAIpL,GAa9ByL,GAAsC,WACtC,SAASA,EAAqBxQ,EAAK6I,EAAU4H,GACzCpW,KAAK2F,IAAMA,EACX3F,KAAKwO,SAAWA,EAChBxO,KAAKoW,WAAaA,EAKtB,OAHAD,EAAqBE,QAAU,SAAU1Q,GACrC,OAAO,IAAIwQ,EAAqBxQ,GAAK,EAAO,OAEzCwQ,EAT8B,GAWrCG,MACAC,GACA,SAASA,GAA4B5Q,EAAK6Q,EAAmBjE,GACzDvS,KAAK2F,IAAMA,EACX3F,KAAKwW,kBAAoBA,EACzBxW,KAAKuS,cAAgBA,EACrBvS,KAAKyW,gBAAkBzW,KAAKwW,kBAAkB,IAQlDE,GACA,SAASA,GAITrX,EAIAsX,GACI3W,KAAKX,QAAUA,EACfW,KAAK2W,aAAeA,GAmC5B,SAASC,GAA0B5E,GAC/B,OAAO,IAAIuE,GAA4BtB,GAAc3L,IAAI0I,EAASjD,UA7BtE,SAAS8H,EAAyB7E,GAC9B,IAAI8E,EACAC,EACJ,GAAI/E,EAAS7C,SAAU,CACnB,IAAIA,EAAWzH,EAAkBsK,EAAS7C,UAC1C2H,EAAYjB,GAAUxW,QAAQ8P,GAC9B4H,EAAeC,GAAiB7H,QAE3B6C,EAASxC,aACdsH,EAAY,SAAUG,GAAiB,OAAOA,GAC9CF,GAAgBZ,GAAqBE,QAAQpB,GAAc3L,IAAI0I,EAASxC,gBAEnEwC,EAAS1C,YACdwH,EAAY9E,EAAS1C,WACrByH,EA6ER,SAASG,EAAsBjL,EAAY0K,GACvC,GAAKA,EAGA,CACD,IAAIQ,EAAWR,EAAa5P,IAAI,SAAU9F,GAAK,OAAQA,KACvD,OAAO0V,EAAa5P,IAAI,SAAU9F,GAAK,OAAOmW,GAAcnL,EAAYhL,EAAGkW,KAJ3E,OAAOH,GAAiB/K,GA/ETiL,CAAsBlF,EAAS1C,WAAY0C,EAAS7D,QAGnE2I,EAAY,WAAc,OAAO9E,EAAS/C,UAC1C8H,EAAeT,IAEnB,OAAO,IAAII,GAA0BI,EAAWC,GAS6BF,CAAyB7E,IAAYA,EAASM,QAAS,GAuExI,SAAS0E,GAAiB/K,GACtB,IAAI4I,EAASgB,GAAUrR,WAAWyH,GAClC,IAAK4I,EACD,SACJ,GAAIA,EAAOwC,KAAK,SAAU7W,GAAK,OAAY,MAALA,IAClC,MAAMoU,GAAkB3I,EAAY4I,GAExC,OAAOA,EAAO9N,IAAI,SAAUvG,GAAK,OAAO4W,GAAcnL,EAAYzL,EAAGqU,KAEzE,SAASuC,GAAcnL,EAAYqL,EAAUzC,GACzC,IAAI3P,EAAQ,KACRsJ,GAAW,EACf,IAAKjO,MAAMqJ,QAAQ0N,GACf,OACWC,GADPD,aAAoBrS,EACKqS,EAASpS,MAGToS,EAHgB9I,EAAU,MAO3D,IADA,IAAI4H,EAAa,KACRjV,EAAI,EAAGA,EAAImW,EAAShW,SAAUH,EAAG,CACtC,IAAIqW,EAAgBF,EAASnW,GACzBqW,aAAyBrN,EACzBjF,EAAQsS,EAEHA,aAAyBvS,EAC9BC,EAAQsS,EAActS,MAEjBsS,aAAyBrS,EAC9BqJ,GAAW,EAENgJ,aAAyBpS,GAAQoS,aAAyBnS,EAC/D+Q,EAAaoB,EAERA,aAAyBrH,KAC9BjL,EAAQsS,GAIhB,GAAa,OADbtS,EAAQwC,EAAkBxC,IAEtB,OAAOqS,GAAkBrS,EAAOsJ,EAAU4H,GAG1C,MAAMxB,GAAkB3I,EAAY4I,GAG5C,SAAS0C,GAAkBrS,EAAOsJ,EAAU4H,GACxC,OAAO,IAAID,GAAqBlB,GAAc3L,IAAIpE,GAAQsJ,EAAU4H;;;;;;;OAWxE,IAyaWqB,GAaAC,GApEPC,GAlXAC,GAAY,IAAIxX,OAsChByX,GAAoC,WACpC,SAASA,KA2FT,OAxDAA,EAAmBC,QAAU,SAAUzR,GACnC,OAxMR,SAAS0R,EAA2B1R,GAChC,IAEI2R,EAOR,SAASC,EAAiC5R,EAAW6R,GACjD,IAAK,IAAI/W,EAAI,EAAGA,EAAIkF,EAAU/E,OAAQH,IAAK,CACvC,IAAI6Q,EAAW3L,EAAUlF,GACrBgX,EAAWD,EAAuB5O,IAAI0I,EAASrM,IAAIuP,IACvD,GAAIiD,EAAU,CACV,GAAInG,EAASO,gBAAkB4F,EAAS5F,cACpC,MA/OL3M,MAAM,0DA+OmDuS,EA/OqB,IA+OXnG,GAElE,GAAIA,EAASO,cACT,IAAK,IAAI1I,EAAI,EAAGA,EAAImI,EAASwE,kBAAkBlV,OAAQuI,IACnDsO,EAAS3B,kBAAkBnU,KAAK2P,EAASwE,kBAAkB3M,SAI/DqO,EAAuBrG,IAAIG,EAASrM,IAAIuP,GAAIlD,OAG/C,CACD,IAAIE,EAEAA,EADAF,EAASO,cACU,IAAIgE,GAA4BvE,EAASrM,IAAKqM,EAASwE,kBAAkBrF,QAASa,EAASO,eAG3FP,EAEvBkG,EAAuBrG,IAAIG,EAASrM,IAAIuP,GAAIhD,IAGpD,OAAOgG,EAnCmBD,CAqC9B,SAASG,EAAoB/R,EAAWa,GAepC,OAdAb,EAAUqG,QAAQ,SAAUvM,GACxB,GAAIA,aAAagK,EACbjD,EAAI7E,MAAO0M,QAAS5O,EAAGgP,SAAUhP,SAEhC,GAAIA,GAAiB,iBAALA,QAA+B+F,IAAd/F,EAAE4O,QACpC7H,EAAI7E,KAAKlC,OAER,CAAA,KAAIA,aAAaI,OAIlB,MArWZ,SAAS8X,EAAqBrG,GAC1B,OAAOpM,MAAM,4EAA8EoM,GAoW7EqG,CAAqBlY,GAH3BiY,EAAoBjY,EAAG+G,MAMxBA,EAtDUkR,CAAoB/R,MACXU,IAAI6P,IACuC,IAAIhF,KACzE,OAAOrR,MAAM+X,KAAKN,EAAoBhU,UAoM3B+T,CAA2B1R,IAyBtCwR,EAAmBU,iBAAmB,SAAUlS,EAAWuK,GACvD,IAAI4H,EAA8BX,EAAmBC,QAAQzR,GAC7D,OAAOwR,EAAmBY,sBAAsBD,EAA6B5H,IAyBjFiH,EAAmBY,sBAAwB,SAAUpS,EAAWuK,GAC5D,OAAO,IAAI8H,GAAoBrS,EAAWuK,IAEvCiH,EA5F4B,GA8FnCa,GAAqC,WAIrC,SAASA,EAAoBC,EAAYC,GAErC5Y,KAAK6Y,qBAAuB,EAC5B7Y,KAAK2Y,WAAaA,EAClB3Y,KAAK4Q,OAASgI,GAAW,KACzB,IAAIE,EAAMH,EAAWrX,OACrBtB,KAAK+Y,OAAS,IAAIxY,MAAMuY,GACxB9Y,KAAKgZ,KAAO,IAAIzY,MAAMuY,GACtB,IAAK,IAAI3X,EAAI,EAAGA,EAAI2X,EAAK3X,IACrBnB,KAAK+Y,OAAO5X,GAAKwX,EAAWxX,GAAGwE,IAAIuP,GACnClV,KAAKgZ,KAAK7X,GAAKyW,GAgJvB,OA7IAc,EAAoB7X,UAAUyI,IAAM,SAAUpE,EAAOqE,GAEjD,YADsB,IAAlBA,IAA4BA,EAAgBiH,IACzCxQ,KAAKiZ,UAAUhE,GAAc3L,IAAIpE,GAAQ,KAAMqE,IAE1DmP,EAAoB7X,UAAUqY,sBAAwB,SAAU7S,GAC5D,IAAImS,EAA8BX,GAAmBC,QAAQzR,GAC7D,OAAOrG,KAAKmZ,wBAAwBX,IAExCE,EAAoB7X,UAAUsY,wBAA0B,SAAU9S,GAC9D,IAAI+S,EAAM,IAAIV,EAAoBrS,GAElC,OADA+S,EAAIxI,OAAS5Q,KACNoZ,GAEXV,EAAoB7X,UAAUwY,sBAAwB,SAAUrH,GAC5D,OAAOhS,KAAKsZ,oBAAoBzB,GAAmBC,SAAS9F,IAAW,KAE3E0G,EAAoB7X,UAAUyY,oBAAsB,SAAUtH,GAC1D,OAAOhS,KAAKuZ,qBAAqBvH,IAErC0G,EAAoB7X,UAAU2Y,mBAAqB,SAAUjV,GACzD,GAAIA,EAAQ,GAAKA,GAASvE,KAAK2Y,WAAWrX,OACtC,MAxhBZ,SAASmY,EAAiBlV,GACtB,OAAOqB,MAAM,SAAWrB,EAAQ,sBAuhBlBkV,CAAiBlV,GAE3B,OAAOvE,KAAK2Y,WAAWpU,IAG3BmU,EAAoB7X,UAAU6Y,KAAO,SAAU1H,GAC3C,GAAIhS,KAAK6Y,uBAAyB7Y,KAAK2Z,yBACnC,MAhpBZ,SAASC,EAAsBhR,EAAUjD,GACrC,OAAOyO,GAAexL,EAAUjD,EAAK,SAAU8G,GAC3C,MAAO,wCAA0CuH,GAAuBvH,KA8oB9DmN,CAAsB5Z,KAAMgS,EAASrM,KAE/C,OAAO3F,KAAKuZ,qBAAqBvH,IAErC0G,EAAoB7X,UAAU8Y,uBAAyB,WAAc,OAAO3Z,KAAKgZ,KAAK1X,QACtFoX,EAAoB7X,UAAU0Y,qBAAuB,SAAUvH,GAC3D,GAAIA,EAASO,cAAe,CAExB,IADA,IAAIrL,EAAM,IAAI3G,MAAMyR,EAASwE,kBAAkBlV,QACtCH,EAAI,EAAGA,EAAI6Q,EAASwE,kBAAkBlV,SAAUH,EACrD+F,EAAI/F,GAAKnB,KAAK6Z,aAAa7H,EAAUA,EAASwE,kBAAkBrV,IAEpE,OAAO+F,EAGP,OAAOlH,KAAK6Z,aAAa7H,EAAUA,EAASwE,kBAAkB,KAGtEkC,EAAoB7X,UAAUgZ,aAAe,SAAU7H,EAAU8H,GAC7D,IAEI3L,EAWAmF,EAbAyG,EAAQ/Z,KACRX,EAAUya,EAA6Bza,QAE3C,IACI8O,EACI2L,EAA6BnD,aAAa5P,IAAI,SAAUsH,GAAO,OAAO0L,EAAMC,2BAA2B3L,KAE/G,MAAOlM,GAIH,MAHIA,EAAEuS,QACFvS,EAAEuS,OAAO1U,KAAMgS,EAASrM,KAEtBxD,EAGV,IACImR,EAAMjU,EAAQmC,WAAM,EAAQe,EAAS4L,IAEzC,MAAOhM,GACH,MAppBZ,SAAS8X,EAAmBrR,EAAUsR,EAAmBC,EAAexU,GACpE,OAAOyO,GAAexL,EAAUjD,EAAK,SAAU8G,GAC3C,IAAI2N,EAAQtT,EAAU2F,EAAK,GAAGvH,OAC9B,OAAOgV,EAAkB/G,QAAU,mCAAqCiH,EAAQ,IAAMpG,GAAuBvH,GAAQ,KACtHyN,GAgpBWD,CAAmBja,KAAMmC,EAAGA,EAAS6P,EAASrM,KAExD,OAAO2N,GAEXoF,EAAoB7X,UAAUmZ,2BAA6B,SAAU3L,GACjE,OAAOrO,KAAKiZ,UAAU5K,EAAI1I,IAAK0I,EAAI+H,WAAY/H,EAAIG,SAAW,KAAOgC,KAEzEkI,EAAoB7X,UAAUoY,UAAY,SAAUtT,EAAKyQ,EAAY7M,GACjE,OAAI5D,IAAQ+S,EAAoB2B,aACrBra,KAEPoW,aAAsBhR,EACfpF,KAAKsa,cAAc3U,EAAK4D,GAGxBvJ,KAAKua,iBAAiB5U,EAAK4D,EAAe6M,IAGzDsC,EAAoB7X,UAAU2Z,eAAiB,SAAUC,GACrD,IAAK,IAAItZ,EAAI,EAAGA,EAAInB,KAAK+Y,OAAOzX,OAAQH,IACpC,GAAInB,KAAK+Y,OAAO5X,KAAOsZ,EAInB,OAHIza,KAAKgZ,KAAK7X,KAAOyW,KACjB5X,KAAKgZ,KAAK7X,GAAKnB,KAAK0Z,KAAK1Z,KAAK2Y,WAAWxX,KAEtCnB,KAAKgZ,KAAK7X,GAGzB,OAAOyW,IAGXc,EAAoB7X,UAAU6Z,aAAe,SAAU/U,EAAK4D,GACxD,GAAIA,IAAkBiH,GAClB,OAAOjH,EAGP,MA9uBZ,SAASoR,EAAgB/R,EAAUjD,GAC/B,OAAOyO,GAAexL,EAAUjD,EAAK,SAAU8G,GAE3C,MAAO,mBADK3F,EAAU2F,EAAK,GAAGvH,OACM,IAAM8O,GAAuBvH,KA2uBvDkO,CAAgB3a,KAAM2F,IAIpC+S,EAAoB7X,UAAUyZ,cAAgB,SAAU3U,EAAK4D,GACzD,IAAI+J,EAAMtT,KAAKwa,eAAe7U,EAAIuP,IAClC,OAAQ5B,IAAQsE,GAAatE,EAAMtT,KAAK0a,aAAa/U,EAAK4D,IAG9DmP,EAAoB7X,UAAU0Z,iBAAmB,SAAU5U,EAAK4D,EAAe6M,GAC3E,IAAIgD,EAOJ,IALIA,EADAhD,aAAsB/Q,EAChBrF,KAAK4Q,OAGL5Q,KAEHoZ,aAAeV,GAAqB,CACvC,IAAIkC,EAAOxB,EACP9F,EAAMsH,EAAKJ,eAAe7U,EAAIuP,IAClC,GAAI5B,IAAQsE,GACR,OAAOtE,EACX8F,EAAMwB,EAAKhK,OAEf,OAAY,OAARwI,EACOA,EAAI9P,IAAI3D,EAAIT,MAAOqE,GAGnBvJ,KAAK0a,aAAa/U,EAAK4D,IAGtCnJ,OAAOwD,eAAe8U,EAAoB7X,UAAW,eACjDyI,IAAK,WAGD,MAAO,kCASnB,SAASuR,EAAcjS,EAAUjB,GAE7B,IADA,IAAIT,EAAM,IAAI3G,MAAMqI,EAAS+P,WAAWrX,QAC/BH,EAAI,EAAGA,EAAIyH,EAAS+P,WAAWrX,SAAUH,EAC9C+F,EAAI/F,GAAKwG,EAAGiB,EAAS4Q,mBAAmBrY,IAE5C,OAAO+F;;;;;;;;;;;;;;;;;;;;;OAhBiB2T,CAAc7a,KAAM,SAAUG,GAAK,MAAO,KAAOA,EAAEwF,IAAIwP,YAAc,OAChFnO,KAAK,MAC6C,MAE3DsO,YAAY,EACZC,cAAc,IAElBmD,EAAoB7X,UAAUsG,SAAW,WAAc,OAAOnH,KAAKmV,aACnEuD,EAAoB2B,aAAepF,GAAc3L,IAAIqH,IAC9C+H,EA9J6B,GAmOpCoC,GAA+B,IAAI3K,GAAe,6BAuBlD4K,GAAkBtW,EAAkB,kBAAmB,SAAUuW,EAAUC,GAE3E,YADa,IAATA,IAAmBA,MACfla,GAAWia,SAAUA,EAAUZ,OAAO,EAAOc,aAAa,EAAOC,aAAa,GAASF,IAd/FtD,GACA,SAASA,QAuBTyD,GAAe3W,EAAkB,eAAgB,SAAUuW,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACfla,GAAWia,SAAUA,EAAUZ,OAAO,EAAMc,aAAa,EAAOC,aAAa,GAAQF,IAC9FtD,IAOC0D,GAAe5W,EAAkB,eAAgB,SAAUuW,EAAUC,GAErE,YADa,IAATA,IAAmBA,MACfla,GAAWia,SAAUA,EAAUZ,OAAO,EAAOc,aAAa,EAAMC,aAAa,GAAQF,IAC9FtD,IAOC2D,GAAY7W,EAAkB,YAAa,SAAUuW,EAAUC,GAC/D,OAAQla,GAAWia,SAAUA,EAAUZ,OAAO,EAAMc,aAAa,EAAMC,aAAa,GAAQF,IAC7FtD;;;;;;;;AASQF,GAYRnY,EAAQmY,0BAA4BnY,EAAQmY,6BANnBA,GAAgC,OAAI,GAAK,SAKjEA,GAAwBA,GAAiC,QAAI,GAAK,WAE3DC,GA+BRpY,EAAQic,wBAA0Bjc,EAAQic,2BA1BpB7D,GAAgC,UAAI,GAAK,YAK9DA,GAAqBA,GAA8B,QAAI,GAAK,UAK5DA,GAAqBA,GAAkC,YAAI,GAAK,cAKhEA,GAAqBA,GAA+B,SAAI,GAAK,WAM7DA,GAAqBA,GAA8B,QAAI,GAAK,UAI5DA,GAAqBA,GAAgC,UAAI,GAAK;;;;;;;;AAqBlE,IAiHW8D,GAjHPC,GAAmBhW,GAAyBiW,eAAgBjW,IAC5DkW,GAAmBlW,GAAyBmW,eAAgBnW,IAC5DoW,GAAcpW,GAAyBqW,UAAWrW,IAClDsW,GAAgBtW,GAAyBuW,YAAavW,IACtDwW,GAAcxW,GAAyByW,UAAWzW,IAOlD0W,GAAgB1W,GAAyB4K,kBAAmB5K,IA8E5D2W,GAAmC,IAAIC,IAM3C,SAASC,GAAyBC,GAC9B,SAAWA,EAAUC,cAAgBD,EAAUE,UAC3CF,EAAUG,WAAaH,EAAUG,UAAUpb,QAEnD,SAASqb,KACLP,GAAiCQ,QAErC,SAASC,GAAeC,GACpB,MAA0B,iBAAZA,EAAuBA,EAAWA,EAASzJ;;;;;;;;;;;;;;;AAUlDmI,GA+BRlc,EAAQkc,oBAAsBlc,EAAQkc,uBAtBnBA,GAA4B,SAAI,GAAK,WASvDA,GAAkBA,GAA0B,OAAI,GAAK,SAIrDA,GAAkBA,GAAwB,KAAI,GAAK,OAQnDA,GAAkBA,GAA6B,UAAI,GAAK;;;;;;;;AA0E5D,IAAIuB,MACAC,MA2BJ,SAASC,GAAgBlb,GACrB,MAAoB,mBAATA,EACAA,EAAMc,MAAQd,EACL,iBAATA,EACAA,EACE,MAATA,EACO,GACS,iBAATA,GAA0C,mBAAdA,EAAMyE,KAClCzE,EAAMyE,KAAK3D,MAAQd,EAAMyE,KAC7B,GAAKzE,EAEhB,IAAImb,IAAqD,oBAA1BC,uBAAyCA,uBACpEC,YACF3Z,KAAKoE,GACP,SAASwV,GAAcC,GACnB,OAASza,KAAM,SAAUgC,OAAQyY,EAAQC,cAAcC,aAE3D,SAASC,GAAgBH,GACrB,OAASza,KAAM,WAAYgC,OAAQyY,EAAQC,eAE/C,SAASG,GAAYJ,GACjB,OAASza,KAAM,OAAQgC,OAAQyY,EAAQC,cAAcI,MAgBzD,IAAIC,GAA0B,IAK9B,SAASC,GAAqBC,GAC1B,OAAOA,EAAIzW,QAAQuW,KAA4B;;;;;;;OAmCnD,SAASG,GAAWtJ,GAGhB,MAAM,IAAI7O,MAAM,oBAAsB6O;;;;;;;;AAsC1C,IAAIuJ,GAAmB,EAgBvB,SAASC,GAAgBC,GACrB,IAAI1X,EAAO0X,EAAoB1X,KAC3B2X,EAAgB3X,EAAK3F,UACrBud,KACAlU,GACA1D,KAAMA,EACN6X,kBAAmB,KACnBC,OAAQJ,EAAoBI,OAC5BC,KAAML,EAAoBK,KAC1Blf,QAAS6e,EAAoB7e,QAC7Bod,SAAUyB,EAAoBzB,UAAY,KAC1C+B,mBAAoBN,EAAoBM,mBACxCC,aAAcP,EAAoBO,cAAgB,KAClDC,eAAgBR,EAAoBQ,gBAAkB,KACtDN,eAAgBA,EAChBO,OAAQ,KACRC,QAAS,KACTC,SAAUX,EAAoBW,UAAY,KAC1CC,UAAW,KACXC,OAAQZ,EAAca,UAAY,KAClCC,QAASd,EAAce,WAAa,KACpCC,iBAAkBhB,EAAciB,oBAAsB,KACtDC,oBAAqBlB,EAAcmB,uBAAyB,KAC5DC,cAAepB,EAAcqB,iBAAmB,KAChDC,iBAAkBtB,EAAcuB,oBAAsB,KACtDC,UAAWxB,EAAcyB,aAAe,KACxCC,OAAQ3B,EAAoB4B,kBAAoBxgB,EAAQmY,wBAAwBsI,OAChFC,cAAe,KACfC,SAAU,KACVC,UAAWhC,EAAoBgC,UAC/BC,UAAWjC,EAAoBiC,WAAa,KAC5CC,SAAUlC,EAAoBkC,UAAY,KAC1CnF,KAAMiD,EAAoBjD,SAG1BoF,cAAenC,EAAoBmC,eAAiB/gB,EAAQkc,kBAAkB8E,SAC9EpL,GAAI,IACJqL,OAAQrC,EAAoBqC,QAAUvD,GACtCwD,EAAG,KACHC,SAAU,KACVC,QAASxC,EAAoBwC,SAAW,MAkB5C,OAhBAxW,EAAIsW;;;;;;;;AArER,SAASG,EAAchZ,GACnB,MAAO,IAAOR,SAAUQ,GAoEhBgZ,CAAc,WAClB,IAAIC,EAAiB1C,EAAoB2C,WACrCC,EAAU5C,EAAoBkC,SAC9BW,EAAY7C,EAAoB8C,MACpC9W,EAAIgL,IAAM8I,KACV9T,EAAIyU,OAASsC,GAAa/C,EAAoBS,OAAQP,GAClDlU,EAAI0U,QAAUqC,GAAa/C,EAAoBU,SAC/CkC,GAAWA,EAAQpU,QAAQ,SAAU/E,GAAM,OAAOA,EAAGuC,KACzDA,EAAI8V,cAAgBY,EAChB,WAAc,OAAkC,mBAAnBA,EAAgCA,IAAmBA,GAC3E7Z,IAAIma,KACT,KACJhX,EAAI+V,SAAWc,EACX,WAAc,OAA6B,mBAAdA,EAA2BA,IAAcA,GAAWha,IAAIoa,KACrF,OAEDjX,EAEX,SAASkX,GAAkB5a,EAAMqa,EAAYG,GACzC,IAAI9W,EAAM1D,EAAKkV,eACfxR,EAAI8V,cAAgB,WAAc,OAAOa,EAAW9Z,IAAIma,KACxDhX,EAAI+V,SAAW,WAAc,OAAOe,EAAMja,IAAIoa,KAElD,SAASD,GAAoB1a,GAKzB,OAJU6a,GAAgB7a,IAAS8a,GAAgB9a,GAMvD,SAAS2a,GAAe3a,GAKpB,OAJU+a,GAAW/a,GAMzB,SAASgb,GAAetX,GAUpB,OARI1D,KAAM0D,EAAI1D,KACVib,UAAWvX,EAAIuX,WAAazE,GAC5B0E,aAAcxX,EAAIwX,cAAgB1E,GAClC1W,QAAS4D,EAAI5D,SAAW0W,GACxB1d,QAAS4K,EAAI5K,SAAW0d,GACxB2E,wBAAyB,KACzBjB,QAASxW,EAAIwW,SAAW,MA2DhC,SAASO,GAAa3N,EAAKsO,GACvB,GAAW,MAAPtO,EACA,OAAOyJ,GACX,IAAI8E,KACJ,IAAK,IAAIC,KAAexO,EACpB,GAAIA,EAAI7S,eAAeqhB,GAAc,CACjC,IAAIC,EAAazO,EAAIwO,GACjBE,EAAeD,EACfxhB,MAAMqJ,QAAQmY,KACdC,EAAeD,EAAW,GAC1BA,EAAaA,EAAW,IAE5BF,EAAUE,GAAcD,EACpBF,IACCA,EAAUG,GAAcC,GAIrC,OAAOH,EAcX,SAASI,GAAWC,GAChB,IAAI9D,KACJ,OACIO,OAAQsC,GAAaiB,EAAevD,OAAQP,GAC5CA,eAAgBA,EAChBQ,QAASqC,GAAaiB,EAAetD,UAiB7C,IAAIuD,GAAkBlE,GAetB,SAASmE,GAAWC,GAChB,OACIxf,KAAMwf,EAAQxf,KACdxD,QAASgjB,EAAQhjB,QACjBijB,MAAuB,IAAjBD,EAAQC,KACd3C,UAAW0C,EAAQ7b,KAAK3F,UAAU+e,aAAe,MAQzD,SAASyB,GAAgB7a,GACrB,OAAOA,EAAKiV,KAAqB,KAErC,SAAS6F,GAAgB9a,GACrB,OAAOA,EAAKmV,KAAqB,KAErC,SAAS4F,GAAW/a,GAChB,OAAOA,EAAKqV,KAAgB,KAEhC,SAAS0G,GAAe/b,EAAMgc,GAC1B,IAAIxG,EAAcxV,EAAKuV,KAAkB,KACzC,IAAKC,IAAiC,IAAlBwG,EAChB,MAAM,IAAI5c,MAAM,QAAUkB,EAAUN,GAAQ,0CAEhD,OAAOwV;;;;;;;OAaX,IAAIyG,GAAO,EACPC,GAAQ,EACRC,GAAQ,EACRC,GAAS,EACTC,GAAO,EACPC,GAAU,EACVC,GAAS,EACTC,GAAgB,EAChBC,GAAU,EACVC,GAAU,EACVC,GAAa,GACbC,GAAmB,GACnBC,GAAW,GACXC,GAAY,GACZC,GAAa,GACbC,GAAa,GACbC,GAAkB,GAClBC,GAAmB,GAEnBC,GAAgB,GAchBC,GAAO,EAMPC,GAAe,EAGfC,GAAQ,EACRC,GAAS,EAYTC,GAAwB;;;;;;;;AAgC5B,SAASC,GAAYliB,GACjB,KAAOxB,MAAMqJ,QAAQ7H,IACjBA,EAAQA,EAAM0gB,IAElB,OAAO1gB,EAMX,SAASmiB,GAAQniB,GACb,OAAOxB,MAAMqJ,QAAQ7H,IAAiC,iBAAhBA,EAAM6hB,IAMhD,SAASO,GAAapiB,GAClB,OAAOxB,MAAMqJ,QAAQ7H,KAA0B,IAAhBA,EAAM6hB,IAazC,SAASQ,GAAiB7f,EAAO8f,GAC7B,OAAOJ,GAAYI,EAAM9f,EAAQof,KAErC,SAASW,GAAiBC,EAAOC,GAC7B,OAAOP,GAAYO,EAASD,EAAMhgB,QAEtC,SAASkgB,GAASlgB,EAAOmgB,GAGrB,OAAOA,EAAKhC,IAAOzH,KAAK1W,EAAQof,IAGpC,SAASgB,GAAaD,EAAMngB,GAExB,OAAOmgB,EAAKngB,EAAQof,IAExB,SAASiB,GAAwBC,EAAWL,GAExC,IAAIM,EAAYN,EAASK,GAEzB,OADYX,GAAQY,GAAaA,EAAYA,EAAUrC,IAM3D,SAASsC,GAAYR,GACjB,OAA+C,IAAzB,EAAdA,EAAMrb,OAElB,SAAS8b,GAAe9a,GACpB,OAAwB,OAAjBA,EAAIuS,SAEf,SAASwI,GAAWpgB,GAChB,OAA8C,IAAtB,IAAhBA,EAAO8d,KAMnB,SAASuC,GAAgBrgB,GAErB,OAAOA,EAAOmf,IAElB,SAASmB,GAAiBtgB,GACtB,IAAI9C,EAAQmjB,GAAgBrgB,GAC5B,OAAI9C,EACOxB,MAAMqJ,QAAQ7H,GAASA,EAAQA,EAAMsiB,MAEzC;;;;;;;;AA+DX,IAsUIe,GApOAC,GAlGAC,GAAQ,EACRC,GAAkB,EAClBC,GAA6B,EAC7BC,IAAsB,EAoHtBC,IArBAL,GACA,SAASA,GAIThmB,EAIAsmB,EAAgBC,GACZ5lB,KAAKX,QAAUA,EAKfW,KAAK6lB,WAAY,EACjB7lB,KAAK8lB,oBAAsBH,EAC3B3lB,KAAK+lB,WAAaH,IAIiB/kB;;;;;;;;AA6D3C,SAASmlB,GAAsBC,EAAgBC,EAAcC,GAGzD,IAAIrH,EAAYoH,EAAapH,UAAWC,EAASmH,EAAanH,OAAQE,EAAUiH,EAAajH,QACzFH,KACCqH,EAAMC,YAAcD,EAAMC,eAAiB/jB,KAAK4jB,EAAgBnH,IAChEqH,EAAME,aAAeF,EAAME,gBAAkBhkB,KAAK4jB,EAAgBnH,IAEnEC,IACCoH,EAAMC,YAAcD,EAAMC,eAAiB/jB,MAAM4jB,EAAgBlH,GAElEE,KACCkH,EAAMC,YAAcD,EAAMC,eAAiB/jB,KAAK4jB,EAAgBhH,IAChEkH,EAAME,aAAeF,EAAME,gBAAkBhkB,KAAK4jB,EAAgBhH,IAsB3E,SAASqH,GAAuBH,EAAO5B,GACnC,GAAI4B,EAAMI,kBAIN,IAAK,IAAIplB,EAAIojB,EAAMiC,eAAgBC,EAAMlC,EAAMmC,aAAcvlB,EAAIslB,EAAKtlB,IAAK,CACvE,IAAI+kB,EAAeC,EAAMlL,KAAK9Z,GAC1B+kB,EAAa/G,mBACZgH,EAAMQ,eAAiBR,EAAMQ,kBAAoBtkB,MAAMlB,EAAG+kB,EAAa/G,kBAExE+G,EAAa7G,uBACZ8G,EAAMQ,eAAiBR,EAAMQ,kBAAoBtkB,KAAKlB,EAAG+kB,EAAa7G,sBACtE8G,EAAMS,oBAAsBT,EAAMS,uBAAyBvkB,KAAKlB,EAAG+kB,EAAa7G,sBAEjF6G,EAAa3G,gBACZ4G,EAAMU,YAAcV,EAAMU,eAAiBxkB,MAAMlB,EAAG+kB,EAAa3G,eAElE2G,EAAazG,oBACZ0G,EAAMU,YAAcV,EAAMU,eAAiBxkB,KAAKlB,EAAG+kB,EAAazG,mBAChE0G,EAAMW,iBAAmBX,EAAMW,oBAAsBzkB,KAAKlB,EAAG+kB,EAAazG,mBAEjD,MAA1ByG,EAAavG,YACZwG,EAAMY,eAAiBZ,EAAMY,kBAAoB1kB,KAAKlB,EAAG+kB,EAAavG,YAkBvF,SAASqH,GAAiBC,EAAad,EAAOe,GACrCA,GACDC,GAAaF,EAAad,EAAMC,UAAWD,EAAME,WAAYa,EAAoB,GAYzF,SAASC,GAAaF,EAAaG,EAAgBf,EAAYa,EAAoBG,GAC/E,IAAIH,EAAJ,CAEA,IAAII,GAAoC,EAArBL,EAAYtE,OAAyC0E,EACpED,EACAf,EACAiB,GAiBR,SAASC,EAAUN,EAAaO,EAAKH,GAEjC,IADA,IAAII,EAAiB,EACZtmB,EAAI,EAAGA,EAAIqmB,EAAIlmB,OAAQH,GAAK,EAAG,CACpC,IAAIumB,EAAaF,EAAIrmB,GAAK,EAEtBwmB,EAAYV,EADKS,GAAcF,EAAIrmB,GAAKqmB,EAAIrmB,IAE5CymB,EAAOJ,EAAIrmB,EAAI,GACfumB,EAE4BT,EAAYtE,KAAU,KADlD8E,IAI0B,EAArBR,EAAYtE,OAAyC0E,IACtDJ,EAAYtE,KAAU,KACtBiF,EAAKrmB,KAAKomB,IAIdC,EAAKrmB,KAAKomB;;;;;;;OAlCdJ,CAAUN,EAAaK,EAAaD,IAGd,EAArBJ,EAAYtE,OAAyC0E,GACxC,IAAdA,IACAJ,EAAYtE,KAAU,KACtBsE,EAAYtE,KAAU,IAuD9B,IA0BIkF,GA6DAC,GAkBAC,GAmBA1D,GA5HA2D,GAAsB,KAK1B,SAASC,GAAuB/d,GAC5B8d,GAAsB9d,EA0C1B,SAASge,KACLL,IAAkB,EAmBtB,SAASM,KACLN,IAAkB,EAEtB,SAASO,KACL,OAAO/D,GAWX,SAASgE,GAAYC,GACjBC,GAAeD,EAInB,SAASE,KAEL,OAAOV,GAEX,SAASW,GAAyBlE,GAC9BuD,GAAwBvD,EAE5B,SAASmE,GAAoBnE,EAAOG,GAEhCoD,GAAwBvD,EACxBF,GAAQK,EAQZ,SAASiE,KAEL,OAAOZ,GAEX,SAASa,GAAY7mB,GACjBgmB,GAAWhmB,EAGf,SAAS8mB,GAAenE,GAEpB,YADa,IAATA,IAAmBA,EAAOL,IACkB,IAA1B,EAAdK,EAAK/B,KAejB,IAAI4F,GAAe,KAUfrB,IAAqB,EACzB,SAAS4B,KAEL,OAAO5B,GAEX,SAAS6B,GAAsBC,GAC3B9B,GAAqB8B,EAOzB,IAAIC,IAAoB,EAExB,SAASC,KACL,OAAOD,GAEX,SAASE,GAAepnB,GACpBknB,GAAmBlnB,EAMvB,IAAIqnB,GAAoB,EACxB,SAASC,KAEL,OAAOD,GAEX,SAASE,GAAqBvnB,GAC1BqnB,GAAoBrnB,EAcxB,SAASwnB,GAAUC,EAASC,GAExB,IAAIC,EAAUrF,GAQd,OAPImF,IAEAP,GADYO,EAAQ9G,IACKiH,mBAE7B7B,GAAwB2B,EACxB1B,IAAW,EACX1D,GAAQkE,GAAeiB,EAChBE,EA8BX,SAASE,GAAUJ,GACf,IAAIrD,EAAQ9B,GAAM3B,IAClB,GAAImG,GAAexE,IACfA,GAAM1B,MAAU,OAGhB,IACIwE,GAAa9C,GAAO8B,EAAMU,UAAWV,EAAMW,eAAgBI,GAAoB,GAEnF,QAEI7C,GAAM1B,MAAU,GAChB0B,GAAMrB,IAAiBmD,EAAMwD,kBAGrCJ,GAAUC,EAAS;;;;;;;OAWvB,SAASK,GAAkBC,GACvB,OAAOA,IAAmBrE,GAE9B,SAASsE,GAAuBD,GAC5B,OAAwB,MAAjBA,EAEX,SAASE,GAA4BF,GACjC,OAAOA,GAAkB,GAW7B,SAASG,GAAsBC,EAAUC,GAOrC,IANA,IAAIC,EAAaJ,GAA4BE,GACzCG,EAAaF,EAKVC,EAAa,GAChBC,EAAaA,EAAW3G,IACxB0G,IAEJ,OAAOC;;;;;;;OAeX,SAASC,GAAejG,GAEpB,IAAIzT,EAASyT,EAAMzB,IACnB,OAAOuB,GAAavT,GAAUA,EAAOgS,IAAUhS,EAuBnD,SAAS2Z,GAAkBlG,GAEvB,IADA,IAAImG,EAAYnG,EAAMtB,IACfyH,GAAgC,IAAnBA,EAAUhkB,MAG1BgkB,GADAnG,EAAQA,EAAMX,KACIX,IAGtB,OAAOsB,EASX,SAASoG,GAAeC,GAIpB,OApCJ,SAASC,EAAYC,GAGjB,IADA,IAAIvG,EAAQH,GAAQ0G,GAAoBA,EAAmBzF,GAAiByF,GACrEvG,KAA0B,IAAfA,EAAM1B,MACpB0B,EAAQiG,GAAejG,GAG3B,OAAOA,EA0BQsG,CAAYD,GAGXxH;;;;;;;OA8CpB,IAAI2H,IAAuB,EAC3B,SAASC,GAAwBxgB,GAC7B,IAAIygB,EAAWF,GAEf,OADAA,GAAuBvgB,EAChBygB,EAOX,IACIC,GAAaC,IAEbC,GAAkB,EA8CtB,SAASC,GAA+B5G,EAAOC,GAC3C,IAAI4G,EAAwBC,GAAiB9G,EAAOC,GACpD,IAA+B,IAA3B4G,EACA,OAAOA,EAEX,IAAIjF,EAAQ3B,EAAS9B,IACjByD,EAAMI,oBACNhC,EAAM+G,cAAgB9G,EAASljB,OAC/BiqB,GAAYpF,EAAMlL,KAAMsJ,GACxBgH,GAAY/G,EAAU,MACtB+G,GAAYpF,EAAMqF,UAAW,OAGjC,IAAIC,EAAYC,GAA0BnH,EAAOC,GAC7CmH,EAAc5B,GAAuB0B,GACrCG,EAAc3B,GAAsBwB,EAAWjH,GAC/C8G,EAAgB/G,EAAM+G,cAG1B,GAAIzB,GAAkB4B,GAIlB,IAHA,IAAII,EAAaD,EAAYlJ,IAAOzH,KAG3B9Z,EAAI,EAAGA,EAAI,EAAGA,IACnBqjB,EAAS8G,EAAgBnqB,GAAKyqB,EAAYD,EAAcxqB,GAAK0qB,EAAWF,EAAcxqB,GAI9F,OADAqjB,EAAS8G,EAAgB/F,IAAmBkG,EACrCH,EAEX,SAASC,GAAY/D,EAAKsE,GACtBtE,EAAInlB,KAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAGypB,GAErC,SAAST,GAAiB9G,EAAOC,GAC7B,OAA6B,IAAzBD,EAAM+G,eAGL/G,EAAM3T,QAAU2T,EAAM3T,OAAO0a,gBAAkB/G,EAAM+G,eAGH,MAAnD9G,EAASD,EAAM+G,cAAgB/F,KACvB,EAGDhB,EAAM+G,cASrB,SAASI,GAA0BnH,EAAOG,GACtC,GAAIH,EAAM3T,SAA0C,IAAhC2T,EAAM3T,OAAO0a,cAC7B,OAAO/G,EAAM3T,OAAO0a,cAOxB,IAFA,IAAI7B,EAAY/E,EAAK3B,IACjBqH,EAAa,EACVX,IAA0C,IAA7BA,EAAU6B,eAE1B7B,GADA/E,EAAOA,EAAKhB,KACOgB,EAAK3B,IAAU,KAClCqH,IAEJ,OAAOX,EACHA,EAAU6B,cAAiBlB,GAAc,IACxC,EAST,SAAS2B,GAAmBT,EAAe5G,EAAMxf,IAnHjD,SAAS8mB,EAASV,EAAenF,EAAO3f,GAEpC,IAAI0O,EAAqB,iBAAT1O,EAAoBA,EAAK2V,IAAiB3V,EAAKylB,WAAW,IAAM,EAGtE,MAAN/W,IACAA,EAAK1O,EAAK2V,IAAiB+O,MAI/B,IAAIgB,EAAWhX,EAAK8V,GAIhBmB,EAAO,GAAKD,EAIZE,EAAgB,GAAXF,EACLG,EAAgB,GAAXH,EACLI,EAAQnG,EAAMlL,KAHE,IAAXiR,EAKLE,EAAMC,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EACxEE,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EAG5EC,EAAMC,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,EAAgB,IAAMa,EACxEE,EAAMC,EAAMhB,EAAgB,IAAMa,EAASG,EAAMhB,IAAkBa,EAyF5EH,CAASV,EAAe5G,EAAKhC,IAAQxd,GAkEzC,SAASqnB,GAAsBhI,EAAOF,EAAOnf,EAAOgE,EAAOK,GAEvD,QADc,IAAVL,IAAoBA,EAAQ5J,EAAQ0F,YAAYmE,SAChDob,EAAO,CACP,IAAIiI,EAkOZ,SAASC,EAAsBvnB,GAE3B,GAAqB,iBAAVA,EACP,OAAOA,EAAM+mB,WAAW,IAAM,EAElC,IAAIS,EAAUxnB,EAAMiX,IAEpB,MAA2B,iBAAZuQ,GAAwBA,EAAU,EAAKA,EAAU1B,GAAa0B,EAzOzDD,CAAsBvnB,GAGtC,GAAyB,mBAAdsnB,EAA0B,CACjC,IAAIG,EAA4BnE,KAC5BoE,EAAYxE,KAChBM,GAAoBnE,EAAOF,GAC3B,IACI,IAAItiB,EAAQyqB,IACZ,GAAa,MAATzqB,GAAmBmH,EAAQ5J,EAAQ0F,YAAYG,SAI/C,OAAOpD,EAHP,MAAM,IAAI6D,MAAM,mBAAqBqX,GAAgB/X,GAAS,KAMtE,QACIwjB,GAAoBiE,EAA2BC,SAGlD,GAAwB,iBAAbJ,EAAuB,CACnC,IAAmB,IAAfA,EAEA,OAAO,IAAIK,GAAatI,EAAOF,GAMnC,IAAIyI,EAAgB,KAChBxB,EAAgBD,GAAiB9G,EAAOF,GACxCyF,EAAiBrE,GACjBsH,EAAmB7jB,EAAQ5J,EAAQ0F,YAAYM,KAAOilB,GAAkBlG,GAAOtB,IAAU,KAkB7F,MAduB,IAAnBuI,GAAwBpiB,EAAQ5J,EAAQ0F,YAAYK,YACpDykB,GAAoC,IAAnBwB,EAAuBI,GAA0BnH,EAAOF,GACrEA,EAAMiH,EAAgB/F,IACrByH,GAAmB9jB,GAAO,IAI3B4jB,EAAgBzI,EAAM3B,IACtB4I,EAAgBvB,GAAuBD,GACvCzF,EAAQ4F,GAAsBH,EAAgBzF,IAL9CiH,GAAiB,IAUC,IAAnBA,GAAsB,CACzBxB,EAAiBzF,EAAMiH,EAAgB/F,IAEvC,IAAIY,EAAQ9B,EAAM3B,IAClB,GAAIuK,GAAcT,EAAWlB,EAAenF,EAAMlL,MAAO,CAIrD,IAAIiS,EAAWC,GAAuB7B,EAAejH,EAAOnf,EAAO4nB,EAAe5jB,EAAO6jB,GACzF,GAAIG,IAAaE,GACb,OAAOF,EAGXF,GAAmB9jB,EAAOmb,EAAM3B,IAAOzH,KAAKqQ,EAAgBhG,MAAWyH,IACvEE,GAAcT,EAAWlB,EAAejH,IAGxCyI,EAAgB3G,EAChBmF,EAAgBvB,GAAuBD,GACvCzF,EAAQ4F,GAAsBH,EAAgBzF,IAM9CiH,GAAiB,IASjC,GAJIpiB,EAAQ5J,EAAQ0F,YAAYG,eAA8Be,IAAlBqD,IAExCA,EAAgB,MAEoD,IAAnEL,GAAS5J,EAAQ0F,YAAYI,KAAO9F,EAAQ0F,YAAYM,OAAc,CACvE,IAAI+nB,EAAiBhJ,EAAMlB,IAIvBmK,EAA+BxkB,OAAwB5C,GAC3D,IACI,OAAImnB,EACOA,EAAe/jB,IAAIpE,EAAOqE,EAAeL,EAAQ5J,EAAQ0F,YAAYG,UAGrEkE,EAAmBnE,EAAOqE,EAAeL,EAAQ5J,EAAQ0F,YAAYG,UAGpF,QACI2D,EAAwBwkB,IAGhC,GAAIpkB,EAAQ5J,EAAQ0F,YAAYG,SAC5B,OAAOoE,EAGP,MAAM,IAAI3D,MAAM,4BAA8BqX,GAAgB/X,GAAS,KAG/E,IAAIkoB,MACJ,SAASD,GAAuB7B,EAAejH,EAAOnf,EAAO4nB,EAAe5jB,EAAO6jB,GAC/E,IAAIQ,EAAelJ,EAAM3B,IACrB6B,EAAQgJ,EAAatS,KAAKqQ,EAAgBhG,IAsB1CkI,EAAgBC,GAA0BlJ,EAAOF,EAAOnf,EAnBd,MAAjB4nB,EAQxB/H,GAAYR,IAAUsG,GAOtBiC,GAAiBS,GAAgC,IAAfhJ,EAAM/d,KAGpB0C,EAAQ5J,EAAQ0F,YAAYM,MAASynB,IAAqBxI,GAEnF,OAAsB,OAAlBiJ,EACOE,GAAkBH,EAAatS,KAAMoJ,EAAOmJ,EAAejJ,GAG3D6I,GAaf,SAASK,GAA0BlJ,EAAOF,EAAOnf,EAAOyoB,EAAwBC,GAW5E,IAVA,IACIC,EAAsBtJ,EAAMuJ,gBAC5BC,EAFQ1J,EAAM3B,IAEOzH,KACrB+S,EAAyC,MAAtBH,EACnBI,EAAkB1J,EAAMiC,eAExB0H,EAAwBL,GAAuB,GAG/CM,EAAWP,EAAoBI,EAAmBE,EAJnC3J,EAAMmC,aAKhBvlB,EAHWwsB,EAAyBK,EAAmBA,EAAmBE,EAGvD/sB,EAAIgtB,EAAUhtB,IAAK,CAC3C,IAAIitB,EAAqBL,EAAa5sB,GACtC,GAAIA,EAAI8sB,GAAmB/oB,IAAUkpB,GACjCjtB,GAAK8sB,GAAmBG,EAAmB5nB,OAAStB,EACpD,OAAO/D,EAGf,GAAIysB,EAAmB,CACnB,IAAIS,EAASN,EAAaE,GAC1B,GAAII,GAAUrJ,GAAeqJ,IAAWA,EAAO7nB,OAAStB,EACpD,OAAO+oB,EAGf,OAAO,KASX,SAASP,GAAkBpB,EAAOgC,EAAO/pB,EAAOggB,GAC5C,IAAIxiB,EAAQusB,EAAM/pB,GAClB,GAz+BJ,SAASgqB,EAAUjb,GAEf,OAAe,OAARA,GAA8B,iBAAPA,GAAmBlT,OAAO2N,eAAeuF,IAAQoS;;;;;;;OAu+B3E6I,CAAUxsB,GAAQ,CAClB,IAAI1C,EAAU0C,EACd,GAAI1C,EAAQwmB,UACR,MAAM,IAAIjgB,MAAM,oBAAsBqX,GAAgBqP,EAAM/nB,KAEhE,IAAIiqB,EAA+B1D,GAAwBzrB,EAAQymB,qBACnEzmB,EAAQwmB,WAAY,EACpB,IAAIyH,OAA+B,EAC/BjuB,EAAQ0mB,aACRuH,EAA+BxkB,EAAwBzJ,EAAQ0mB,aAEnE,IAAI4G,EAA4BnE,KAC5BoE,EAAYxE,KAChBM,GAAoBnE,EAAO+J,GAC3B,IACIvsB,EAAQusB,EAAM/pB,GAASlF,EAAQA,QAAQ,KAAMitB,EAAOgC,EAAO/J,GAE/D,QACQllB,EAAQ0mB,YACRjd,EAAwBwkB,GAC5BxC,GAAwB0D,GACxBnvB,EAAQwmB,WAAY,EACpB6C,GAAoBiE,EAA2BC,IAGvD,OAAO7qB,EAuBX,SAASkrB,GAAcT,EAAWlB,EAAemD,GAI7C,IAEIrC,EAAiB,GAAZI,EACLH,EAAiB,GAAZG,EAeT,UAjBqB,IAAZA,EAQGJ,EAAMC,EAAKoC,EAAanD,EAAgB,GAAKmD,EAAanD,EAAgB,GAC7Ee,EAAKoC,EAAanD,EAAgB,GAAKmD,EAAanD,EAAgB,GAGjEc,EAAMC,EAAKoC,EAAanD,EAAgB,GAAKmD,EAAanD,EAAgB,GAC7Ee,EAAKoC,EAAanD,EAAgB,GAAKmD,EAAanD,IAdlD,GAAKkB,GAqBpB,SAASQ,GAAmB9jB,EAAOwlB,GAC/B,QAASxlB,EAAQ5J,EAAQ0F,YAAYI,MAAW8D,EAAQ5J,EAAQ0F,YAAYM,MAAQopB,GAExF,IAAI7B,GAA8B,WAC9B,SAASA,EAAa8B,EAAQC,GAC1B5uB,KAAK2uB,OAASA,EACd3uB,KAAK4uB,OAASA,EAKlB,OAHA/B,EAAahsB,UAAUyI,IAAM,SAAUpE,EAAOqE,GAC1C,OAAOgjB,GAAsBvsB,KAAK2uB,OAAQ3uB,KAAK4uB,OAAQ1pB,OAAOgB,EAAWqD,IAEtEsjB,EARsB,GAUjC,SAASgC,GAAeroB,GACpB,IAAIyD,EAAUzD,EACV0D,EAAMmX,GAAgBpX,IAAYqX,GAAgBrX,IAClDsX,GAAWtX,IAAY1D,EAAiB0D,IAAYvD,EAAeuD,GACvE,OAAKC,QAAuBhE,IAAhBgE,EAAI7K,QAGT6K,EAAI7K,QAFA,KAIf,SAASyvB,GAAoBtoB,GACzB,IACInH,EAAUwvB,GADFzuB,OAAO2N,eAAevH,EAAK3F,WAAWD,aAElD,OAAgB,OAAZvB,EACOA,EAOA,SAAU4B,GAAK,OAAO,IAAIA;;;;;;;OAWzC,SAAS8tB,GAAgBzsB,GACrB,OAAOA,EAAMuR,IAEjB,SAASmb,GAAiB1sB,GACtB,OAAOA,EAAMwR,IAKjB,SAASmb,GAAmBC,GAExB,IADA,IAAIlrB,KACKT,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCS,EAAOT,EAAK,GAAKlC,UAAUkC,GAE/B2rB,EAAQ5sB,MAAMd,MAAM0tB,EAAS3sB,EAASyB;;;;;;;OAmC1C,IAAImrB,GAA8B,WAC9B,SAASA,IAILnvB,KAAKovB,SAAWF,QAgCpB,OA9BAC,EAAatuB,UAAUwuB,YAAc,SAAU/sB,GAC3C,IAAIgS,EAAgBtU,KAAKsvB,mBAAmBhtB,GACxCmR,EAAUzT,KAAKuvB,aAAajtB,GAG5BktB,EAvDZ,SAASC,EAAentB,GACpB,OAAOA,EAAMyR,KAAiBkb,GAsDRQ,CAAentB,GACjCktB,EAAYxvB,KAAKovB,SAAU,QAAS9sB,GAChCgS,GACAkb,EAAYxvB,KAAKovB,SAAU,iBAAkB9a,GAE7Cb,GACA+b,EAAYxvB,KAAKovB,SAAU,gBAAiB3b,IAIpD0b,EAAatuB,UAAU0uB,aAAe,SAAUjtB,GAC5C,OAAIA,EACOysB,GAAgBzsB,GAASysB,GAAgBzsB,GAC5CtC,KAAKuvB,aAAaP,GAAiB1sB,IAEpC,MAGX6sB,EAAatuB,UAAUyuB,mBAAqB,SAAUhtB,GAElD,IADA,IAAIH,EAAI6sB,GAAiB1sB,GAClBH,GAAK6sB,GAAiB7sB,IACzBA,EAAI6sB,GAAiB7sB,GAEzB,OAAOA,GAEJgtB,EArCsB,GA0E7BO,GAAQ;;;;;;;OACZ,SAASC,GAAwB5tB,EAAOyE,GACpC,OAAQzE,aAAiBiN,QAAUjN,EAAM2tB,MAAWlpB,EA8DxD,SAASopB,GAA8BC,EAAe7G,GAClD,IAAI8G,EAAU,IAAI9gB,OAAO6gB,GAEzB,OADAC,EAAQJ,IAAS1G,EACV8G;;;;;;;OAgBX,IAAIC,IAAW,EACXC,IAAiB,EASrB,SAASC,KAEL,OADAD,IAAiB,EACVD;;;;;;;;AAkCX,IAAIG,GAAiC,WACjC,SAASA,EAAgBC,GAIrB,GAHAnwB,KAAKmwB,WAAaA,EAClBnwB,KAAKowB,cAAgBpwB,KAAKmwB,WAAWE,eAAeC,mBAAmB,sBACvEtwB,KAAKuwB,iBAAmBvwB,KAAKowB,cAAczS,KACd,MAAzB3d,KAAKuwB,iBAA0B,CAG/B,IAAIC,EAAYxwB,KAAKowB,cAAcK,cAAc,QACjDzwB,KAAKowB,cAAcM,YAAYF,GAC/BxwB,KAAKuwB,iBAAmBvwB,KAAKowB,cAAcK,cAAc,QACzDD,EAAUE,YAAY1wB,KAAKuwB,kBAE/BvwB,KAAKuwB,iBAAiBI,UAAY,wDAC9B3wB,KAAKuwB,iBAAiBK,eAAkB5wB,KAAKuwB,iBAAiBK,cAAc,QAMhF5wB,KAAKuwB,iBAAiBI,UAClB,mEAOI3wB,KAAK6wB,oBANT7wB,KAAKuwB,iBAAiBK,eAAiB5wB,KAAKuwB,iBAAiBK,cAAc,YAkHvF,SAASE,IACL,IACI,QAAS5oB,OAAO6oB,UAEpB,MAAO1tB,GACH,OAAO;;;;;;;OAlHCytB,GAC2B9wB,KAAKgxB,8BAKbhxB,KAAKixB,mCAhB5BjxB,KAAK6wB,oBAAsB7wB,KAAKkxB,wBA8GxC,OAvFAhB,EAAgBrvB,UAAUqwB,wBAA0B,SAAUC,GAI1DA,EAAO,0BAA4BA,EAAO,UAC1C,IACIA,EAAOC,UAAUD,GAErB,MAAO9tB,GACH,OAAO,KAEX,IAAIguB,EAAM,IAAIC,eACdD,EAAIE,aAAe,WACnBF,EAAIG,KAAK,MAAO,gCAAkCL,GAAM,GACxDE,EAAII,UAAKvrB,GACT,IAAIyX,EAAO0T,EAAIvU,SAASa,KAExB,OADAA,EAAK+T,YAAY/T,EAAKgU,YACfhU,GAOXuS,EAAgBrvB,UAAUmwB,8BAAgC,SAAUG,GAIhEA,EAAO,0BAA4BA,EAAO,UAC1C,IACI,IAAIxT,GAAO,IAAIzV,OACV6oB,WACAa,gBAAgBT,EAAM,aACtBxT,KAEL,OADAA,EAAK+T,YAAY/T,EAAKgU,YACfhU,EAEX,MAAOta,GACH,OAAO,OASf6sB,EAAgBrvB,UAAUowB,kCAAoC,SAAUE,GAEpE,IAAIU,EAAa7xB,KAAKowB,cAAcK,cAAc,YAClD,MAAI,YAAaoB,GACbA,EAAWlB,UAAYQ,EAChBU,IAEX7xB,KAAKuwB,iBAAiBI,UAAYQ,EAG9BnxB,KAAKmwB,WAAW2B,cAChB9xB,KAAK+xB,mBAAmB/xB,KAAKuwB,kBAE1BvwB,KAAKuwB,mBAUhBL,EAAgBrvB,UAAUkxB,mBAAqB,SAAUC,GAGrD,IAFA,IAAIC,EAAUD,EAAGE,WAER/wB,EAAI8wB,EAAQ3wB,OAAS,EAAG,EAAIH,EAAGA,IAAK,CACzC,IACIgxB,EADSF,EAAQG,KAAKjxB,GACJ0B,KACL,cAAbsvB,GAAyD,IAA7BA,EAAS9qB,QAAQ,SAC7C2qB,EAAGK,gBAAgBF,GAI3B,IADA,IAAIG,EAAYN,EAAGL,WACZW,GACCA,EAAUC,WAAaC,KAAKC,cAC5BzyB,KAAK+xB,mBAAmBO,GAC5BA,EAAYA,EAAUI,aAGvBxC,EA/HyB,GAkLhCyC,GAAmB,8DAEnBC,GAAmB,uIACvB,SAASC,GAAaC,GAElB,OADAA,EAAM9jB,OAAO8jB,IACLC,MAAMJ,KAAqBG,EAAIC,MAAMH,IAClCE,GACP7C,MACAf,QAAQ8D,KAAK,wCAA0CF,EAAM,sCAE1D,UAAYA,GAEvB,SAASG,GAAeC,GAEpB,OADAA,EAASlkB,OAAOkkB,IACFC,MAAM,KAAKpsB,IAAI,SAAUmsB,GAAU,OAAOL,GAAaK,EAAOE,UAAYpsB,KAAK;;;;;;;OAUjG,SAASqsB,GAAOC,GACZ,IAAIC,EAAKlwB,EACL6D,KACJ,IACI,IAAK,IAAIssB,EAAK/xB,EAAS6xB,EAAKH,MAAM,MAAOM,EAAKD,EAAG1xB,QAAS2xB,EAAGzxB,KAAMyxB,EAAKD,EAAG1xB,OAEvEoF,EADQusB,EAAG1xB,QACF,EAGjB,MAAO2xB,GAASH,GAAQjxB,MAAOoxB,GAC/B,QACI,IACQD,IAAOA,EAAGzxB,OAASqB,EAAKmwB,EAAGG,SAAStwB,EAAG9B,KAAKiyB,GAEpD,QAAU,GAAID,EAAK,MAAMA,EAAIjxB,OAEjC,OAAO4E,EAEX,SAAS0sB,KAEL,IADA,IAIIC,EAAKxwB,EAJLywB,KACKvwB,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCuwB,EAAKvwB,GAAMlC,UAAUkC,GAGzB,IAAI2D,KACJ,IACI,IAAK,IAAI6sB,EAAStyB,EAASqyB,GAAOE,EAAWD,EAAOjyB,QAASkyB,EAAShyB,KAAMgyB,EAAWD,EAAOjyB,OAAQ,CAClG,IAAIZ,EAAI8yB,EAASjyB,MACjB,IAAK,IAAIuI,KAAKpJ,EACNA,EAAET,eAAe6J,KACjBpD,EAAIoD,IAAK,IAIzB,MAAO2pB,GAASJ,GAAQvxB,MAAO2xB,GAC/B,QACI,IACQD,IAAaA,EAAShyB,OAASqB,EAAK0wB,EAAOJ,SAAStwB,EAAG9B,KAAKwyB,GAEpE,QAAU,GAAIF,EAAK,MAAMA,EAAIvxB,OAEjC,OAAO4E,EAOX,IAgKIgtB,GA0DOC,GA1NPC,GAAgBf,GAAO,0BAGvBgB,GAAkChB,GAAO,kDACzCiB,GAAmCjB,GAAO,SAC1CkB,GAA4BX,GAAMU,GAAkCD,IAEpEG,GAAiBZ,GAAMS,GAAiChB,GAAO,oMAI/DoB,GAAkBb,GAAMU,GAAkCjB,GAAO,+LAGjEqB,GAAiBd,GAAMQ,GAAeI,GAAgBC,GAAiBF,IAEvEI,GAAYtB,GAAO,gEAEnBuB,GAAevB,GAAO,UACtBwB,GAAaxB,GAAO,idAWpByB,GAAclB,GAAMe,GAAWC,GAAcC,IAM7CE,GAA8C1B,GAAO,yBAKrD2B,GAA0C,WAC1C,SAASA,IAGLh1B,KAAKi1B,oBAAqB,EAC1Bj1B,KAAKk1B,OA2FT,OAzFAF,EAAyBn0B,UAAUs0B,iBAAmB,SAAUnD,GAM5D,IAFA,IAAIoD,EAAUpD,EAAGL,WACb0D,GAAkB,EACfD,GAWH,GAVIA,EAAQ7C,WAAaC,KAAKC,aAC1B4C,EAAkBr1B,KAAKs1B,aAAaF,GAE/BA,EAAQ7C,WAAaC,KAAK+C,UAC/Bv1B,KAAKw1B,MAAMJ,EAAQK,WAInBz1B,KAAKi1B,oBAAqB,EAE1BI,GAAmBD,EAAQzD,WAC3ByD,EAAUA,EAAQzD,gBAGtB,KAAOyD,GAAS,CAERA,EAAQ7C,WAAaC,KAAKC,cAC1BzyB,KAAK01B,WAAWN,GAEpB,IAAItzB,EAAO9B,KAAK21B,sBAAsBP,EAASA,EAAQ1C,aACvD,GAAI5wB,EAAM,CACNszB,EAAUtzB,EACV,MAEJszB,EAAUp1B,KAAK21B,sBAAsBP,EAASA,EAAQQ,YAG9D,OAAO51B,KAAKk1B,IAAIluB,KAAK,KAUzBguB,EAAyBn0B,UAAUy0B,aAAe,SAAUhY,GACxD,IAAIuY,EAAUvY,EAAQwY,SAASC,cAC/B,IAAKrB,GAAej0B,eAAeo1B,GAE/B,OADA71B,KAAKi1B,oBAAqB,GAClBF,GAA4Ct0B,eAAeo1B,GAEvE71B,KAAKk1B,IAAI7yB,KAAK,KACdrC,KAAKk1B,IAAI7yB,KAAKwzB,GAEd,IADA,IAAI5D,EAAU3U,EAAQ4U,WACb/wB,EAAI,EAAGA,EAAI8wB,EAAQ3wB,OAAQH,IAAK,CACrC,IAAI60B,EAAS/D,EAAQG,KAAKjxB,GACtBgxB,EAAW6D,EAAOnzB,KAClBozB,EAAQ9D,EAAS4D,cACrB,GAAKjB,GAAYr0B,eAAew1B,GAAhC,CAIA,IAAIl0B,EAAQi0B,EAAOj0B,MAEf4yB,GAAUsB,KACVl0B,EAAQ8wB,GAAa9wB,IACrB6yB,GAAaqB,KACbl0B,EAAQkxB,GAAelxB,IAC3B/B,KAAKk1B,IAAI7yB,KAAK,IAAK8vB,EAAU,KAAM+D,GAAen0B,GAAQ,UATtD/B,KAAKi1B,oBAAqB,EAYlC,OADAj1B,KAAKk1B,IAAI7yB,KAAK,MACP,GAEX2yB,EAAyBn0B,UAAU60B,WAAa,SAAUN,GACtD,IAAIS,EAAUT,EAAQU,SAASC,cAC3BrB,GAAej0B,eAAeo1B,KAAazB,GAAc3zB,eAAeo1B,KACxE71B,KAAKk1B,IAAI7yB,KAAK,MACdrC,KAAKk1B,IAAI7yB,KAAKwzB,GACd71B,KAAKk1B,IAAI7yB,KAAK,OAGtB2yB,EAAyBn0B,UAAU20B,MAAQ,SAAUA,GAASx1B,KAAKk1B,IAAI7yB,KAAK6zB,GAAeV,KAC3FR,EAAyBn0B,UAAU80B,sBAAwB,SAAUQ,EAAMC,GACvE,GAAIA,IACCD,EAAKE,wBAAwBD,GAC1B5D,KAAK8D,kCAAoC9D,KAAK8D,+BAClD,MAAM,IAAI1wB,MAAM,6DAA+DuwB,EAAKI,WAExF,OAAOH,GAEJpB,EAhGkC,GAmGzCwB,GAAwB,kCAExBC,GAA0B,gBAO9B,SAASP,GAAen0B,GACpB,OAAOA,EAAM6R,QAAQ,KAAM,SACtBA,QAAQ4iB,GAAuB,SAAUzD,GAG1C,MAAO,MAAyB,MAFvBA,EAAM9G,WAAW,GAEJ,QADZ8G,EAAM9G,WAAW,GACqB,OAAU,OAAW,MAEpErY,QAAQ6iB,GAAyB,SAAU1D,GAAS,MAAO,KAAOA,EAAM9G,WAAW,GAAK,MACxFrY,QAAQ,KAAM,QACdA,QAAQ,KAAM,QAOvB,SAAS8iB,GAAcvG,EAAYwG,GAC/B,IAAIpG,EAAmB,KACvB,IACI2D,GAAkBA,IAAmB,IAAIhE,GAAgBC,GAEzD,IAAIyG,EAAaD,EAAkB3nB,OAAO2nB,GAAmB,GAC7DpG,EAAmB2D,GAAgBrD,oBAAoB+F,GAGvD,IAAIC,EAAe,EACfC,EAAaF,EACjB,EAAG,CACC,GAAqB,IAAjBC,EACA,MAAM,IAAIjxB,MAAM,yDAEpBixB,IACAD,EAAaE,EACbA,EAAavG,EAAiBI,UAC9BJ,EAAmB2D,GAAgBrD,oBAAoB+F,SAClDA,IAAeE,GACxB,IAAIC,EAAY,IAAI/B,GAChBgC,EAAWD,EAAU5B,iBAAiB8B,GAAmB1G,IAAqBA,GAIlF,OAHIN,MAAe8G,EAAU9B,oBACzB/F,QAAQ8D,KAAK,mFAEVgE,EAEX,QAEI,GAAIzG,EAEA,IADA,IAAI2G,EAAWD,GAAmB1G,IAAqBA,EAChD2G,EAASvF,YACZuF,EAASxF,YAAYwF,EAASvF,aAK9C,SAASsF,GAAmBjF,GACxB,MAAO,YAAaA,GAIxB,SAASmF,EAAkBnF,GACvB,OAAOA,EAAGO,WAAaC,KAAKC,cAAgC,aAAhBT,EAAG8D;;;;;;;OALaqB,CAAkBnF,GAC1EA,EAAGoF,QACH;;;;;;;;AAaGjD,GAOR70B,EAAQ60B,kBAAoB70B,EAAQ60B,qBANnBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAsB,KAAI,GAAK,OAC/CA,GAAgBA,GAAuB,MAAI,GAAK,QAChDA,GAAgBA,GAAwB,OAAI,GAAK,SACjDA,GAAgBA,GAAqB,IAAI,GAAK,MAC9CA,GAAgBA,GAA8B,aAAI,GAAK,eAO3D,IAAIkD,GACA,SAASA,OAgCTC,GAAmB,IAAIC,OAAO,8LAEZ,KAmBlBC,GAAS;;;;;;;OA2Bb,SAASC,GAAe11B,GAEpB,KADAA,EAAQiN,OAAOjN,GAAOqxB,QAElB,MAAO,GAGX,IAAIsE,EAAW31B,EAAMgxB,MAAMyE,IAC3B,OAAKE,GAAY7E,GAAa6E,EAAS,MAAQA,EAAS,IACpD31B,EAAMgxB,MAAMuE,KA1BpB,SAASK,EAAkB51B,GAGvB,IAFA,IAAI61B,GAAgB,EAChBC,GAAgB,EACX12B,EAAI,EAAGA,EAAIY,EAAMT,OAAQH,IAAK,CACnC,IAAI22B,EAAI/1B,EAAMwR,OAAOpS,GACX,MAAN22B,GAAcD,EACdD,GAAiBA,EAEN,MAANE,GAAaF,IAClBC,GAAiBA,GAGzB,OAAOD,GAAiBC,EAcaF,CAAkB51B,GAC5CA,GAEPkuB,MACAf,QAAQ8D,KAAK,0CAA4CjxB,EAAQ,uCAE9D;;;;;;;OAuBX,SAASg2B,GAAanB,GAClB,IAAIG,EAAYiB,KAChB,OAAIjB,EACOA,EAAUkB,SAAS34B,EAAQ60B,gBAAgB+D,KAAMtB,IAAe,GAEvEjH,GAAwBiH,EAAY,QAC7BA,EAAWzvB,WAEfuvB,GAAcyB,SAAUlb,GAAgB2Z,IAenD,SAASwB,GAAcC,GACnB,IAAItB,EAAYiB,KAChB,OAAIjB,EACOA,EAAUkB,SAAS34B,EAAQ60B,gBAAgBmE,MAAOD,IAAgB,GAEzE1I,GAAwB0I,EAAa,SAC9BA,EAAYlxB,WAEhBswB,GAAexa,GAAgBob,IAgB1C,SAASE,GAAYC,GACjB,IAAIzB,EAAYiB,KAChB,OAAIjB,EACOA,EAAUkB,SAAS34B,EAAQ60B,gBAAgBsE,IAAKD,IAAc,GAErE7I,GAAwB6I,EAAW,OAC5BA,EAAUrxB,WAEd0rB,GAAa5V,GAAgBub,IAWxC,SAASE,GAAoBC,GACzB,IAAI5B,EAAYiB,KAChB,GAAIjB,EACA,OAAOA,EAAUkB,SAAS34B,EAAQ60B,gBAAgByE,aAAcD,IAAsB,GAE1F,GAAIhJ,GAAwBgJ,EAAmB,eAC3C,OAAOA,EAAkBxxB,WAE7B,MAAM,IAAIvB,MAAM,iFAYpB,SAASizB,GAAeC,GACpB,IAAI/B,EAAYiB,KAChB,GAAIjB,EACA,OAAOA,EAAUkB,SAAS34B,EAAQ60B,gBAAgB4E,OAAQD,IAAiB,GAE/E,GAAInJ,GAAwBmJ,EAAc,UACtC,OAAOA,EAAa3xB,WAExB,MAAM,IAAIvB,MAAM,yCA8BpB,SAASozB,GAAyBR,EAAWS,EAAKtsB,GAC9C,OAtBJ,SAASusB,EAAgBD,EAAKtsB,GAC1B,MAAc,QAATA,IAA2B,UAARssB,GAA2B,UAARA,GAA2B,WAARA,GAClD,UAARA,GAA2B,WAARA,IACT,SAATtsB,IAA4B,SAARssB,GAA0B,SAARA,GAChCP,GAEJH,GAgBAW,CAAgBD,EAAKtsB,EAArBusB,CAA2BV,GAMtC,IAAIW,GAAwB,SAAUxsB,EAAM5K,GACxC,YAAcmE,IAAVnE,EACgB,qBAAT4K,GAAwC,eAATA,GAAkC,iBAATA,GAClD,WAATA,GAA8B,eAATA,GAAkC,qBAATA,EAE/CyrB,GAAcr2B,IAkBzB,SAASi2B,KACL,IAAI3T,EAAQ+D,KACZ,OAAO/D,GAASA,EAAMf;;;;;;;OAa1B,SAAS8V,GAAU9lB,GAGf,QAASA,GAA2B,mBAAbA,EAAI+lB,KAK/B,SAASC,GAAahmB,GAGlB,QAASA,GAAgC,mBAAlBA,EAAIimB;;;;;;;OAe/B,IAAIC,GAAoB,WAUxB,SAASC,GAA2B13B,GAChC,IAEI,OAAgB,MAATA,EAAgBA,EAAMoF,WAAWgK,MAAM,EAAG,IAAMpP,EAE3D,MAAOI,GACH,MAAO;;;;;;;OAWf,IAAIu3B,GAAkB,KACtB,SAASC,KACL,IAAKD,GAAiB,CAClB,IAAIE,EAAW/xB,EAAgB,OAC/B,GAAI+xB,GAAYA,EAAS/3B,SACrB63B,GAAkBE,EAAS/3B,cAK3B,IADA,IAAI4K,EAAOrM,OAAOy5B,oBAAoBjoB,IAAI/Q,WACjCM,EAAI,EAAGA,EAAIsL,EAAKnL,SAAUH,EAAG,CAClC,IAAIwE,EAAM8G,EAAKtL,GACH,YAARwE,GAA6B,SAARA,GACrBiM,IAAI/Q,UAAU8E,KAASiM,IAAI/Q,UAAmB,UAC9C64B,GAAkB/zB,IAKlC,OAAO+zB;;;;;;;;;;;;;;OAmBX,SAASI,GAAeC,EAAG55B,GACvB,OAAO45B,IAAM55B,GAAkB,iBAAN45B,GAA+B,iBAAN55B,GAAkB65B,MAAMD,IAAMC,MAAM75B;;;;;;;OAU1F,SAAS85B,GAAeF,EAAG55B,GACvB,IAAI+5B,EAAsBC,GAAqBJ,GAC3CK,EAAsBD,GAAqBh6B,GAC/C,OAAI+5B,GAAuBE,EAwD/B,SAASC,EAAoBN,EAAG55B,EAAGm6B,GAG/B,IAFA,IAAIC,EAAYR,EAAEJ,QACda,EAAYr6B,EAAEw5B,UACL,CACT,IAAIc,EAAQF,EAAUz4B,OAClB44B,EAAQF,EAAU14B,OACtB,GAAI24B,EAAMz4B,MAAQ04B,EAAM14B,KACpB,OAAO,EACX,GAAIy4B,EAAMz4B,MAAQ04B,EAAM14B,KACpB,OAAO,EACX,IAAKs4B,EAAWG,EAAM14B,MAAO24B,EAAM34B,OAC/B,OAAO,GAlEJs4B,CAAoBN,EAAG55B,EAAG85B,MAK5BC,IAFWH,GAAmB,iBAANA,GAA+B,mBAANA,GAEZK,IAD1Bj6B,GAAmB,iBAANA,GAA+B,mBAANA,IAK3C25B,GAAeC,EAAG55B,GAwBrC,IAAIw6B,GAA8B,WAC9B,SAASA,EAAa54B,GAClB/B,KAAK46B,QAAU74B,EAWnB,OARA44B,EAAaE,KAAO,SAAU94B,GAAS,OAAO,IAAI44B,EAAa54B,IAK/D44B,EAAaG,OAAS,SAAU/4B,GAAS,OAAO44B,EAAaI,UAAUh5B,GAASA,EAAM64B,QAAU74B,GAEhG44B,EAAaI,UAAY,SAAUh5B,GAAS,OAAOA,aAAiB44B,GAC7DA,EAbsB,GAejC,SAASR,GAAqB7mB,GAC1B,QAAK0nB,GAAa1nB,KAEX/S,MAAMqJ,QAAQ0J,MACdA,aAAe1B,MACd+nB,OAAuBrmB,GA8BnC,SAAS0nB,GAAat5B,GAClB,OAAa,OAANA,IAA4B,mBAANA,GAAiC,iBAANA,GAK5D,SAASu5B,GAA4B1W,GACjC,MAAM,IAAI3e,MAAM,+CAAiD2e,EAAMsR;;;;;;;;AAsB3E,IAAIqF;;;;;;;OAWJ,SAASC,GAAc9W,EAAO+W,EAAcr5B,GACxC,OAAOsiB,EAAM+W,GAAgBr5B,EAGjC,SAASs5B,GAAWhX,EAAO+W,GAIvB,OAAO/W,EAAM+W,GAGjB,SAASE,GAAejX,EAAO+W,EAAcr5B,GAKzC;;;;;;;;AAzjGJ,SAASw5B,EAAYxB,EAAG55B,GAGpB,QAAS45B,GAAMA,GAAK55B,GAAMA,IAAM45B,IAAM55B,EAsjGlCo7B,CADWlX,EAAM+W,GACKr5B,KAStBsiB,EAAM+W,GAAgBr5B,GACf,GAKf,SAASy5B,GAAgBnX,EAAO+W,EAAcK,EAAMC,GAChD,IAAIC,EAAYL,GAAejX,EAAO+W,EAAcK,GACpD,OAAOH,GAAejX,EAAO+W,EAAe,EAAGM,IAASC,EAG5D,SAASC,GAAgBvX,EAAO+W,EAAcK,EAAMC,EAAMG,GACtD,IAAIF,EAAYH,GAAgBnX,EAAO+W,EAAcK,EAAMC,GAC3D,OAAOJ,GAAejX,EAAO+W,EAAe,EAAGS,IAASF,EAG5D,SAASG,GAAgBzX,EAAO+W,EAAcK,EAAMC,EAAMG,EAAME,GAC5D,IAAIJ,EAAYH,GAAgBnX,EAAO+W,EAAcK,EAAMC,GAC3D,OAAOF,GAAgBnX,EAAO+W,EAAe,EAAGS,EAAME,IAASJ;;;;;;;OA6BnE,SAASK,GAAYn3B,GACjB,IAAIo3B,EAAU/W,GAAgBrgB,GAC9B,GAAIo3B,GAGA,GAAI17B,MAAMqJ,QAAQqyB,GAAU,CACxB,IAAI5X,EAAQ4X,EACRpX,OAAY,EACZtI,OAAYrW,EACZ2a,OAAa3a,EACjB,GA0HZ,SAASg2B,EAAoBhP,GACzB,OAAOA,GAAYA,EAAStsB,aAAessB,EAAStsB,YAAY8a,eA3HpDwgB,CAAoBr3B,GAAS,CAE7B,IAAkB,IADlBggB,EAAYsX,GAAiB9X,EAAOxf,IAEhC,MAAM,IAAIe,MAAM,2DAEpB2W,EAAY1X,OAEX,GAsHjB,SAASu3B,EAAoBlP,GACzB,OAAOA,GAAYA,EAAStsB,aAAessB,EAAStsB,YAAYgb,eAvH/CwgB,CAAoBv3B,GAAS,CAElC,IAAkB,IADlBggB,EAsLhB,SAASwX,EAAiBhY,EAAOiY,GAO7B,IADA,IAAI/X,EAAQF,EAAM3B,IAAOiP,WAClBpN,GAAO,CAGV,IAFA,IACIgY,EAAoBhY,EAAMmC,aACrBvlB,EAFiBojB,EAAMiC,eAEErlB,EAAIo7B,EAAmBp7B,IACrD,GAAIkjB,EAAMljB,KAAOm7B,EACb,OAAO/X,EAAMhgB,MAGrBggB,EAAQiY,GAAoBjY,GAEhC,OAAQ,EAvMgB8X,CAAiBhY,EAAOxf,IAEhC,MAAM,IAAIe,MAAM,2DAEpBib,EAAa4b,GAAyB5X,EAAWR,GAAO,QAIxD,IAAkB,IADlBQ,EAAY6X,GAAqBrY,EAAOxf,IAEpC,OAAO,KAOf,IACI83B,EAAczX,GADd0X,EAAS3Y,GAAYI,EAAMQ,KAE3BpR,EAAWkpB,IAAgBp8B,MAAMqJ,QAAQ+yB,GACzCA,EACAE,GAAexY,EAAOQ,EAAW+X,GAOrC,GALIrgB,QAAmCrW,IAAtBuN,EAAQ8I,YACrB9I,EAAQ8I,UAAYA,EACpBugB,GAAgBrpB,EAAQ8I,UAAW9I,IAGnCoN,QAAqC3a,IAAvBuN,EAAQoN,WAA0B,CAChDpN,EAAQoN,WAAaA,EACrB,IAAK,IAAI1f,EAAI,EAAGA,EAAI0f,EAAWvf,OAAQH,IACnC27B,GAAgBjc,EAAW1f,GAAIsS,GAGvCqpB,GAAgBrpB,EAAQmpB,OAAQnpB,GAChCwoB,EAAUxoB,QASd,IALA,IAAIspB,EAAWl4B,EAIXqyB,EAAW6F,EACR7F,EAAWA,EAAStB,YAAY,CACnC,IAAIoH,EAAgB9X,GAAgBgS,GACpC,GAAI8F,EAAe,CAUf,GATI3Y,OAAQ,IAERA,EADA9jB,MAAMqJ,QAAQozB,GACNA,EAGAA,EAAc3Y,OAKtB,OAAO,KAEX,IAAI9f,EAAQm4B,GAAqBrY,EAAO0Y,GACxC,GAAIx4B,GAAS,EAAG,CACZ,IAAIq4B,EAEJE,GAFIF,EAAS3Y,GAAYI,EAAM9f,IAC3BkP,EAAUopB,GAAexY,EAAO9f,EAAOq4B,IAE3CX,EAAUxoB,EACV,QAKhB,OAAOwoB,GAAW,KAKtB,SAASY,GAAexY,EAAOQ,EAAW+X,GACtC,OACIvY,MAAOA,EACPQ,UAAWA,EACX+X,OAAQA,EACRrgB,eAAWrW,EACX2a,gBAAY3a,EACZ+2B,eAAW/2B,GASnB,SAASg3B,GAA2BC,GAChC,IACIzY,EADAL,EAAQa,GAAgBiY,GAE5B,GAAI58B,MAAMqJ,QAAQya,GAAQ,CACtB,IAAIQ,EAAYsX,GAAiB9X,EAAO8Y,IAEpC1pB,EAAUopB,GAAexY,EAAOQ,GADpCH,EAAOE,GAAwBC,EAAWR,IACU5B,MAC5ClG,UAAY4gB,EACpBL,GAAgBK,EAAmB1pB,GACnCqpB,GAAgBrpB,EAAQmpB,OAAQnpB,OAE/B,CACD,IAAIA,EACJiR,EAAOE,IADHnR,EAAU4Q,GACyBQ,UAAWpR,EAAQ4Q,OAE9D,OAAOK,EAMX,SAASoY,GAAgBj4B,EAAQoW,GAC7BpW,EAAOmf,IAAyB/I,EAWpC,SAASyhB,GAAqBrY,EAAOxf,GAEjC,IADA,IAAI0f,EAAQF,EAAM3B,IAAOiP,WAClBpN,GAAO,CAEV,GADaD,GAAiBC,EAAOF,KACtBxf,EACX,OAAO0f,EAAMhgB,MAEjBggB,EAAQiY,GAAoBjY,GAEhC,OAAQ,EAKZ,SAASiY,GAAoBjY,GACzB,GAAIA,EAAM6Y,MACN,OAAO7Y,EAAM6Y,MAEZ,GAAI7Y,EAAMziB,KACX,OAAOyiB,EAAMziB,KAMb,KAAOyiB,EAAM3T,SAAW2T,EAAM3T,OAAO9O,MACjCyiB,EAAQA,EAAM3T,OAElB,OAAO2T,EAAM3T,QAAU2T,EAAM3T,OAAO9O,KAM5C,SAASq6B,GAAiB9X,EAAO8Y,GAC7B,IAAIE,EAAmBhZ,EAAM3B,IAAO4a,WACpC,GAAID,EACA,IAAK,IAAIl8B,EAAI,EAAGA,EAAIk8B,EAAiB/7B,OAAQH,IAAK,CAC9C,IAAIo8B,EAAwBF,EAAiBl8B,GAE7C,GADoByjB,GAAwB2Y,EAAuBlZ,GACjDnB,MAAaia,EAC3B,OAAOI,OAOf,GAFwB3Y,GAAwBjB,GAAeU,GACzBnB,MAChBia,EAGlB,OAAOxZ,GAGf,OAAQ,EAgCZ,SAAS8Y,GAAyB5X,EAAWR,EAAOmZ,GAChD,IAAIjZ,EAAQF,EAAM3B,IAAOzH,KAAK4J,GAC1B4Y,EAAsBlZ,EAAMiC,eAChC,OAA2B,GAAvBiX,EACOzgB,KAENwgB,GAAmC,EAAdjZ,EAAMrb,OAC5Bu0B,IACGpZ,EAAMlT,MAAMssB,EAHKlZ,EAAMmC,eAqElC,SAASgX,GAAQpqB,GACb,GAAIA,EAAK,CACL,IAAIqqB,EAAQrqB,EAAIqqB,MAEhB,OAj1GR,SAASC,EAAcC,EAAQppB,GACb,MAAVopB,GACA9f,GAAWtJ,GA80GXmpB,CAAcD,EAAO,gDACdA,EAGP,OAAOrqB,EAYf,SAASwqB,GAAO/7B,EAAOg8B,QACK,IAApBA,IAA8BA,GAAkB,GACpD,IAAI5H,EAAOlS,GAAYliB,GACvB,GAAIo0B,EAAM,CACN,IAAI6H,EAAa7H,EAAK5D,WAAaC,KAAK+C,UACpCgB,GAAayH,EAAa7H,EAAK8H,YAAc9H,EAAKI,YAAc,GACpE,OAAIwH,GAAmBC,EACZzH,EAIAA,EAAUpD,MADDgD,EAAKxF,WACa,IAAM,KAI5C,OAAO,KAsLf,SAASuN,GAAen8B,GACpB,KAAOxB,MAAMqJ,QAAQ7H,IAAQ,CAGzB,GAAIA,EAAMT,QAAUqiB,GAAgB,EAChC,OAAO5hB,EACXA,EAAQA,EAAM0gB,IAElB,OAAO;;;;;;;QA3LqB,WAC5B,SAAS0b,EAAWC,GAChBp+B,KAAKo+B,WAAaA,EAEtBh+B,OAAOwD,eAAeu6B,EAAWt9B,UAAW,SAIxCyI,IAAK,WACD,IAAIJ,EAAQlJ,KAAKo+B,WAAWzb,IAC5B,OACI0b,eAAgBn1B,EAChBo1B,eAAwB,EAARp1B,EAChBq1B,gBAAyB,EAARr1B,GACjBs1B,iBAA0B,EAARt1B,GAClBu1B,eAAwB,GAARv1B,GAChBw1B,SAAkB,GAARx1B,GACVy1B,YAAqB,IAARz1B,GACb01B,aAAsB,IAAR11B,GACd21B,UAAmB,IAAR31B,GACX41B,qBAAsB51B,GAAS,KAGvCoM,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu6B,EAAWt9B,UAAW,UACxCyI,IAAK,WAAc,OAAOo0B,GAAQ19B,KAAKo+B,WAAWxb,MAClDtN,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu6B,EAAWt9B,UAAW,QACxCyI,IAAK,WAAc,OAAOw0B,GAAO99B,KAAKo+B,WAAW3b,KAAO,IACxDnN,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu6B,EAAWt9B,UAAW,WACxCyI,IAAK,WAAc,OAAOtJ,KAAKo+B,WAAWlb,KAC1C5N,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu6B,EAAWt9B,UAAW,SAKxCyI,IAAK,WACD,IAAI+a,EAAQrkB,KAAKo+B,WAEjB,OAwDZ,SAASW,EAAaxa,EAAOF,GACzB,GAAIE,EAAO,CAGP,IAFA,IAAIya,KACAC,EAAc1a,EACX0a,GAAa,CAChB,IAAIC,EAAW7a,EAAME,EAAMhgB,OACvBq4B,EAAS3Y,GAAYib,GACrBC,EAAsBzB,GAAQQ,GAAegB,IACjDF,EAAW38B,MACP8uB,KAAM2M,GAAOlB,GACbA,OAAQA,EACRwC,MAAOL,EAAaxa,EAAM6Y,MAAO/Y,GACjC9H,UAAW4iB,IAEfF,EAAcA,EAAYn9B,KAE9B,OAAOk9B,EAGP,OAAO,KA3EID,CADK1a,EAAM3B,IAAOiP,WACEtN,IAE/B/O,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu6B,EAAWt9B,UAAW,aAMxCyI,IAAK,WACD,OACI6c,MAAOnmB,KAAKo+B,WAAW1b,IACvB2c,QAASr/B,KAAKo+B,WAAWnb,IACzBra,SAAU5I,KAAKo+B,WAAWjb,IAC1Bmc,gBAAiBt/B,KAAKo+B,WAAWhb,IACjCmc,SAAUv/B,KAAKo+B,WAAW/a,IAC1B0T,UAAW/2B,KAAKo+B,WAAW9a,IAC3Bkc,UAAW9B,GAAQ19B,KAAKo+B,WAAW7a,KACnCzhB,KAAM47B,GAAQ19B,KAAKo+B,WAAWvb,KAC9B4c,UAAW/B,GAAQ19B,KAAKo+B,WAAW5a,KACnCkc,gBAAiBhC,GAAQ19B,KAAKo+B,WAAW1a,KACzChF,eAAgB1e,KAAKo+B,WAAW3a,IAChCkc,QAAS3/B,KAAKo+B,WAAWtb,IACzB8c,MAAO5/B,KAAKo+B,WAAWrb,IACvBqY,aAAcp7B,KAAKo+B,WAAWpb,MAGtC1N,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu6B,EAAWt9B,UAAW,cAIxCyI,IAAK,WAGD,IAFA,IAAIu2B,KACAzC,EAAQp9B,KAAK8/B,UAAUN,UACpBpC,GACHyC,EAAWx9B,KAAK+6B,GAChBA,EAAQA,EAAM0C,UAAUh+B,KAE5B,OAAO+9B,GAEXvqB,YAAY,EACZC,cAAc,IA/FS,GA+HM,WACjC,SAASwqB,EAAgBC,GACrBhgC,KAAKggC,gBAAkBA,EAE3B5/B,OAAOwD,eAAem8B,EAAgBl/B,UAAW,eAC7CyI,IAAK,WAAc,OAAOtJ,KAAKggC,gBAAgBnc,KAC/CvO,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem8B,EAAgBl/B,UAAW,SAC7CyI,IAAK,WACD,OAAOtJ,KAAKggC,gBAAgBlc,IAAO/c,IAAI22B,KAE3CpoB,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem8B,EAAgBl/B,UAAW,UAC7CyI,IAAK,WAAc,OAAOo0B,GAAQ19B,KAAKggC,gBAAgBpd,MACvDtN,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem8B,EAAgBl/B,UAAW,WAC7CyI,IAAK,WAAc,OAAOtJ,KAAKggC,gBAAgBld,KAC/CxN,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem8B,EAAgBl/B,UAAW,QAC7CyI,IAAK,WAAc,OAAOtJ,KAAKggC,gBAAgBvd,KAC/CnN,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem8B,EAAgBl/B,UAAW,UAC7CyI,IAAK,WAAc,OAAOtJ,KAAKggC,gBAAgBjc,KAC/CzO,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem8B,EAAgBl/B,UAAW,aAC7CyI,IAAK,WACD,OACIxH,KAAM47B,GAAQ19B,KAAKggC,gBAAgBnd,OAG3CvN,YAAY,EACZC,cAAc,IA3Cc,GAsEpC,IAUI0qB,GAVAC,GAA0B;;;;;;;OAgB9B,SAASC,GAAqBZ,GAC1B,QAAUA,EAAe,QAN7B,SAAWU,GACPA,EAAoBA,EAA+B,UAAI,GAAK,YAC5DA,EAAoBA,EAA8B,SAAI,GAAK,WAF/D,CAGGA,KAAwBA,QAK3B,IAAIG,IACAC,eAAgB,SAAUC,EAAaC,GAAgB,OAAOpI;;;;;;;;;;;;;;OAkBlE,SAASqI,GAAcjc,EAAOkc,GAE1B,IAAIC,EAAYD,EAAa7d,IAC7B,OAAqB,IAAjB2B,EAAMhgB,MAGC4f,GAAauc,GAAaA,EAAY,KAKtCA,EAOf,SAASC,GAAyBC,EAAWlc,GACzC,IAAIgc,EAAYF,GAAcI,EAAWlc,GACzC,OAAOgc,EAAYG,GAAiBnc,EAAKrB,IAAWqd,EAAU3c,KAAW,KAS7E,IAAI+c,MAaJ,SAASC,GAAcC,EAAYC,EAAQ1B,EAAU2B,EAAcC,GAM/D,IALA,IAAI5N,EAAKlwB,EACLmnB,EAAYwW,EAAWte,IAAOyT,KAC9BiL,GAAuB,EACvBna,EAAc+Z,EACdzc,EAAQiG,EAAU4S,MACf7Y,GAAO,CACV,IAAI8c,EAAY,KAChB,GAAmB,IAAf9c,EAAM/d,KAA0B,CAChC86B,GAAkBL,EAAQ1B,EAAU2B,EAAc5c,GAAiBC,EAAO0C,GAAc1C,EAAO4c,GAC/F,IAAII,EAAkBta,EAAY1C,EAAMhgB,OACpC4f,GAAaod,IAEbD,GAAkBL,EAAQ1B,EAAU2B,EAAcK,EAAgBxd,IAASQ,EAAO4c,QAGrF,GAAmB,IAAf5c,EAAM/d,KAA4B,CACvC,IAAIg7B,EAAava,EAAY1C,EAAMhgB,OACnC+8B,GAAkBL,EAAQ1B,EAAU2B,EAAcM,EAAWzd,IAASQ,EAAO4c,GACzEK,EAAW1d,IAAOxiB,SAElB+/B,GADApa,EAAcua,EAAW1d,IAAO,IACRpB,IAAOyT,KAG/BgL,EAAaK,EAAWzd,UAG3B,GAAmB,IAAfQ,EAAM/d,KAA6B,CACxC,IAAIi7B,EAAgBlX,GAAkBtD,GAElCya,EADgBD,EAAc1e,IACT4e,WAAWpd,EAAMod,YAC1C,GAAIphC,MAAMqJ,QAAQ83B,GACd,IACI,IAAK,IAAIE,EAASngC,EAASigC,GAAOG,EAAWD,EAAO9/B,QAAS+/B,EAAS7/B,KAAM6/B,EAAWD,EAAO9/B,OAE1Fw/B,GAAkBL,EAAQ1B,EAAU2B,EADnBW,EAAS9/B,MACoCwiB,EAAO4c,GAG7E,MAAOzN,GAASH,GAAQjxB,MAAOoxB,GAC/B,QACI,IACQmO,IAAaA,EAAS7/B,OAASqB,EAAKu+B,EAAOjO,SAAStwB,EAAG9B,KAAKqgC,GAEpE,QAAU,GAAIrO,EAAK,MAAMA,EAAIjxB,YAOjCw+B,KAAsBM,GAAuB7c,EAC7Cuc,KAAsBM,GAAuBna,EACzCya,IAEAL,GADApa,EAAcwa,EAAc7e,KACJF,IAAOzH,KAAKymB,EAAKn9B,aAMjD88B,EAAY9c,EAAM6Y,MAEtB,GAAkB,OAAdiE,EAcA,IAZmB,OAAf9c,EAAMziB,MAAgC,EAAdyiB,EAAMrb,QAC9B+d,EAAc6Z,GAAoBM,KAClC7c,EAAQuc,GAAoBM,MAEhCC,EAAY9c,EAAMziB,MAQVu/B,GAAW,CAGf,GAAc,QADd9c,EAAQA,EAAM3T,QAAUqW,EAAYlE,MACdwB,IAAUiG,EAC5B,OAAO,KAMX,GAJmB,IAAfjG,EAAM/d,OAEN26B,GADAla,EAAcqD,GAAerD,IACJ1C,EAAMhgB,OAAOwf,KAEvB,IAAfQ,EAAM/d,KAAuB,CAQ7B,MAAQygB,EAAYpE,KAASoE,EAAYrE,OACnC2B,EAAM3T,SAAU2T,EAAM3T,OAAO9O,OAAO,CACtC,GAAIyiB,IAAUiG,EACV,OAAO,KAEXjG,GADA0C,EAAcA,EAAYrE,KACNG,IAIpBse,EAFApa,EAAYpE,KACZoE,EAAcA,EAAYpE,KACFE,IAGZwB,EAAMziB,UAItBu/B,EAAY9c,EAAMziB,KAI9ByiB,EAAQ8c,GAOhB,SAASC,GAAkBL,EAAQ1B,EAAU3uB,EAAQulB,EAAM5R,EAAO4c,GAC/C,IAAXF,EACAa,GAAmBvC,EAAU3uB,EAAQulB,EAAMgL,GAAc,MAEzC,IAAXF,EACLc,GAAiBxC,EAAUpJ,EAAMpR,GAAYR,IAE7B,IAAX0c,GAEL1B,EAASyC,YAAY7L,GAG7B,SAAS8L,GAAelgC,EAAOw9B,GAC3B,OAAOY,GAAqBZ,GAAYA,EAAS2C,WAAWjlB,GAAgBlb,IACxEw9B,EAAS0C,eAAehlB,GAAgBlb,IAEhD,SAASogC,GAA2BnB,EAAYoB,EAAYjB,GACxD,IAAID,EAAeP,GAAyBK,EAAWte,IAAOyT,KAAM6K,GAEhEE,GAEAH,GAAcC,EAAYoB,EAAa,EAAiB,EADzCpB,EAAW3d,IACwD6d,EAAcC,GA4DxG,SAASkB,GAAWhe,EAAOmd,EAAYj9B,GAGnC,IAAI+9B,EAAQd,EAAW1d,IAEnBvf,EAAQ,IAER+9B,EAAM/9B,EAAQ,GAAGse,IAAQwB,GAEzB9f,EAAQ+9B,EAAMhhC,QACd+iB,EAAMxB,IAAQyf,EAAM/9B,GACpB+9B,EAAMC,OAAOh+B,EAAO,EAAG8f,KAGvBie,EAAMjgC,KAAKgiB,GACXA,EAAMxB,IAAQ,MAElBwB,EAAMzB,IAAU4e,EAEZnd,EAAMvB,KACNuB,EAAMvB,IAASuf,WAAW99B,GAG9B8f,EAAM1B,KAAU,IAYpB,SAAS6f,GAAWhB,EAAYiB,GAC5B,IAAIH,EAAQd,EAAW1d,IACnB4e,EAAeJ,EAAMG,GAazB,OAZIA,EAAc,IACdH,EAAMG,EAAc,GAAG5f,IAAQ6f,EAAa7f,KAEhDyf,EAAMC,OAAOE,EAAa,GAC1BN,GAA2BO,GAAc,GACrCA,EAAa5f,KACb4f,EAAa5f,IAAS6f,aAE1BD,EAAa9f,IAAU,KACvB8f,EAAa7f,IAAQ,KAErB6f,EAAa/f,MAAU,IAChB+f,EAQX,SAASC,GAAWnB,EAAYiB,GAC5B,IAAI/d,EAAO8c,EAAW1d,IAAO2e,GAC7BD,GAAWhB,EAAYiB,GACvBG,GAAale,GAQjB,SAASke,GAAale,GAClB,KAAoB,IAAdA,EAAK/B,KAA+B,CACtC,IAAI4c,EAAW7a,EAAKrB,IAChB8c,GAAqBZ,IAAaA,EAASyC,aAC3CjB,GAAcrc,EAAM,EAAiB6a,EAAU,MArH3D,SAASsD,EAAgBC,GAErB,IAAIC,EAAoBD,EAASvf,IACjC,IAAKwf,EACD,OAAOC,GAAYF,GAEvB,KAAOC,GAAmB,CACtB,IAAIjhC,EAAO,KACX,GAAIoiB,GAAQ6e,GAERjhC,EAAOihC,EAAkBxf,QAExB,CAGD,IAAI+e,EAAQS,EAAkBjf,IAC1Bwe,EAAMhhC,OAAS,IACfQ,EAAOwgC,EAAM,IAErB,IAAKxgC,EAAM,CAGP,KAAOihC,IAAsBA,EAAkBlgB,KAASkgB,IAAsBD,GAC1EE,GAAYD,GACZA,EAAoBE,GAAeF,EAAmBD,GAE1DE,GAAYD,GAAqBD,GACjChhC,EAAOihC,GAAqBA,EAAkBlgB,IAElDkgB,EAAoBjhC,GA0FpB+gC,CAAgBne,IAexB,SAASue,GAAeF,EAAmBD,GACvC,IAAIve,EACJ,OAAIL,GAAQ6e,KAAuBxe,EAAQwe,EAAkBhgB,MAC1C,IAAfwB,EAAM/d,KAGCg6B,GAAcjc,EAAOwe,GAIrBA,EAAkBngB,MAAYkgB,EAAW,KAAOC,EAAkBngB,IAUjF,SAASogB,GAAYE,GACjB,GAAIA,EAAgB5hC,QAAUqiB,GAAe,CACzC,IAAIe,EAAOwe,EAMXxe,EAAK/B,KAAU,IAwDvB,SAASwgB,EAAkBze,GACvB,IACIqC,EADAZ,EAAQzB,EAAKhC,IAEjB,GAAa,MAATyD,GAAwD,OAAtCY,EAAeZ,EAAMY,cACvC,IAAK,IAAI5lB,EAAI,EAAGA,EAAI4lB,EAAazlB,OAAQH,GAAK,EAAG,CAC7C,IAAIsS,EAAUiR,EAAKqC,EAAa5lB,IAE1BsS,aAAmB4R,IACrB0B,EAAa5lB,EAAI,GAAGI,KAAKkS,IA/DjC0vB,CAAkBze,GAW1B,SAAS0e,EAAgB/e,GACrB,IAAIgf,EAAWhf,EAAM3B,IAAO2c,QAC5B,GAAgB,MAAZgE,EAAkB,CAElB,IADA,IAAIC,EAAWjf,EAAMpB,IACZ9hB,EAAI,EAAGA,EAAIkiC,EAAS/hC,OAAS,EAAGH,GAAK,EAC1C,GAA2B,iBAAhBkiC,EAASliC,GAAiB,CAEjC,IAAIoiC,EAAoBF,EAASliC,EAAI,GACjC0D,EAAsC,mBAAtB0+B,EAChBA,EAAkBlf,GAClBJ,GAAYI,EAAMkf,IAElBC,EAAqBH,EAASliC,EAAI,GACJ,kBAAvBqiC,EAEP3+B,EAAO4+B,oBAAoBJ,EAASliC,GAJzBmiC,EAASD,EAASliC,EAAI,IAIiBqiC,GAG9CA,GAAsB,EAEtBF,EAASE,KAITF,GAAUE,GAAoBE,cAGtCviC,GAAK,MAEuB,iBAAhBkiC,EAASliC,IAGrBwiC,EADgBL,EAASD,EAASliC,OAMlCkiC,EAASliC,GAAGI,KADE+hC,EAASD,EAASliC,EAAI,KAI5CkjB,EAAMpB,IAAW,MAlDjBmgB,CAAgB1e,GAChB,IAAI+E,EAAY/E,EAAK3B,IAEjB0G,GAAgC,IAAnBA,EAAUjjB,MAA4B25B,GAAqBzb,EAAKrB,MAE7EqB,EAAKrB,IAAUugB,WA0I3B,SAAS9B,GAAmBvC,EAAU3uB,EAAQwsB,EAAO+D,GAC7ChB,GAAqBZ,GACrBA,EAASsE,aAAajzB,EAAQwsB,EAAO+D,GAGrCvwB,EAAOizB,aAAazG,EAAO+D,GAAY,GAW/C,SAAS2C,GAA2BvE,EAAU3uB,EAAQwsB,EAAO+D,GACrDA,EACAW,GAAmBvC,EAAU3uB,EAAQwsB,EAAO+D,GAVpD,SAAS4C,EAAkBxE,EAAU3uB,EAAQwsB,GACrC+C,GAAqBZ,GACrBA,EAAS7O,YAAY9f,EAAQwsB,GAG7BxsB,EAAO8f,YAAY0M,GAQnB2G,CAAkBxE,EAAU3uB,EAAQwsB,GAe5C,SAASyD,GAAiBtB,EAAUpJ,GAChC,OAAQgK,GAAqBZ,GAAYA,EAAS3J,WAAWO,GAAQA,EAAKP,WAqC9E,SAASlF,GAAYsT,EAASC,EAAYhd,GACtC,IAAI4M,EAAKxwB,EACL69B,EA5IR,SAASgD,EAAgB3f,EAAO0C,GAE5B,GAAIhC,GAAWgC,GACX,OAAO4Z,GAAiB5Z,EAAY5D,IAAWiB,GAAiBC,EAAO0C,IAI3E,IAAIrW,EAoKR,SAASuzB,EAAgC5f,GACrC,KAAuB,MAAhBA,EAAM3T,SAAyC,IAAtB2T,EAAM3T,OAAOpK,MACnB,IAAtB+d,EAAM3T,OAAOpK,OACb+d,EAAQA,EAAM3T,OAElB,OAAO2T,EAzKM4f,CAAgC5f,GAAO3T,OAGpD,GAAc,MAAVA,EAAgB,CAChB,IAAI6Y,EAAYxC,EAAYlE,IAC5B,OAAuB,IAAnB0G,EAAUjjB,KAQHm6B,GAAyBlX,EAAWxC,GAgCvD,SAASmd,EAAcnd,GAEnB,IAAIwC,EAAYxC,EAAYlE,IAC5B,OAAO0G,GAAgC,IAAnBA,EAAUjjB,KAC1B8d,GAAiBmF,EAAWa,GAAerD,IAC3C,KAhCWmd,CAAcnd,GAKzB,GAAmB,EAAfrW,EAAO1H,MAA6B,CACpC,IAAIojB,EAAQrF,EAAYvE,IAAOzH,KAE3BoF,EAAgBiM,EADNA,EAAM1b,EAAOrM,OACOiiB,gBAAgBnG,cAOlD,GAAIA,IAAkB/gB,EAAQkc,kBAAkB6oB,WAC5ChkB,IAAkB/gB,EAAQkc,kBAAkB8oB,OAC5C,OAAO,KAGf,OAAOhgB,GAAiB1T,EAAQqW,GA+FjBid,CAAgBD,EAAYhd,GAC/C,GAAoB,MAAhBia,EAAsB,CACtB,IAAI3B,EAAWtY,EAAY5D,IAEvBkhB,EA7BZ,SAASC,EAAoBC,EAAapgB,GACtC,GAAyB,IAArBogB,EAAYj+B,KAAuB,CACnC,IAAIg7B,EAAahB,GAAciE,EAAapgB,GACxCie,EAAQd,EAAW1d,IAEvB,OAAO4gB,GADKpC,EAAMj7B,QAAQgd,GACSie,EAAOd,EAAWzd,KAEpD,OAAyB,IAArB0gB,EAAYj+B,MACI,IAArBi+B,EAAYj+B,KACL8d,GAAiBmgB,EAAapgB,GAElC,KAkBcmgB,CADCP,EAAWrzB,QAAUqW,EAAYlE,IACDkE,GAClD,GAAI1mB,MAAMqJ,QAAQo6B,GACd,IACI,IAAK,IAAIW,EAAYljC,EAASuiC,GAAUY,EAAcD,EAAU7iC,QAAS8iC,EAAY5iC,KAAM4iC,EAAcD,EAAU7iC,OAE/GgiC,GAA2BvE,EAAU2B,EADpB0D,EAAY7iC,MACkCwiC,GAGvE,MAAOtQ,GAASJ,GAAQvxB,MAAO2xB,GAC/B,QACI,IACQ2Q,IAAgBA,EAAY5iC,OAASqB,EAAKshC,EAAUhR,SAAStwB,EAAG9B,KAAKojC,GAE7E,QAAU,GAAI9Q,EAAK,MAAMA,EAAIvxB,YAIjCwhC,GAA2BvE,EAAU2B,EAAc8C,EAASO,IAiBxE,SAASG,GAAqBngC,EAAO+9B,EAAOuC,GACxC,GAAItgC,EAAQ,EAAI+9B,EAAMhhC,OAAQ,CAC1B,IAAIojB,EAAO4d,EAAM/9B,EAAQ,GACrBugC,EAAYpgB,EAAK3B,IACrB,OAAO+hB,EAAU1H,MAAQ9Y,GAAiBwgB,EAAU1H,MAAO1Y,GAAQmgB,EAGnE,OAAOA,EAYf,SAAS9C,GAAiBxC,EAAUwF,EAAOC,GACvC,IAAIC,EAAepE,GAAiBtB,EAAUwF,GAC1CE,GA9GR,SAASC,EAAkB3F,EAAU3uB,EAAQwsB,EAAO4H,GAC5C7E,GAAqBZ,GACrBA,EAAS7N,YAAY9gB,EAAQwsB,EAAO4H,GAGpCp0B,EAAO8gB,YAAY0L,GA0GnB8H,CAAkB3F,EAAU0F,EAAcF,EAAOC,GA2CzD,SAASG,GAAoBC,EAAgBC,EAAiBpe,EAAaqe,GACvE,IAAI1I,EAAStY,GAAiB8gB,EAAgBE,GAC9C5U,GAAYkM,EAAQyI,EAAiBpe,GAIrC6V,GAAgBF,EAAQ0I,GACxB,IAAI/D,EAAkB+D,EAAeF,EAAe7gC,OACpD,GAA4B,IAAxB6gC,EAAe5+B,KAOf,IADA,IAAI87B,EAAQf,EAAgBzd,IACnB3iB,EAAI,EAAGA,EAAImhC,EAAMhhC,OAAQH,IAC9BghC,GAA2BG,EAAMnhC,IAAI,EAAMogC,EAAgBxd,SAG9D,CACD,GAA4B,IAAxBqhB,EAAe5+B,KAEf,IADA,IAAI++B,EAAwBH,EAAehI,MACpCmI,GACHJ,GAAoBI,EAAuBF,EAAiBpe,EAAaqe,GACzEC,EAAwBA,EAAsBzjC,KAGlDqiB,GAAaod,IACb7Q,GAAY6Q,EAAgBxd,IAASshB,EAAiBpe,IAwBlE,IAAIue,GACA,SAASA,GAAmB79B,EAAI5F,GAC5B/B,KAAK2H,GAAKA,EACV3H,KAAK+B,MAAQA,GAKjB0jC,GAAmC,WACnC,SAASA,IACLzlC,KAAK0lC,YAYT,OAVAD,EAAkB5kC,UAAU8kC,aAAe,WACvC,IAAK,IAAIxkC,EAAI,EAAGA,EAAInB,KAAK0lC,SAASpkC,OAAQH,IAAK,CAC3C,IAAIykC,EAAS5lC,KAAK0lC,SAASvkC,GACtBykC,EAAOh1B,QAA2B,IAAjBg1B,EAAOC,OACzBD,EAAOE,OAGf9lC,KAAK0lC,SAASpkC,OAAS,GAE3BmkC,EAAkB5kC,UAAUklC,YAAc,SAAUH,GAAU5lC,KAAK0lC,SAASrjC,KAAKujC,IAC1EH,EAd2B,GAwBlCO,GAAwB,IAC5B,SAASC,GAA0BC,EAAgBnP,EAAWoP,EAAeC,GACzE,IAAI3yB,GACAyyB,GAAkB,KAClB,KAEAC,IAAkB,KAAM,MACxBC,IAAmB,KAAM,OACxB,EAAG,IACH,IACA,GACD,MAGJ,OADAC,GAA6B5yB,EAAS,MAC/BA,EAEX,SAAS4yB,GAA6B5yB,EAAS6yB,GAE3C7yB,EAAQ,GAAmCpR,KAAKikC,GAAe,GAAG,EAAO,MAmC7E,SAASC,GAAkBhiC,EAAOiiC,GAI9B,IAHA,IAAIC,EAAeliC,EACfugB,EAAY0hB,EAASC,GACrBC,EAAUF,EACPjmC,MAAMqJ,QAAQkb,IACjB4hB,EAAU5hB,EACVA,EAAYA,EAAUrC,IAE1B,GAh/HJ,SAASkkB,EAAiB5kC,GACtB,OAAOxB,MAAMqJ,QAAQ7H,IAAiC,iBAAhBA,EAAM6hB,IA++HxC+iB,CAAiBD,GACjB,OAAOA,EAIP,IAAIE,EAAkBniB,GAASlgB,EAAQof,GAAe6iB,GAAUI,gBAIhE,OAHIF,IAAYF,IACZC,EAAehkB,IAEZikB,EAAQD,GAAgBG,EA5CvC,SAASC,EAAoBvpB,EAASwpB,GAKlC,IAHA,IAAIrzB,EAAUqzB,EAAqB31B,QAG1BhQ,EAAI,EAAGA,EAAI,EAAmCA,IAAK,CACxD,IAAIY,EAAQ+kC,EAAqB3lC,GAC7BZ,MAAMqJ,QAAQ7H,KACd0R,EAAQtS,GAAKY,EAAMoP,SAM3B,OAHAsC,EAAQ,GAA2B6J,EAEnC7J,EAAQ,IAA+B,GAChCA,EA+BCozB,CAAoB/hB,EAAW8hB,GAC/BX,GAA0BnhB,GAGtC,SAASiiB,GAAgBlkC,GACrB,OAAOA,EAAK,KAAOmjC,GAEvB,SAASgB,GAAcziB,GACnB,OAAiD,IAA3B,EAAdA,EAAMrb,OAElB,SAAS+9B,GAAc1iB,GACnB,OAAkD,IAA5B,GAAdA,EAAMrb,OAmBlB,SAASg+B,GAAkBC,EAAeC,EAAa9pB,EAASsoB,EAAQyB,EAAoBC,GAQxF,OAPAA,EAAMA,GAAOhqB,EACT+pB,EACAF,EAAcE,GAAsBzB,EAGpCuB,EAAc9kC,KAAKujC,KAEnBA,IACAA,EAAO2B,iBAAiB,IAAqB,WACzC,IAAIhjC,EAAQ4iC,EAAc9/B,QAAQu+B,GAM9BrhC,IACIA,EANoB4iC,EAAc,GAOlCA,EAAc5iC,GAAS,KAGvB4iC,EAAc5E,OAAOh+B,EAAO,IAGpCqhC,EAAOhC,aAESwD,EAAYI,gBAAkBJ,EAAYI,cAAgB,IAAI/B,KACpEM,YAAYH,EAAQ0B,IAC3B,GA8Bf,SAASG,GAAiBC,GACtB,OAAOA,EAAe,GAE1B,SAASC,GAAmB1sB,GACxB,OAAOA,EAAK,IACP,EAA2C,KAAM,KAAM,KAAM,MAgCtE,SAAS2sB,GAAwBC,GAS7B,IARA,IAAIp0B,EAAUwyB,KACVG,EAAiB3yB,EAAQ,IACxB,KAAM,MACP0yB,EAAgB1yB,EAAQ,IACvB,KAAM,MAGPuV,GAAQ,EACH7nB,EAAI,EAAGA,EAAI0mC,EAAMvmC,OAAQH,IAAK,CACnC,IAAI2mC,EAAOD,EAAM1mC,GACjB,GAAmB,iBAAR2mC,EACP9e,EAAO8e,OAEN,GAAa,IAAT9e,EACLmd,EAAc9jC,KAAKylC,EAAMD,IAAQ1mC,SAEhC,GAAa,IAAT6nB,EACLod,EAAe/jC,KAAKylC,GAAM,QAEzB,GAAa,IAAT9e,EACL,MAGR,OAAOvV,EA+CX,SAASs0B,GAAyBC,EAAgBr7B,EAAM5K,GAEpD,IAAK,IAAIZ,EAAI,EAA+BA,EAAI6mC,EAAe1mC,QAAS,CAEpE,GADU0mC,EAAe7mC,KACbwL,EAAM,CACd,IAAIs7B,EAAgBD,EAAe7mC,EAAI,GAMvC,YAHqB,MAAjB8mC,GAA0C,GAAjBA,IACzBD,EAAe7mC,EAAI,GAAuBY,IAIlDZ,GAAQ,EAGZ6mC,EAAe3lC,KAAKsK,EAAM5K,GAM9B,SAASmmC,GAAoB5qB,EAAS7J,EAAS8rB,GAE3C4I,GAA2B7qB,EAASiiB,EADhB9rB,EAAQ,IACiC,GAMjE,SAAS20B,GAAqB9qB,EAAS7J,EAAS8rB,GAE5C4I,GAA2B7qB,EAASiiB,EADf9rB,EAAQ,IACiC,GAMlE,SAAS00B,GAA2B7qB,EAASiiB,EAAU8I,EAAsBC,GACzE,IAAK,IAAInnC,EAAI,EAA+BA,EAAIknC,EAAqB/mC,OAAQH,GAAK,EAAc,CAC5F,IAAIY,EAAQsmC,EAAqBlnC,EAAI,GACjCY,IACIumC,EACAC,GAASjrB,EAAS+qB,EAAqBlnC,EAAI,IAAqB,EAAMo+B,EAAU,MAGhFiJ,GAASlrB,EAAS+qB,EAAqBlnC,EAAI,GAAqBY,EAAOw9B,EAAU,QA6QjG,SAASkJ,GAAwBh1B,EAASi1B,EAAaC,EAAOliB,GAC1D,IAAK,IAAI5c,EAAI8+B,EAAO9+B,EAAI4c,EAAK5c,GAAK,EAC9B,GAAI++B,GAAQn1B,EAAS5J,KAAO6+B,EACxB,OAAO7+B,EAEf,OAAQ,EA8IZ,SAASg/B,GAA2Bp1B,EAASwS,EAAgB6iB,EAAoBC,EAAUC,EAAQlmC,EAAOkB,EAAQilC,EAAYC,GAkC1H,IAjCA,IAAIxK,GAAQ,EACRyK,EAAa,EACI,EAAjBljB,EAGAmjB,EAAe31B,EAAQy1B,EAAoB,EAA6B,GAGxEG,EAA4BD,EAAaD,EAAa,GAEtDG,EAA2BF,EAAaD,EAAa,GAWrDI,EAVoF,IAAvDH,EAAaD,EAAa,MAFjCC,EAAaD,EAAa,KAYiCF,GACjFO,EAAoB,EACpBC,EAAyB,EAIzBC,GAA2B,IAAX1lC,EAIhB2lC,EAAWZ,EACXa,EAA2B9mC,EAAMxB,OAC9BqoC,EAAWN,GAA2B,CACzC,IAAIQ,EAAcjB,GAAQn1B,EAASk2B,GACnC,GAAIC,EACA,IAAK,IAAIzoC,EAAI,EAAGA,EAAI2B,EAAMxB,OAAQH,IAG9B,IADI2oC,GADAC,EAAUjnC,EAAM3B,IACY+nC,EAAoBa,EAAUC,GAAUD,GAAY,OAC9DF,IAAgBC,EAAgB,CAClD,IAAIG,EAAeC,GAASz2B,EAASk2B,GACjCQ,EAAwBC,GAA2B32B,EAASk2B,GAC5D5nC,IAAQ2nC,GAAuB1lC,EAAO8lC,GACtCO,EAAcC,GAAY72B,EAASk2B,GACnCY,GAAgBF,EAAaJ,EAAcloC,IAC3CyoC,GAAiBP,EAAcloC,EAAOooC,EAAuBlkB,KAC7DwkB,GAASh3B,EAASk2B,EAAU5nC,GAC5B2oC,GAAsBj3B,EAASk2B,EAAUb,EAAoB7iB,GACzD0kB,GAAuBl3B,EAAS42B,EAAatoC,KAC7C6oC,GAASn3B,EAASk2B,GAAU,GAC5BjL,GAAQ,IAGhB57B,EAAM3B,GAAK,KACXyoC,IACA,MAIZD,GAAY,EAIhB,GAAIC,EAA0B,CAC1B,IAAI7S,EAAYmS,EAAoB,KAAO2B,GAAkBp3B,EAASwS,GACtE6kB,EAAgB,IAAS3pC,EAAI,EAAGA,EAAI2B,EAAMxB,OAAQH,IAAK,CACnD,IAAI4oC,EACJ,GADIA,EAAUjnC,EAAM3B,GACpB,CAKIY,IAAQ2nC,GAAuB1lC,EAAO+lC,GAG1C,IAHA,IACID,EAAiBZ,EAAoBa,EAAUC,GAAUD,GACzDgB,EAAwBpB,GAAYN,EAC/Bx/B,EAAI8/B,EAAU9/B,EAAIm/B,EAAQn/B,GAAK,EAEpC,GADqB++B,GAAQn1B,EAAS5J,KACfigC,EAAgB,CACnC,IAAIkB,EAA2BZ,GAA2B32B,EAAS5J,GAC/DohC,EAA+BC,GAAsBz3B,EAAS5J,GAC9DshC,EAAkBjB,GAASz2B,EAAS5J,GACpCuhC,EAAiBd,GAAY72B,EAAS5J,GACtC2gC,GAAiBW,EAAiBppC,EAAOipC,EAA0B/kB,KAI/D8kB,IACAM,GAAwB53B,EAASk2B,EAAU9/B,GAC3C2/B,KAEAe,GAAgBa,EAAgBD,EAAiBppC,MACnC,OAAVA,QAA4BmE,IAAVnE,GAAuBA,IAAUopC,KACnD5B,GAAyB,GAE7BkB,GAASh3B,EAASk2B,EAAU5nC,IAOJ,OAApBopC,GACAR,GAAuBl3B,EAAS23B,EAAgBrpC,MAChD6oC,GAASn3B,EAASk2B,GAAU,GAC5BjL,GAAQ,IAGZsM,IAA6B/kB,GAC7B6iB,IAAuBmC,GACvBP,GAAsBj3B,EAASk2B,EAAUb,EAAoB7iB,IAGrE0jB,GAAY,EACZ,SAASmB,EAIjB,GAAa,MAAT/oC,EAAe,CACfwnC,GAAyB,EACzBC,IACA,IAAI8B,EACA,EADOC,GAAmB93B,EAASq2B,EAAgBZ,EAAmBnS,GAK1EyU,GAAuB/3B,EAHFs3B,EACjBpB,EACCN,EAAqD,EAAzBI,EACeP,EAAmBY,EAAgBwB,EAAMvpC,EAAOkkB,EAAgB6iB,GAChHW,IACAT,GAAU,EACVW,GAAY,EACZjL,GAAQ,KAOpB,KAAOiL,EAAWX,GAAQ,CACtBO,GAAyB,EACzB,IAAIkC,EAAWvB,GAASz2B,EAASk2B,GAC7B+B,EAAUpB,GAAY72B,EAASk2B,GAChBS,GAA2B32B,EAASk2B,GACvC,MAAZ8B,IACAlC,GAAyB,GAEzBgB,GAAgBmB,EAASD,EAAU,QACnChB,GAASh3B,EAASk2B,EAAU,MAExBgB,GAAuBl3B,EAASi4B,EAASD,KACzCb,GAASn3B,EAASk2B,GAAU,GAC5BjL,GAAQ,GAEZgM,GAAsBj3B,EAASk2B,EAAUb,EAAoB7iB,IAEjE0jB,GAAY,EAchB,OAivBJ,SAASgC,EAAqBl4B,EAASwS,EAAgBijB,EAAmBD,EAAY2C,EAAeC,EAAaC,EAAaC,GAC3H,IAAI/nC,EAASyP,EAAQy1B,EAAoB,EAA6B,GAClE3kC,EAAQ,EACS,EAAjB0hB,EAGJ,GAAI8lB,EAEA,IADA,IAAIC,EAAoBJ,EAA8B,EAAdE,EAC/B3qC,EAAIoD,EAAQ,EAAcpD,EAAI6C,EAAO1C,OAAQH,GAAK,EACvD6C,EAAO7C,EAAI,GAA+B6qC,EAC1ChoC,EAAO7C,EAAI,GAA2B,EAG9C6C,EAAOO,EAAQ,GAA2B,EAC1CP,EAAOO,EAAQ,GAA+BqnC,EAC9C5nC,EAAOO,EAAQ,GAAuB0kC,EACtCjlC,EAAOO,EAAQ,GAA4BunC,EAI3C,IAAIG,EAAsBH,EAC1B,IAAS3qC,EAAI,EAA6BA,EAAIoD,EAAOpD,GAAK,EACtD8qC,GAAuBjoC,EAAO7C,EAAI,GAMtC,IAAK+nC,EACD,CAAA,IAAIgD,EAAaz4B,EAAQ,GAGrB04B,EAAsBN,EAFCK,EAAW,GAGtC,IAAS/qC,EAAI,EAA6BA,EAAI+qC,EAAW5qC,OAAQH,GAAK,EAClE+qC,EAAW/qC,EAAI,IAAgCgrC,EAGvDnoC,EAAO,GAAgCioC,EA3xBvCN,CAAqBl4B,EAASwS,EAAgBijB,EAAmBD,EAAYI,EAA2BL,EAAQQ,EADhHD,EAAyBA,GAA0BD,IAA6BE,GAE5E9K,IACA0N,GAAgB34B,GAAS,GACzB44B,GAAkB54B,EAASwS,GAAgB,IAExCwjB,EA2CX,SAAS6C,GAAyB74B,EAAS84B,EAAQC,EAAOC,EAAcnG,EAAcoG,GAClF,IAAIzmB,EAAiB0mB,GAA8Bl5B,EAAS6yB,GAAgB,MACxEsG,EAkiBR,SAASC,EAAwBp5B,EAASwS,EAAgBsmB,EAAQE,GAC9D,IAAIK,EAAgCr5B,EAAQ,GAAqD,EAAjBwS,EAC5E,GACA8mB,EAAUt5B,EAAQ,GAOtB,OAAOs5B,EANcD,EACjB,GACCL,EACGM,EAAQD,EAAgC,GACxC,GACJP,GA3iBcM,CAAwBp5B,EAASwS,EAAgBsmB,EAAQE,GACvEO,EAAY9C,GAASz2B,EAASm5B,GAC9BK,EAAW3C,GAAY72B,EAASm5B,GAChCM,EAAgB9C,GAA2B32B,EAASm5B,GACpD7qC,EAASyqC,aAAiBhH,GAAsBgH,EAAMzqC,MAAQyqC,EAClE,GAAIjC,GAAgB0C,EAAUD,EAAWjrC,KACpC2qC,GAAiBlC,GAAiBwC,EAAWjrC,EAAOmrC,EAAejnB,IAAkB,CACtF,IAEIknB,EAAgBX,aAAiBhH,GACjC,IAAI4H,GAA2BZ,EAFrB/4B,EAAQ,GAD8B,IAAnB,EAAXw5B,GAG8C,EAAgB,GAChF,KACAI,EAAWF,EAAgBX,EAAMzqC,MAAQyqC,EACzCc,EAAkBpC,GAAsBz3B,EAASm5B,GACjDW,GAAyB,EACzBzE,EAAqBqE,EAAgBG,EAAkB,EAC3D,GAAIE,GAAwB/5B,EAAS05B,EAAeG,GAAkB,CAClE,IAAIG,EAAWC,GAAiBj6B,EAAS05B,EAAeG,GACxDxE,EAAqBqE,EAAgBM,EAAW,EAChDF,GAAyB,EAK7B,IAHIA,GAA0BL,IAAkBjnB,IAC5CykB,GAAsBj3B,EAASm5B,EAAa9D,EAAoB7iB,GAEhEinB,IAAkBjnB,EAAgB,CAClC,IAAItZ,EAAOi8B,GAAQn1B,EAASm5B,GACxB7V,EAAY8T,GAAkBp3B,EAASwS,IAwNvD,SAAS0nB,EAAgBl6B,EAASlP,EAAOqpC,GACjCA,EACAn6B,EAAQlP,IAAU,EAGlBkP,EAAQlP,KAAU,EA5NdopC,CAAgBl6B,EAASm5B,KAAc7V,IAAaA,EAAUpqB,KAGlE89B,GAASh3B,EAASm5B,EAAaS,GAC/B,IAAIQ,EAAgBC,GAAsBb,GAEtCc,EAAgB7D,GAASz2B,EAASo6B,GACtC,IAAKE,GAAiBxD,GAAgB0C,EAAUc,EAAeV,GAAU,CACrE,IAAIW,GAAa,EACbC,GAAc,GAEbC,GAAYb,IAA4Ba,GAAYH,KACrDC,GAAa,EACbC,GAAc,GAElBrD,GAASn3B,EAASo6B,EAAeG,GACjCpD,GAASn3B,EAASm5B,EAAaqB,GAC/B5B,GAAkB54B,EAASwS,GAAgB,GAC3CmmB,GAAgB34B,GAAS,GAEzB85B,GACAY,GAAuB16B,GAAS,IAoI5C,SAAS+0B,GAAS5L,EAAQjwB,EAAM5K,EAAOw9B,EAAUxI,EAAWqX,EAAOjB,GAC/DprC,EAAQg1B,GAAah1B,EAAQg1B,EAAUpqB,EAAM5K,GAASA,EAClDqsC,GAASjB,GACLiB,GACAA,EAAM3D,SAAS99B,EAAM5K,GAErBorC,GACAA,EAAc1C,SAAS99B,EAAM5K,IAG5BA,GACLA,EAAQA,EAAMoF,WAGdg5B,GAAqBZ,GACjBA,EAASiJ,SAAS5L,EAAQjwB,EAAM5K,EAAOk+B,GAAoBoO,UAC3DzR,EAAO0R,MAAMC,YAAY5hC,EAAM5K,IAInCo+B,GAAqBZ,GACjBA,EAASiP,YAAY5R,EAAQjwB,EAAMszB,GAAoBoO,UACvDzR,EAAO0R,MAAMG,eAAe9hC,GAiBxC,SAAS47B,GAAS3L,EAAQ8R,EAAWC,EAAKpP,EAAU6O,EAAOjB,GACnDiB,GAASjB,GACLiB,GACAA,EAAM3D,SAASiE,EAAWC,GAE1BxB,GACAA,EAAc1C,SAASiE,EAAWC,IAInB,KAAdD,IACDC,EAEAxO,GAAqBZ,GAAYA,EAASqP,SAAShS,EAAQ8R,GACvD9R,EAAkB,UAAE+R,IAAID,GAI5BvO,GAAqBZ,GAAYA,EAASsP,YAAYjS,EAAQ8R,GAC1D9R,EAAkB,UAAEkS,OAAOJ,IAY3C,SAAS9D,GAASn3B,EAASlP,EAAOwqC,GAC9B,IAAIC,EAAgBzqC,GAAS,EAAqCA,EAAQ,EAAuBA,EAC7FwqC,EACAt7B,EAAQu7B,IAAkB,EAG1Bv7B,EAAQu7B,KAAkB,EAGlC,SAASC,GAAQx7B,EAASlP,GAEtB,OAAmD,IAAlB,EAAzBkP,EADYlP,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAAS2qC,GAAkBz7B,EAASlP,GAEhC,OAAmD,IAAlB,EAAzBkP,EADYlP,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAAS4qC,GAAc17B,EAASlP,GAE5B,OAAsD,IAArB,EAAzBkP,EADYlP,GAAS,EAAqCA,EAAQ,EAAuBA,IAGrG,SAAS6qC,GAASC,EAAYC,EAAaC,GACvC,OAAqB,GAAbF,EAAkCC,GAAe,EACpDC,GAAgB,GAEzB,SAASC,GAAgB/7B,EAAS63B,GAC9B,IAAI/mC,EAAQkrC,GAAgBnE,GAI5B,OAH+B,EAAPA,EACgB73B,EAAQ,GAC5CA,EAAQ,IACSlP,GAEzB,SAASkrC,GAAgBnE,GACrB,OAAQA,GAAQ,EAAwB,MAE5C,SAASwC,GAAsBxC,GAC3B,IAAI/mC,EAAS+mC,GAAQ,GAAkD,MACvE,OAAO/mC,GAAS,EAAoCA,GAAS,EAEjE,SAASmrC,GAA0Bj8B,GAE/B,OADiBA,EAAQ,GACP,GAGtB,SAASk8B,GAAyBl8B,GAE9B,OADkBA,EAAQ,GACP,GAGvB,SAASm8B,GAAQn8B,EAASlP,EAAOoI,GAC7B8G,EAAQlP,EAAQ,GAA0BoI,EAE9C,SAAS89B,GAASh3B,EAASlP,EAAOxC,GAC9B0R,EAAQlP,EAAQ,GAAuBxC,EAE3C,SAASyrC,GAAwB/5B,EAASo8B,EAAStrC,GAC/C,IAAI4iC,EAAgB1zB,EAAQ,GAC5B,GAAIo8B,GACA,IAAK1I,GAA2B,IAAV5iC,EAClB,OAAO,OAGV,IAAK4iC,EACN,OAAO,EAEX,OAAOA,EAAc5iC,KAAWsrC,EAEpC,SAASnC,GAAiBj6B,EAASo8B,EAASC,GACxC,IAAI3I,EAAgB1zB,EAAQ,IAA0Bk0B,GAAmBl0B,GAUzE,OATIq8B,EAAiB,EACjB3I,EAAc2I,GAAkBD,GAIhC1I,EAAc5E,OADduN,EAAiB3I,EAAc,GACM,EAAG0I,EAAS,MACjD1I,EAAc,IACV,GAED2I,EAKX,SAASpF,GAAsBj3B,EAASlP,EAAOukC,EAAoB7iB,GAC/D,IAAIlkB,EAJR,SAASguC,EAAuB9pB,EAAgB+pB,GAC5C,OAAQA,GAAe,GAAyB/pB,EAGpC8pB,CAAuB9pB,EAAgB6iB,GACnDr1B,EAAQlP,EAAQ,GAAoCxC,EAExD,SAASmpC,GAAsBz3B,EAASlP,GAIpC,OAHWkP,EAAQlP,EAAQ,IACO,GAC9B,MAGR,SAAS0rC,GAAiBx8B,EAASlP,GAC/B,IAAIukC,EAAqBoC,GAAsBz3B,EAASlP,GACxD,GAAIukC,EAAoB,CACpB,IAAI3B,EAAgB1zB,EAAQ,GAC5B,GAAI0zB,EACA,OAAOA,EAAc2B,GAG7B,OAAO,KAEX,SAASoH,GAAQz8B,EAASlP,EAAO+mC,GAE7B73B,EAD8B,IAAVlP,EAAuCA,EAASA,EAAQ,GACnD+mC,EAE7B,SAAShB,GAAY72B,EAASlP,GAE1B,OAAOkP,EADuB,IAAVlP,EAAuCA,EAASA,EAAQ,GAGhF,SAAS2lC,GAASz2B,EAASlP,GACvB,OAAOkP,EAAQlP,EAAQ,GAE3B,SAASqkC,GAAQn1B,EAASlP,GACtB,OAAOkP,EAAQlP,EAAQ,GAK3B,SAAS6nC,GAAgB34B,EAASs7B,GAC9BnE,GAASn3B,EAAS,EAA4Bs7B,GAElD,SAASZ,GAAuB16B,EAASs7B,GACjCA,EACAt7B,EAAQ,IAA+B,EAGvCA,EAAQ,KAA+B,EAG/C,SAAS43B,GAAwB53B,EAAS08B,EAAQC,GAC9C,GAAID,IAAWC,EAAf,CAEA,IAAIC,EAAWnG,GAASz2B,EAAS08B,GAC7BG,EAAU1H,GAAQn1B,EAAS08B,GAC3BI,EAAUjG,GAAY72B,EAAS08B,GAC/BK,EAAwBtF,GAAsBz3B,EAAS08B,GACvDM,EAAoBrG,GAA2B32B,EAAS08B,GACxDO,EAAQH,EACRI,EAAQrG,GAAY72B,EAAS28B,GAC7BQ,EAAe9C,GAAsB4C,GACrCE,GAAgB,GAGhBV,GAAQz8B,EAASm9B,EAAcxB,GAF3ByB,EAAQvG,GAAY72B,EAASm9B,GAClBnB,GAAgBoB,GAC0BT,IAE7D,IAEQS,EAFJC,EAAehD,GAAsB6C,GACrCG,GAAgB,GAGhBZ,GAAQz8B,EAASq9B,EAAc1B,GAF3ByB,EAAQvG,GAAY72B,EAASq9B,GAClBrB,GAAgBoB,GAC0BV,IAE7D1F,GAASh3B,EAAS08B,EAAQjG,GAASz2B,EAAS28B,IAC5CR,GAAQn8B,EAAS08B,EAAQvH,GAAQn1B,EAAS28B,IAC1CF,GAAQz8B,EAAS08B,EAAQ7F,GAAY72B,EAAS28B,IAG9C1F,GAAsBj3B,EAAS08B,EAFZjF,GAAsBz3B,EAAS28B,GAC5BhG,GAA2B32B,EAAS28B,IAE1D3F,GAASh3B,EAAS28B,EAAQC,GAC1BT,GAAQn8B,EAAS28B,EAAQE,GACzBJ,GAAQz8B,EAAS28B,EAAQG,GACzB7F,GAAsBj3B,EAAS28B,EAAQI,EAAuBC,IAiBlE,SAASjF,GAAuB/3B,EAASlP,EAAOwsC,EAAYluC,EAAMyoC,EAAMvpC,EAAOkkB,EAAgB+pB,GAC3F,IAAIgB,EAAUzsC,EAAQkP,EAAQnS,OAE9BmS,EAAQ8uB,OAAOh+B,EAAO,EAAU,EAAP+mC,GAAwByF,EAAa,EAAgB,GAAeluC,EAAMd,EAAO,GAC1G2oC,GAAsBj3B,EAASlP,EAAOyrC,EAAa/pB,GAC/C+qB,GApBR,SAASC,EAA0Bx9B,EAASy9B,GACxC,IAAK,IAAI/vC,EAAI+vC,EAAoB/vC,EAAIsS,EAAQnS,OAAQH,GAAK,EAAc,CACpE,IACIyrC,EAAckB,GADFxD,GAAY72B,EAAStS,IAErC,GAAIyrC,EAAc,EAAG,CACjB,IACIuE,EAAwB1B,GADXnF,GAAY72B,EAASm5B,IAMtCsD,GAAQz8B,EAASm5B,EADCwC,IAHDH,GAAQx7B,EAASm5B,GAAe,EAAgB,IAC5DsC,GAAkBz7B,EAASm5B,GAAe,EAAgB,IAC1DuC,GAAc17B,EAASm5B,GAAe,EAAmB,GACxBuE,EAAuBhwC,MAcjE8vC,CAA0Bx9B,EAASlP,EAAQ,GAGnD,SAAS2pC,GAAYnsC,EAAO0qC,GACxB,OAAiB,OAAV1qC,EAEX,SAASwpC,GAAmB93B,EAAS9G,EAAMu8B,EAAmBnS,GAC1D,IACIqa,EADA9F,EAAQvU,GAAaA,EAAUpqB,GAAS,EAAmB,EAY/D,OAVIu8B,GACAoC,GAAQ,EACR8F,EACIC,GAA+B59B,EAAQ,GAAqC9G,IAGhFykC,EACIC,GAA+B59B,EAAQ,GAAqC9G,GAG7EyiC,GAAS9D,EADhB8F,EAAeA,EAAe,EAAKA,EAAe,EAAuB,EACrC,GAExC,SAASzG,GAAuBl3B,EAAS63B,EAAMgG,GAC3C,IAAIC,EAAe/B,GAAgB/7B,EAAS63B,GAC5C,OAAQiG,GAAgBhH,GAAgBe,EAAMiG,EAAcD,GAEhE,SAAS/G,GAAgBe,EAAMvR,EAAG55B,GAO9B,QAN0B,EAAPmrC,IACHvR,GAAK55B,GACM,EAAPmrC,EAMTvR,EAAE5yB,aAAehH,EAAEgH,WAGvB4yB,IAAM55B,EAEjB,IAAIitC,GAA4C,WAC5C,SAASA,EAA2B/tC,EAASmyC,EAAUC,GACnDzxC,KAAKwxC,SAAWA,EAChBxxC,KAAKyxC,MAAQA,EACbzxC,KAAK0xC,WACL1xC,KAAK2xC,QAAS,EACd3xC,KAAK4xC,SAAWvyC,EAoBpB,OAlBA+tC,EAA2BvsC,UAAU4pC,SAAW,SAAU99B,EAAM5K,GACxD/B,KAAK0xC,QAAQ/kC,KAAU5K,IACvB/B,KAAK0xC,QAAQ/kC,GAAQ5K,EACrB/B,KAAK2xC,QAAS,IAGtBvE,EAA2BvsC,UAAUgxC,YAAc,SAAUC,EAAeC,GAIxE,GAAI/xC,KAAK2xC,OAAQ,CACb,IAAI/L,EAAS5lC,KAAK4xC,SAASjqC,GAAG3H,KAAKwxC,SAAUxxC,KAAKyxC,MAAOzxC,KAAK0xC,QAASK,EAAeD,GAAiB,MAGvG,OAFA9xC,KAAK0xC,WACL1xC,KAAK2xC,QAAS,EACP/L,IAIRwH,EA1BoC,GA4B/C,SAAShD,GAA2B32B,EAASlP,GAEzC,OAAe,MADHkP,EAAQlP,EAAQ,GAGhC,SAASooC,GAA8Bl5B,EAAS6yB,GAC5C,IAAIrgB,EACA+rB,EAAOv+B,EAAQ,GACflP,EAAQ0tC,GAAkCD,EAAM1L,GACpD,IAAe,IAAX/hC,EAAc,CAId0hB,GADA1hB,EAAQytC,EAAK1wC,QACY,EAAIiD,EAAQ,EAAe,EACpDytC,EAAK3vC,KAAK,KAAM,KAAM,KAAM,MAC5B2vC,EAAKztC,EAAQ,GAAgC+hC,EAC7C0L,EAAKztC,EAAQ,IAA2B,EACxCytC,EAAKztC,EAAQ,IAAwC,EACrD,IAAI2tC,EAAoBxC,GAA0Bj8B,IAAY,EAC9D0+B,GAAsB1+B,EAASwS,GAAgB,EAAMxS,EAAQnS,QAC7D6wC,GAAsB1+B,EAASwS,GAAgB,EAAOisB,QAGtDjsB,EAAiB1hB,EAAQ,EAAIA,EAAQ,EAAe,EAExD,OAAO0hB,EAEX,SAASgsB,GAAkCpxB,EAAY8G,GACnD,IAAK,IAAIxmB,EAAI,EAAGA,EAAI0f,EAAWvf,OAAQH,GAAK,EACxC,GAAI0f,EAAW1f,KAAOwmB,EAClB,OAAOxmB,EAGf,OAAQ,EAEZ,SAASkwC,GAA+Be,EAAWzsC,GAC/C,IAAK,IAAIxE,EAAI,EAA+BA,EAAIixC,EAAU9wC,OAAQH,GAAK,EACnE,GAAIixC,EAAUjxC,KAAOwE,EACjB,OAAOxE,EAEf,OAAQ,EAcZ,SAAS0pC,GAAkBp3B,EAASwS,GAChC,IAAI+rB,EAAOv+B,EAAQ,GAInB,OAHYu+B,EAAsB,EAAjB/rB,EACb,IACA+rB,EAAK,IAAiC,KAQ9C,SAAS3F,GAAkB54B,EAASwS,EAAgBosB,GACrC5+B,EAAQ,GACG,EAAjBwS,EACD,GAA2BosB,EAEnC,SAAS7H,GAAiBP,EAAcqH,EAAUgB,EAAuBC,GAUrE,OAAoB,MAAhBtI,IACgB,MAAZqH,EAGOiB,GAAqBD,EAOrBA,IAA0BC,GAgB7C,SAASC,GAAyB/+B,GAC9B,IAAIg/B,EAAqBh/B,EAAQ,GAC7Bi7B,EAAY+D,EAAmB,GACnC,GAAkB,OAAd/D,EAAoB,CACpBA,EAAY,GACZ,IAAK,IAAIvtC,EAAI,EAA+BA,EAAIsxC,EAAmBnxC,OAAQH,GAAK,EAC5DsxC,EAAmBtxC,EAAI,KAEnCutC,IAAcA,EAAUptC,OAAS,IAAM,IAAMmxC,EAAmBtxC,IAGxEsxC,EAAmB,GAAwC/D,EAE/D,OAAOA,EA+BX,SAASgE,GAAmBj/B,EAASy1B,EAAmBjjB,GAIpD,OAHaxS,EAAQy1B,EAAoB,EAA6B,GAC1D,EACS,EAAjBjjB,EACkB,IAAwB,KAgBlD,SAAS0sB,GAAqBl/B,EAASy1B,EAAmBjjB,EAAgBqrB,GAKtE,OAHmB79B,EADOy1B,EAAoB,EAA6B,GAE/D,EACS,EAAjBjjB,EACqB,KAElBqrB,IAAapW,IAChBwX,GAAmBj/B,EAASy1B,EAAmBjjB,KAAoBqrB,GAsE3E,SAAStH,GAAUjoC,GACf,OAAOA,EAAM6R,QAAQ,cAAe,SAAUmf,GAAS,OAAOA,EAAMxf,OAAO,GAAK,IAAMwf,EAAMxf,OAAO,GAAGwiB,gBAE1G,SAASoc,GAAsB1+B,EAASwS,EAAgBijB,EAAmB0C,EAAegH,QACxE,IAAVA,IAAoBA,EAAQ,GAChC,IAAIxJ,EAAe31B,EAAQy1B,EAAoB,EAA6B,GAC5E,GAAIjjB,EAAiB,EAGjB,IAFA,IAAI4sB,EAAQ,EACU,EAAjB5sB,EACEmjB,EAAa9nC,OAASuxC,GAIzBzJ,EAAa/mC,KAAK,EAAGupC,EAAe,KAAM,GAGlDxC,EAAa/mC,KAAK,EAAGupC,EAAe,KAAMgH;;;;;;;OAU9C,IAAIE,GAAuB,cAC3B,SAASC,GAAmBC,EAAkBC,GAC1C,IAAIC,EAAiBF,EAAiB1xC,OAClC6xC,EAAaH,EAAiB3rC,QAAQ4rC,GACtCG,EAAcD,EAAaF,EAAgB3xC,OAC/C,SAAoB,IAAhB6xC,GACIA,EAAa,GAA0C,MAArCH,EAAiBG,EAAa,IAE/CC,EAAcF,GAAoD,MAAlCF,EAAiBI,IAgB9D,SAASC,GAAmB9uB,EAAO+uB,EAAiBC,GAChD,OAAOD,IAAoB/uB,EAAMsR,UAC5B0d,GACmB,IAAfhvB,EAAM/d,MAA2C,IAAf+d,EAAM/d,MACzB,IAAf+d,EAAM/d,MAA8B8sC,IAAoBR,IASrE,SAASU,GAAuBjvB,EAAOvJ,EAAUu4B,GAQ7C,IANA,IAAIvqB,EAAO,EACPyqB,EAAYlvB,EAAMsjB,MAClB6L,EAAsBD,EAAYA,EAAUpsC,QAAQ,IAAuB,EAG3EssC,GAAqB,EAChBxyC,EAAI,EAAGA,EAAI6Z,EAAS1Z,OAAQH,IAAK,CACtC,IAAIi0B,EAAUpa,EAAS7Z,GACvB,GAAuB,iBAAZi0B,GAaX,IAAIue,EAEJ,GAAW,EAAP3qB,GAEA,GADAA,EAAO,EAA2B,EAAPA,EACX,KAAZoM,IAAmBie,GAAmB9uB,EAAO6Q,EAASme,IAC1C,KAAZne,GAAsC,IAApBpa,EAAS1Z,OAAc,CACzC,GAAIsyC,GAAW5qB,GACX,OAAO,EACX2qB,GAAqB,OAGxB,CACD,IAAIE,EAA2B,EAAP7qB,EAAuBoM,EAAUpa,IAAW7Z,GAGpE,GAAY,EAAP6nB,GAAyBzE,EAAMqiB,gBAAiB,CACjD,IAAKmM,GAAmBe,GAAwBvvB,GAAQsvB,GAAoB,CACxE,GAAID,GAAW5qB,GACX,OAAO,EACX2qB,GAAqB,EAEzB,SAEJ,IACII,EAAkBC,GADC,EAAPhrB,EAAwB,QAAUoM,EACEqe,GACpD,IAAyB,IAArBM,EAAwB,CACxB,GAAIH,GAAW5qB,GACX,OAAO,EACX2qB,GAAqB,EACrB,SAEJ,GAA0B,KAAtBE,EAA0B,CAC1B,IAAII,EAGAA,EADAP,GAAuB,GAAKK,EAAkBL,EAC9B,GAIAD,EAAUM,EAAkB,GAEhD,IAAIG,EAAiC,EAAPlrB,EAAuBirB,EAAgB,KACrE,GAAIC,IACCnB,GAAmBmB,EAAyBL,IACtC,EAAP7qB,GAA4B6qB,IAAsBI,EAAe,CACjE,GAAIL,GAAW5qB,GACX,OAAO,EACX2qB,GAAqB,SA5DjC,CAEI,IAAKA,IAAuBC,GAAW5qB,KAAU4qB,GAAWxe,GACxD,OAAO,EAIX,GAAIue,GAAsBC,GAAWxe,GACjC,SACJue,GAAqB,EACrB3qB,EAAOoM,EAAkB,EAAPpM,GAuD1B,OAAO4qB,GAAW5qB,IAAS2qB,EAE/B,SAASC,GAAW5qB,GAChB,OAAgC,IAAjB,EAAPA,GAEZ,SAAS8qB,GAAwBvvB,GAO7B,OAAOA,EAAMqiB,gBAAkB4L,GAAyBjuB,EAAMqiB,iBAAmB,GAWrF,SAASoN,GAAoBnxC,EAAMglC,GAC/B,GAAc,OAAVA,EACA,OAAQ,EAGZ,IAFA,IAAIsM,GAAiB,EACjBhzC,EAAI,EACDA,EAAI0mC,EAAMvmC,QAAQ,CACrB,IAAI8yC,EAAgBvM,EAAM1mC,GAC1B,GAAIizC,IAAkBvxC,EAClB,OAAO1B,EAEgB,IAAlBizC,EAELjzC,GAAK,GAGiB,IAAlBizC,IACAD,GAAiB,GAErBhzC,GAAKgzC,EAAiB,EAAI,GAGlC,OAAQ,EAEZ,SAASE,GAA2B9vB,EAAOvJ,EAAUu4B,QACxB,IAArBA,IAA+BA,GAAmB,GACtD,IAAK,IAAIpyC,EAAI,EAAGA,EAAI6Z,EAAS1Z,OAAQH,IACjC,GAAIqyC,GAAuBjvB,EAAOvJ,EAAS7Z,GAAIoyC,GAC3C,OAAO,EAGf,OAAO,EAqBX,SAASe,GAAsB/vB,EAAOrE,EAAWq0B,GAE7C,IADA,IAAIC,EApBR,SAASC,EAAsBlwB,GAC3B,IAAIkvB,EAAYlvB,EAAMsjB,MACtB,GAAiB,MAAb4L,EAAmB,CACnB,IAAIiB,EAAqBjB,EAAUpsC,QAAQ64B,IAG3C,GAAiC,IAAP,EAArBwU,GACD,OAAOjB,EAAUiB,EAAqB,GAG9C,OAAO,KAUkBD,CAAsBlwB,GACtCpjB,EAAI,EAAGA,EAAI+e,EAAU5e,OAAQH,IAGlC,GAAIqzC,IAAuBD,EAAcpzC,IACd,OAAvBqzC,GACIH,GAA2B9vB,EAAOrE,EAAU/e,IAA2B,GAC3E,OAAOA,EAAI,EAGnB,OAAO;;;;;;;OAUX,SAASwzC,GAA0BpwB,GAM/B,IAAIqwB,EACJ,GAAIA,EAAMrwB,EAAMswB,qBAAsB,CAClC,IAAK,IAAI1zC,EAAI,EAAGA,EAAIyzC,EAAItzC,OAAQH,IAC5ByzC,EAAIzzC,KAERojB,EAAMswB,qBAAuB;;;;;;;;AA8CrC,IAAIC,GAAiBC,QAAQj9B,QAAQ,MAOrC,SAASk9B,GAAuB3wB,GAC5B,IAAI8B,EAAQ9B,EAAM3B,IACd6b,EAAe1V,GAAexE,GAOlC,GALA8B,EAAMI,mBAAoB,EAE1BlC,EAAMrB,IAAiBmD,EAAMwD,mBAGxB4U,EAAc,CACf,IAAIrX,EAAqB4B,KACzB9B,GAAiB3C,EAAO8B,EAAOe,GAo4DvC,SAAS+tB,EAA4B5wB,GACjC,IAAK,IAAI+Q,EAAU/Q,EAAMd,IAAyB,OAAZ6R,EAAkBA,EAAUA,EAAQvS,IAItE,GAAIuS,EAAQ9zB,OAASqiB,KAA4C,IAA3ByR,EAAQvR,IAE1C,IADA,IAAIqxB,EAAc9f,EACTj0B,EAAI,EAAGA,EAAI+zC,EAAYpxB,IAAOxiB,OAAQH,IAAK,CAChD,IAAIg0C,EAAkBD,EAAYpxB,IAAO3iB,GAGzCi0C,GAAuBD,EAAiBA,EAAgBzyB,IAAQyyB,EAAgBjyB,MA94DxF+xB,CAA4B5wB,GAE5BgxB,GAAsBlvB,EAAO9B,GAC7B8C,GAAa9C,EAAO8B,EAAMQ,aAAcR,EAAMS,kBAAmBM,EAAoB,GAY7F,SAASouB,EAAgBnvB,EAAOqgB,GAC5B,GAAIrgB,EAAMovB,oBAAqB,CAC3B,IAAItsB,EAAmBud,EAASxjB,IAAiBmD,EAAMqvB,kBACvDrsB,GAAeF,GAGf,IAFA,IAAIkhB,GAAyB,EACzBsL,GAAuB,EAClBt0C,EAAI,EAAGA,EAAIglB,EAAMovB,oBAAoBj0C,OAAQH,IAAK,CACvD,IAAIu0C,EAAcvvB,EAAMovB,oBAAoBp0C,GAC5C,GAA2B,iBAAhBu0C,EAA0B,CACjC,GAAIA,GAAe,EAAG,CAGlBD,GAAuBC,EAEvB,IAAIC,EAAgBxvB,EAAMovB,sBAAsBp0C,GAEhDgpC,EADAlhB,GAAoBzD,GAA6BmwB,OAOjD1sB,GAAoBysB,EAExBvsB,GAAeF,QAIK,OAAhBysB,IACAlP,EAASxjB,IAAiBiG,EAC1BysB,EAAY,EAAgBzxB,GAAYuiB,EAAS2D,IAAyBsL,IAE9EtL,MA3CRmL,CAAgBnvB,EAAO9B,GAKvBka,GAAgBpY,EAAMyvB,sBACtBP,GAAsBlvB,EAAO9B,GAwDrC,SAASwxB,EAAuBvY,GAC5B,GAAkB,MAAdA,EACA,IAAK,IAAIn8B,EAAI,EAAGA,EAAIm8B,EAAWh8B,OAAQH,KA94L/C,SAAS20C,EAA6BpxB,GAClC,OAA8C,MAAxB,IAAdA,EAAK/B,MAq1PTmzB,CAHAtxB,EAAWI,GAp8DU0Y,EAAWn8B,GAk8DxBinB,QAMU,GAAlB5D,EAAS7B,MA+BjB,SAASozB,EAAsBtU,GAE3B,IADA,IAAIuU,EAAiBvU,EAAc/e,IAC1BvhB,EAAIsgC,EAAcngC,OAAQH,EAAI60C,EAAexqB,UAAUlqB,OAAQH,IACpEsgC,EAActgC,GAAK60C,EAAexqB,UAAUrqB,GAjC5C40C,CAAsBvxB,GACtByxB,GAAUzxB,EAAUA,EAAStB,MATrC,IAGQsB,EA7/DJqxB,CAAuB1vB,EAAMmX,YAyCjC,SAAS+X,GAAsBlvB,EAAO9B,GAClC,GAA4B,MAAxB8B,EAAMzH,eAAwB,CAC9B4K,GAAqB,GACrB,IAAK,IAAInoB,EAAI,EAAGA,EAAIglB,EAAMzH,eAAepd,OAAQH,IAAK,CAClD,IAAI+0C,EAAkB/vB,EAAMzH,eAAevd,GACxBglB,EAAMlL,KAAKi7B,GAGjBx3B,eAAe,EAAgB2F,EAAM6xB,GAAkBA,KAYhF,SAASC,GAAYvqB,EAAazF,EAAO1S,EAASvK,EAAOqF,EAAM6nC,EAAW9W,EAAiBC,EAAUxI,EAAWnuB,GAC5G,IAAIyb,EAAQ8B,EAAMqF,UAAUra,QAa5B,OAZAkT,EAAM5B,IAAQlU,EACd8V,EAAM1B,IAAiB,IAARzZ,EACfmb,EAAMzB,IAAUyB,EAAMX,IAAoBkI,EAC1CvH,EAAMnB,IAAWzP,EACjB4Q,EAAMjB,IAAqBkc,GAAmB1T,GAAeA,EAAYxI,IAEzEiB,EAAMhB,IAAakc,GAAY3T,GAAeA,EAAYvI,IAE1DgB,EAAMf,IAAayT,GAAanL,GAAeA,EAAYtI,KAAc,KACzEe,EAAMlB,IAAcva,GAAYgjB,GAAeA,EAAYzI,KAAe,KAC1EkB,EAAMtB,IAAUqzB,EAET/xB,EAEX,SAASgyB,GAAkB9xC,EAAOiC,EAAMo2B,EAAQ/5B,EAAMglC,GAClD,IAAIxjB,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IACdssB,EAAgBzqC,EAAQof,GAG5BU,EAAM2qB,GAAiBpS,EACvB,IAAI9U,EAAwBU,KACxBT,EAAWY,KACXpE,EAAQ4B,EAAMlL,KAAK+zB,GACvB,GAAa,MAATzqB,EAAe,CACf,IAAI2S,EAAWnP,EAAWD,EAAwBA,GAAyBA,EAAsBlX,OAKjG2T,EAAQ4B,EAAMlL,KAAK+zB,GAAiBsH,GAFbpf,GAAYA,IAAa7S,EAAMtB,IACjBmU,EAAW,KACa1wB,EAAMwoC,EAAensC,EAAMglC,GAoB5F,OAfI/f,KACIC,GAA2C,MAA/BD,EAAsBsV,OAChB,OAAjB7Y,EAAM3T,QAAkD,IAA/BkX,EAAsBthB,KAI1CuhB,IACND,EAAsBhmB,KAAOyiB,GAH7BuD,EAAsBsV,MAAQ7Y,GAMd,MAApB4B,EAAMwL,aACNxL,EAAMwL,WAAapN,GAEvBkE,GAAyBlE,GACzBqE,IAAY,GACLrE,EAEX,SAASgyB,GAAuBpwB,EAAOqwB,EAAajyC,EAAO8f,GAGvD,IAAIE,EAAQ4B,EAAMgQ,KAOlB,OANa,MAAT5R,IAGA4B,EAAMgQ,KAAO5R,EAAQ+xB,GAAYE,EACjC,EAAcjyC,EAAO,KAAM,OAExB8f,EAAMtB,IAAUwB,EA4D3B,SAAS6wB,GAAuBqB,EAActwB,EAAO1S,GACjD,IAEIiW,EAFAgtB,EAAY/tB,KACZguB,EAAyBnuB,KAE7B,GAA0B,IAAtBiuB,EAAa9zB,IAEbi0B,GAAgBnsB,GAAegsB,SAG/B,IACI7tB,IAAY,GACZH,GAAyB,MACzBiB,EAAUH,GAAUktB,EAAcA,EAAa1zB,KAC/C8zB,KACA1wB,EAAM1J,SAASq6B,GAAeL,GAAehjC,GAK7CgjC,EAAa/zB,IAAO6D,mBAAoB,EACxCyuB,GAAuByB,GAE3B,QACI7sB,GAAUF,GACVd,GAAY8tB,GACZjuB,GAAyBkuB,IAcrC,SAASI,GAAYC,GAEjB,YADc,IAAVA,IAAoBA,EAAQ,GAz+KpC,SAASC,EAAgBD,GAGrB,YAFc,IAAVA,IAAoBA,EAAQ,IAChCzuB,GAGJ,SAAS2uB,EAAYC,EAAclwB,GAC/B,KAAOkwB,EAAe,GAElBlwB,EAAcA,EAAYvD,IAC1ByzB,IAEJ,OAAOlwB,EATQiwB,CAAYF,EAAOzuB,KACdrF,IAu+Kb+zB,CAAgBD,GAE3B,SAASI,GAA0B5yB,EAAU/Q,EAAS4jC,GAClD,IAAI/X,EAAkB9a,EAASpB,IAC3BsG,EAAUH,GAAU/E,EAAUA,EAASzB,KACvCu0B,GAAuBxuB,KACvByuB,EAAuB1uB,GAAerE,GAC1C,IACQ8yB,IAAwBC,GAAwBjY,EAAgBkY,OAChElY,EAAgBkY,QAEhBD,IAEIF,IACAR,KACAQ,EAAW,EAAgB5jC,IAE/BuhC,GAAuBxwB,GACvBA,EAAS7B,MAAU,GAGvB00B,GAAcA,EAAW,EAAgB5jC,GACzCuhC,GAAuBxwB,GAE3B,QACQ8yB,IAAwBC,GAAwBjY,EAAgB7Y,KAChE6Y,EAAgB7Y,MAEpBmD,GAAUF,IAQlB,SAASotB,GAAepyB,GACpB,OAAOmE,GAAenE,GAAQ,EAAiB,EAKnD,IAAI+yB,GAAoB,KACxB,SAASC,KACLD,GAAoB,6BAExB,SAASE,KACLF,GAAoB,iCAExB,SAASZ,KACLY,GAAoB,KAcxB,SAASn6B,GAAQ/Y,EAAO1B,EAAMglC,EAAO5K,GACjC2a,GAAarzC,EAAO1B,EAAMglC,EAAO5K,GACjC4a,KAcJ,SAASC,GAAsBvzC,EAAOsjC,EAAO5K,GACzC,IAAI5Y,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IAKdka,EAJWvY,EAAMhB,IAIC00B,cAAoC,IAEtDxzB,EAAQ8xB,GAAkB9xC,EAAO,EAA0Bq4B,EALjD,eAKkEiL,GAAS,MACzFnX,GAAYkM,EAAQrY,EAAOF,GAC3B2zB,GAA0B7xB,EAAO9B,EAAO4Y,GACxCH,GAAgBF,EAAQvY,GACxB,IAAI4zB,EAAiB5zB,EAAMvB,IACvBm1B,IACAA,EAAeC,QAAQ3zB,GACvBF,EAAMvB,IAAWm1B,EAAeE,SAEpCC,GAAsBjyB,EAAO5B,EAAOF,GAExC,SAAS+zB,GAAsBjyB,EAAO5B,EAAOF,GACzC,GA9rMJ,SAASg0B,EAAmB9zB,GACxB,OAAmD,IAA7B,EAAdA,EAAMrb,OA6rMVmvC,CAAmB9zB,GAGnB,IAFA,IACIkC,EAAMlC,EAAMmC,aACPT,EAFG1B,EAAMiC,eAEeP,EAAiBQ,EAAKR,IAAkB,CACrE,IAAI/b,EAAMic,EAAMlL,KAAKgL,GACjB/b,EAAIwU,gBACJxU,EAAIwU,eAAe,EAAgB2F,EAAM4B,GAAiBA,IAM1E,SAASqyB,KACL,IAAIxwB,EAAwBU,KACxBnE,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IACdiG,KACAC,IAAY,GAKZH,GADAX,EAAwBA,EAAsBlX,QAIlD,IAAIqnC,EAAiB5zB,EAAMvB,IACvBm1B,IACA5zB,EAAMvB,IAAWm1B,EAAernC,QAEpC0V,GAAuBH,EAAO2B,GAelC,SAAS8vB,GAAarzC,EAAO1B,EAAMglC,EAAO5K,GACtC,IAAI5Y,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IAGdka,EAAS2b,GAAc11C,GAEvB0hB,EAAQ8xB,GAAkB9xC,EAAO,EAAiBq4B,EAAQ/5B,EAAMglC,GAAS,MAyB7E,GAxBIA,IAMI1hB,EAAMI,oBAAsBhC,EAAMqiB,iBAzrE9C,SAAS4R,EAAW3Q,GAChB,IAAK,IAAI1mC,EAAI,EAAGA,EAAI0mC,EAAMvmC,OAAQH,IAAK,CACnC,IAAI2mC,EAAOD,EAAM1mC,GACjB,GAAY,GAAR2mC,GAAmC,GAARA,EAC3B,OAAO,EAEf,OAAO,EAmrEsD0Q,CAAW3Q,KAChEtjB,EAAMqiB,gBAAkBgB,GAAwBC,IAEpD4Q,GAAgB7b,EAAQiL,IAE5BnX,GAAYkM,EAAQrY,EAAOF,GAC3B2zB,GAA0B7xB,EAAO9B,EAAO4Y,GAIT,IAn2LnC,SAASyb,IAEL,OAAOtzB,GAi2LHszB,IACA5b,GAAgBF,EAAQvY,GAh2LhC,SAASs0B,IACLvzB,KAi2LAuzB,GAKIxyB,EAAMI,kBAAmB,CACzB,IAAIqyB,EAAYC,GAAsBt0B,GAClCq0B,GAAaA,EAAUn4C,eAAe,WACtC8jB,EAAMrb,OAAS,GAEf0vC,GAAaA,EAAUn4C,eAAe,WACtC8jB,EAAMrb,OAAS,IAKnBqb,EAAMqiB,kBACNwB,GAAqBxL,EAAQrY,EAAMqiB,gBAAiBviB,EAAMhB,KAC1D6kB,GAAoBtL,EAAQrY,EAAMqiB,gBAAiBviB,EAAMhB,MAE7D,IAAI40B,EAAiB5zB,EAAMvB,IACvBm1B,IACAA,EAAeC,QAAQ3zB,GACvBF,EAAMvB,IAAWm1B,EAAeE,SAEpCC,GAAsBjyB,EAAO5B,EAAOF,GAQxC,SAASk0B,GAAc11C,EAAMi2C,GACzB,IACIC,EAAgBD,GAAsB1wB,KAAW/E,IAYrD,OAXI8c,GAAqB4Y,GACZA,EAActoB,cAAc5tB,EAAM40C,IAGjB,OAAtBA,GACSsB,EAActoB,cAAc5tB,GAG5Bk2C,EAAcC,gBAAgBvB,GAAmB50C,GAWtE,SAASm1C,GAA0B7xB,EAAO9B,EAAO4Y,EAAWgc,GAExD,QAD0B,IAAtBA,IAAgCA,EAAoB30B,IAz3L5D,SAAS40B,IAEL,OAAOrxB,GAw3LFqxB,GAAL,CAEA,IAAIpxB,EAAwBU,KACxBrC,EAAMI,mBA08Bd,SAAS4yB,EAAkBhzB,EAAOqgB,EAAU3lB,EAAY0D,EAAO0Y,GAG3D,IAAImc,EAAanc,GAAcoc,IAAK,GAAM,KAC1C,GAAIx4B,EAAY,CACZy4B,GAAc/0B,EAAO4B,EAAMlL,KAAK3Z,OAAQuf,EAAWvf,QAOnD,IAAK,IAAIH,EAAI,EAAGA,EAAI0f,EAAWvf,OAAQH,KAC/B+I,EAAM2W,EAAW1f,IACbkd,mBACJnU,EAAImU,kBAAkBnU,GAG9B,IADAqvC,GAAgCpzB,EAAO5B,EAAO1D,EAAWvf,QAChDH,EAAI,EAAGA,EAAI0f,EAAWvf,OAAQH,IAAK,CACxC,IAAI+I,EACAgsC,EAAkB/vB,EAAMlL,KAAK3Z,OACjCk4C,GAAqBrzB,EAAOqgB,EAFxBt8B,EAAM2W,EAAW1f,GAEsB+I,EAAI7K,SAC/Co6C,GAAoBtzB,EAAMlL,KAAK3Z,OAAS,EAAG4I,EAAKkvC,GAGhDpzB,GAAsBkwB,EAAiBhsC,EAAKic,IAGhDizB,GAqKR,SAASM,EAAwBn1B,EAAO0Y,EAAWmc,GAC/C,GAAInc,EAKA,IAJA,IAAI0c,EAAap1B,EAAMo1B,cAIdx4C,EAAI,EAAGA,EAAI87B,EAAU37B,OAAQH,GAAK,EAAG,CAC1C,IAAIoD,EAAQ60C,EAAWnc,EAAU97B,EAAI,IACrC,GAAa,MAAToD,EACA,MAAM,IAAIqB,MAAM,mBAAqBq3B,EAAU97B,EAAI,GAAK,gBAC5Dw4C,EAAWt3C,KAAK46B,EAAU97B,GAAIoD,IA9KlCm1C,CAAwBn1B,EAAO0Y,EAAWmc,GAr+B1CD,CAAkBhzB,EAAO9B,EAmlCjC,SAASu1B,EAAqBzzB,EAAOqgB,EAAUjiB,GAE3C,IAAIs1B,EAAW1zB,EAAM2zB,kBACjBC,EAAU,KACd,GAAIF,EACA,IAAK,IAAI14C,EAAI,EAAGA,EAAI04C,EAASv4C,OAAQH,IAAK,CACtC,IAAI+I,EAAM2vC,EAAS14C,GACfkzC,GAA2B9vB,EAAOra,EAAIgW,WAAkC,KACxE65B,IAAYA,MACZhuB,GAAmBZ,GAA+B3C,KAA4Bge,GAAWA,EAAUt8B,EAAI1D,MACnGwe,GAAe9a,IACG,EAAdqa,EAAMrb,OACN+xB,GAA4B1W,GAChCA,EAAMrb,MAAQ,EAEd6wC,EAAQh1C,QAAQmF,IAGhB6vC,EAAQ13C,KAAK6H,IAK7B,OAAO6vC,EA1mC6BH,CAAqBzzB,EAAO9B,EAAOyD,GAAwBA,EAAuBmV,GAAa,MA0+BvI,SAAS+c,EAAyB7zB,EAAO9B,EAAOE,GAC5C,IAAIokB,EAAQpkB,EAAMiC,eACdC,EAAMlC,EAAMmC,cACXP,EAAMI,mBAAqBoiB,EAAQliB,GACpC0E,GAA+B5G,EAAOF,GAE1C,IAAK,IAAIljB,EAAIwnC,EAAOxnC,EAAIslB,EAAKtlB,IAAK,CAC9B,IAAI+I,EAAMic,EAAMlL,KAAK9Z,GACjB6jB,GAAe9a,IACf+vC,GAAkB51B,EAAOE,EAAOra,GAGpCgwC,GAAqB71B,EADLqJ,GAAkBvH,EAAMlL,KAAMoJ,EAAOljB,EAAGojB,GACjBra,EAAK/I,IAp/BhD64C,CAAyB7zB,EAAO9B,EAAOyD,GAu/B3C,SAASqyB,EAA6Bh0B,EAAOqgB,EAAUjiB,GAKnD,IAJA,IACIkC,EAAMlC,EAAMmC,aACZ0zB,EAAUj0B,EAAMovB,oBAChBhvB,EAAoBJ,EAAMI,kBACrBplB,EAJGojB,EAAMiC,eAIErlB,EAAIslB,EAAKtlB,IAAK,CAC9B,IAAI+I,EAAMic,EAAMlL,KAAK9Z,GAEjB+I,EAAIuU,aACJ47B,GAAiCnwC,EAAKkwC,EAF1B5T,EAASrlC,GAEqCojB,EAAOgC,GAE5DA,GACL6zB,EAAQ/3C,KAAK,OAlgCrB83C,CAA6Bh0B,EAAO9B,EAAOyD,GAO/C,SAASwyB,EAAyB9T,EAAUjiB,EAAO00B,GAC/C,IAAIU,EAAap1B,EAAMo1B,WACvB,GAAIA,EAEA,IADA,IAAIY,EAAah2B,EAAMhgB,MAAQ,EACtBpD,EAAI,EAAGA,EAAIw4C,EAAWr4C,OAAQH,GAAK,EAAG,CAC3C,IAAIoD,EAAQo1C,EAAWx4C,EAAI,GACvBY,GAAmB,IAAXwC,EACR00C,EAAkB10B,EAAOiiB,GACzBA,EAASjiC,GACbiiC,EAAS+T,KAAgBx4C,GAfjCu4C,CAAyBj2B,EAAOyD,EAAuBmxB,IAgC3D,SAASuB,GAAiBnD,EAAY/4B,EAAQC,EAAMsC,EAAYG,EAAOb,EAAWO,GAO9E,OAAO22B,EAAWoD,gBACbpD,EAAWoD,cAAgBC,IAAa,EAAGrD,EAAY/4B,EAAQC,EAAMsC,EAAYG,EAAOb,EAAWO,IAa5G,SAASg6B,GAAYC,EAAWtD,EAAY/4B,EAAQC,EAAMsC,EAAYG,EAAOb,EAAWO,GAEpF,IAAIiJ,EAAoBhG,GAAgBrF,EAIpCs8B,EAAoBjxB,EAAoBpL,EACxCiN,EA+BR,SAASqvB,EAAoBlxB,EAAmBixB,GAC5C,IAAIpvB,EAAY,IAAIjrB,MAAMq6C,GACrB9uC,KAAK,KAAM,EAAG6d,GACd7d,KAAKovB,GAAWvR,GAErB,OADA6B,EAAUxI,IAAiB2G,EACpB6B,EApCSqvB,CAAoBlxB,EAAmBixB,GACvD,OAAOpvB,EAAU9I,KACbxN,GAAIylC,EACJnvB,UAAWA,EACX/O,SAAU46B,EACVl3B,UAAWA,EACXgW,KAAM,KACNlb,KAAMuQ,EAAUra,QAAQrF,KAAK,KAAM6d,GACnCA,kBAAmBA,EACnBmxB,oBAAqBF,EACrBpF,kBAAmBoF,EACnBrF,oBAAqB,KACrBhvB,mBAAmB,EACnBw0B,mBAAmB,EACnBnF,sBAAsB,EACtBxvB,UAAW,KACXC,WAAY,KACZM,aAAc,KACdC,kBAAmB,KACnBC,UAAW,KACXC,eAAgB,KAChBC,aAAc,KACdsY,QAAS,KACT3gB,eAAgB,KAChB4e,WAAY,KACZwc,kBAAyC,mBAAfj5B,EAA4BA,IAAeA,EACrEm6B,aAA+B,mBAAVh6B,EAAuBA,IAAUA,EACtD2Q,WAAY,KACZjR,QAASA,GAqCjB,SAAS+3B,GAAgB7b,EAAQiL,GAI7B,IAHA,IAAItI,EAAWnX,KAAW/E,IACtB43B,EAAS9a,GAAqBZ,GAC9Bp+B,EAAI,EACDA,EAAI0mC,EAAMvmC,QAAQ,CACrB,IAAIS,EAAQ8lC,EAAM1mC,GAClB,GAAqB,iBAAVY,EAAoB,CAG3B,GAAc,IAAVA,EACA,MAIJZ,IACA,IAAI+5C,EAAerT,EAAM1mC,KACrBgxB,EAAW0V,EAAM1mC,KACjBg6C,EAAUtT,EAAM1mC,KAEpB85C,EACI1b,EAAS6b,aAAaxe,EAAQzK,EAAUgpB,EAASD,GACjDte,EAAOye,eAAeH,EAAc/oB,EAAUgpB,QAK9CA,EAAUtT,IAAQ1mC,IADlBgxB,EAAWpwB,KAEEm+B,KAGT6G,GAAgB5U,GACZ8oB,GACA1b,EAASgP,YAAY3R,EAAQzK,EAAUgpB,GAI3CF,EACI1b,EACK6b,aAAaxe,EAAQzK,EAAUgpB,GACpCve,EAAOwe,aAAajpB,EAAUgpB,IAG1Ch6C,IAOR,OAAOA,EAUX,SAASm6C,GAAkBj8C,EAASk8C,GAChC,IAAIC,EAAkBn8C,EAAQghC,eAAe,KAAM,MAcnD,MAbyC,iBAAtBkb,EACdpb,GAAqBqb,GAClBA,EAAgBC,kBAAkBF,GAClCC,EAAgB5qB,cAAc2qB,GAClCA,EAuBR,SAASG,GAASC,EAAWC,EAAYC,EAAYC,QAC9B,IAAfD,IAAyBA,GAAa,GAC1CE,GAAiBJ,EAAWC,EAAYC,EAAYC,GAqBxD,SAASE,GAA+BL,EAAWC,EAAYC,EAAYC,QACpD,IAAfD,IAAyBA,GAAa,GAC1CE,GAAiBJ,EAAWC,EAAYC,EAAYC,EAAqBG,IAE7E,SAASF,GAAiBJ,EAAWC,EAAYC,EAAYC,EAAqBI,QAC3D,IAAfL,IAAyBA,GAAa,GAC1C,IAAIx3B,EAAQ+D,KACR7D,EAAQiE,KACRrC,EAAQ9B,EAAM3B,IAEd2gB,EADoBld,EAAMI,oBACOJ,EAAMkZ,UAAYlZ,EAAMkZ,aAG7D,GAAmB,IAAf9a,EAAM/d,KAA0B,CAChC,IAAIo2B,EAAStY,GAAiBC,EAAOF,GACjC5V,EAAWqtC,EAAsBA,EAAoBlf,MACrD/3B,EAAS4J,EAAS5J,QAAU+3B,EAE5B2C,EAAW2c,EAAiBA,EAAe33B,EAAOF,GAASA,EAAMhB,IAEjE84B,GADA7Y,EAAW8Y,GAAW/3B,IACG/iB,OACzBkiC,EAAqBqY,EAGzB,GAAI1b,GAAqBZ,GAAW,CAIhCqc,EAAaS,GAAa93B,EAAOF,EAAOu3B,GAAY,GACpD,IAAIjY,EAAYpE,EAAS+c,OAAO7tC,EAAS5L,MAAQgC,EAAQ82C,EAAWC,GACpEtY,EAASjhC,KAAKu5C,EAAYjY,GAC1BH,EAAqB2Y,EAAgB,OAGrCP,EAAaS,GAAa93B,EAAOF,EAAOu3B,GAAY,GACpD/2C,EAAO0iC,iBAAiBoU,EAAWC,EAAYC,GAC/CvY,EAASjhC,KAAKu5C,GAKlBvY,GAAYA,EAAShhC,KAAKs5C,EAHFG,EACpB,SAAUltB,GAAU,OAAOktB,EAAoB73B,GAAY2K,EAAOrK,EAAMhgB,SAASM,QACjF0f,EAAMhgB,MAC8C43C,EAAe3Y,QAGrDt9B,IAAlBqe,EAAM3F,UAGN2F,EAAM3F,QAAU29B,GAAwBh4B,EAAO,IAEnD,IACIzhB,EADA8b,EAAU2F,EAAM3F,QAEpB,GAAIA,IAAY9b,EAAQ8b,EAAQ+8B,IAAa,CACzC,IAAIa,EAAc15C,EAAMxB,OACxB,GAAIk7C,EAEA,IADA,IAAIlZ,EAAW8Y,GAAW/3B,GACjBljB,EAAI,EAAGA,EAAIq7C,EAAar7C,GAAK,EAAG,CACrC,IAQIs7C,EALoBp4B,EAHZvhB,EAAM3B,IAEC2B,EAAM3B,EAAI,IAMHo4B,UAAUqiB,GAChCc,EAAMpZ,EAAShiC,OACnBgiC,EAASjhC,KAAKu5C,EAAYa,GAC1BpZ,GAAYA,EAAShhC,KAAKs5C,EAAWp3B,EAAMhgB,MAAOm4C,IAAOA,EAAM,MAkC/E,SAAS7E,KACL,IAAI/vB,EAAwBU,KACxBG,KACAC,IAAY,GAKZH,GADAX,EAAwBA,EAAsBlX,QAKlDkX,EAAsB+sB,sBAAwBF,GAA0B7sB,GAExE,IAAIzD,EAAQ+D,KACR6vB,EAAiB5zB,EAAMvB,IAS3B,GARIm1B,IACA5zB,EAAMvB,IAAWm1B,EAAernC,QAEpC0V,GAAuB8B,KAAW1F,IAAQoF,GArwM9C,SAAS60B,IACLv3B,KAqwMAu3B,GAII3V,GAAclf,GAAwB,CACtC,IAAI4f,EAAiBnB,GAAkBze,EAAsBvjB,MAAO8f,GACpEu4B,GAAqBv4B,EAAOyD,EAAsBnJ,OAAc,MAAG6zB,GAAyB9K,IAE5FT,GAAcnf,KACV4f,EAAiBnB,GAAkBze,EAAsBvjB,MAAO8f,GACpEu4B,GAAqBv4B,EAAOyD,EAAsBnJ,OAAc,MApvCxE,SAASk+B,EAA2BppC,GAChC,IAAIqpC,EAAqBrpC,EAAQ,GAC7BspC,EAAcD,EAAmB,GACrC,GAAoB,OAAhBC,EAAsB,CACtBA,EAAc,GACd,IAAK,IAAI57C,EAAI,EAA+BA,EAAI27C,EAAmBx7C,OAAQH,GAAK,EAAc,CAC1F,IAAIY,EAAQ+6C,EAAmB37C,EAAI,GACrB,OAAVY,IACAg7C,IAAgBA,EAAYz7C,OAAS,IAAM,IAAOw7C,EAAmB37C,GAAK,IAAMY,GAGxF+6C,EAAmB,GAAwCC,EAE/D,OAAOA,EAuuCgEF,CAA2BnV,KAatG,SAASsV,GAAiBz4C,EAAO1B,EAAMd,EAAOg1B,EAAWkmB,GACrD,GAAIl7C,IAAUm5B,GAAW,CAErB,IAAI7W,EAAQ+D,KACRmX,EAAWlb,EAAMhB,IACjB65B,EAAY94B,GAAiB7f,EAAO8f,GACxC,GAAa,MAATtiB,EAEAo+B,GAAqBZ,GAAYA,EAASlN,gBAAgB6qB,EAAWr6C,EAAMo6C,GACvEC,EAAU7qB,gBAAgBxvB,OAE7B,CAED,IAAI0hB,EAAQE,GAASlgB,EAAO8f,GACxB84B,EAAwB,MAAbpmB,EAAoB9Z,GAAgBlb,GAASg1B,EAAUh1B,EAAOwiB,EAAMsR,SAAW,GAAIhzB,GAC9Fs9B,GAAqBZ,GACrBA,EAAS6b,aAAa8B,EAAWr6C,EAAMs6C,EAAUF,GAGjDA,EAAYC,EAAU7B,eAAe4B,EAAWp6C,EAAMs6C,GAClDD,EAAU9B,aAAav4C,EAAMs6C,KAoBjD,SAASC,GAAgB74C,EAAON,EAAUlC,EAAOg1B,EAAWsmB,GACxDC,GAAwB/4C,EAAON,EAAUlC,EAAOg1B,EAAWsmB,GAuB/D,SAASE,GAA+Bh5C,EAAON,EAAUlC,EAAOg1B,EAAWsmB,GACvEC,GAAwB/4C,EAAON,EAAUlC,EAAOg1B,EAAWsmB,EAAYpB,IAK3E,IAAIuB,IACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEhB,SAASR,GAAwB/4C,EAAON,EAAUlC,EAAOg1B,EAAWsmB,EAAYnB,GAC5E,GAAIn6C,IAAUm5B,GAAd,CAEA,IAGI0d,EACAmF,EAJA15B,EAAQ+D,KACR9K,EAAU8G,GAAiB7f,EAAO8f,GAClCE,EAAQE,GAASlgB,EAAO8f,GAG5B,IAAKg5B,IAAezE,EAAYC,GAAsBt0B,MACjDw5B,EAAYnF,EAAU30C,IACvB24C,GAAqBv4B,EAAO05B,EAAWh8C,GACnCgjB,GAAYR,IA+tCxB,SAASy5B,EAAkB35B,EAAOs2B,GAE9B,IAAIsD,EAAsBr5B,GAAwB+1B,EAAWt2B,GAC1B,GAA7B45B,EAAoBt7B,MACtBs7B,EAAoBt7B,KAAU,IAluC1Bq7B,CAAkB35B,EAAO9f,EAAQof,SAOpC,GAAmB,IAAfY,EAAM/d,KAA0B,EAqD7C,SAAS03C,EAAsB35B,EAAOF,EAAOpgB,EAAUqoB,EAAO+wB,GAC1D,IAAIc,EAAmB95B,EAAMrB,IAAiB,EAK1Co7B,EAAkB9xB,EAAM6xB,GACxBC,EAAgB,IAAMxgC,KACtB0O,EAAM6xB,GAAoBl6C,EAAWm6C,EAGhCf,KACwC,GAArC94B,EAAM85B,6BACN95B,EAAM85B,2BAA6BF,GAEvC55B,EAAM+5B,yBAA2BH,EAAmB,IA7DxDD,CAAsB35B,EAAOF,EAN7BpgB,EAAWu5C,GAAav5C,IAAaA,EAMSogB,EAAM3B,IAAOzH,KAAMoiC,GACjE,IAAI9d,EAAW2c,EAAiBA,EAAe33B,EAAOF,GAASA,EAAMhB,IAGrEthB,EAAqB,MAAbg1B,EAAoBA,EAAUh1B,EAAOwiB,EAAMsR,SAAW,GAAI5xB,GAAYlC,EAC1Eo+B,GAAqBZ,GACrBA,EAASgP,YAAYjxB,EAASrZ,EAAUlC,GAElCglC,GAAgB9iC,KACtBqZ,EAAQixB,YAAcjxB,EAAQixB,YAAYtqC,EAAUlC,GAChDub,EAAQrZ,GAAYlC,KAiEpC,SAASu0C,GAAYiI,EAAS/3C,EAAMwoC,EAAenZ,EAASgS,GAExD,OACIrhC,KAAMA,EACNjC,MAAOyqC,EACP1jB,cAAeizB,EAAUA,EAAQjzB,eAAiB,EAClD9E,gBAAiB,EACjBE,cAAe,EACf23B,4BAA6B,EAC7BC,0BAA2B,EAC3Bp1C,MAAO,EACP4kB,gBAAiB,EACjB+H,QAASA,EACTgS,MAAOA,EACP8R,WAAY,KACZ6E,mBAAet4C,EACfyY,YAAQzY,EACR0Y,aAAS1Y,EACTu4C,OAAQ,KACR38C,KAAM,KACNs7B,MAAO,KACPxsB,OAAQ2tC,EACR3X,gBAAiB,KACjBjF,WAAY,KACZkT,qBAAsB,MAW9B,SAAS+H,GAAqBv4B,EAAO1F,EAAQ5c,GAEzC,IADA,IAAIokB,EAAQ9B,EAAM3B,IACTvhB,EAAI,EAAGA,EAAIwd,EAAOrd,QAAS,CAChC,IAAIiD,EAAQoa,EAAOxd,KACf4gB,EAAapD,EAAOxd,KACpBu9C,EAAc//B,EAAOxd,KACrB+rB,EAAW7I,EAAM9f,GAEjB2F,EAAMic,EAAMlL,KAAK1W,GACN2F,EAAIuW,SAEfvW,EAAIuW,SAASyM,EAAUnrB,EAAOggB,EAAY28B,GAG1CxxB,EAASwxB,GAAe38C,GAiCpC,SAASw6C,GAAwBh4B,EAAOo6B,GACpC,IAAIx4B,EAAQiC,KAAW1F,IACnBk8B,EAAY,KACZjW,EAAQpkB,EAAMiC,eACdC,EAAMlC,EAAMmC,aAChB,GAAID,EAAMkiB,EAGN,IAFA,IAAIkW,EAAwB,IAAdF,EACVG,EAAO34B,EAAMlL,KACR9Z,EAAIwnC,EAAOxnC,EAAIslB,EAAKtlB,IAAK,CAC9B,IAAI+kB,EAAe44B,EAAK39C,GACpB49C,EAAmBF,EAAU34B,EAAavH,OAASuH,EAAatH,QACpE,IAAK,IAAImD,KAAcg9B,EACnB,GAAIA,EAAiBt+C,eAAeshB,GAAa,CAE7C,IAAIi9B,EAAeD,EAAiBh9B,IADpC68B,EAAYA,OAEgBn+C,eAAeshB,GAC7B68B,EAAU78B,GAAY1f,KAAKlB,EAAG4gB,EAAYi9B,GACnDJ,EAAU78B,IAAe5gB,EAAG4gB,EAAYi9B,IAK7D,OAAOJ,EAuBX,SAASK,GAAeC,EAAmBC,EAAmBC,EAAgBz3B,GAC1E,IAAIpD,EAAQiE,KACPjE,EAAMqiB,kBACPriB,EAAMqiB,gBAAkBX,MAExBte,GAMA0e,GAA6B9hB,EAAMqiB,gBAAiBjf,IAC1CpD,EAAMswB,qBAAuBtwB,EAAMswB,0BACzCxyC,KAAK,WAAc,OAAOg9C,GAAmB96B,EAAO26B,EAAmBC,EAAmBC,EAAgBz3B,MAM9G03B,GAAmB96B,EAAO26B,EAAmBC,EAAmBC,EAAgBz3B,GAGxF,SAAS03B,GAAmB96B,EAAO26B,EAAmBC,EAAmBC,EAAgBz3B,IAzyFzF,SAAS23B,EAA0B7rC,EAAS6yB,EAAc4Y,EAAmBC,EAAmBC,GAC5F,KAA0C,GAAtC3rC,EAAQ,IAAZ,CAGA,IAAIwS,EAqNR,SAASs5B,EAAiC9rC,EAAS6yB,EAAc8Y,GAC7D,IAEIn5B,EAFAu5B,EAAgB/rC,EAAQ,GACxBgsC,EAA2BhsC,EAAQ,GAAmCnS,OAEtEo+C,EAAgBzN,GAAkCuN,EAAelZ,GACrE,IAAuB,IAAnBoZ,EACAA,EAAgBF,EAAcl+C,OAC9B2kB,EAAiBu5B,EAAcl+C,OAAS,EACxC+kC,GAA6B5yB,EAAS6yB,GACtCkZ,EAAcE,EAAgB,GAC1BD,EACJD,EAAcE,EAAgB,GAC1BN,GAAkB,SAErB,CAED,GAAII,EAD0BE,EAAgB,IACA,EAE1C,OAAQ,EAEZz5B,EAAiBy5B,EAAgB,EAKjCF,EAD8BE,EAAgB,GACLD,EAIzCD,EAD0BE,EAAgB,GACLN,GAAkB,KAE3D,OAAOn5B,EApPcs5B,CAAiC9rC,EAAS6yB,EAAc8Y,GAC7E,IAAwB,IAApBn5B,EAAJ,CAIIk5B,IACAA,EAm0CR,SAASQ,EAAiBC,GAEtB,IADA,IAAIC,KACK1+C,EAAI,EAAGA,EAAIy+C,EAAQt+C,OAAQH,IAChC0+C,EAAWx9C,KAAK2nC,GAAU4V,EAAQz+C,KAEtC,OAAO0+C,EAx0CiBF,CAAiBR,IAOzC,IAAIW,EAAyBrsC,EAAQ,GACjCssC,EAA4BD,EAAuB,GACnDE,EAA4BF,EAAuB,GACnDG,EAAuBxsC,EAAQ,GAC/BysC,EAAuBzsC,EAAQ,GAE/B0sC,EAA2C,EAA5BH,EAEfI,EADyB,EAC0BD,EACnDE,EAAwBD,EAJoB,EAA5BL,EAKhBO,EAAyBD,EAAwBF,EASjDI,EAA2BT,EAAuBx+C,OACtDw+C,EAAuBz9C,KAAK88C,EAAoBA,EAAkB79C,OAAS,EAAG49C,EAAoBA,EAAkB59C,OAAS,GAI7H,IAAIk/C,EAAkB,EAClBC,KACJ,GAAItB,GAAqBA,EAAkB79C,OACvC,IAAK,IAAIo/C,EAAM,EAAGA,EAAMvB,EAAkB79C,OAAQo/C,IAAO,CACrD,IAAIC,EAASxB,EAAkBuB,IAEP,IADpBE,EAAkBnY,GAAwBh1B,EAASktC,EAtBlC,EAsBkEP,MAEnFQ,EAAkBR,EAA0BI,EAC5CA,GAAmB,EACnBC,EAA0Bp+C,KAAKs+C,IAEnCb,EAAuBz9C,KAAKu+C,GAIpC,IAAIC,KACJ,GAAI3B,GAAqBA,EAAkB59C,OACvC,IAAK,IAAIw/C,EAAM,EAAGA,EAAM5B,EAAkB59C,OAAQw/C,IAAO,CACrD,IACIF,EADAG,EAAS7B,EAAkB4B,IAEP,IADpBF,EAAkBnY,GAAwBh1B,EAASstC,EAAQX,EAAyBC,KAEpFO,EAAkBP,EAAwBG,EAC1CA,GAAmB,EACnBK,EAA0Bx+C,KAAK0+C,IAG/BH,GAAsD,EAAnCH,EAA0Bn/C,OAEjDw+C,EAAuBz9C,KAAKu+C,GAOpC,IAAIz/C,EAAI,EACR,GAAIs/C,EAA0Bn/C,OAC1B,KAAOH,EAAIo/C,GAA0B,CACjC,IAAIS,EAAclB,EAAuB3+C,EAAI,GACzC8/C,EAAenB,EAAuB3+C,EAAI,GAC9C,GAAI8/C,EAEA,IADA,IAAItY,EAAQxnC,EAAI,EAA6B6/C,EACpCn3C,EAAI8+B,EAAO9+B,EAAI8+B,EAAQsY,EAAcp3C,IAC1Ci2C,EAAuBj2C,IAAyC,EAAnC42C,EAA0Bn/C,OAI/DH,GAAK,GADO6/C,EAAcC,GAQlC,IAJA,IAAIC,EAAkBL,EAA0Bv/C,OAASm/C,EAA0Bn/C,OAI1E6/C,EAvEoB,EAuEUA,EAAM1tC,EAAQnS,OAAQ6/C,GAAO,EAAc,CAC9E,IAAIC,EAAeD,GAAOd,EACtB5T,EAAe0U,IAAQC,EAAed,EAAyBF,GAC/D9U,EAAOhB,GAAY72B,EAAS0tC,GAC5B7R,EAAcG,GAAgBnE,GAC9B+V,EAAqBvT,GAAsBxC,GAS/C4E,GAAQz8B,EAAS0tC,EAAK/R,GAAS9D,EAAMgE,EAPjC+R,GADAD,EAEI3U,EAAmD,EAAnCgU,EAA0Bn/C,OAAyB,EAG9B,EAAlB4/C,EACsC,GAAvDzU,EAAegU,EAA0Bn/C,OAAS,KAKhE,IAAK,IAAIggD,EAAM,EAAGA,EAAyC,EAAnCb,EAA0Bn/C,OAAuBggD,IACrE7tC,EAAQ8uB,OAAO+d,EAAwB,EAAG,MAC1C7sC,EAAQ8uB,OAAO6d,EAAyB,EAAG,MAC3CA,IACAC,IACAC,GAA0B,EAG9B,IAAK,IAAIiB,EAAM,EAAGA,EAAyC,EAAnCV,EAA0Bv/C,OAAuBigD,IACrE9tC,EAAQ8uB,OAAO8d,EAAuB,EAAG,MACzC5sC,EAAQpR,KAAK,MACbg+C,IACAC,IAOJ,IALA,IAAIla,EAAiB3yB,EAAQ,GACzB0yB,EAAgB1yB,EAAQ,GAInB+tC,EAAM,EAAGA,EAAMN,EAAiBM,IAAO,CAC5C,IAAItY,EAAoBsY,GAAOf,EAA0Bn/C,OACrD0tC,EAAgB9F,EAAqBsY,EAAMf,EAA0Bn/C,OAAUkgD,EAC/Ev9C,EAAWilC,EAAoB2X,EAA0B7R,GACzDyR,EAA0BzR,GAC1ByS,OAAa,EAAQ7U,OAAc,EACnC1D,GACAuY,EAAanB,EACsC,GAA7CP,EAA4B/Q,GAClCpC,EAAcwT,EACqC,GAA7CL,EAA4B/Q,KAGlCyS,EACIpB,EAAuE,GAA7CL,EAA4BhR,GAC1DpC,EA1HqB,EA2H8B,GAA7CoT,EAA4BhR,IAKtC,IAAI0S,EAAwBxY,EAAoB9C,EAAiBD,EAC7Dwb,EAAkBtQ,GAA+BqQ,EAAuBz9C,IACnD,IAArB09C,GACAA,EAAkBD,EAAsBpgD,OAAS,EACjDogD,EAAsBr/C,KAAK4B,GAAUilC,GAA4B,OAGjEyY,GAAmB,EAEvB,IAAIC,EAAcrW,GAAmB93B,EAASxP,EAAUilC,EAAmBkW,GAAkB,MAC7FlP,GAAQz8B,EAASm5B,EAAawC,GAASwS,EAAaD,EAAiBF,IACrE7R,GAAQn8B,EAASm5B,EAAa3oC,GAC9BwmC,GAASh3B,EAASm5B,EAAa,MAC/BlC,GAAsBj3B,EAASm5B,EAAa,EAAG3mB,GAC/CiqB,GAAQz8B,EAASguC,EAAYrS,GAASwS,EAAaD,EAAiB/U,IACpEgD,GAAQn8B,EAASguC,EAAYx9C,GAC7BwmC,GAASh3B,EAASguC,EAAY,MAC9B/W,GAAsBj3B,EAASguC,EAAY,EAAGx7B,GAKlD65B,EAAuB,GACnBC,EAA4Bc,EAA0Bv/C,OAC1Dw+C,EAAuB,GACnBE,EAA4BS,EAA0Bn/C,OAE1D2+C,EAAqB,IACjBY,EAA0Bv/C,OAC9B4+C,EAAqB,IACjBO,EAA0Bn/C,OAC9B,IAAIugD,EAAkE,EAAnCpB,EAA0Bn/C,OACzDwgD,EAAmE,EAAnCjB,EAA0Bv/C,OAG1DygD,EAAsB7B,EAAqB5+C,OAC/C6wC,GAAsB1+B,EAASwS,GAAgB,EAFVo6B,EAAoD,EAA5BL,EAEyBS,EAA0Bn/C,QAChH,IAAK,IAAI0gD,GAAM,EAA6BA,GAAMD,EAAqBC,IAAO,EAG1E9B,EAAqB8B,GAAM,IACvBF,EAAgCD,EAGxC,IACII,GAAsBhC,EAAqB3+C,OAC/C6wC,GAAsB1+B,EAASwS,GAAgB,EAFTq6B,EAAqD,EAA5BP,EAEuBc,EAA0Bv/C,QAChH,IAAK,IAAI4gD,GAAM,EAA6BA,GAAMD,GAAqBC,IAAO,EAO1EjC,EAAqBiC,GAAM,IACS,EAA/BL,EAAoCC,EAK7C5R,GAAQz8B,EAAS,EADA27B,GAAS,EAAG,EAAGiR,MAulFhCf,CAA0B/6B,EAAMqiB,gBAAiBjf,GAAa,KAAMu3B,EAAmBC,EAAmBC,GAyC9G,SAAS+C,GAAiBx6B,EAAWkgB,GACjC,IAAItjB,EAAQiE,KACPjE,EAAMqiB,kBACPriB,EAAMqiB,gBAAkBgB,GAAwBC,IAEpD,IAEI1mC,EAAIs3C,GADKn0B,GAAiBC,EADlB6D,MAEoByf,IA/7FpC,SAASua,EAA4B3uC,EAASo0B,EAAOwa,EAAe/b,GAMhE,IAAoE,GAAhE2L,GADax+B,EAAQ,GACyB6yB,GAAqB,CAEnED,GAA6B5yB,EAAS6yB,GAItC,IAHA,IAAIF,EAAiB,KACjBD,EAAgB,KAChBnd,GAAQ,EACH7nB,EAAIkhD,EAAelhD,EAAI0mC,EAAMvmC,OAAQH,IAAK,CAC/C,IAAI2mC,EAAOD,EAAM1mC,GACE,iBAAR2mC,EACP9e,EAAO8e,EAEM,GAAR9e,EAEL+e,GADA3B,EAAiBA,GAAkB3yB,EAAQ,GACFq0B,GAAM,GAElC,GAAR9e,GAEL+e,GADA5B,EAAgBA,GAAiB1yB,EAAQ,GACDq0B,EAAMD,IAAQ1mC,MAy6FlEihD,CAA4B79B,EAAMqiB,gBAAiBiB,EAAO1mC,EAAGwmB,GAgBjE,SAAS26B,GAAoB/9C,EAAOojB,GAChC,IAAItD,EAAQ+D,KACR2pB,EAA4D,IAA5B,EAAf1tB,EAAM1B,MAjsE/B,SAAS4/B,EAAc9uC,EAAS8rB,EAAUijB,EAAYzQ,EAAe0Q,EAAcC,EAAapc,GAC5F,IAAIqc,EAAqB,EACrBC,EAAuBjW,GAA8Bl5B,EAAS6yB,GAAgB,MAClF,GAkSJ,SAASuc,EAAepvC,GACpB,OAAOw7B,GAAQx7B,EAAS,GAnSpBovC,CAAepvC,IAwevB,SAASqvC,EAAiBrvC,EAASwS,GAE/B,OADWxS,EAAQ,GACU,EAAjBwS,EACR,GA3e2B68B,CAAiBrvC,EAASmvC,GAAuB,CAK5E,IAJA,IAAIG,EAA4D,EAAtCtvC,EAAQ,GAC9BmpB,EAASnpB,EAAQ,GACjBuvC,EAAkBrT,GAAyBl8B,GAC3CwvC,GAAa,EACR9hD,EAAI,EAAmCA,EAAIsS,EAAQnS,OAAQH,GAAK,EAErE,GAAI8tC,GAAQx7B,EAAStS,GAAI,CACrB,IAAImqC,EAAOhB,GAAY72B,EAAStS,GAC5B8kB,EAAiBmkB,GAA2B32B,EAAStS,GACzD,GAAIyhD,IAAyB38B,EAAgB,CACzCg9B,GAAa,EACb,SAEJ,IAAIt2C,EAAOi8B,GAAQn1B,EAAStS,GACxBY,EAAQmoC,GAASz2B,EAAStS,GAC1Bi+C,EAAyB,EAAP9T,EAA2BT,GAAkBp3B,EAASwS,GAAkB,KAC1FknB,EAAgB8C,GAAiBx8B,EAAStS,GAC1CsrC,KAAsB,EAAPnB,GAEf4X,EAAenhD,EADIZ,EAAI6hD,IAKF9U,GAAYgV,KAGjCA,EAAehZ,GAASz2B,EADPq6B,GAAsBxC,KAWtC4C,GAAYgV,KACbA,EAAe1T,GAAgB/7B,EAAS63B,MAMzByG,GAAgBmR,KAE3BzW,EACAlE,GAAS3L,EAAQjwB,IAAMu2C,EAA6B3jB,EAAUkjB,EAActV,GAG5E3E,GAAS5L,EAAQjwB,EAAMu2C,EAAc3jB,EAAU6f,EAAgBsD,EAAavV,IAGpFvC,GAASn3B,EAAStS,GAAG,GAG7B,GAAI4hD,EAAqB,CACrB,IAAI3b,EAAc7mC,MAAMqJ,QAAQ44C,GAAc/3B,GAAe+3B,GAAcA,EACvErb,EAAgBM,GAAiBh0B,GACjC0vC,EAAoBhc,EAAc,GACtC,IAAShmC,EAAI,EAAqCA,EAAIgiD,EAAmBhiD,GAAK,EAA0C,CACpH,IAAI0uC,EAAU1I,EAAchmC,GACxBiiD,EAAuBjiD,EAAI,EAC3BkiD,EAAYlc,EAAcic,GAC9B,GAAIvT,EAAS,CACT,IAAIjK,EAASiK,EAAQgC,YAAYwR,EAAWtR,QAC7B7rC,IAAX0/B,IACc,MAAVA,GACgBsB,GAAkBC,EAAeC,EAAaxK,EAAQgJ,EAAQwd,IACjET,IAEbU,GACAA,EAAUzf,gBAIbyf,GAGLA,EAAUzf,UAGlBuK,GAAuB16B,GAAS,GAEpC44B,GAAkB54B,EAASmvC,GAAsB,GACjDxW,GAAgB34B,EAASwvC,GAE7B,OAAON,GAwmEkBJ,CAAchc,GAAkBhiC,EAAQof,GAAeU,GAAQA,EAAMhB,IAAWgB,EAAO0tB,EAAe,KAAM,KAAMpqB,GAClH,GAErB27B,GADkB74B,GAAepG,GACP,GA6BlC,SAASk/B,GAAiBh/C,EAAOi/C,EAAYzhD,EAAO0hD,EAAQ97B,EAAW+kB,GACnE,IAAIgX,EAAa,KACH,OAAV3hD,IAII2hD,EAHAD,EAGaxmC,GAAgBlb,GAAS0hD,EAOzB1hD,GA9zEzB,SAAS4hD,EAAgBlwC,EAAS84B,EAAQC,EAAOlG,EAAcoG,GAC3DJ,GAAyB74B,EAAS84B,EAAQC,GAAO,EAAOlG,EAAcoG,GAg0EtEiX,CAAgBpd,GAAkBhiC,EAAQof,GAAeyE,MAAao7B,EAAYE,EAAY/7B,EAAW+kB,GAsB7G,SAASkX,GAAiBr/C,EAAOs/C,EAAY9hD,EAAO4lB,EAAW+kB,GAC3D,IAAIF,EAASzqC,aAAiByjC,GAC1BzjC,EAIR,SAAS+hD,EAAc/hD,GACnB,MAAqB,kBAAVA,EACAA,IACJA,GAAe,KANlB+hD,CAAc/hD,IAj3EtB,SAASgiD,EAAgBtwC,EAAS84B,EAAQC,EAAOlG,EAAcoG,GAC3DJ,GAAyB74B,EAAS84B,EAAQC,GAAO,EAAMlG,EAAcoG,GAi3ErEqX,CAAgBxd,GAAkBhiC,EAAQof,GAAeyE,MAAay7B,EAAYrX,EAAO7kB,EAAW+kB,GA+BxG,SAASsX,GAAkBz/C,EAAO0/C,EAAS1jC,EAAQoH,GAC/C,IAAItD,EAAQ+D,KACR7D,EAAQE,GAASlgB,EAAO8f,GACxBqjB,EAAiBnB,GAAkBhiC,EAAQof,GAAeU,GAI9D,IAAKsD,EAAW,CACZ,GAAIqf,GAAcziB,IAAU0/B,IAAY/oB,GAAW,CAC/C,IAAIkL,EAAiBoM,GAAyB9K,GAC1Cwc,GAAiB9d,EAAe9kC,OAAU8kC,EAAiB,IAAO,IAztGlF,SAAS+d,EAAqBF,GAI1B,OAHIA,GAA8B,iBAAZA,IAClBA,EAAU7jD,OAAOqM,KAAKw3C,GAASj9C,KAAK,MAEjCi9C,GAAW,GAqtGkEE,CAAqBF,GACjGrH,GAAqBv4B,EAAOE,EAAM5F,OAAc,MAAGulC,GACnDD,EAAU/oB,GAEd,GAAI+L,GAAc1iB,IAAUhE,IAAW2a,GAAW,CAC9C,IAAIiL,EAAgBqM,GAAyB9K,GACzC0c,GAAiBje,EAAc7kC,OAAU6kC,EAAgB,IAAO,IAztGhF,SAASke,EAAoB9jC,GACzB,IAAIzC,EAAM,GACV,GAAIyC,EAEA,IADA,IAAIzd,EAAQ1C,OAAOqM,KAAK8T,GACfpf,EAAI,EAAGA,EAAI2B,EAAMxB,OAAQH,IAAK,CACnC,IAAIwL,EAAO7J,EAAM3B,GACjB2c,IAAQ3c,EAAI,IAAM,IAAOwL,EAAO,IAAM4T,EAAO5T,GAGrD,OAAOmR,EAgtG2EumC,CAAoB9jC,GAC9Fq8B,GAAqBv4B,EAAOE,EAAM5F,OAAc,MAAGylC,GACnD7jC,EAAS2a,KA5sFrB,SAASopB,EAAiB7wC,EAAS8wC,EAAcC,EAAale,GAC1D,IAAIrgB,EAAiB0mB,GAA8Bl5B,EAAS6yB,GAAgB,MAC5Eie,EAAeA,GAAgB,KAC/BC,EAAcA,GAAe,KAC7B,IAAIC,EAAwB9R,GAAqBl/B,GAAS,EAAMwS,EAAgBs+B,GAC5EG,EAAwB/R,GAAqBl/B,GAAS,EAAOwS,EAAgBu+B,GAEjF,IAAIC,IAAyBC,EAA7B,CAEAH,EACIA,IAAiBrpB,GAAYwX,GAAmBj/B,GAAS,EAAMwS,GAAkBs+B,EACrFC,EACIA,IAAgBtpB,GAAYwX,GAAmBj/B,GAAS,EAAOwS,GAAkBu+B,EACrF,IAAIlnC,EAAU7J,EAAQ,GAClBkxC,EAAuBJ,aAAwB/e,GAC/C,IAAI4H,GAA2BmX,EAAcjnC,EAAS,GACtD,KACAsnC,EAAsBJ,aAAuBhf,GAC7C,IAAI4H,GAA2BoX,EAAalnC,EAAS,GACrD,KACAunC,EAAeF,EACfJ,EAAaxiD,MACbwiD,EACAO,EAAcF,EAAsBJ,EAAmB,MAAIA,EAC3DO,EAAa/nC,GACbgoC,GAAkB,EAClBzX,GAAyB,EACzB0X,EAA4BN,EAAuB,EAAwC,EAC3FnX,GAAwB/5B,EAASkxC,EAAsB,KACvDjX,GAAiBj6B,EAASkxC,EAAsB,GAChDpX,GAAyB,GAE7B,IAAI2X,EAA2BN,EAAsB,EAAwC,EACzFpX,GAAwB/5B,EAASmxC,EAAqB,KACtDlX,GAAiBj6B,EAASmxC,EAAqB,GAC/CrX,GAAyB,GAIxBkX,IAC0B,iBAAhBI,GACPE,EAAaF,EAAa1xB,MAAM,OAGhC6xB,GAAkB,GAGlBD,EAAaF,EAAezkD,OAAOqM,KAAKo4C,GAAgB7nC,IAGhE,IAAIqjC,EAAwB1Q,GAAyBl8B,GACjD6sC,EAAyB5Q,GAA0Bj8B,GACnD0xC,EAAuB1xC,EAAQnS,OACnC,IAAKojD,EAAuB,CACxB,IAEIxD,EAAkBrY,GAA2Bp1B,EAASwS,EAAgBi/B,EAA0B7E,EAAuBC,EAF1GwE,EAAc1kD,OAAOqM,KAAKq4C,GAAe9nC,GAC7C8nC,GAAe/nC,GAC2IynC,GAAa,GAChLtD,IACAZ,GAA4C,EAAlBY,EAC1BiE,GAA0C,EAAlBjE,GAG3BuD,GAED5b,GAA2Bp1B,EAASwS,EAAgBg/B,EAA2B3E,EAAwB6E,EAAsBJ,EAAYC,GAD1HH,GAAgB9nC,GACsIwnC,GAAc,GAEnLhX,GACAY,GAAuB16B,GAAS,IA4oFpC6wC,CAAiB5c,EAAgBuc,EAAS1jC,EAAQoH,GAWtD,SAAStU,GAAK9O,EAAOxC,GACjB,IAAIsiB,EAAQ+D,KAGRg9B,EAAanjB,GAAelgC,EAAOsiB,EAAMhB,KACzCkB,EAAQ8xB,GAAkB9xC,EAAO,EAAiB6gD,EAAY,KAAM,MAExEx8B,IAAY,GACZ8H,GAAY00B,EAAY7gC,EAAOF,GASnC,SAASghC,GAAY9gD,EAAOxC,GACxB,GAAIA,IAAUm5B,GAAW,CACrB,IAAI7W,EAAQ+D,KAERk9B,EAAYlhC,GAAiB7f,EAAO8f,GAGpCkb,EAAWlb,EAAMhB,IACrB8c,GAAqBZ,GAAYA,EAASkL,SAAS6a,EAAWroC,GAAgBlb,IAC1EujD,EAAUrnB,YAAchhB,GAAgBlb,IAyFpD,SAASs4C,GAAiCnwC,EAAKkwC,EAASzyB,EAAWpD,EAAOgC,GACtE,IAAIg/B,EAAwBnL,EAAQ94C,OACpC2mB,GAAuB/d,GACvBA,EAAIuU,aAAa,EAAgBkJ,EAAWpD,EAAMhgB,MAAQof,IAC1DsE,GAAuB,MAKnBs9B,IAA0BnL,EAAQ94C,QAAUilB,GAC5C6zB,EAAQ/3C,KAAK6H,EAAIuU,cASzB,SAAS86B,GAAgCpzB,EAAO5B,EAAOihC,GAEnD,IAAIC,IAAiBlhC,EAAMhgB,MAAQof,IAE/BgyB,EAAgBxvB,EAAMlL,KAAK3Z,QADkB,MAAxBijB,EAAMuJ,kBAE9B3H,EAAMovB,sBAAwBpvB,EAAMovB,yBAA2BlzC,KAAKojD,EAAc9P,EAAe6P,GAmBtG,SAAStL,GAAqB1T,EAAU7e,EAAWzd,EAAKgsC,GACpD,IAAIpuB,EAAwBU,KAC5Bk9B,GAAyBlf,EAAU1e,EAAuBH,GAEtDG,GAAyBA,EAAsB+f,OA0JvD,SAAS8d,EAAmB1/B,EAAgBiH,EAAUhjB,EAAKqa,GACvD,IAAIqhC,EAAmBrhC,EAAMi6B,oBACJt4C,IAArB0/C,GAAkC3/B,GAAkB2/B,EAAiBtkD,UACrEskD,EAiCR,SAASC,EAAsB5/B,EAAgBtH,EAAQ4F,GACnD,IAAIqhC,EAAmBrhC,EAAMi6B,gBAAkBj6B,EAAMi6B,kBACrDoH,EAAiB3/B,GAAkB,KAGnC,IAFA,IAAI4hB,EAAQtjB,EAAMsjB,MACd1mC,EAAI,EACDA,EAAI0mC,EAAMvmC,QAAQ,CACrB,IAAI6wB,EAAW0V,EAAM1mC,GAErB,GAAiB,IAAbgxB,GAAgD,IAAbA,GACtB,IAAbA,EACA,MACJ,GAAiB,IAAbA,EAAJ,CAKA,IAAI2zB,EAAoBnnC,EAAOwT,GAC3B4zB,EAAYle,EAAM1mC,EAAI,QACA+E,IAAtB4/C,IACoBF,EAAiB3/B,KAAoB2/B,EAAiB3/B,QAC5D5jB,KAAK8vB,EAAU2zB,EAAmBC,GAEpD5kD,GAAK,OATDA,GAAK,EAWb,OAAOykD,EAzDgBC,CAAsB5/B,EAAgB/b,EAAIyU,OAAQ4F,IAEzE,IAAIi6B,EAAgBoH,EAAiB3/B,GACrC,GAAIu4B,EAEA,IADA,IAAI/9B,EAAWvW,EAAIuW,SACVtf,EAAI,EAAGA,EAAIq9C,EAAcl9C,QAAS,CACvC,IAAIygB,EAAay8B,EAAcr9C,KAC3Bu9C,EAAcF,EAAcr9C,KAC5BY,EAAQy8C,EAAcr9C,KACtBsf,EACAvW,EAAIuW,SAASyM,EAAUnrB,EAAOggB,EAAY28B,GAG1CxxB,EAASwxB,GAAe38C,GAzKhC4jD,CAAmBzP,EAAiBvuB,EAAWzd,EAAK4d,GAEpD0e,EAAS9jB,IAAO6D,mBAAqBrc,EAAIwU,iBACzCoJ,EAAsB5e,OAAS,GAE/B8b,GAAe9a,KACK0a,GAAwBkD,EAAsBvjB,MAAOiiC,GAC3DtjB,IAAWyE,GAMjC,SAAS+9B,GAAyBrhC,EAAOyD,EAAuBH,GAC5D,IAAIiV,EAAStY,GAAiBwD,EAAuBzD,GAGrDyY,GAAgBnV,EAAWtD,GACvBuY,GACAE,GAAgBF,EAAQvY,GAiChC,SAAS2hC,GAA4Bl+B,GACjC,IAAI3B,EAAQiC,KAAW1F,KAGtByD,EAAMmX,aAAenX,EAAMmX,gBAAkBj7B,KAAKylB,EAAsBvjB,OA0C7E,SAASk1C,GAAoBl1C,EAAO2F,EAAKkvC,GACrC,GAAIA,EAAY,CACZ,GAAIlvC,EAAI2U,SACJ,IAAK,IAAI1d,EAAI,EAAGA,EAAI+I,EAAI2U,SAASvd,OAAQH,IACrCi4C,EAAWlvC,EAAI2U,SAAS1d,IAAMoD,EAGlC2F,EAAIuS,WACJ28B,EAAW,IAAM70C,IAQ7B,SAAS+0C,GAAc/0B,EAAOhgB,EAAO0hD,GAKjC1hC,EAAMrb,MAAgB,EAJVqb,EAAMrb,MAKlBqb,EAAMiC,eAAiBjiB,EACvBggB,EAAMmC,aAAeniB,EAAQ0hD,EAC7B1hC,EAAMuJ,gBAAkBvpB,EAE5B,SAASi1C,GAAqBrzB,EAAOqgB,EAAUt8B,EAAKg8C,GAChD//B,EAAMlL,KAAK5Y,KAAK6H,GAChB,IAAIi8C,EAAsB,IAAI9gC,GAAoB6gC,EAAkBlhC,GAAe9a,GAAM,MACzFic,EAAMqF,UAAUnpB,KAAK8jD,GACrB3f,EAASnkC,KAAK8jD,GAElB,SAASlM,GAAkB51B,EAAOyD,EAAuB5d,GACrD,IAAI0yB,EAAStY,GAAiBwD,EAAuBzD,GAKjDod,EAAgB2kB,GAAc/hC,EAAO8xB,GAAY9xB,EAJzCm2B,GAAiBtwC,EAAIuS,SAAUvS,EAAIoU,OAAQpU,EAAIqU,KAAMrU,EAAI8V,cAAe9V,EAAI+V,SAAU/V,EAAIiW,UAAWjW,EAAIwW,SAIlD,KAAMxW,EAAI2V,OAAS,GAAiB,GAAsBwE,EAAMyD,EAAsBvjB,OAAQujB,EAD3IzD,EAAMjB,IAC6KiB,EAAMjB,IAAkBid,eAAezD,EAAQ1yB,KACxPu3B,EAAc1e,IAAU+E,EAGxBzD,EAAMyD,EAAsBvjB,OAASk9B,EACjCpd,EAAM3B,IAAO6D,mBACby/B,GAA4Bl+B,GAsFpC,SAASu+B,GAAiBC,EAAYr/B,EAAa2V,EAAQ2pB,GAcvD,OAVID,GACA,EACAC,GAAyB,EAAI,EAC7Bt/B,EACA,KACA,QAEA2V,GAsBR,SAASngB,GAASlY,EAAO8yC,EAAY/4B,EAAQC,EAAMsX,EAASgS,EAAO5K,EAAWgc,GAC1E,IAAI50B,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IAEd8jC,EAAiBC,GAAkBliD,EAAOsxB,GAAW,KAAMgS,GAAS,MACpE1hB,EAAMI,oBACNigC,EAAe/H,OAAS/D,IAAa,EAAGrD,EAAY/4B,EAAQC,EAAM4H,EAAM2zB,kBAAmB3zB,EAAM60B,aAAc,KAAM,OAEzHhD,GAA0B7xB,EAAO9B,EAAO4Y,EAAWgc,GACnDyN,GAAuBriC,EAAOmiC,GAC9B1pB,GAAgBxY,GAAiBkiC,EAAgBniC,GAAQA,GACzDiC,GAAuBH,EAAOqgC,GAC9B59B,IAAY,GAWhB,SAAS8X,GAAUn8B,GACf,IAAIggB,EAAQkiC,GAAkBliD,EAAO,KAAM,MACvC8f,EAAQ+D,KACR/D,EAAM3B,IAAO6D,oBACbhC,EAAMk6B,WAEViI,GAAuBriC,EAAOE,GAC9BqE,IAAY,GAEhB,SAAS69B,GAAkBliD,EAAOsxB,EAASgS,GACvC,IAAIxjB,EAAQ+D,KAER4mB,EAAgBzqC,EAAQof,GACxBgjC,EAAUtiC,EAAMhB,IAAU00B,cAAwC,IAElExzB,EAAQ8xB,GAAkB9xC,EAAO,EAAmBoiD,EAAS9wB,EAASgS,GACtErG,EAAand,EAAM2qB,GAAiBqX,GAAiBhiC,EAAM2qB,GAAgB3qB,EAAOsiC,GAMtF,OALAj2B,GAAYi2B,EAASpiC,EAAOF,GAG5B+hC,GAAc/hC,EAAOmd,GAEdjd,EAWX,SAASmiC,GAAuBriC,EAAOmiC,GACnC,IAAI7mB,EAAUtb,EAAMvB,IAChB6c,IACAA,EAAQuY,QAAQsO,GACCniC,EAAMmiC,EAAejiD,OAC3Bue,IAAW6c,EAAQe,aAQtC,SAASkmB,GAAsBriD,GAC3B,IAAI8f,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IAElB+F,GAD4B9D,GAAawB,EAAMlL,KAAM1W,IAGrDqkB,IAAY,GACZvE,EAAM9f,EAAQof,IAAeE,IAAgB,EAG7CmD,GAAiB3C,EAAO8B,EAAO2C,MAOnC,SAAS+9B,KACL,IAAI/+B,EAAwBU,KACxBG,KACAC,IAAY,GAMZH,GADAX,EAAwBA,EAAsBlX,QAOlD,IAHA,IAAI4wB,EAAapZ,KAAWN,EAAsBvjB,OAC9CuiD,EAAYtlB,EAAW3d,IAEpBijC,EAAYtlB,EAAW1d,IAAOxiB,QACjCqhC,GAAWnB,EAAYslB,GA0D/B,SAASC,GAAkBC,EAAa1oC,EAAQC,GAC5C,IAAI8F,EAAQ+D,KACRN,EAAwBU,KAExBy+B,EAAgD,IAA/Bn/B,EAAsBthB,KACvCshB,EAAsBlX,OACtBkX,EACA0Z,EAAand,EAAM4iC,EAAe1iD,OAElCkyC,EAnCR,SAASyQ,EAAY1lB,EAAY2lB,EAAUH,GAEvC,IADA,IAAI1kB,EAAQd,EAAW1d,IACd3iB,EAAIgmD,EAAUhmD,EAAImhC,EAAMhhC,OAAQH,IAAK,CAC1C,IAAIimD,EAAmB9kB,EAAMnhC,GAAGuhB,IAAOxN,GACvC,GAAIkyC,IAAqBJ,EACrB,OAAO1kB,EAAMnhC,GAEZ,KAAIimD,EAAmBJ,GAQxB,MANArkB,GAAWnB,EAAYrgC,GAS/B,OAAO,KAiBY+lD,CAAY1lB,EAAYA,EAAW3d,IAAemjC,GACrE,GAAIvQ,EACA7tB,IAAY,GACZW,GAAUktB,EAAcA,EAAa/zB,IAAOyT,UAE3C,CAEDsgB,EAAeN,GAAY9xB,EAgCnC,SAASgjC,EAAyB1M,EAAWr8B,EAAQC,EAAM3N,GACvD,IAAIuV,EAAQiC,KAAW1F,IAEnB4kC,EAAkB12C,EAAO6tC,OAM7B,OAHI9D,GAAa2M,EAAgBhmD,QAAwC,MAA9BgmD,EAAgB3M,MACvD2M,EAAgB3M,GAAaD,GAAYC,EAAW,KAAMr8B,EAAQC,EAAM4H,EAAM2zB,kBAAmB3zB,EAAM60B,aAAc,KAAM,OAExHsM,EAAgB3M,GAzCe0M,CAAyBL,EAAa1oC,EAAQC,EAAM0oC,GAAiB,KAAM,GAAsB,KAAM,MACrIzlB,EAAW1e,MACX2zB,EAAa3zB,IAAW0e,EAAW1e,IAASykC,cAEhD,IAAI/Q,EAAc7tB,KAAgBb,EAC9BA,GAAyBA,EAAsBlX,OACnD2lC,GAAuBE,EAAa/zB,IAAQ8zB,EAAawQ,EAAavQ,GACtEltB,GAAUktB,EAAcA,EAAa/zB,IAAOyT,MAShD,OAPIqL,IACI3Y,GAAe4tB,IAEfpU,GAAWoU,EAAcjV,EAAYA,EAAW3d,KAEpD2d,EAAW3d,OAERgF,GAAe4tB,GAAgB,EAClC,EA2BR,SAAS+Q,KACL,IAAInjC,EAAQ+D,KACRq/B,EAAWpjC,EAAMtB,IACjB8F,GAAexE,KACf2wB,GAAuB3wB,GACvBA,EAAM1B,MAAU,GAEpBqyB,GAAuB3wB,GAGvBuF,GAFiBvF,EAAMzB,IAEFA,KACrB6F,GAAyBg/B,GACzB7+B,IAAY,GAyEhB,SAAS8+B,GAAcxnC,EAAWq0B,GAC9B,IAAIoT,EAAgBp9B,GAAkBnC,MAAYrF,IAClD,IAAK4kC,EAAchmB,WAMf,IALA,IACIimB,EAAQD,EAAchmB,WACtB,IAAIphC,MAFc2f,EAAYA,EAAU5e,OAAS,EAAI,GAE1BwK,KAAK,MAChC+7C,EAAQD,EAAMz2C,QACd22C,EAAiBH,EAAcvqB,MACT,OAAnB0qB,GAAyB,CAC5B,IAAIC,EAAc7nC,EAAYo0B,GAAsBwT,EAAgB5nC,EAAWq0B,GAAiB,EAC5Fne,EAAW0xB,EAAehmD,KAC1B+lD,EAAME,GACNF,EAAME,GAAajmD,KAAOgmD,EAG1BF,EAAMG,GAAeD,EAEzBA,EAAehmD,KAAO,KACtB+lD,EAAME,GAAeD,EACrBA,EAAiB1xB,GAa7B,SAASuL,GAAW9c,EAAWmjC,EAAengB,QACpB,IAAlBmgB,IAA4BA,EAAgB,GAChD,IAAI3jC,EAAQ+D,KACRid,EAAkBgR,GAAkBxxB,EAAW,EAAoB,KAAM,KAAMgjB,GAAS,MAEzD,OAA/BxC,EAAgB1D,aAChB0D,EAAgB1D,WAAaqmB,GAEjCp/B,IAAY,GAvrIhB,SAASq/B,EAAqB5jC,EAAOghB,EAAiB2iB,EAAevmB,GACjE,IAAIymB,EAAgBzmB,EAAc7e,IAE9BulC,EADgB1mB,EAAc1e,IACA4e,WAAWqmB,GAC7C,GAAIznD,MAAMqJ,QAAQu+C,GACdz3B,GAAYy3B,EAAe9iB,EAAiBhhB,QAG5C,KAAO8jC,GACwB,IAAvBA,EAAc3hD,KACdyhD,EAAqB5jC,EAAOghB,EAAiB8iB,EAAcxmB,WAAYpX,GAAkB29B,KAKzFC,EAAcj/C,OAAS,EACvBi8B,GAAoBgjB,EAAe9iB,EAAiBhhB,EAAO6jC,IAE/DC,EAAgBA,EAAcrmD,KAuqItCmmD,CAAqB5jC,EAAOghB,EAAiB2iB,EAAez9B,GAAkBlG,IAalF,SAAS+hC,GAAc/hC,EAAO0e,GAY1B,OAPI1e,EAAMd,IACNc,EAAMb,IAAYX,IAAQkgB,EAG1B1e,EAAMd,IAAcwf,EAExB1e,EAAMb,IAAcuf,EACbA,EAuBX,SAASsZ,GAAa93B,EAAOF,EAAOu3B,EAAYwM,GAG5C,OAAO,SAASC,EAA0ClmD,GAGtD,IAAIgoB,EAA0B,EAAd5F,EAAMrb,MAA8B0b,GAAwBL,EAAMhgB,MAAO8f,GAASA,EAEnD,IAA3B,GAAfA,EAAM1B,MACP2lC,GAAcn+B,GAElB,IACI,IAAIlf,EAAS2wC,EAAWz5C,GAMxB,OALIimD,IAAqC,IAAXn9C,IAC1B9I,EAAEomD,iBAEFpmD,EAAEqmD,aAAc,GAEbv9C,EAEX,MAAO3I,GACH+sB,GAAYhL,EAAO/hB,KAe/B,SAASgmD,GAAcjkC,GACnB,KAAOA,GAAO,CACVA,EAAM1B,KAAU,GAChB,IAAI8lC,EAAWn+B,GAAejG,GAE9B,GAAIY,GAAWZ,KAAWokC,EACtB,OAAOpkC,EAGXA,EAAQokC,EAEZ,OAAO,KAaX,SAASnF,GAAalc,EAAal+B,GAC/B,IAGQw/C,EAHJC,EAAyC,IAAtBvhB,EAAYl+B,MACnCk+B,EAAYl+B,OAASA,EACjBy/C,GAAoBvhB,EAAYwhB,OAAS9T,KAEzC1N,EAAYwhB,MAAQ,IAAI7T,QAAQ,SAAU7yC,GAAK,OAAOwmD,EAAQxmD,IAC9DklC,EAAYyhB,UAAU,WAKlB,GAJwB,EAApBzhB,EAAYl+B,QACZk+B,EAAYl+B,QAAS,EACrB0tC,GAAgBxP,IAEI,EAApBA,EAAYl+B,MAA8B,CAC1Ck+B,EAAYl+B,QAAS,EACrB,IAAIs+B,EAAgBJ,EAAYI,cAC5BA,GACAA,EAAc7B,eAGtByB,EAAYwhB,MAAQ9T,GACpB4T,EAAM,SAIlB,SAAS9R,GAAgBxP,GACrB,IAAK,IAAIjmC,EAAI,EAAGA,EAAIimC,EAAY9J,WAAWh8B,OAAQH,IAAK,CACpD,IAAI2nD,EAAgB1hB,EAAY9J,WAAWn8B,GAC3Ci2C,GAA0BjyB,GAAiB2jC,GAAgBA,IAoBnE,SAASC,GAAsBrkC,EAAMjR,GACjC,IAAI6rB,EAAkB5a,EAAKtB,IACvBkc,EAAgBkY,OAChBlY,EAAgBkY,QACpB,IACQ3uB,GAAenE,IACfuxB,GAAUvxB,EAAMjR,GAEpBwiC,GAAUvxB,EAAMjR,GAEpB,MAAOnR,GAEH,MADA+sB,GAAY3K,EAAMpiB,GACZA,EAEV,QACQg9B,EAAgB7Y,KAChB6Y,EAAgB7Y,OAQ5B,SAASuiC,GAAwB3kC,GAC7BuyB,GAAgBvyB,EAAMnB,KA8B1B,SAAS+yB,GAAUzxB,EAAUjI,GACzB,IAAI0sC,EAAYzkC,EAAS9B,IACrBgH,EAAUH,GAAU/E,EAAUA,EAASzB,KACvCs0B,EAAa4R,EAAUxsC,SACvB8hB,EAAe1V,GAAerE,GAClC,IACIqyB,KACAtY,GAAgB2qB,GAAmB,EAAgBD,EAAW1sC,GAC9D86B,EAAWP,GAAetyB,GAAWjI,GACrCy4B,GAAuBxwB,GAElB+Z,IAAgB0qB,EAAUlO,mBAC3BmO,GAAmB,EAAgBD,EAAW1sC,GAGtD,QACIqN,GAAUF,IAGlB,SAASw/B,GAAmBhgD,EAAOid,EAAO5J,GACtC,IAAI4D,EAAYgG,EAAMhG,UAClBA,IACAmJ,GAAqBnD,EAAM20B,qBAC3B36B,EAAUjX,EAAOqT,IAmBzB,SAAS4sC,GAAU5sC,GAIf+mC,GAFegF,GAAcprB,GAA2B3gB,IAElC2G,IAAU,GAUpC,SAASzf,GAAK1B,GACV,IAAIsiB,EAAQ+D,KACRgT,EAAe/W,EAAMrB,MAEzB,OADAomC,GAAqB/kC,GACdiX,GAAejX,EAAO+W,EAAcr5B,GAASA,EAAQm5B,GAOhE,SAASmuB,GAAczW,GACnB,IAAIvuB,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IACbyD,EAAMI,oBAzzBf,SAAS+iC,EAAyBnjC,EAAOjc,EAAKq/C,GAG1C,IAAInP,EAAUj0B,EAAMovB,oBAChBj0C,EAAS84C,EAAQ94C,OAMjBA,GAAU,GAAK84C,EAAQ94C,EAAS,KAAO4I,EAAIuU,aAC3C27B,EAAQ94C,EAAS,GAAK84C,EAAQ94C,EAAS,GAAKioD,EAG5CnP,EAAQ/3C,KAAK6H,EAAIuU,aAAc8qC,GA6yBnCD,CAAyBnjC,EA30P7B,SAASqjC,IAEL,OAAOxhC,GAy0PyBwhC,GAA0B5W,GA14B9D,SAAS6W,EAAgBtjC,EAAO9B,EAAOqlC,GAGnC,IAAK,IAAIvoD,EAAI,EAAGA,EAAIuoD,EAAevoD,IAC/BkjB,EAAMhiB,KAAK64B,IACX/U,EAAMqF,UAAUnpB,KAAK64B,IACrB/U,EAAMlL,KAAK5Y,KAAK,MAq4BpBonD,CAAgBtjC,EAAO9B,EAAOuuB,IAclC,SAAS+W,GAAe3lD,GAGpB,IAAI23B,GAAY,EACZtX,EAAQ+D,KACRkE,EAAQjI,EAAM3B,IAAOzH,KACrBmgB,EAAe/W,EAAMrB,IACzB,GAA2B,MAAvBsJ,EAAM8O,GAAuB,CAE7B,IAAK,IAAIj6B,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,GAAK,EACpCmrB,EAAM8O,KAAkBp3B,EAAO7C,GAEnCi6B,EAAe/W,EAAMrB,IAEzB,IAAS7hB,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,GAAK,EAEpCm6B,GAAejX,EAAO+W,IAAgBp3B,EAAO7C,MAAQw6B,GAAY,GAIrE,GAFAtX,EAAMrB,IAAiBoY,EACvBguB,GAAqB/kC,EAAOrgB,EAAO,GAAIA,EAAOA,EAAO1C,OAAS,KACzDq6B,EACD,OAAOT,GAGX,IAAI9D,EAAUpzB,EAAO,GACrB,IAAS7C,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,GAAK,EACpCi2B,GAAWna,GAAgBjZ,EAAO7C,IAAM6C,EAAO7C,EAAI,GAEvD,OAAOi2B,EASX,SAASwyB,GAAeC,EAAQC,EAAIrG,GAChC,IAAIp/B,EAAQ+D,KACRuT,EAAYL,GAAejX,EAAOA,EAAMrB,MAAkB8mC,GAE9D,OADAV,GAAqB/kC,EAAOwlC,EAAQpG,GAC7B9nB,EAAYkuB,EAAS5sC,GAAgB6sC,GAAMrG,EAASvoB,GAG/D,SAAS6uB,GAAeF,EAAQC,EAAIE,EAAIC,EAAIxG,GACxC,IAAIp/B,EAAQ+D,KACRgT,EAAe/W,EAAMrB,IACrB2Y,EAAYH,GAAgBnX,EAAO+W,EAAc0uB,EAAIG,GAOzD,OANA5lC,EAAMrB,KAAkB,EAEbomC,GAAqB/kC,EAAOwlC,EAAQpG,KAE3Cp/B,EAAM3B,IAAOzH,KAAKmgB,GAAgB4uB,GAE/BruB,EAAYkuB,EAAS5sC,GAAgB6sC,GAAME,EAAK/sC,GAAgBgtC,GAAMxG,EAASvoB,GAG1F,SAASgvB,GAAeL,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAI3G,GAChD,IAAIp/B,EAAQ+D,KACRgT,EAAe/W,EAAMrB,IACrB2Y,EAAYC,GAAgBvX,EAAO+W,EAAc0uB,EAAIG,EAAIG,GAI7D,GAHA/lC,EAAMrB,KAAkB,EAEbomC,GAAqB/kC,EAAOwlC,EAAQpG,GACrC,CACN,IAAIn3B,EAAQjI,EAAM3B,IAAOzH,KACzBqR,EAAM8O,GAAgB4uB,EACtB19B,EAAM8O,EAAe,GAAK+uB,EAE9B,OAAOxuB,EACHkuB,EAAS5sC,GAAgB6sC,GAAME,EAAK/sC,GAAgBgtC,GAAME,EAAKltC,GAAgBmtC,GAAM3G,EACrFvoB,GAGR,SAASmvB,GAAeR,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAI9G,GACxD,IAAIp/B,EAAQ+D,KACRgT,EAAe/W,EAAMrB,IACrB2Y,EAAYG,GAAgBzX,EAAO+W,EAAc0uB,EAAIG,EAAIG,EAAIG,GAIjE,GAHAlmC,EAAMrB,KAAkB,EAEbomC,GAAqB/kC,EAAOwlC,EAAQpG,GACrC,CACN,IAAIn3B,EAAQjI,EAAM3B,IAAOzH,KACzBqR,EAAM8O,GAAgB4uB,EACtB19B,EAAM8O,EAAe,GAAK+uB,EAC1B79B,EAAM8O,EAAe,GAAKkvB,EAE9B,OAAO3uB,EACHkuB,EAAS5sC,GAAgB6sC,GAAME,EAAK/sC,GAAgBgtC,GAAME,EAAKltC,GAAgBmtC,GAAME,EACjFrtC,GAAgBstC,GAAM9G,EAC1BvoB,GAGR,SAASsvB,GAAeX,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIjH,GAChE,IAAIp/B,EAAQ+D,KACRgT,EAAe/W,EAAMrB,IACrB2Y,EAAYG,GAAgBzX,EAAO+W,EAAc0uB,EAAIG,EAAIG,EAAIG,GAKjE,GAJA5uB,EAAYL,GAAejX,EAAO+W,EAAe,EAAGsvB,IAAO/uB,EAC3DtX,EAAMrB,KAAkB,EAEbomC,GAAqB/kC,EAAOwlC,EAAQpG,GACrC,CACN,IAAIn3B,EAAQjI,EAAM3B,IAAOzH,KACzBqR,EAAM8O,GAAgB4uB,EACtB19B,EAAM8O,EAAe,GAAK+uB,EAC1B79B,EAAM8O,EAAe,GAAKkvB,EAC1Bh+B,EAAM8O,EAAe,GAAKqvB,EAE9B,OAAO9uB,EACHkuB,EAAS5sC,GAAgB6sC,GAAME,EAAK/sC,GAAgBgtC,GAAME,EAAKltC,GAAgBmtC,GAAME,EACjFrtC,GAAgBstC,GAAME,EAAKxtC,GAAgBytC,GAAMjH,EACrDvoB,GAGR,SAASyvB,GAAed,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIpH,GACxE,IAAIp/B,EAAQ+D,KACRgT,EAAe/W,EAAMrB,IACrB2Y,EAAYG,GAAgBzX,EAAO+W,EAAc0uB,EAAIG,EAAIG,EAAIG,GAKjE,GAJA5uB,EAAYH,GAAgBnX,EAAO+W,EAAe,EAAGsvB,EAAIG,IAAOlvB,EAChEtX,EAAMrB,KAAkB,EAEbomC,GAAqB/kC,EAAOwlC,EAAQpG,GACrC,CACN,IAAIn3B,EAAQjI,EAAM3B,IAAOzH,KACzBqR,EAAM8O,GAAgB4uB,EACtB19B,EAAM8O,EAAe,GAAK+uB,EAC1B79B,EAAM8O,EAAe,GAAKkvB,EAC1Bh+B,EAAM8O,EAAe,GAAKqvB,EAC1Bn+B,EAAM8O,EAAe,GAAKwvB,EAE9B,OAAOjvB,EACHkuB,EAAS5sC,GAAgB6sC,GAAME,EAAK/sC,GAAgBgtC,GAAME,EAAKltC,GAAgBmtC,GAAME,EACjFrtC,GAAgBstC,GAAME,EAAKxtC,GAAgBytC,GAAME,EAAK3tC,GAAgB4tC,GAAMpH,EAChFvoB,GAGR,SAAS4vB,GAAejB,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIvH,GAChF,IAAIp/B,EAAQ+D,KACRgT,EAAe/W,EAAMrB,IACrB2Y,EAAYG,GAAgBzX,EAAO+W,EAAc0uB,EAAIG,EAAIG,EAAIG,GAKjE,GAJA5uB,EAAYC,GAAgBvX,EAAO+W,EAAe,EAAGsvB,EAAIG,EAAIG,IAAOrvB,EACpEtX,EAAMrB,KAAkB,EAEbomC,GAAqB/kC,EAAOwlC,EAAQpG,GACrC,CACN,IAAIn3B,EAAQjI,EAAM3B,IAAOzH,KACzBqR,EAAM8O,GAAgB4uB,EACtB19B,EAAM8O,EAAe,GAAK+uB,EAC1B79B,EAAM8O,EAAe,GAAKkvB,EAC1Bh+B,EAAM8O,EAAe,GAAKqvB,EAC1Bn+B,EAAM8O,EAAe,GAAKwvB,EAC1Bt+B,EAAM8O,EAAe,GAAK2vB,EAE9B,OAAOpvB,EACHkuB,EAAS5sC,GAAgB6sC,GAAME,EAAK/sC,GAAgBgtC,GAAME,EAAKltC,GAAgBmtC,GAAME,EACjFrtC,GAAgBstC,GAAME,EAAKxtC,GAAgBytC,GAAME,EAAK3tC,GAAgB4tC,GAAME,EAC5E9tC,GAAgB+tC,GAAMvH,EAC1BvoB,GAGR,SAAS+vB,GAAepB,EAAQC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAIE,EAAIC,EAAI1H,GACxF,IAAIp/B,EAAQ+D,KACRgT,EAAe/W,EAAMrB,IACrB2Y,EAAYG,GAAgBzX,EAAO+W,EAAc0uB,EAAIG,EAAIG,EAAIG,GAKjE,GAJA5uB,EAAYG,GAAgBzX,EAAO+W,EAAe,EAAGsvB,EAAIG,EAAIG,EAAIG,IAAOxvB,EACxEtX,EAAMrB,KAAkB,EAEbomC,GAAqB/kC,EAAOwlC,EAAQpG,GACrC,CACN,IAAIn3B,EAAQjI,EAAM3B,IAAOzH,KACzBqR,EAAM8O,GAAgB4uB,EACtB19B,EAAM8O,EAAe,GAAK+uB,EAC1B79B,EAAM8O,EAAe,GAAKkvB,EAC1Bh+B,EAAM8O,EAAe,GAAKqvB,EAC1Bn+B,EAAM8O,EAAe,GAAKwvB,EAC1Bt+B,EAAM8O,EAAe,GAAK2vB,EAC1Bz+B,EAAM8O,EAAe,GAAK8vB,EAE9B,OAAOvvB,EACHkuB,EAAS5sC,GAAgB6sC,GAAME,EAAK/sC,GAAgBgtC,GAAME,EAAKltC,GAAgBmtC,GAAME,EACjFrtC,GAAgBstC,GAAME,EAAKxtC,GAAgBytC,GAAME,EAAK3tC,GAAgB4tC,GAAME,EAC5E9tC,GAAgB+tC,GAAME,EAAKjuC,GAAgBkuC,GAAM1H,EACrDvoB,GAkBR,SAASkuB,GAAqB/kC,EAAOwlC,EAAQpG,QAC1B,IAAXoG,IAAqBA,EAAS,SACnB,IAAXpG,IAAqBA,EAAS,IAClC,IAAIn3B,EAAQjI,EAAM3B,IAAOzH,KACrBkjC,EAAmB95B,EAAMrB,IAAiB,EAE9C,OAAkC,MAA3BsJ,EAAM6xB,GAA6B7xB,EAAM6xB,GADpCvgC,GAA0BisC,EAASjsC,GAA0B6lC,EACI,KAGjF,SAASrV,GAAM7pC,EAAOxC,GAClB,IAAIsiB,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IAGdssB,EAAgBzqC,EAAQof,GACxBqrB,GAAiB7oB,EAAMlL,KAAK3Z,SAC5B6kB,EAAMlL,KAAK+zB,GAAiB,KAC5B7oB,EAAMqF,UAAUwjB,GAAiB,MAErC3qB,EAAM2qB,GAAiBjtC,EAU3B,SAASqpD,GAAU7mD,GAEf,OAAOogB,GA97PX,SAAS0mC,IAEL,OAAO9iC,GA27PY8iC,GACe9mD,GAGtC,SAAS+mD,GAAK/mD,GACV,OAAOogB,GAAayD,KAAY7jB,GAEpC,SAASgnD,GAAgBrmD,EAAOgE,GAG5B,YAFc,IAAVA,IAAoBA,EAAQ5J,EAAQ0F,YAAYmE,SACpDjE,EAAQwC,EAAkBxC,GACnBqnB,GAAsB/D,KAA4BJ,KAAYljB,EAAOgE,GAKhF,SAASsiD,GAAgBC,GACrB,OAhiPJ,SAASC,EAAoBnnC,EAAOknC,GAGhC,IAAI5jB,EAAQtjB,EAAMsjB,MAClB,GAAIA,EACA,IAAK,IAAI1mC,EAAI,EAAGA,EAAI0mC,EAAMvmC,OAAQH,GAAQ,EAAG,CACzC,IAAIgxB,EAAW0V,EAAM1mC,GACrB,GAAiB,IAAbgxB,EACA,MACJ,GAAIA,GAAYs5B,EACZ,OAAO5jB,EAAM1mC,EAAI,GAI7B,OAAO,KAkhPAuqD,CAAoBljC,KAA4BijC,GAE3D,IAAIE,GAAgB7W,GACpB,SAAS+D,GAAsBt0B,GAG3B,OAAIA,QACqBre,IAAjBqe,EAAM5F,SAEN4F,EAAM5F,OAAS49B,GAAwBh4B,EAAO,IAE3CA,EAAM5F,QAEV,KASX,SAASitC,KACL,OAAOxjC,KAEX,SAASg0B,GAAW13B,GAEhB,OAAOA,EAAKzB,MAAayB,EAAKzB,QAElC,SAAS4oC,GAAgBnnC,GACrB,OAAOA,EAAKhC,IAAO2c,UAAY3a,EAAKhC,IAAO2c,YAM/C,SAAS4c,GAAsB13B,EAAOF,GAElC,OADqBA,EAAME,EAAMhgB,OACX8e,IAG1B,SAASgM,GAAYhL,EAAO/hB,GACxB,IAAIsG,EAAWyb,EAAMlB,IACjB2oC,EAAeljD,EAAWA,EAASU,IAAI6lB,GAAc,MAAQ,KACjE28B,GAAgBA,EAAaz8B,YAAY/sB;;;;;;;OA8C7C,SAASypD,GAAWzkB,GAChB,IAAI7zB,EAAUuoB,GAAYsL,GAC1B,IAAK7zB,EAED,SAEJ,IAAIi0B,EAAiBnB,GAAkB9yB,EAAQoR,UAAWpR,EAAQ4Q,OAC9D8iB,EAAgBO,EAAiBD,GAAiBC,GAAkB,KACxE,OAAOP,EAjkJX,SAAS6kB,EAAmB7kB,GAIxB,IAHA,IAAI8kB,KACAC,EAAyB/kB,EAAc,GAElChmC,EAAI,EAAoEA,EAAI+qD,EAAwB/qD,GAAK,EAA0C,CACxJ,IAAIykC,EAASuB,EAAchmC,GACvBykC,GACAqmB,EAAQ5pD,KAAKujC,GAIrB,IAASzkC,EAAI+qD,EAAwB/qD,EAAIgmC,EAAc7lC,OAAQH,IAC3D8qD,EAAQ5pD,KAAK8kC,EAAchmC,IAE/B,OAAO8qD,EAmjJgBD,CAAmB7kB;;;;;;;OA8B9C,SAASglB,GAAa7uC,GAClB,IAAI7J,EAAU24C,GAAqB9uC,GAInC,YAH0BpX,IAAtBuN,EAAQ8I,YACR9I,EAAQ8I,UAzzLhB,SAAS8vC,EAAwBxnC,EAAWR,GACxC,IAAIE,EAAQF,EAAM3B,IAAOzH,KAAK4J,GAE9B,OAAqB,EAAdN,EAAMrb,MAA8Bmb,EADjBE,EAAMiC,gBACwC,KAszLhD6lC,CAAwB54C,EAAQoR,UAAWpR,EAAQ4Q,QAEpE5Q,EAAQ8I,UAsBnB,SAAS+vC,GAAWhvC,GAEhB,OADc8uC,GAAqB9uC,GACpB+G,MAAMnB,IAsBzB,SAASqpC,GAAiBjvC,GAKtB,IAJA,IAEI1M,EADAyT,EADUmoC,GAAalvC,GACP+G,MAGG,OAAhBA,EAAM5B,MAAmB7R,EAAS0Z,GAAejG,KAEpDA,EAAQzT,EAEZ,OAAsB,IAAfyT,EAAM1B,IAA4B,KAAO0B,EAAMnB,IAW1D,SAASupC,GAAkB5nD,GACvB,OAAOtC,EAASkoB,GAAe5lB,GAAQy4B,YAS3C,SAASovB,GAAY7nD,GACjB,IAAI4O,EAAU+4C,GAAa3nD,GAE3B,OAAO,IAAIgoB,GADCpZ,EAAQ4Q,MAAM3B,IAAOzH,KAAKxH,EAAQoR,WACfpR,EAAQ4Q,OAsC3C,SAASsoC,GAAc9nD,GACnB,IAAI4O,EAAU+4C,GAAa3nD,GAI3B,YAH2BqB,IAAvBuN,EAAQoN,aACRpN,EAAQoN,WAAa4b,GAAyBhpB,EAAQoR,UAAWpR,EAAQ4Q,OAAO,IAE7E5Q,EAAQoN,eAEnB,SAAS2rC,GAAa3nD,EAAQ+nD,QACF,IAApBA,IAA8BA,GAAkB,GACpD,IAAIn5C,EAAUuoB,GAAYn3B,GAC1B,IAAK4O,GAAWm5C,EACZ,MAAM,IAAIhnD,MACN,qBAER,OAAO6N,EA4BX,SAASo5C,GAAellC,GACpB,OAAOqU,GAAYrU,GAAWiV,OAElC,SAASwvB,GAAqBj2B,GAC1B,KAAMA,aAAgB3D,MAClB,MAAM,IAAI5sB,MAAM,kCACpB,OAAO4mD,GAAar2B,GAExB,SAAS22B,GAAgBpR,GAErB,MAAsC,kBAAxBA,EAASG,WAuB3B,SAASkR,GAAazvC,GAClB,IACI+G,EADW+nC,GAAqB9uC,GACf+G,MAEjBif,EAAWjf,EAAMpB,IACjBogB,EAFQhf,EAAM3B,IAEG2c,QACjB2tB,KACJ,GAAI3pB,GAAYC,EACZ,IAAK,IAAIniC,EAAI,EAAGA,EAAIkiC,EAAS/hC,QAAS,CAClC,IAAI2rD,EAAa5pB,EAASliC,KACtB+rD,EAAc7pB,EAASliC,KAC3B,GAA0B,iBAAf8rD,EAAyB,CAChC,IAAItM,EAASsM,EACTE,EAAkBlpC,GAAYI,EAAM6oC,IACpCE,EAAW9pB,EAASD,EAASliC,MAC7BksD,EAAmBhqB,EAASliC,KAO5Bmc,GAAW6vC,GACXH,EAAU3qD,MAAOib,QAASA,EAASza,KAAM89C,EAAQyM,SAAUA,EAAUvR,WAJ5B,kBAArBwR,EACpBA,IACCA,GAAoB,IAAY,QAQjD,OADAL,EAAUM,KAAKC,IACRP,EAEX,SAASO,GAAcxzB,EAAG55B,GACtB,OAAI45B,EAAEl3B,MAAQ1C,EAAE0C,KACL,EACJk3B,EAAEl3B,KAAO1C,EAAE0C,MAAQ,EAAI;;;;;;;;;;;;;;;AAyClC,IAAI2qD,GAA6B,KAC7BC,IAAa,EA0BjB,SAASC,GAAkB7qD,EAAM8E,GAG7B,GAFQE,EAED,CACH,IAAI64B,EAHA74B,EAGc2lD,IACb9sB,IACDA,EALA74B,EAKc2lD,QAElB9sB,EAAU79B,GAAQ8E;;;;;;;OAuE1B,SAASgmD,GAAwB5oB,EAAO76B,EAAK44B,EAAUxD,EAAiBC,EAAUxI,IAr3QlF,SAAS62B,IACL7lC,IAAW,EACXD,GAAwB,KACxB1C,GAAoB,EACpByC,IAAkB,EAk3QlB+lC,GACA,IAAIznC,EAAQ2c,EAASpgB,IACjB6B,EAAQ8xB,GAAkB,EAAG,EAAiBtR,EAAO,KAAM,MAC3DtD,EAAgB0U,GAAYrT,EAAU0X,GAAiBtwC,EAAIuS,SAAUvS,EAAIoU,OAAQpU,EAAIqU,KAAMrU,EAAI8V,cAAe9V,EAAI+V,SAAU/V,EAAIiW,UAAWjW,EAAIwW,SAAU,KAAMxW,EAAI2V,OAAS,GAAiB,GAAsBijB,EAASnf,IAAgBY,EAAO+a,EAAiBC,EAAUxI,GAQlR,OAPI5Q,EAAMI,oBACNwF,GAAmBZ,GAA+B5G,EAAOue,GAAWA,EAAU54B,EAAI1D,MAClF+d,EAAMrb,MAAQ,EACdowC,GAAc/0B,EAAOue,EAASxhC,OAAQ,GACtC0kD,GAA4BzhC,IAGzBue,EAASnf,IAAiB8d,EAMrC,SAASosB,GAAoBpsB,EAAeqsB,EAAchrB,EAAUsE,EAAa2mB,GAC7E,IAAI5nC,EAAQ2c,EAASpgB,IAEjBnG,EA7wDR,SAASyxC,EAAyB7nC,EAAOqgB,EAAUt8B,GAC/C,IAAIsgB,EAAYhC,KACZrC,EAAMI,oBACFrc,EAAImU,mBACJnU,EAAImU,kBAAkBnU,GAC1BqvC,GAAgCpzB,EAAOqE,EAAW,GAClDgvB,GAAqBrzB,EAAOqgB,EAAUt8B,EAAKA,EAAI7K,UAEnD,IAAIsoB,EAAY+F,GAAkBvH,EAAMlL,KAAMurB,EAAUA,EAASllC,OAAS,EAAGkpB,GAE7E,OADAk7B,GAAyBlf,EAAUhc,EAAW7C,GACvCA,EAmwDSqmC,CAAyB7nC,EAAO2c,EAAUgrB,GAC1D1mB,EAAY9J,WAAWj7B,KAAKka,GAC5BklB,EAAcve,IAAW3G,EACzBwxC,GAAgBA,EAAarhD,QAAQ,SAAUoU,GAAW,OAAOA,EAAQvE,EAAWuxC,KACpF,IAAItjC,EAAYhC,KAMhB,GALIrC,EAAMI,mBAAqBunC,EAAarvC,eAExC47B,GAAiCyT,EADnB3nC,EAAMovB,oBACoCh5B,EAAWiO,EAAWrE,EAAMI,mBACpFiE,EAAUqqB,sBAAwBF,GAA0BnqB,IAE5DA,EAAUoc,gBAAiB,CAC3B,IAAIhK,EAAS6E,EAAchf,IAC3B2lB,GAAqBxL,EAAQpS,EAAUoc,gBAAiBnF,EAAcpe,KACtE6kB,GAAoBtL,EAAQpS,EAAUoc,gBAAiBnF,EAAcpe,KAEzE,OAAO9G,EAEX,SAAS0xC,GAAkBpF,EAAWrhB,GAClC,OACIlK,cACAurB,UAAWA,GAAa3rC,GACxB0rC,MAAO+C,GACPnkB,cAAeA,GAAiB,KAChCt+B,MAAO,GAgBf,SAASglD,GAAsB3xC,EAAWrS,GACtC,IAAIikD,EAAYhpC,GAAiB5I,GAAWmG,IACxC0rC,EAAWD,EAAUlzC,KAAK3Z,OAAS,EACvC0kB,GAAsBooC,EAAUlkD,EAAKikD,GAGrC7nC,GAAuB6nC,GAAa3nC,eAAgB4nC,EAAU1nC,aAAc0nC,EAAW;;;;;;;;AAsC3F,IAAIC,GAA8B,WAC9B,SAASA,EAAaC,EAAerkB,EAAcskB,GAC/CvuD,KAAKsuD,cAAgBA,EACrBtuD,KAAKiqC,aAAeA,EACpBjqC,KAAKuuD,YAAcA,EAMvB,OADAF,EAAaxtD,UAAU2tD,cAAgB,WAAc,OAAOxuD,KAAKuuD,aAC1DF,EAVsB;;;;;;;OAwCjC,SAASI,KAIL,OADAC,GAAuBC,WAAY,EAC5BD,GAEX,SAASA,GAAuBE,GACxBA,EAAWpoD,KAAK3F,UAAUguD,cAC1BD,EAAWnuC,SAAWquC,GACtBF,EAAW9vC,UAGnB,SAASiwC,IACL,OAAO,WACH,IAAIC,EAAqBC,GAAsBjvD,MAC3Co1B,EAAU45B,GAAsBA,EAAmB55B,QACvD,GAAIA,EAAS,CACT,IAAIpsB,EAAWgmD,EAAmBhmD,SAClC,GAAIA,IAAa+T,GACbiyC,EAAmBhmD,SAAWosB,OAK9B,IAAK,IAAIzvB,KAAOyvB,EACZpsB,EAASrD,GAAOyvB,EAAQzvB,GAGhCqpD,EAAmB55B,QAAU,KAC7Bp1B,KAAK6uD,YAAYz5B,KApBE25B,IAwB/B,SAASD,GAAoB5hC,EAAUnrB,EAAOggB,EAAY28B,GACtD,IAAIsQ,EAAqBC,GAAsB/hC,IAanD,SAASgiC,EAAsBhiC,EAAUkhB,GACrC,OAAOlhB,EAASiiC,IAAwB/gB;;;;;;;OAbpC8gB,CAAsBhiC,GAAYlkB,SAAU+T,GAAWqY,QAAS,OAChEA,EAAU45B,EAAmB55B,UAAY45B,EAAmB55B,YAC5DpsB,EAAWgmD,EAAmBhmD,SAC9BgZ,EAAehiB,KAAKoe,eAAe2D,GACnCqtC,EAAiBpmD,EAASgZ,GAC9BoT,EAAQpT,GAAgB,IAAIqsC,GAAae,GAAkBA,EAAenlB,aAAcloC,EAAOiH,IAAa+T,IAC5GmQ,EAASwxB,GAAe38C,EAE5B,IAAIotD,GAAuB,sBAC3B,SAASF,GAAsB/hC,GAC3B,OAAOA,EAASiiC,KAAyB,KAoB7C,SAASE,GAAyBT,GAmI9B,IAlIA,IAAIU,EARR,SAASC,EAAa/oD,GAClB,OAAOpG,OAAO2N,eAAevH,EAAK3F,WAAWD,YAO7B2uD,CAAaX,EAAWpoD,MACpCgpD,EAAU,WACV,IAAIj8B,EAAKlwB,EACLosD,OAAWvpD,EACf,GAAI8e,GAAe4pC,GAEfa,EAAWH,EAAU5zC,gBAAkB4zC,EAAU1zC,mBAEhD,CACD,GAAI0zC,EAAU5zC,eACV,MAAM,IAAI9V,MAAM,wCAGpB6pD,EAAWH,EAAU1zC,eAEzB,IAAI8zC,EAAUJ,EAAUpzC,UAGxB,GAAIwzC,GAAWD,EAAU,CACrB,IAAIE,EAAef,EACnBe,EAAahxC,OAASixC,GAAiBhB,EAAWjwC,QAClDgxC,EAAavxC,eAAiBwxC,GAAiBhB,EAAWxwC,gBAC1DuxC,EAAa/wC,QAAUgxC,GAAiBhB,EAAWhwC,SAQvD,GANI8wC,IAEA7pD,EAAe+oD,EAAWjwC,OAAQ+wC,EAAQ/wC,QAC1C9Y,EAAe+oD,EAAWxwC,eAAgBsxC,EAAQtxC,gBAClDvY,EAAe+oD,EAAWhwC,QAAS8wC,EAAQ9wC,UAE3C6wC,EAAU,CAEV,IAAII,EAAqBjB,EAAWnwC,aAChCqxC,EAAsBL,EAAShxC,aAanC,GAZIqxC,IAEIlB,EAAWnwC,aADXoxC,EAC0B,SAAUE,EAAIC,EAAKvK,GACzCqK,EAAoBC,EAAIC,EAAKvK,GAC7BoK,EAAmBE,EAAIC,EAAKvK,IAINqK,GAI9B9qC,GAAe4pC,IAAe5pC,GAAeyqC,GAAW,CACxD,IAAIQ,EAAkBrB,EAAWzuC,UAC7B+vC,EAAmBT,EAAStvC,UAC5B+vC,IAEItB,EAAWzuC,UADX8vC,EACuB,SAAUF,EAAIC,GACjCE,EAAiBH,EAAIC,GACrBC,EAAgBF,EAAIC,IAIDE,GAKnC,IAAIC,EAAuBvB,EAAWlwC,eAClC0xC,EAAwBX,EAAS/wC,eACjC0xC,IAEIxB,EAAWlwC,eADXyxC,EAC4B,SAAUJ,EAAIC,EAAK/pC,GAC3CmqC,EAAsBL,EAAIC,EAAK/pC,GAC/BkqC,EAAqBJ,EAAIC,EAAK/pC,IAINmqC,GAIpCvqD,EAAe+oD,EAAWjwC,OAAQ8wC,EAAS9wC,QAC3C9Y,EAAe+oD,EAAWxwC,eAAgBqxC,EAASrxC,gBACnDvY,EAAe+oD,EAAWhwC,QAAS6wC,EAAS7wC,SAG5CgwC,EAAWvvC,oBACPuvC,EAAWvvC,qBAAuBowC,EAASpwC,oBAC/CuvC,EAAWzvC,iBAAmByvC,EAAWzvC,kBAAoBswC,EAAStwC,iBACtEyvC,EAAWnvC,iBAAmBmvC,EAAWnvC,kBAAoBgwC,EAAShwC,iBACtEmvC,EAAWrvC,cAAgBqvC,EAAWrvC,eAAiBkwC,EAASlwC,cAChEqvC,EAAW3vC,QAAU2vC,EAAW3vC,SAAWwwC,EAASxwC,QACpD2vC,EAAWjvC,UAAYivC,EAAWjvC,WAAa8vC,EAAS9vC,UACxDivC,EAAW7vC,OAAS6vC,EAAW7vC,QAAU0wC,EAAS1wC,OAElD,IAAIqB,EAAWqvC,EAASrvC,SACxB,GAAIA,EACA,IACI,IAAK,IAAIiwC,EAAa5uD,EAAS2e,GAAWkwC,EAAeD,EAAWvuD,QAASwuD,EAAatuD,KAAMsuD,EAAeD,EAAWvuD,OAAQ,CAC9H,IAAIgf,EAAUwvC,EAAavuD,MACvB+e,GAAWA,EAAQ6tC,WACnB7tC,EAAQ8tC,IAIpB,MAAOl7B,GAASH,GAAQjxB,MAAOoxB,GAC/B,QACI,IACQ48B,IAAiBA,EAAatuD,OAASqB,EAAKgtD,EAAW18B,SAAStwB,EAAG9B,KAAK8uD,GAEhF,QAAU,GAAI98B,EAAK,MAAMA,EAAIjxB,YAIpC,CAED,IAAIiuD,EAAiBjB,EAAUzuD,UAC3B0vD,IACA3B,EAAWvvC,oBACPuvC,EAAWvvC,qBAAuBkxC,EAAejxC,sBACrDsvC,EAAWzvC,iBACPyvC,EAAWzvC,kBAAoBoxC,EAAenxC,mBAClDwvC,EAAWnvC,iBACPmvC,EAAWnvC,kBAAoB8wC,EAAe7wC,mBAClDkvC,EAAWrvC,cAAgBqvC,EAAWrvC,eAAiBgxC,EAAe/wC,gBACtEovC,EAAW3vC,QAAU2vC,EAAW3vC,SAAWsxC,EAAerxC,UAC1D0vC,EAAWjvC,UAAYivC,EAAWjvC,WAAa4wC,EAAe3wC,YAC9DgvC,EAAW7vC,OAAS6vC,EAAW7vC,QAAUwxC,EAAevxC,SACpDuxC,EAAe1B,aACfJ,IAAAA,CAAqBG,IAIjCU,EAAYlvD,OAAO2N,eAAeuhD,IAE/BA,GACHE,IAGR,SAASI,GAAiB7tD,GACtB,OAAIA,IAAUgb,MAGLhb,IAAUib,MAIRjb;;;;;;;OAgBf,IAAIyuD,GAAW,IAAIrgD,GAAe,4EAY9BsgD,MAQAC,MACAC,MAIAC,QAAkB1qD;;;;;;;OACtB,SAAS2qD,KAIL,YAHwB3qD,IAApB0qD,KACAA,GAAkB,IAAIlgD,IAEnBkgD,GAOX,SAASE,GAAeC,EAASngD,EAAQogD,EAAqBnuD,GAI1D,YAHe,IAAX+N,IAAqBA,EAAS,WACN,IAAxBogD,IAAkCA,EAAsB,MAC5DpgD,EAASA,GAAUigD,KACZ,IAAII,GAAWF,EAASC,EAAqBpgD,EAAQ/N,GAEhE,IAAIouD,GAA4B,WAC5B,SAASA,EAAW/mD,EAAK8mD,EAAqBpgD,EAAQ9K,QACnC,IAAXA,IAAqBA,EAAS,MAClC,IAAIiU,EAAQ/Z,KACZA,KAAK4Q,OAASA,EAId5Q,KAAK0R,QAAU,IAAIE,IAInB5R,KAAKkxD,iBAAmB,IAAI70C,IAI5Brc,KAAK2f,UAAY,IAAItD,IACrBrc,KAAKmxD,YAAa,EAGlB,IAAIC,KACJC,IAAannD,GAAM,SAAUonD,GAAe,OAAOv3C,EAAMw3C,oBAAoBD,KAAiBF,KAC9FJ,GAAuBK,GAAYL,EAAqB,SAAUh/C,GAAY,OAAO+H,EAAMy3C,gBAAgBx/C,EAAU9H,EAAK8mD,KAE1HhxD,KAAK0R,QAAQG,IAAIpB,GAAUghD,QAAWvrD,EAAWlG,OAGjDA,KAAK0xD,eAAiB1xD,KAAK0R,QAAQgE,IAAI86C,IAEvCxwD,KAAKkxD,iBAAiBxkD,QAAQ,SAAUqkD,GAAW,OAAOh3C,EAAMzQ,IAAIynD,KAEpE/wD,KAAK8F,OAASA,IAAWoE,aAAe3J,MAAQ,KAAOuG,EAAUoD,IA2NrE,OAzNA9J,OAAOwD,eAAeqtD,EAAWpwD,UAAW,aAIxCyI,IAAK,WAAc,OAAOtJ,KAAKmxD,YAC/B77C,YAAY,EACZC,cAAc,IAQlB07C,EAAWpwD,UAAU+iC,QAAU,WAC3B5jC,KAAK2xD,qBAEL3xD,KAAKmxD,YAAa,EAClB,IAEInxD,KAAK2f,UAAUjT,QAAQ,SAAUklD,GAAW,OAAOA,EAAQhyC,gBAE/D,QAEI5f,KAAK0R,QAAQkL,QACb5c,KAAK2f,UAAU/C,QACf5c,KAAKkxD,iBAAiBt0C,UAG9Bq0C,EAAWpwD,UAAUyI,IAAM,SAAUpE,EAAOqE,EAAeL,QACjC,IAAlBK,IAA4BA,EAAgBoH,GAASH,yBAC3C,IAAVtH,IAAoBA,EAAQ5J,EAAQ0F,YAAYmE,SACpDnJ,KAAK2xD,qBAEL,IAAIE,EAAmBlpD,EAAmB3I,MAC1C,IAEI,KAAMkJ,EAAQ5J,EAAQ0F,YAAYK,UAAW,CAEzC,IAAIoN,EAASzS,KAAK0R,QAAQpI,IAAIpE,GAC9B,QAAegB,IAAXuM,EAAsB,CAGtB,IAAIvI,EA0RxB,SAAS4nD,EAAsB/vD,GAC3B,MAAyB,mBAAVA,GACO,iBAAVA,GAAsBA,aAAiBoO;;;;;;;OA5RzB2hD,CAAsB5sD,IAAUqB,EAAiBrB,GACvDgF,GAAOlK,KAAK+xD,qBAAqB7nD,KAGjCuI,EAASg/C,GAAWO,GAAkC9sD,GAAQurD,IAC9DzwD,KAAK0R,QAAQG,IAAI3M,EAAOuN,IAIhC,QAAevM,IAAXuM,EACA,OAAOzS,KAAKiyD,QAAQ/sD,EAAOuN,GAMnC,OADqBvJ,EAAQ5J,EAAQ0F,YAAYI,KAAsByrD,KAAd7wD,KAAK4Q,QAC1CtH,IAAIpE,EAAOgE,EAAQ5J,EAAQ0F,YAAYG,SAAW,KAAOoE,GAEjF,MAAOpH,GACH,GAAe,sBAAXA,EAAEU,KAA8B,CAGhC,IAFWV,EAAEmP,IAAsBnP,EAAEmP,SAChCvM,QAAQ+B,EAAU5B,IACnB2sD,EAEA,MAAM1vD,EAIN,OAAO4Q,GAAmB5Q,EAAG+C,EAAO,kBAAmBlF,KAAK8F,QAIhE,MAAM3D,EAGd,QAEIwG,EAAmBkpD,KAG3BZ,EAAWpwD,UAAU8wD,mBAAqB,WACtC,GAAI3xD,KAAKmxD,WACL,MAAM,IAAIvrD,MAAM,yCAOxBqrD,EAAWpwD,UAAU0wD,oBAAsB,SAAUW,EAAiBC,EAASf,GAC3E,IAAIr3C,EAAQ/Z,KAEZ,GADAkyD,EAAkBxqD,EAAkBwqD,GACpC,CAMA,IAAIhoD,EAAMxD,EAAewrD,GAErBE,EAAmB,MAAPloD,GAAgBgoD,EAAgBE,eAAYlsD,EAIxD6qD,OAAwB7qD,IAAbksD,EAA0BF,EAAkBE,EAOvDC,GAA+C,IAAjCjB,EAAW/pD,QAAQ0pD,GAGjC1qD,OAA0BH,IAAbksD,GAA2BF,EAAgB7rD,WACxDsqD,GAOJ,QAJiBzqD,IAAbksD,IACAloD,EAAMxD,EAAe0rD,IAGd,MAAPloD,EAAJ,CAQA,GAJAlK,KAAKkxD,iBAAiBviB,IAAIoiB,GAC1B/wD,KAAK0R,QAAQG,IAAIk/C,EAASU,GAAWvnD,EAAI7K,QAASoxD,KAG/B,MAAfvmD,EAAI5D,UAAoB+rD,EAAa,CAKrCjB,EAAW/uD,KAAK0uD,GAChB,IACIM,GAAYnnD,EAAI5D,QAAS,SAAUgsD,GAAY,OAAOv4C,EAAMw3C,oBAAoBe,EAAUH,EAASf,KAEvG,UAMJ,IAAImB,EAAeroD,EAAI7D,UACvB,GAAoB,MAAhBksD,IAAyBF,EAAa,CACtC,IAAIG,EAAiBN,EACrBb,GAAYkB,EAAc,SAAUvgD,GAAY,OAAO+H,EAAMy3C,gBAAgBx/C,EAAUwgD,EAAgBD,KAG3G,IAAIE,EAAeP,EAAgBE,SACnCf,GAAYhrD,EAAW,SAAU2L,GAAY,OAAO+H,EAAMy3C,gBAAgBx/C,EAAUygD,EAAcpsD,QAKtG4qD,EAAWpwD,UAAU2wD,gBAAkB,SAAUx/C,EAAUygD,EAAcpsD,GAIrE,IAAInB,EAAQwtD,GADZ1gD,EAAWtK,EAAkBsK,IACUA,EAAWtK,EAAkBsK,GAAYA,EAASjD,SAErF0D,EA2EZ,SAASkgD,EAAiB3gD,EAAUygD,EAAcpsD,GAC9C,IAAIhH,EAAUuzD,GAAkB5gD,EAAUygD,EAAcpsD,GACxD,OAAIwsD,GAAgB7gD,GACTy/C,QAAWvrD,EAAW8L,EAAS/C,UAG/BwiD,GAAWpyD,EAASoxD,IAjFdkC,CAAiB3gD,EAAUygD,EAAcpsD,GACtD,GAAKqsD,GAAe1gD,KAAgC,IAAnBA,EAASM,MAkBrC,CACD,IAAI6F,EAAWnY,KAAK0R,QAAQpI,IAAIpE,GAChC,GAAIiT,QAA+BjS,IAAnBiS,EAAS7F,MACrB,MAAM,IAAI1M,MAAM,4BAA8BkB,EAAU5B,QArBN,CAGtD,IAAI4tD,EAAgB9yD,KAAK0R,QAAQpI,IAAIpE,GACrC,GAAI4tD,GAEA,QAA4B5sD,IAAxB4sD,EAAcxgD,MACd,MAAM,IAAI1M,MAAM,4BAA8BV,EAAQ,UAI1D4tD,EAAgBrB,QAAWvrD,EAAWuqD,IAAS,IACjCpxD,QAAU,WAAc,OAAOoK,EAAWqpD,EAAcxgD,QACtEtS,KAAK0R,QAAQG,IAAI3M,EAAO4tD,GAE5B5tD,EAAQ8M,EACR8gD,EAAcxgD,MAAMjQ,KAAK2P,GAQ7BhS,KAAK0R,QAAQG,IAAI3M,EAAOuN,IAE5Bw+C,EAAWpwD,UAAUoxD,QAAU,SAAU/sD,EAAOuN,GAC5C,GAAIA,EAAO1Q,QAAU2uD,GACjB,MAAM,IAAI9qD,MAAM,yCAA2CkB,EAAU5B,IASzE,OAPSuN,EAAO1Q,QAAU0uD,KACtBh+C,EAAO1Q,MAAQ2uD,GACfj+C,EAAO1Q,MAAQ0Q,EAAOpT,WAEE,iBAAjBoT,EAAO1Q,OAAsB0Q,EAAO1Q,OAwHvD,SAASgxD,EAAahxD,GAClB,OAAiB,OAAVA,GAAmC,iBAAVA,GACC,mBAAtBA,EAAM6d,YA1H2CmzC,CAAatgD,EAAO1Q,QACxE/B,KAAK2f,UAAUgvB,IAAIl8B,EAAO1Q,OAEvB0Q,EAAO1Q,OAElBkvD,EAAWpwD,UAAUkxD,qBAAuB,SAAU7nD,GAClD,QAAKA,EAAIjE,aAG0B,iBAAnBiE,EAAIjE,WACU,QAAnBiE,EAAIjE,YAA4C,SAAnBiE,EAAIjE,YAAyBjG,KAAK0xD,eAG/D1xD,KAAKkxD,iBAAiBx7C,IAAIxL,EAAIjE,cAGtCgrD,EA1PoB,GA4P/B,SAASe,GAAkC9sD,GACvC,IAAIsE,EAAgBjD,EAAiBrB,GACrC,GAAsB,OAAlBsE,EAAwB,CACxB,IAAI8nD,EAAc5qD,EAAexB,GACjC,GAAoB,OAAhBosD,EACA,OAAOA,EAAYjyD,QAElB,GAAI6F,aAAiBiL,GACtB,MAAM,IAAIvK,MAAM,SAAWkB,EAAU5B,GAAS,8CAE7C,GAAIA,aAAiBkF,SAAU,CAChC,IAAI4oD,EAAc9tD,EAAM5D,OACxB,GAAI0xD,EAAc,EAAG,CACjB,IAAI1vD,EAAO,IAAI/C,MAAMyyD,GAAalnD,KAAK,KACvC,MAAM,IAAIlG,MAAM,oCAAsCkB,EAAU5B,GAAS,MAAQ5B,EAAK0D,KAAK,MAAQ,MAEvG,OAAO,WAAc,OAAO,IAAI9B,GAEpC,MAAM,IAAIU,MAAM,eAEpB,OAAO4D,EAAcnK,QAgBzB,SAASuzD,GAAkB5gD,EAAUygD,EAAcpsD,GAC/C,IAAIhH,OAAU6G,EACd,GAAIwsD,GAAe1gD,GACf,OAAOggD,GAAkCtqD,EAAkBsK,IAG3D,GAAI6gD,GAAgB7gD,GAChB3S,EAAU,WAAc,OAAOqI,EAAkBsK,EAAS/C,gBAEzD,GA0Cb,SAASgkD,EAAmBlxD,GACxB,SAAUA,IAASA,EAAMyN,aA3CZyjD,CAAmBjhD,GACxB3S,EAAU,WAAc,OAAO4J,EAAOvB,EAAkBsK,EAASxC,oBAEhE,GA0Cb,SAAS0jD,EAAkBnxD,GACvB,SAAUA,IAASA,EAAMuN,YA3CZ4jD,CAAkBlhD,GACvB3S,EAAU,WAAc,OAAO2S,EAAS1C,WAAW9N,MAAMwQ,EAAUzP,EAASkH,EAAWuI,EAAS7D,iBAE/F,CACD,IAAIglD,EAAazrD,EAAkBsK,IAC9BA,EAAS7C,UAAY6C,EAASjD,UACnC,IAAKokD,EAAY,CACb,IAAIC,EAAiB,GAMrB,MALIX,GAAgBpsD,IAEhB+sD,EACI,6DAFiB/sD,EAAUU,IAAI,SAAUuD,GAAK,OAAOA,GAAK0H,EAAW,IAAMA,EAAW,IAAM,QAEdhL,KAAK,MAAQ,KAE7F,IAAIpB,MAAM,sCAAwCkB,EAAU2rD,GAAgB,IAAMW,GAE5F,IAoCZ,SAASC,EAAQtxD,GACb,QAASA,EAAMoM,KArCHklD,CAAQrhD,GAIR,OAAOggD,GAAkCmB,GAHzC9zD,EAAU,WAAc,OAAO,IAAK,EAAaoE,KAAKjC,MAAM,EAAce,QAAU,GAASkH,EAAWuI,EAAS7D,UAO7H,OAAO9O,EAEX,SAASoyD,GAAWpyD,EAAS0C,EAAOuQ,GAEhC,YADc,IAAVA,IAAoBA,GAAQ,IAE5BjT,QAASA,EACT0C,MAAOA,EACPuQ,MAAOA,UAAapM,GAG5B,SAASmrD,GAAY7kB,EAAO7kC,GACxB6kC,EAAM9/B,QAAQ,SAAU3K,GAAS,OAAOxB,MAAMqJ,QAAQ7H,GAASsvD,GAAYtvD,EAAO4F,GAAMA,EAAG5F,KAE/F,SAAS8wD,GAAgB9wD,GACrB,OAAiB,OAAVA,GAAkC,iBAATA,GAAqBqP,MAAerP,EAQxE,SAAS2wD,GAAe3wD,GACpB,MAAwB,mBAAVA,EAwDlB,SAASuxD,GAAkBthD,EAAU+b,EAAcwlC,EAAuBC,EAAgB7tC,GAEtF,GADA3T,EAAWtK,EAAkBsK,GACzBzR,MAAMqJ,QAAQoI,GAId,IAAK,IAAI7Q,EAAI,EAAGA,EAAI6Q,EAAS1Q,OAAQH,IACjCmyD,GAAkBthD,EAAS7Q,GAAI4sB,EAAcwlC,EAAuBC,EAAgB7tC,OAGvF,CACD,IAAItB,EAAQ+D,KACRljB,EAAQwtD,GAAe1gD,GAAYA,EAAWtK,EAAkBsK,EAASjD,SACzE0kD,EAAkBb,GAAkB5gD,GACpCuS,EAAQiE,KACRkrC,EAAqC,MAAxBnvC,EAAMuJ,gBACnBK,EAAW5J,EAAMiC,eACjB0H,EAAwB3J,EAAMuJ,iBAAmB,GACrD,GAxER,SAAS6lC,EAAgB5xD,GACrB,QAASA,EAAMoN,SAuEPwkD,CAAgB3hD,IAAa0gD,GAAe1gD,GAAW,CACvD,IACI4N,GADa5N,EAAS7C,UAAY6C,GAAUnR,UACpB+e,YAC5B,GAAIA,EAAa,CACb,IAAIuG,EAAQ9B,EAAM3B,KACjByD,EAAMY,eAAiBZ,EAAMY,kBAAoB1kB,KAAK0rB,EAAazsB,OAAQse,IAGpF,GAAI8yC,GAAe1gD,KAAcA,EAASM,MAAO,CAE7C,IAAIjT,EAAU,IAAIgmB,GAAoBouC,EAAiB9tC,EAAgB4lC,IACnEqI,EAAuBvsD,GAAQnC,EAAO6oB,EAAcpI,EAAiB+tC,EAAaA,EAAaxlC,EAAuBC,IAC7F,GAAzBylC,GACA7nC,GAAmBZ,GAA+B5G,EAAOF,GAAQA,EAAOnf,GACxE6oB,EAAa1rB,KAAK6C,GAClBqf,EAAMiC,iBACNjC,EAAMmC,eACFf,IACApB,EAAMuJ,iBAAmB,OAE7BylC,EAAsBlxD,KAAKhD,GAC3BglB,EAAMhiB,KAAKhD,KAGXk0D,EAAsBK,GAAwBv0D,EAC9CglB,EAAMuvC,GAAwBv0D,OAGjC,CAqBD,IAAIw0D,EAAgCxsD,GAAQnC,EAAO6oB,EAAc2lC,EAAaxlC,EAAuBC,GACjG2lC,EAAoCzsD,GAAQnC,EAAO6oB,EAAc2lC,EAAYA,EAAaxlC,GAG1F6lC,EAAgCD,GAAqC,GACrEP,EAAsBO,GACtBnuC,IAAmBouC,IAClBpuC,KAL2BkuC,GAAiC,GAC7DN,EAAsBM,KAMtB9nC,GAAmBZ,GAA+B5G,EAAOF,GAAQA,EAAOnf,GACpE7F,EAwFpB,SAAS20D,EAAal9C,EAAWvS,EAAOohB,EAAgB6tC,EAAgBS,GACpE,IAAI50D,EAAU,IAAIgmB,GAAoBvO,EAAW6O,EAAgB4lC,IAKjE,OAJAlsD,EAAQiT,SACRjT,EAAQkF,MAAQA,EAChBlF,EAAQ60D,mBAAqB,EAC7BC,GAAgB90D,EAAS40D,EAAGT,IAAmB7tC,GACxCtmB,EA9FmB20D,CAAaruC,EAAiByuC,GAAoCC,GAA+Bd,EAAsBjyD,OAAQqkB,EAAgB6tC,EAAgBC,IACxK9tC,GAAkBouC,IACnBR,EAAsBO,GAAmCL,gBAAkBp0D,GAE/E0uB,EAAa1rB,KAAK6C,GAClBqf,EAAMiC,iBACNjC,EAAMmC,eACFf,IACApB,EAAMuJ,iBAAmB,OAE7BylC,EAAsBlxD,KAAKhD,GAC3BglB,EAAMhiB,KAAKhD,IAIX80D,GAAgBZ,EAAsB5tC,EAAiBmuC,EAAoCD,GAAgCJ,GAAkB9tC,GAAkB6tC,IAE9J7tC,GAAkB6tC,GAAkBO,GACrCR,EAAsBO,GAAmCI,uBAQzE,SAASC,GAAgBH,EAAc30D,EAASi1D,GAC5CN,EAAa1hD,MAAMjQ,KAAKhD,GACpBi1D,GACAN,EAAaE,qBAMrB,SAAS7sD,GAAQ+qB,EAAM5K,EAAKgwB,EAAO/wB,GAC/B,IAAK,IAAItlB,EAAIq2C,EAAOr2C,EAAIslB,EAAKtlB,IACzB,GAAIqmB,EAAIrmB,KAAOixB,EACX,OAAOjxB,EAEf,OAAQ,EAKZ,SAASkzD,GAA8B7zC,EAAG8L,EAAOgC,EAAO/J,GACpD,OAAOgwC,GAAav0D,KAAKsS,UAO7B,SAAS8hD,GAAkC5zC,EAAG8L,EAAOgC,EAAO/J,GACxD,IACItZ,EADAupD,EAAYx0D,KAAKsS,MAErB,GAAItS,KAAKyzD,gBAAiB,CACtB,IAAIgB,EAAiBz0D,KAAKyzD,gBAAgBS,mBACtCQ,EAAiBhnC,GAAkBpB,EAAOgC,EAAOtuB,KAAKyzD,gBAAgBlvD,MAAOggB,GAIjFgwC,GAAaC,EAFbvpD,EAASypD,EAAevjD,MAAM,EAAGsjD,IAIjC,IAAK,IAAItzD,EAAIszD,EAAgBtzD,EAAIuzD,EAAepzD,OAAQH,IACpD8J,EAAO5I,KAAKqyD,EAAevzD,SAM/BozD,GAAaC,EAFbvpD,MAIJ,OAAOA,EAKX,SAASspD,GAAaC,EAAWvpD,GAC7B,IAAK,IAAI9J,EAAI,EAAGA,EAAIqzD,EAAUlzD,OAAQH,IAElC8J,EAAO5I,MAAKhD,EADEm1D,EAAUrzD,OAG5B,OAAO8J,EA0CX,SAAS0pD,GAAiBtuD,EAAWuuD,GAEjC,YADsB,IAAlBA,IAA4BA,MACzB,SAAUhG,GACbA,EAAWvwC,kBAAoB,SAAUnU,GACrC,OA5NZ,SAASmU,EAAkBnU,EAAK7D,EAAWuuD,GACvC,IACIzuC,EADQiC,KACM1F,IAClB,GAAIyD,EAAMI,kBAAmB,CACzB,IAAIitC,EAAiBxuC,GAAe9a,GAEpCopD,GAAkBsB,EAAezuC,EAAMlL,KAAMkL,EAAMqF,UAAWgoC,GAAgB,GAE9EF,GAAkBjtD,EAAW8f,EAAMlL,KAAMkL,EAAMqF,UAAWgoC,GAAgB,IAoN/Dn1C,CAAkBnU,EAAK7D,EAAWuuD;;;;;;;OAmBrD,IAAIC,GACA,SAASA,OAOTC,GACA,SAASA;;;;;;;;AAYb,SAASC,GAAwBx4C,GAC7B,IAAIja,EAAQsD,MAAM,kCAAoCkB,EAAUyV,GAAa,kDAE7E,OADAja,EAAM0yD,IAAmBz4C,EAClBja,EAEX,IAwYI2yD,GAsBAC,GAsDAC,GApdAH,GAAkB,cAClBI,GAA+C,WAC/C,SAASA,KAKT,OAHAA,EAA8Bv0D,UAAUw0D,wBAA0B,SAAU94C,GACxE,MAAMw4C,GAAwBx4C,IAE3B64C,EANuC,GAW9CE,GAA0C,WAC1C,SAASA,KAGT,OADAA,EAAyBxkD,KAAO,IAAIskD,GAC7BE,EAJkC,GAMzCC,GAAiD,WACjD,SAASA,EAAgCf,EAAW57C,EAAS48C,GACzDx1D,KAAK4Y,QAAUA,EACf5Y,KAAKw1D,UAAYA,EACjBx1D,KAAKy1D,WAAa,IAAI7jD,IACtB,IAAK,IAAIzQ,EAAI,EAAGA,EAAIqzD,EAAUlzD,OAAQH,IAAK,CACvC,IAAI9B,EAAUm1D,EAAUrzD,GACxBnB,KAAKy1D,WAAW5jD,IAAIxS,EAAQq2D,cAAer2D,IAanD,OAVAk2D,EAAgC10D,UAAUw0D,wBAA0B,SAAU94C,GAC1E,IAAIld,EAAUW,KAAKy1D,WAAWnsD,IAAIiT,GAIlC,IAHKld,GAAWW,KAAK4Y,UACjBvZ,EAAUW,KAAK4Y,QAAQy8C,wBAAwB94C,KAE9Cld,EACD,MAAM01D,GAAwBx4C,GAElC,OAAO,IAAIo5C,GAA8Bt2D,EAASW,KAAKw1D,YAEpDD,EApByC,GAsBhDI,GAA+C,SAAUC,GAEzD,SAASD,EAA8Bt2D,EAAS+yD,GAC5C,IAAIr4C,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAQjC,OAPA+Z,EAAM1a,QAAUA,EAChB0a,EAAMq4C,SAAWA,EACjBr4C,EAAMiB,SAAW3b,EAAQ2b,SACzBjB,EAAM27C,cAAgBr2D,EAAQq2D,cAC9B37C,EAAMyE,mBAAqBnf,EAAQmf,mBACnCzE,EAAM4E,OAAStf,EAAQsf,OACvB5E,EAAM6E,QAAUvf,EAAQuf,QACjB7E,EAKX,OAfArZ,EAAUi1D,EAA+BC,GAYzCD,EAA8B90D,UAAUC,OAAS,SAAU8H,EAAUitD,EAAkBC,EAAoB1D,GACvG,OAAOpyD,KAAKX,QAAQyB,OAAO8H,EAAUitD,EAAkBC,EAAoB1D,GAAYpyD,KAAKoyD,WAEzFuD,EAhBuC,CAiBhDb,IAiBEiB,GACA,SAASA,OAOTC,GACA,SAASA,OAYTC,GAAyB,WACzB,SAASA,EAAQrnC,EAAQsnC,EAAUC,GAC/Bn2D,KAAKk2D,SAAWA,EAChBl2D,KAAKm2D,gBAAkBA,EACvBn2D,KAAKo2D,QAAU,KACfp2D,KAAKq2D,kBAAoB,KAIzBr2D,KAAKs2D,WAAa,KAClBt2D,KAAK4uB,OAASA,EAsOlB,OApOAxuB,OAAOwD,eAAeqyD,EAAQp1D,UAAW,aACrCyI,IAAK,WACD,OAAyB,MAArBtJ,KAAK4uB,OAAOnM,IAqP5B,SAAS8zC,EAAmBlyC,EAAOogB,EAAax5B,GAE5C,IADA,IAAIurD,EAAa/xB,EAAYrH,MACtBo5B,GAAY,CACf,IAAIC,EAAanyC,GAAiBkyC,EAAYnyC,GAE9C,GADAoyC,GAAcxrD,EAAO5I,KAAKo0D,GACF,IAApBD,EAAWhwD,KACX+vD,EAAmBlyC,EAAOmyC,EAAYvrD,QAErC,GAAwB,IAApBurD,EAAWhwD,KAKhB,IAJA,IAAIi7B,EAAgBlX,GAAkBlG,GAClCqyC,EAAgBj1B,EAAc1e,IAC9BsH,EAAaC,GAAemX,GAC5Bk1B,EAAuBD,EAAc/0B,WAAW60B,EAAW70B,YACxDg1B,GAAwBtsC,GAC3Bpf,EAAO5I,KAAKiiB,GAAiBqyC,EAAsBtsC,IACnDssC,EAAuBA,EAAqB70D,KAGpD00D,EAAaA,EAAW10D,KAE5B,OAAOmJ;;;;;;;OAvQYsrD,CAAmBv2D,KAAK4uB,OADnB5uB,KAAK4uB,OAAO7L,YAKhCzN,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeqyD,EAAQp1D,UAAW,WACrCyI,IAAK,WAAc,OAAOtJ,KAAKk2D,SAAWl2D,KAAKk2D,SAAWl2D,KAAK42D,kBAC/DthD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeqyD,EAAQp1D,UAAW,aACrCyI,IAAK,WACD,OAAsD,MAAzB,IAArBtJ,KAAK4uB,OAAOjM,MAExBrN,YAAY,EACZC,cAAc,IAElB0gD,EAAQp1D,UAAU+iC,QAAU,WACxB,GAAI5jC,KAAKo2D,QACLp2D,KAAKo2D,QAAQ5zB,WAAWxiC,WAEvB,GAAIA,KAAKq2D,kBAAmB,CAC7B,IAAI9xD,EAAQvE,KAAKq2D,kBAAkBhvD,QAAQrH,MACvCuE,GAAS,GACTvE,KAAKq2D,kBAAkBQ,OAAOtyD,GAElCvE,KAAKq2D,kBAAoB,KAE7BzzB,GAAa5iC,KAAK4uB,SAEtBqnC,EAAQp1D,UAAU8e,UAAY,SAAUytC,IA1hH5C,SAAS0J,EAAepyC,EAAMif,GAC1ByY,GAAW13B,GAAMriB,KAAKshC,GAClBjf,EAAKhC,IAAO6D,mBACZslC,GAAgBnnC,GAAMriB,KAAKqiB,EAAKzB,IAAS3hB,OAAS,EAAG,MAuhHLw1D,CAAe92D,KAAK4uB,OAAQw+B,IAmChF6I,EAAQp1D,UAAUk2D,aAAe,WAAczO,GAActoD,KAAK4uB,SAsDlEqnC,EAAQp1D,UAAUg2D,OAAS,WAAc72D,KAAK4uB,OAAOjM,MAAU,KAyD/DszC,EAAQp1D,UAAUm2D,SAAW,WAAch3D,KAAK4uB,OAAOjM,KAAU,KAsBjEszC,EAAQp1D,UAAUo2D,cAAgB,WAAclO,GAAsB/oD,KAAK4uB,OAAQ5uB,KAAKyT,UAOxFwiD,EAAQp1D,UAAUq2D,eAAiB,YAzsEvC,SAASC,EAAuBzyC,EAAMjR,GAClCsV,IAAsB,GACtB,IACIggC,GAAsBrkC,EAAMjR,GAEhC,QACIsV,IAAsB,IAmsEuBouC,CAAuBn3D,KAAK4uB,OAAQ5uB,KAAKyT,UAC1FwiD,EAAQp1D,UAAUu2D,yBAA2B,SAAUC,GACnD,GAAIr3D,KAAKo2D,QACL,MAAM,IAAIxwD,MAAM,iEAEpB5F,KAAKq2D,kBAAoBgB,GAE7BpB,EAAQp1D,UAAUy2D,iBAAmB,WAAct3D,KAAKo2D,QAAU,MAClEH,EAAQp1D,UAAU02D,eAAiB,SAAUC,GACzC,GAAIx3D,KAAKq2D,kBACL,MAAM,IAAIzwD,MAAM,qDAEpB5F,KAAKo2D,QAAUoB,GAEnBvB,EAAQp1D,UAAU+1D,eAAiB,WAC/B,OAAO52D,KAAKk2D,SAAW5rC,GAAetqB,KAAK4uB,QAAQ5uB,KAAKm2D,kBAErDF,EAhPiB,GAmPxBwB,GAA6B,SAAU7B,GAEvC,SAAS6B,EAAYC,GACjB,IAAI39C,EAAQ67C,EAAOr0D,KAAKvB,KAAM03D,EAAO,MAAO,IAAM13D,KAElD,OADA+Z,EAAM29C,MAAQA,EACP39C,EASX,OAbArZ,EAAU+2D,EAAa7B,GAMvB6B,EAAY52D,UAAUo2D,cAAgB,WAAcjO,GAAwBhpD,KAAK03D,QACjFD,EAAY52D,UAAUq2D,eAAiB,YAntE3C,SAASS,EAAyBtzC,GAC9B0E,IAAsB,GACtB,IACIigC,GAAwB3kC,GAE5B,QACI0E,IAAsB,IA6sE2B4uC,CAAyB33D,KAAK03D,QACnFt3D,OAAOwD,eAAe6zD,EAAY52D,UAAW,WACzCyI,IAAK,WAAc,OAAO,MAC1BgM,YAAY,EACZC,cAAc,IAEXkiD,EAdqB,CAe9BxB,IAgDF,SAAS2B,GAAiBC,EAAiBtzC,EAAOG,GAW9C,OAVKuwC,KAEDA,GAA8B,SAAUW,GAEpC,SAASkC,IACL,OAAkB,OAAXlC,GAAmBA,EAAOp0D,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUo3D,EAAalC,GAIhBkC,EALkB,CAM3BD,IAEC,IAAI5C,GAAa3wC,GAAiBC,EAAOG,IAoBpD,SAASqzC,GAAkBC,EAAkBH,EAAiBpuC,EAAWjF,GA2BrE,GA1BK0wC,KAEDA,GAA+B,SAAUU,GAErC,SAASqC,EAAaC,EAAwBC,EAAYC,EAAQC,EAAiBC,GAC/E,IAAIv+C,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAMjC,OALA+Z,EAAMm+C,uBAAyBA,EAC/Bn+C,EAAMo+C,WAAaA,EACnBp+C,EAAMq+C,OAASA,EACfr+C,EAAMs+C,gBAAkBA,EACxBt+C,EAAMu+C,eAAiBA,EAChBv+C,EAYX,OApBArZ,EAAUu3D,EAAcrC,GAUxBqC,EAAap3D,UAAU03D,mBAAqB,SAAU9kD,EAAS+kD,EAAcj0D,GACzE,IAAI8f,EAv8IpB,SAASo0C,EAA0BtyC,EAAO1S,EAASisB,EAAiBC,EAASrU,GACzE,IAAIorB,EAAY/tB,KACZguB,EAAyBnuB,KAC7BI,IAAY,GACZH,GAAyB,MACzB,IAAIpE,EAAQ8xB,GAAYzW,EAAiBvZ,EAAO1S,EAAS,GAAsB,KAAM,MAWrF,OAVA4Q,EAAMX,IAAoBgc,EACtBC,IACAtb,EAAMvB,IAAW6c,EAAQ4nB,cAE7BhR,GAAuBpwB,EAAO,MAAO,EAAG9B,GACpC8B,EAAMI,oBACNJ,EAAMgQ,KAAK7K,cAAgBA,GAE/B1C,GAAY8tB,GACZjuB,GAAyBkuB,GAClBtyB,EAu7IiBo0C,CAA0Bz4D,KAAKo4D,OAAQ3kD,EAASzT,KAAKk4D,uBAAwBl4D,KAAKq4D,gBAAgBv1C,IAAU9iB,KAAKs4D,gBACzHE,GACAn2B,GAAWhe,EAAOm0C,EAAcj0D,GAEpC6wC,GAAuB/wB,EAAOrkB,KAAKo4D,OAAQ3kD,GAC3C,IAAIilD,EAAU,IAAIzC,GAAQ5xC,EAAO5Q,GAAU,GAE3C,OADAilD,EAAQpC,WAAajyC,EAAMtB,IACpB21C,GAEJT,EArBmB,CAsB5BD,IAEiB,IAAnBvuC,EAAUjjB,KAA4B,CACtC,IAAImyD,EAAgBn0C,EAASiF,EAAUllB,OAEvC,OAAO,IAAI2wD,GAAc1wC,EAAUozC,GAAiBC,EAAiBpuC,EAAWjF,GAAWiF,EAAUg1B,OAAQka,EAAelvC,EAAU6B,eAGtI,OAAO;;;;;;;;;;;;;;;AAkPf,IAoFWstC,GApFPC,GAA4B,WAC5B,SAASA,EAAWC,GAChB94D,KAAK84D,cAAgBA,EAOzB,OADAD,EAAWxoD,kBAAoB,WAAc,OAAO0oD,GAA2BF,IACxEA,EAToB,GAW3BG,GAzUJ,SAASC,GAAiBpB,GACtB,OAAOD,GAAiBC,EAAiBrvC,KAA4BJ,OAyUrE2wC,GAA6BC,GAa7BE,GACA,SAASA,GAAoBhkD,EAAIsH,EAAa28C,EAAW94C,EAAeE,EAAQ64C,GAC5Ep5D,KAAKkV,GAAKA,EACVlV,KAAKwc,YAAcA,EACnBxc,KAAKm5D,UAAYA,EACjBn5D,KAAKqgB,cAAgBA,EACrBrgB,KAAKugB,OAASA,EACdvgB,KAAKo5D,WAAaA,GAOtBC,GACA,SAASA,OAQTC,GACA,SAASA,OAoBTC,IAhBuB,IAAIppD,GAAe,wBAiB1C,SAASopD,QASTC,GACA,SAASA,QAIFZ,GASRt5D,EAAQs5D,sBAAwBt5D,EAAQs5D,yBALnBA,GAA+B,UAAI,GAAK,YAI5DA,GAAoBA,GAA8B,SAAI,GAAK,WAiB/D,IAyBIa,GAzBAC,GAA2B,WAC3B,SAASA,KAOT,OADAA,EAAUrpD,kBAAoB,WAAc,OAAOspD,MAC5CD,EARmB,GAU1BE,GAzJJ,SAASC,KACL,OAXJ,SAASC,EAAqBp1C,GAC1B,IAAI6a,EAAW7a,EAAKrB,IACpB,GAAI8c,GAAqBZ,GACrB,OAAOA,EAGP,MAAM,IAAI35B,MAAM,gEAKbk0D,CAAqB1xC,OAyJ5BuxC,GAA2BC,GA0B3BG,GAAU,IAZVN,GACA,SAASA,GAAQO,GACbh6D,KAAKg6D,KAAOA,EACZh6D,KAAKi6D,MAAQD,EAAK7mC,MAAM,KAAK,GAC7BnzB,KAAKk6D,MAAQF,EAAK7mC,MAAM,KAAK,GAC7BnzB,KAAKm6D,MAAQH,EAAK7mC,MAAM,KAAKhiB,MAAM,GAAGnK,KAAK,OAOzB,qBAStBozD,GAA8C,WAC9C,SAASA,KAMT,OAJAA,EAA6Bv5D,UAAUw5D,SAAW,SAAU/mD,GAAO,OAAO6mB,GAAqB7mB,IAC/F8mD,EAA6Bv5D,UAAUC,OAAS,SAAUw5D,GACtD,OAAO,IAAIC,GAAsBD,IAE9BF,EAPsC,GAS7CI,GAAkB,SAAUj2D,EAAO6tB,GAAQ,OAAOA,GAKlDmoC,GAAuC,WACvC,SAASA,EAAsBD,GAC3Bt6D,KAAKsB,OAAS,EAEdtB,KAAKy6D,eAAiB,KAEtBz6D,KAAK06D,iBAAmB,KACxB16D,KAAK26D,gBAAkB,KACvB36D,KAAK46D,QAAU,KACf56D,KAAK66D,QAAU,KACf76D,KAAK86D,eAAiB,KACtB96D,KAAK+6D,eAAiB,KACtB/6D,KAAKg7D,WAAa,KAClBh7D,KAAKi7D,WAAa,KAClBj7D,KAAKk7D,cAAgB,KACrBl7D,KAAKm7D,cAAgB,KAErBn7D,KAAKo7D,qBAAuB,KAC5Bp7D,KAAKq7D,qBAAuB,KAC5Br7D,KAAKs7D,WAAahB,GAAaE,GAwdnC,OAtdAD,EAAsB15D,UAAU06D,YAAc,SAAU5zD,GACpD,IAAI8K,EACJ,IAAKA,EAASzS,KAAK46D,QAAoB,OAAXnoD,EAAiBA,EAASA,EAAO+oD,MACzD7zD,EAAG8K,IAGX8nD,EAAsB15D,UAAU46D,iBAAmB,SAAU9zD,GAKzD,IAJA,IAAI+zD,EAAS17D,KAAK46D,QACde,EAAa37D,KAAKk7D,cAClBU,EAAkB,EAClBC,EAAc,KACXH,GAAUC,GAAY,CAGzB,IAAIlpD,GAAUkpD,GACVD,GACIA,EAAOI,aACHC,GAAiBJ,EAAYC,EAAiBC,GACtDH,EACAC,EACAK,EAAmBD,GAAiBtpD,EAAQmpD,EAAiBC,GAC7DC,EAAerpD,EAAOqpD,aAE1B,GAAIrpD,IAAWkpD,EACXC,IACAD,EAAaA,EAAWM,kBAIxB,GADAP,EAASA,EAAOF,MACY,MAAxB/oD,EAAOypD,cACPN,QAEC,CAEIC,IACDA,MACJ,IAAIM,EAAyBH,EAAmBJ,EAC5CQ,EAAoBN,EAAeF,EACvC,GAAIO,GAA0BC,EAAmB,CAC7C,IAAK,IAAIj7D,EAAI,EAAGA,EAAIg7D,EAAwBh7D,IAAK,CAC7C,IAAIorC,EAASprC,EAAI06D,EAAYv6D,OAASu6D,EAAY16D,GAAM06D,EAAY16D,GAAK,EACrEoD,EAAQgoC,EAASprC,EACjBi7D,GAAqB73D,GAASA,EAAQ43D,IACtCN,EAAY16D,GAAKorC,EAAS,GAIlCsvB,EADoBppD,EAAOypD,eACEE,EAAoBD,GAIzDH,IAAqBF,GACrBn0D,EAAG8K,EAAQupD,EAAkBF,KAIzCvB,EAAsB15D,UAAUw7D,oBAAsB,SAAU10D,GAC5D,IAAI8K,EACJ,IAAKA,EAASzS,KAAK26D,gBAA4B,OAAXloD,EAAiBA,EAASA,EAAO6pD,cACjE30D,EAAG8K,IAGX8nD,EAAsB15D,UAAU07D,iBAAmB,SAAU50D,GACzD,IAAI8K,EACJ,IAAKA,EAASzS,KAAK86D,eAA2B,OAAXroD,EAAiBA,EAASA,EAAO+pD,WAChE70D,EAAG8K,IAGX8nD,EAAsB15D,UAAU47D,iBAAmB,SAAU90D,GACzD,IAAI8K,EACJ,IAAKA,EAASzS,KAAKg7D,WAAuB,OAAXvoD,EAAiBA,EAASA,EAAOiqD,WAC5D/0D,EAAG8K,IAGX8nD,EAAsB15D,UAAU87D,mBAAqB,SAAUh1D,GAC3D,IAAI8K,EACJ,IAAKA,EAASzS,KAAKk7D,cAA0B,OAAXzoD,EAAiBA,EAASA,EAAOwpD,aAC/Dt0D,EAAG8K,IAGX8nD,EAAsB15D,UAAU+7D,sBAAwB,SAAUj1D,GAC9D,IAAI8K,EACJ,IAAKA,EAASzS,KAAKo7D,qBAAiC,OAAX3oD,EAAiBA,EAASA,EAAOoqD,oBACtEl1D,EAAG8K,IAGX8nD,EAAsB15D,UAAUi8D,KAAO,SAAUC,GAG7C,GAFkB,MAAdA,IACAA,OACC5iC,GAAqB4iC,GACtB,MAAM,IAAIn3D,MAAM,yBAA2BkB,EAAUi2D,GAAc,4CAEvE,OAAI/8D,KAAKg9D,MAAMD,GACJ/8D,KAGA,MAGfu6D,EAAsB15D,UAAU8e,UAAY,aAC5C46C,EAAsB15D,UAAUm8D,MAAQ,SAAUD,GAC9C,IAAIhjD,EAAQ/Z,KACZA,KAAKi9D,SACL,IAEI14D,EACA6tB,EACA8qC,EAJAzqD,EAASzS,KAAK46D,QACduC,GAAa,EAIjB,GAAI58D,MAAMqJ,QAAQmzD,GAAa,CAC3B/8D,KAAKsB,OAASy7D,EAAWz7D,OACzB,IAAK,IAAI87D,EAAU,EAAGA,EAAUp9D,KAAKsB,OAAQ87D,IAEzCF,EAAcl9D,KAAKs7D,WAAW8B,EAD9BhrC,EAAO2qC,EAAWK,IAEH,OAAX3qD,GAAoBqnB,GAAernB,EAAO4qD,UAAWH,IAKjDC,IAEA1qD,EAASzS,KAAKs9D,mBAAmB7qD,EAAQ2f,EAAM8qC,EAAaE,IAE3DtjC,GAAernB,EAAO2f,KAAMA,IAC7BpyB,KAAKu9D,mBAAmB9qD,EAAQ2f,KATpC3f,EAASzS,KAAKw9D,UAAU/qD,EAAQ2f,EAAM8qC,EAAaE,GACnDD,GAAa,GAUjB1qD,EAASA,EAAO+oD,WAIpBj3D,EAAQ,EArkRpB,SAASk5D,EAAkBnqD,EAAK3L,GAC5B,GAAIpH,MAAMqJ,QAAQ0J,GACd,IAAK,IAAInS,EAAI,EAAGA,EAAImS,EAAIhS,OAAQH,IAC5BwG,EAAG2L,EAAInS,SAMX,IAFA,IAAIU,EAAWyR,EAAIqmB,QACfvH,OAAO,IACDA,EAAOvwB,EAASC,QAAY,MAClC6F,EAAGyqB,EAAKrwB,OA4jRR07D,CAAkBV,EAAY,SAAU3qC,GACpC8qC,EAAcnjD,EAAMuhD,WAAW/2D,EAAO6tB,GACvB,OAAX3f,GAAoBqnB,GAAernB,EAAO4qD,UAAWH,IAKjDC,IAEA1qD,EAASsH,EAAMujD,mBAAmB7qD,EAAQ2f,EAAM8qC,EAAa34D,IAE5Du1B,GAAernB,EAAO2f,KAAMA,IAC7BrY,EAAMwjD,mBAAmB9qD,EAAQ2f,KATrC3f,EAASsH,EAAMyjD,UAAU/qD,EAAQ2f,EAAM8qC,EAAa34D,GACpD44D,GAAa,GAUjB1qD,EAASA,EAAO+oD,MAChBj3D,MAEJvE,KAAKsB,OAASiD,EAIlB,OAFAvE,KAAK09D,UAAUjrD,GACfzS,KAAK+8D,WAAaA,EACX/8D,KAAKivC,SAEhB7uC,OAAOwD,eAAe22D,EAAsB15D,UAAW,WAInDyI,IAAK,WACD,OAA+B,OAAxBtJ,KAAK86D,gBAA+C,OAApB96D,KAAKg7D,YACjB,OAAvBh7D,KAAKk7D,eAAwD,OAA9Bl7D,KAAKo7D,sBAE5C9lD,YAAY,EACZC,cAAc,IAUlBglD,EAAsB15D,UAAUo8D,OAAS,WACrC,GAAIj9D,KAAKivC,QAAS,CACd,IAAIx8B,OAAS,EACTkrD,OAAa,EACjB,IAAKlrD,EAASzS,KAAK26D,gBAAkB36D,KAAK46D,QAAoB,OAAXnoD,EAAiBA,EAASA,EAAO+oD,MAChF/oD,EAAO6pD,cAAgB7pD,EAAO+oD,MAElC,IAAK/oD,EAASzS,KAAK86D,eAA2B,OAAXroD,EAAiBA,EAASA,EAAO+pD,WAChE/pD,EAAOypD,cAAgBzpD,EAAOqpD,aAGlC,IADA97D,KAAK86D,eAAiB96D,KAAK+6D,eAAiB,KACvCtoD,EAASzS,KAAKg7D,WAAuB,OAAXvoD,EAAiBA,EAASkrD,EACrDlrD,EAAOypD,cAAgBzpD,EAAOqpD,aAC9B6B,EAAalrD,EAAOiqD,WAExB18D,KAAKg7D,WAAah7D,KAAKi7D,WAAa,KACpCj7D,KAAKk7D,cAAgBl7D,KAAKm7D,cAAgB,KAC1Cn7D,KAAKo7D,qBAAuBp7D,KAAKq7D,qBAAuB,OAehEd,EAAsB15D,UAAU28D,UAAY,SAAU/qD,EAAQ2f,EAAM8qC,EAAa34D,GAE7E,IAAIq5D,EAkCJ,OAjCe,OAAXnrD,EACAmrD,EAAiB59D,KAAK66D,SAGtB+C,EAAiBnrD,EAAOorD,MAExB79D,KAAK89D,QAAQrrD,IAIF,QADfA,EAAiC,OAAxBzS,KAAKy6D,eAA0B,KAAOz6D,KAAKy6D,eAAenxD,IAAI4zD,EAAa34D,KAI3Eu1B,GAAernB,EAAO2f,KAAMA,IAC7BpyB,KAAKu9D,mBAAmB9qD,EAAQ2f,GACpCpyB,KAAK+9D,WAAWtrD,EAAQmrD,EAAgBr5D,IAKzB,QADfkO,EAAmC,OAA1BzS,KAAK06D,iBAA4B,KAAO16D,KAAK06D,iBAAiBpxD,IAAI4zD,EAAa,QAI/EpjC,GAAernB,EAAO2f,KAAMA,IAC7BpyB,KAAKu9D,mBAAmB9qD,EAAQ2f,GACpCpyB,KAAKg+D,eAAevrD,EAAQmrD,EAAgBr5D,IAI5CkO,EACIzS,KAAKi+D,UAAU,IAAIC,GAAsB9rC,EAAM8qC,GAAcU,EAAgBr5D,GAGlFkO,GA6BX8nD,EAAsB15D,UAAUy8D,mBAAqB,SAAU7qD,EAAQ2f,EAAM8qC,EAAa34D,GACtF,IAAI45D,EAA2C,OAA1Bn+D,KAAK06D,iBAA4B,KAAO16D,KAAK06D,iBAAiBpxD,IAAI4zD,EAAa,MAQpG,OAPuB,OAAnBiB,EACA1rD,EAASzS,KAAKg+D,eAAeG,EAAgB1rD,EAAOorD,MAAOt5D,GAEtDkO,EAAOqpD,cAAgBv3D,IAC5BkO,EAAOqpD,aAAev3D,EACtBvE,KAAKo+D,YAAY3rD,EAAQlO,IAEtBkO,GASX8nD,EAAsB15D,UAAU68D,UAAY,SAAUjrD,GAElD,KAAkB,OAAXA,GAAiB,CACpB,IAAIkrD,EAAalrD,EAAO+oD,MACxBx7D,KAAKq+D,eAAer+D,KAAKs+D,QAAQ7rD,IACjCA,EAASkrD,EAEiB,OAA1B39D,KAAK06D,kBACL16D,KAAK06D,iBAAiB99C,QAEE,OAAxB5c,KAAK+6D,iBACL/6D,KAAK+6D,eAAeyB,WAAa,MAEb,OAApBx8D,KAAKi7D,aACLj7D,KAAKi7D,WAAWyB,WAAa,MAEZ,OAAjB18D,KAAK66D,UACL76D,KAAK66D,QAAQW,MAAQ,MAEE,OAAvBx7D,KAAKm7D,gBACLn7D,KAAKm7D,cAAcc,aAAe,MAEJ,OAA9Bj8D,KAAKq7D,uBACLr7D,KAAKq7D,qBAAqBwB,oBAAsB,OAIxDtC,EAAsB15D,UAAUm9D,eAAiB,SAAUvrD,EAAQ8rD,EAAYh6D,GAC7C,OAA1BvE,KAAK06D,kBACL16D,KAAK06D,iBAAiB5rB,OAAOr8B,GAEjC,IAAI+rD,EAAO/rD,EAAOgsD,aACd38D,EAAO2Q,EAAOwpD,aAelB,OAda,OAATuC,EACAx+D,KAAKk7D,cAAgBp5D,EAGrB08D,EAAKvC,aAAen6D,EAEX,OAATA,EACA9B,KAAKm7D,cAAgBqD,EAGrB18D,EAAK28D,aAAeD,EAExBx+D,KAAK0+D,aAAajsD,EAAQ8rD,EAAYh6D,GACtCvE,KAAKo+D,YAAY3rD,EAAQlO,GAClBkO,GAGX8nD,EAAsB15D,UAAUk9D,WAAa,SAAUtrD,EAAQ8rD,EAAYh6D,GAIvE,OAHAvE,KAAKs+D,QAAQ7rD,GACbzS,KAAK0+D,aAAajsD,EAAQ8rD,EAAYh6D,GACtCvE,KAAKo+D,YAAY3rD,EAAQlO,GAClBkO,GAGX8nD,EAAsB15D,UAAUo9D,UAAY,SAAUxrD,EAAQ8rD,EAAYh6D,GAatE,OAZAvE,KAAK0+D,aAAajsD,EAAQ8rD,EAAYh6D,GAIlCvE,KAAK+6D,eAHmB,OAAxB/6D,KAAK+6D,eAGiB/6D,KAAK86D,eAAiBroD,EAMtBzS,KAAK+6D,eAAeyB,WAAa/pD,EAEpDA,GAGX8nD,EAAsB15D,UAAU69D,aAAe,SAAUjsD,EAAQ8rD,EAAYh6D,GAKzE,IAAIzC,EAAsB,OAAfy8D,EAAsBv+D,KAAK46D,QAAU2D,EAAW/C,MAuB3D,OAnBA/oD,EAAO+oD,MAAQ15D,EACf2Q,EAAOorD,MAAQU,EACF,OAATz8D,EACA9B,KAAK66D,QAAUpoD,EAGf3Q,EAAK+7D,MAAQprD,EAEE,OAAf8rD,EACAv+D,KAAK46D,QAAUnoD,EAGf8rD,EAAW/C,MAAQ/oD,EAEK,OAAxBzS,KAAKy6D,iBACLz6D,KAAKy6D,eAAiB,IAAIkE,IAE9B3+D,KAAKy6D,eAAemE,IAAInsD,GACxBA,EAAOqpD,aAAev3D,EACfkO,GAGX8nD,EAAsB15D,UAAUi9D,QAAU,SAAUrrD,GAChD,OAAOzS,KAAKq+D,eAAer+D,KAAKs+D,QAAQ7rD,KAG5C8nD,EAAsB15D,UAAUy9D,QAAU,SAAU7rD,GACpB,OAAxBzS,KAAKy6D,gBACLz6D,KAAKy6D,eAAe3rB,OAAOr8B,GAE/B,IAAI+rD,EAAO/rD,EAAOorD,MACd/7D,EAAO2Q,EAAO+oD,MAgBlB,OAZa,OAATgD,EACAx+D,KAAK46D,QAAU94D,EAGf08D,EAAKhD,MAAQ15D,EAEJ,OAATA,EACA9B,KAAK66D,QAAU2D,EAGf18D,EAAK+7D,MAAQW,EAEV/rD,GAGX8nD,EAAsB15D,UAAUu9D,YAAc,SAAU3rD,EAAQosD,GAG5D,OAAIpsD,EAAOypD,gBAAkB2C,EAClBpsD,GAKPzS,KAAKi7D,WAHe,OAApBj7D,KAAKi7D,WAGaj7D,KAAKg7D,WAAavoD,EAKlBzS,KAAKi7D,WAAWyB,WAAajqD,EAE5CA,IAEX8nD,EAAsB15D,UAAUw9D,eAAiB,SAAU5rD,GAoBvD,OAnB8B,OAA1BzS,KAAK06D,mBACL16D,KAAK06D,iBAAmB,IAAIiE,IAEhC3+D,KAAK06D,iBAAiBkE,IAAInsD,GAC1BA,EAAOqpD,aAAe,KACtBrpD,EAAOwpD,aAAe,KACK,OAAvBj8D,KAAKm7D,eAGLn7D,KAAKm7D,cAAgBn7D,KAAKk7D,cAAgBzoD,EAC1CA,EAAOgsD,aAAe,OAMtBhsD,EAAOgsD,aAAez+D,KAAKm7D,cAC3Bn7D,KAAKm7D,cAAgBn7D,KAAKm7D,cAAcc,aAAexpD,GAEpDA,GAGX8nD,EAAsB15D,UAAU08D,mBAAqB,SAAU9qD,EAAQ2f,GAQnE,OAPA3f,EAAO2f,KAAOA,EAEVpyB,KAAKq7D,qBADyB,OAA9Br7D,KAAKq7D,qBACuBr7D,KAAKo7D,qBAAuB3oD,EAG5BzS,KAAKq7D,qBAAqBwB,oBAAsBpqD,EAEzEA,GAEJ8nD,EA3e+B,GA6etC2D,GACA,SAASA,GAAsB9rC,EAAMirC,GACjCr9D,KAAKoyB,KAAOA,EACZpyB,KAAKq9D,UAAYA,EACjBr9D,KAAK87D,aAAe,KACpB97D,KAAKk8D,cAAgB,KAErBl8D,KAAKs8D,cAAgB,KAErBt8D,KAAK69D,MAAQ,KAEb79D,KAAKw7D,MAAQ,KAEbx7D,KAAK8+D,SAAW,KAEhB9+D,KAAK++D,SAAW,KAEhB/+D,KAAKy+D,aAAe,KAEpBz+D,KAAKi8D,aAAe,KAEpBj8D,KAAKw8D,WAAa,KAElBx8D,KAAK08D,WAAa,KAElB18D,KAAK68D,oBAAsB,MAK/BmC,GAA0C,WAC1C,SAASA,IAELh/D,KAAKi/D,MAAQ,KAEbj/D,KAAKk/D,MAAQ,KAiEjB,OA1DAF,EAAyBn+D,UAAU8tC,IAAM,SAAUl8B,GAC5B,OAAfzS,KAAKi/D,OACLj/D,KAAKi/D,MAAQj/D,KAAKk/D,MAAQzsD,EAC1BA,EAAOssD,SAAW,KAClBtsD,EAAOqsD,SAAW,OAMlB9+D,KAAKk/D,MAAMH,SAAWtsD,EACtBA,EAAOqsD,SAAW9+D,KAAKk/D,MACvBzsD,EAAOssD,SAAW,KAClB/+D,KAAKk/D,MAAQzsD,IAKrBusD,EAAyBn+D,UAAUyI,IAAM,SAAU+zD,EAAW8B,GAC1D,IAAI1sD,EACJ,IAAKA,EAASzS,KAAKi/D,MAAkB,OAAXxsD,EAAiBA,EAASA,EAAOssD,SACvD,IAAwB,OAAnBI,GAA2BA,GAAkB1sD,EAAOqpD,eACrDhiC,GAAernB,EAAO4qD,UAAWA,GACjC,OAAO5qD,EAGf,OAAO,MAOXusD,EAAyBn+D,UAAUiuC,OAAS,SAAUr8B,GASlD,IAAI+rD,EAAO/rD,EAAOqsD,SACdh9D,EAAO2Q,EAAOssD,SAalB,OAZa,OAATP,EACAx+D,KAAKi/D,MAAQn9D,EAGb08D,EAAKO,SAAWj9D,EAEP,OAATA,EACA9B,KAAKk/D,MAAQV,EAGb18D,EAAKg9D,SAAWN,EAEE,OAAfx+D,KAAKi/D,OAETD,EAtEkC,GAwEzCL,GAA+B,WAC/B,SAASA,IACL3+D,KAAK+G,IAAM,IAAI6K,IA2CnB,OAzCA+sD,EAAc99D,UAAU+9D,IAAM,SAAUnsD,GACpC,IAAI9M,EAAM8M,EAAO4qD,UACb+B,EAAap/D,KAAK+G,IAAIuC,IAAI3D,GACzBy5D,IACDA,EAAa,IAAIJ,GACjBh/D,KAAK+G,IAAI8K,IAAIlM,EAAKy5D,IAEtBA,EAAWzwB,IAAIl8B,IASnBksD,EAAc99D,UAAUyI,IAAM,SAAU+zD,EAAW8B,GAC/C,IACIE,EAAar/D,KAAK+G,IAAIuC,IADhB+zD,GAEV,OAAOgC,EAAaA,EAAW/1D,IAAI+zD,EAAW8B,GAAkB,MAOpER,EAAc99D,UAAUiuC,OAAS,SAAUr8B,GACvC,IAAI9M,EAAM8M,EAAO4qD,UAMjB,OALiBr9D,KAAK+G,IAAIuC,IAAI3D,GAEfmpC,OAAOr8B,IAClBzS,KAAK+G,IAAIu4D,OAAO35D,GAEb8M,GAEXrS,OAAOwD,eAAe+6D,EAAc99D,UAAW,WAC3CyI,IAAK,WAAc,OAAyB,IAAlBtJ,KAAK+G,IAAI6O,MACnCN,YAAY,EACZC,cAAc,IAElBopD,EAAc99D,UAAU+b,MAAQ,WAAc5c,KAAK+G,IAAI6V,SAChD+hD,EA7CuB,GA+ClC,SAAS5C,GAAiB3pC,EAAMwpC,EAAiBC,GAC7C,IAAIK,EAAgB9pC,EAAK8pC,cACzB,GAAsB,OAAlBA,EACA,OAAOA,EACX,IAAIqD,EAAa,EAIjB,OAHI1D,GAAeK,EAAgBL,EAAYv6D,SAC3Ci+D,EAAa1D,EAAYK,IAEtBA,EAAgBN,EAAkB2D;;;;;;;OAU7C,IAAIC,GAA8C,WAC9C,SAASA,KAIT,OAFAA,EAA6B3+D,UAAUw5D,SAAW,SAAU/mD,GAAO,OAAOA,aAAe1B,KAAOopB,GAAa1nB,IAC7GksD,EAA6B3+D,UAAUC,OAAS,WAAc,OAAO,IAAI2+D,IAClED,EALsC,GAO7CC,GAAuC,WACvC,SAASA,IACLz/D,KAAK2R,SAAW,IAAIC,IACpB5R,KAAK0/D,SAAW,KAEhB1/D,KAAK2/D,aAAe,KACpB3/D,KAAK4/D,iBAAmB,KACxB5/D,KAAK6/D,aAAe,KACpB7/D,KAAK8/D,aAAe,KACpB9/D,KAAK86D,eAAiB,KACtB96D,KAAK+6D,eAAiB,KACtB/6D,KAAKk7D,cAAgB,KACrBl7D,KAAKm7D,cAAgB,KA+MzB,OA7MA/6D,OAAOwD,eAAe67D,EAAsB5+D,UAAW,WACnDyI,IAAK,WACD,OAA+B,OAAxBtJ,KAAK86D,gBAAiD,OAAtB96D,KAAK6/D,cACjB,OAAvB7/D,KAAKk7D,eAEb5lD,YAAY,EACZC,cAAc,IAElBkqD,EAAsB5+D,UAAU06D,YAAc,SAAU5zD,GACpD,IAAI8K,EACJ,IAAKA,EAASzS,KAAK0/D,SAAqB,OAAXjtD,EAAiBA,EAASA,EAAO+oD,MAC1D7zD,EAAG8K,IAGXgtD,EAAsB5+D,UAAUw7D,oBAAsB,SAAU10D,GAC5D,IAAI8K,EACJ,IAAKA,EAASzS,KAAK4/D,iBAA6B,OAAXntD,EAAiBA,EAASA,EAAO6pD,cAClE30D,EAAG8K,IAGXgtD,EAAsB5+D,UAAUk/D,mBAAqB,SAAUp4D,GAC3D,IAAI8K,EACJ,IAAKA,EAASzS,KAAK6/D,aAAyB,OAAXptD,EAAiBA,EAASA,EAAOutD,aAC9Dr4D,EAAG8K,IAGXgtD,EAAsB5+D,UAAU07D,iBAAmB,SAAU50D,GACzD,IAAI8K,EACJ,IAAKA,EAASzS,KAAK86D,eAA2B,OAAXroD,EAAiBA,EAASA,EAAO+pD,WAChE70D,EAAG8K,IAGXgtD,EAAsB5+D,UAAU87D,mBAAqB,SAAUh1D,GAC3D,IAAI8K,EACJ,IAAKA,EAASzS,KAAKk7D,cAA0B,OAAXzoD,EAAiBA,EAASA,EAAOwpD,aAC/Dt0D,EAAG8K,IAGXgtD,EAAsB5+D,UAAUi8D,KAAO,SAAU/1D,GAC7C,GAAKA,GAGA,KAAMA,aAAe6K,KAAOopB,GAAaj0B,IAC1C,MAAM,IAAInB,MAAM,yBAA2BkB,EAAUC,GAAO,6CAH5DA,EAAM,IAAI6K,IAKd,OAAO5R,KAAKg9D,MAAMj2D,GAAO/G,KAAO,MAEpCy/D,EAAsB5+D,UAAU8e,UAAY,aAK5C8/C,EAAsB5+D,UAAUm8D,MAAQ,SAAUj2D,GAC9C,IAAIgT,EAAQ/Z,KACZA,KAAKi9D,SACL,IAAIp5B,EAAe7jC,KAAK0/D,SAcxB,GAbA1/D,KAAK2/D,aAAe,KACpB3/D,KAAKigE,SAASl5D,EAAK,SAAUhF,EAAO4D,GAChC,GAAIk+B,GAAgBA,EAAal+B,MAAQA,EACrCoU,EAAMmmD,mBAAmBr8B,EAAc9hC,GACvCgY,EAAM4lD,aAAe97B,EACrBA,EAAeA,EAAa23B,UAE3B,CACD,IAAI/oD,EAASsH,EAAMomD,yBAAyBx6D,EAAK5D,GACjD8hC,EAAe9pB,EAAMqmD,sBAAsBv8B,EAAcpxB,MAI7DoxB,EAAc,CACVA,EAAag6B,QACbh6B,EAAag6B,MAAMrC,MAAQ,MAE/Bx7D,KAAKk7D,cAAgBr3B,EACrB,IAAK,IAAIpxB,EAASoxB,EAAyB,OAAXpxB,EAAiBA,EAASA,EAAOwpD,aACzDxpD,IAAWzS,KAAK0/D,WAChB1/D,KAAK0/D,SAAW,MAEpB1/D,KAAK2R,SAAS2tD,OAAO7sD,EAAO9M,KAC5B8M,EAAOwpD,aAAexpD,EAAO+oD,MAC7B/oD,EAAO67C,cAAgB77C,EAAOw3B,aAC9Bx3B,EAAOw3B,aAAe,KACtBx3B,EAAOorD,MAAQ,KACfprD,EAAO+oD,MAAQ,KAQvB,OAJIx7D,KAAK8/D,eACL9/D,KAAK8/D,aAAaE,aAAe,MACjChgE,KAAK+6D,iBACL/6D,KAAK+6D,eAAeyB,WAAa,MAC9Bx8D,KAAKivC,SAUhBwwB,EAAsB5+D,UAAUu/D,sBAAwB,SAAUC,EAAQ5tD,GACtE,GAAI4tD,EAAQ,CACR,IAAI7B,EAAO6B,EAAOxC,MAWlB,OAVAprD,EAAO+oD,MAAQ6E,EACf5tD,EAAOorD,MAAQW,EACf6B,EAAOxC,MAAQprD,EACX+rD,IACAA,EAAKhD,MAAQ/oD,GAEb4tD,IAAWrgE,KAAK0/D,WAChB1/D,KAAK0/D,SAAWjtD,GAEpBzS,KAAK2/D,aAAeU,EACbA,EAUX,OARIrgE,KAAK2/D,cACL3/D,KAAK2/D,aAAanE,MAAQ/oD,EAC1BA,EAAOorD,MAAQ79D,KAAK2/D,cAGpB3/D,KAAK0/D,SAAWjtD,EAEpBzS,KAAK2/D,aAAeltD,EACb,MAEXgtD,EAAsB5+D,UAAUs/D,yBAA2B,SAAUx6D,EAAK5D,GACtE,GAAI/B,KAAK2R,SAAS+D,IAAI/P,GAAM,CACxB,IAAI26D,EAAWtgE,KAAK2R,SAASrI,IAAI3D,GACjC3F,KAAKkgE,mBAAmBI,EAAUv+D,GAClC,IAAIy8D,EAAO8B,EAASzC,MAChB/7D,EAAOw+D,EAAS9E,MASpB,OARIgD,IACAA,EAAKhD,MAAQ15D,GAEbA,IACAA,EAAK+7D,MAAQW,GAEjB8B,EAAS9E,MAAQ,KACjB8E,EAASzC,MAAQ,KACVyC,EAEX,IAAI7tD,EAAS,IAAI8tD,GAAsB56D,GAIvC,OAHA3F,KAAK2R,SAASE,IAAIlM,EAAK8M,GACvBA,EAAOw3B,aAAeloC,EACtB/B,KAAKwgE,gBAAgB/tD,GACdA,GAGXgtD,EAAsB5+D,UAAUo8D,OAAS,WACrC,GAAIj9D,KAAKivC,QAAS,CACd,IAAIx8B,OAAS,EAGb,IADAzS,KAAK4/D,iBAAmB5/D,KAAK0/D,SACxBjtD,EAASzS,KAAK4/D,iBAA6B,OAAXntD,EAAiBA,EAASA,EAAO+oD,MAClE/oD,EAAO6pD,cAAgB7pD,EAAO+oD,MAIlC,IAAK/oD,EAASzS,KAAK6/D,aAAyB,OAAXptD,EAAiBA,EAASA,EAAOutD,aAC9DvtD,EAAO67C,cAAgB77C,EAAOw3B,aAElC,IAAKx3B,EAASzS,KAAK86D,eAA0B,MAAVroD,EAAgBA,EAASA,EAAO+pD,WAC/D/pD,EAAO67C,cAAgB77C,EAAOw3B,aAElCjqC,KAAK6/D,aAAe7/D,KAAK8/D,aAAe,KACxC9/D,KAAK86D,eAAiB96D,KAAK+6D,eAAiB,KAC5C/6D,KAAKk7D,cAAgB,OAI7BuE,EAAsB5+D,UAAUq/D,mBAAqB,SAAUztD,EAAQ6+B,GAC9DxX,GAAewX,EAAU7+B,EAAOw3B,gBACjCx3B,EAAO67C,cAAgB77C,EAAOw3B,aAC9Bx3B,EAAOw3B,aAAeqH,EACtBtxC,KAAKygE,cAAchuD,KAG3BgtD,EAAsB5+D,UAAU2/D,gBAAkB,SAAU/tD,GAC5B,OAAxBzS,KAAK86D,eACL96D,KAAK86D,eAAiB96D,KAAK+6D,eAAiBtoD,GAG5CzS,KAAK+6D,eAAeyB,WAAa/pD,EACjCzS,KAAK+6D,eAAiBtoD,IAG9BgtD,EAAsB5+D,UAAU4/D,cAAgB,SAAUhuD,GAC5B,OAAtBzS,KAAK6/D,aACL7/D,KAAK6/D,aAAe7/D,KAAK8/D,aAAertD,GAGxCzS,KAAK8/D,aAAaE,aAAevtD,EACjCzS,KAAK8/D,aAAertD,IAI5BgtD,EAAsB5+D,UAAUo/D,SAAW,SAAU3sD,EAAK3L,GAClD2L,aAAe1B,IACf0B,EAAI5G,QAAQ/E,GAGZvH,OAAOqM,KAAK6G,GAAK5G,QAAQ,SAAUyH,GAAK,OAAOxM,EAAG2L,EAAIa,GAAIA,MAG3DsrD,EA3N+B,GA6NtCc,GACA,SAASA,GAAsB56D,GAC3B3F,KAAK2F,IAAMA,EACX3F,KAAKsuD,cAAgB,KACrBtuD,KAAKiqC,aAAe,KAEpBjqC,KAAKs8D,cAAgB,KAErBt8D,KAAKw7D,MAAQ,KAEbx7D,KAAK69D,MAAQ,KAEb79D,KAAKw8D,WAAa,KAElBx8D,KAAKi8D,aAAe,KAEpBj8D,KAAKggE,aAAe,MAiBxBU,GAAiC,WACjC,SAASA,EAAgBlM,GACrBx0D,KAAKw0D,UAAYA,EA2DrB,OAzDAkM,EAAgB5/D,OAAS,SAAU0zD,EAAW5jD,GAC1C,GAAc,MAAVA,EAAgB,CAChB,IAAI+vD,EAAS/vD,EAAO4jD,UAAUrjD,QAC9BqjD,EAAYA,EAAUhyD,OAAOm+D,GAEjC,OAAO,IAAID,EAAgBlM,IAsB/BkM,EAAgBE,OAAS,SAAUpM,GAC/B,OACIzlD,QAAS2xD,EACTpxD,WAAY,SAAUsB,GAClB,IAAKA,EAID,MAAM,IAAIhL,MAAM,2DAEpB,OAAO86D,EAAgB5/D,OAAO0zD,EAAW5jD,IAG7CzC,OAAQuyD,EAAiB,IAAIr7D,EAAY,IAAIF,MAGrDu7D,EAAgB7/D,UAAUggE,KAAO,SAAUC,GACvC,IAAIzhE,EAAUW,KAAKw0D,UAAUqM,KAAK,SAAU5M,GAAK,OAAOA,EAAEoG,SAASyG,KACnE,GAAe,MAAXzhE,EACA,OAAOA,EAGP,MAAM,IAAIuG,MAAM,2CAA6Ck7D,EAAW,cAUpF,SAASC,EAAwBv6D,GAC7B,OAAOA,EAAW,aAAYA;;;;;;;OAXkEu6D,CAAwBD,GAAY,MAIpIJ,EAAgB95D,gBAAkBb,GAC9BE,WAAY,OACZ5G,QAAS,WAAc,OAAO,IAAIqhE,GAAiB,IAAItG,QAEpDsG,EA7DyB,GA+EhCM,GAAiC,WACjC,SAASA,EAAgBxM,GACrBx0D,KAAKw0D,UAAYA,EAwDrB,OAtDAwM,EAAgBlgE,OAAS,SAAU0zD,EAAW5jD,GAC1C,GAAIA,EAAQ,CACR,IAAI+vD,EAAS/vD,EAAO4jD,UAAUrjD,QAC9BqjD,EAAYA,EAAUhyD,OAAOm+D,GAEjC,OAAO,IAAIK,EAAgBxM,IAsB/BwM,EAAgBJ,OAAS,SAAUpM,GAC/B,OACIzlD,QAASiyD,EACT1xD,WAAY,SAAUsB,GAClB,IAAKA,EAGD,MAAM,IAAIhL,MAAM,2DAEpB,OAAOo7D,EAAgBlgE,OAAO0zD,EAAW5jD,IAG7CzC,OAAQ6yD,EAAiB,IAAI37D,EAAY,IAAIF,MAGrD67D,EAAgBngE,UAAUggE,KAAO,SAAUI,GACvC,IAAI5hE,EAAUW,KAAKw0D,UAAUqM,KAAK,SAAU5M,GAAK,OAAOA,EAAEoG,SAAS4G,KACnE,GAAI5hE,EACA,OAAOA,EAEX,MAAM,IAAIuG,MAAM,2CAA6Cq7D,EAAK,MAGtED,EAAgBp6D,gBAAkBb,GAC9BE,WAAY,OACZ5G,QAAS,WAAc,OAAO,IAAI2hE,GAAiB,IAAIxB,QAEpDwB,EA1DyB,GA8GhCE,GAAmC,WACnC,SAASA,KAOT,OADAA,EAAkB7wD,kBAAoB,WAAc,OAAO8wD,MACpDD,EAR2B,GAUlCE,GA50CJ,SAASC,KACL,OAUJ,SAASC,EAAc73C,EAAWjF,EAAU/Q,GACxC,GAAIsR,GAAY0E,GAAY,CACxB,IAAI83C,EAAiB93C,EAAUjD,eAC3Bib,EAAgB7c,GAAwB6E,EAAUllB,MAAOigB,GAC7D,OAAO,IAAIyxC,GAAQx0B,EAAehuB,EAAS8tD,GAE1C,GAAuB,IAAnB93C,EAAUjjB,MAA+C,IAAnBijB,EAAUjjB,KAA4B,CACjF,IAAIg7D,EAAoBj3C,GAAkB/F,GAC1C,OAAO,IAAIyxC,GAAQuL,EAAmBA,EAAkBt+C,KAAW,GAEvE,OAAO,KApBAo+C,CAAc94C,KAA4BJ,KAAY,OA40C7D+4C,GAAqCC,GAYrCK,IAAc,IAAIjC,IAKlBkC,GAAyB,IAAIhB,IADb,IAAItG,KAEpBuH,GAAyB,IAAIX,GAAgBS,IA2B7CG,GAA6B,WAC7B,SAASA,KAOT,OADAA,EAAYvxD,kBAAoB,WAAc,OAAOwxD,GAA4BD,EAAa/I,KACvF+I,EARqB,GAU5BE,GAhmDJ,SAASC,GAAkB/J,EAAkBH,GACzC,OAAOE,GAAkBC,EAAkBH,EAAiBrvC,KAA4BJ,OAgmDxFy5C,GAA8BC,GAiB9BE,GAAkC,WAClC,SAASA,KAOT,OADAA,EAAiB3xD,kBAAoB,WAAc,OAAO4xD,GAAkCD,EAAkBnJ,KACvGmJ,EAR0B,GAUjCE,GArkDJ,SAASC,GAAuBC,EAAuBvK,GAEnD,OAWJ,SAASwK,EAAmBD,EAAuBvK,EAAiBpuC,EAAWjF,GA0H3E,IAAIgd,EAzHC2zB,KAEDA,GAAoC,SAAUS,GAE1C,SAAS0M,EAAkBC,EAAaC,EAAYC,GAChD,IAAI1oD,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAKjC,OAJA+Z,EAAMwoD,YAAcA,EACpBxoD,EAAMyoD,WAAaA,EACnBzoD,EAAM0oD,UAAYA,EAClB1oD,EAAM2oD,aACC3oD,EA2GX,OAlHArZ,EAAU4hE,EAAmB1M,GAS7Bx1D,OAAOwD,eAAe0+D,EAAkBzhE,UAAW,WAC/CyI,IAAK,WACD,OAAOsuD,GAAiBC,EAAiB73D,KAAKwiE,WAAYxiE,KAAKyiE,YAEnEntD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe0+D,EAAkBzhE,UAAW,YAC/CyI,IAAK,WAAc,OAAO,IAAIujB,GAAa7sB,KAAKwiE,WAAYxiE,KAAKyiE,YACjEntD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe0+D,EAAkBzhE,UAAW,kBAE/CyI,IAAK,WACD,IAAIwgB,EAAiB4B,GAA0B1rB,KAAKwiE,WAAYxiE,KAAKyiE,WACjEp4C,EAAaJ,GAAsBH,EAAgB9pB,KAAKyiE,WACxDh+B,EA5uJxB,SAASk+B,EAAuBz4C,EAAUC,EAAWy4C,GACjD,GAAIA,EAAWhyD,SAA+C,IAArCgyD,EAAWhyD,OAAO0a,cAAsB,CAI7D,IAFA,IAAIA,EAAgBs3C,EAAWhyD,OAAO0a,cAClCu3C,EAAgBD,EAAWhyD,OACA,MAAxBiyD,EAAcjyD,QAAkB0a,GAAiBu3C,EAAcv3C,eAClEu3C,EAAgBA,EAAcjyD,OAElC,OAAOiyD,EAOX,IALA,IAAIz4C,EAAaJ,GAA4BE,GAEzCG,EAAaF,EACbsa,EAActa,EAAUpH,IAErBqH,EAAa,GAEhBqa,GADApa,EAAaA,EAAW3G,KACCX,IACzBqH,IAEJ,OAAOqa,EAwtJ2Bk+B,CAAuB74C,EAAgB9pB,KAAKyiE,UAAWziE,KAAKwiE,YAC9E,OAAQ34C,GAAkBC,IAAkC,MAAf2a,EAEzC,IAAI5X,GAAa4X,EAAapa,GAD9B,IAAIwC,GAAa,KAAM7sB,KAAKyiE,YAGpCntD,YAAY,EACZC,cAAc,IAElB+sD,EAAkBzhE,UAAU+b,MAAQ,WAChC,KAAO5c,KAAKuiE,YAAYz+C,IAAOxiB,QAC3BtB,KAAK8uC,OAAO,IAGpBwzB,EAAkBzhE,UAAUyI,IAAM,SAAU/E,GAAS,OAAOvE,KAAK0iE,UAAUn+D,IAAU,MACrFnE,OAAOwD,eAAe0+D,EAAkBzhE,UAAW,UAC/CyI,IAAK,WAAc,OAAOtJ,KAAKuiE,YAAYz+C,IAAOxiB,QAClDgU,YAAY,EACZC,cAAc,IAElB+sD,EAAkBzhE,UAAU03D,mBAAqB,SAAUuK,EAAarvD,EAASlP,GAC7E,IAAIw+D,EAAc/iE,KAAKgjE,aAAaz+D,GAChCm0D,EAAUoK,EACTvK,mBAAmB9kD,MAAezT,KAAKuiE,YAAaQ,GAGzD,OAFArK,EAAQtB,yBAAyBp3D,MACjCA,KAAK0iE,UAAUngC,OAAOwgC,EAAa,EAAGrK,GAC/BA,GAEX4J,EAAkBzhE,UAAUoiE,gBAAkB,SAAUC,EAAkB3+D,EAAOqE,EAAUitD,EAAkBsN,GACzG,IAAIC,EAAkBx6D,GAAY5I,KAAKqjE,gBAClCF,GAA4C,MAA7BD,EAAiB9Q,UAAoBgR,IACrDD,EAAcC,EAAgB95D,IAAIysD,GAAa,OAEnD,IAAIuN,EAAeJ,EAAiBpiE,OAAOsiE,EAAiBvN,OAAkB3vD,EAAWi9D,GAEzF,OADAnjE,KAAKujE,OAAOD,EAAa9+C,SAAUjgB,GAC5B++D,GAEXhB,EAAkBzhE,UAAU0iE,OAAS,SAAU7K,EAASn0D,GACpD,GAAIm0D,EAAQ95B,UACR,MAAM,IAAIh5B,MAAM,sDAEpB,IAAIye,EAAQq0C,EAAQ9pC,OAChBm0C,EAAc/iE,KAAKgjE,aAAaz+D,GACpC,OAviVhB,SAASi/D,EAAwB9+C,GAC7B,OAAOP,GAAaO,EAAK9B;;;;;;;OAsiVT4gD,CAAwBn/C,GAGjBrkB,KAAKyjE,KAAK/K,EAASqK,IAE9B1gC,GAAWhe,EAAOrkB,KAAKuiE,YAAaQ,GAEpC5gC,GAA2B9d,GAAO,EADjBqgB,GAAqBq+B,EAAa/iE,KAAKuiE,YAAYz+C,IAAQ9jB,KAAKuiE,YAAYx+C,MAE7F20C,EAAQtB,yBAAyBp3D,MACjCA,KAAK0iE,UAAUngC,OAAOwgC,EAAa,EAAGrK,GAC/BA,IAEX4J,EAAkBzhE,UAAU4iE,KAAO,SAAU/K,EAASjrB,GAClD,GAAIirB,EAAQ95B,UACR,MAAM,IAAIh5B,MAAM,oDAEpB,IAAIrB,EAAQvE,KAAKqH,QAAQqxD,GAIzB,OAHe,IAAXn0D,GACAvE,KAAK62D,OAAOtyD,GAChBvE,KAAKujE,OAAO7K,EAASjrB,GACdirB,GAEX4J,EAAkBzhE,UAAUwG,QAAU,SAAUqxD,GAAW,OAAO14D,KAAK0iE,UAAUr7D,QAAQqxD,IACzF4J,EAAkBzhE,UAAUiuC,OAAS,SAAUvqC,GAC3C,IAAIw+D,EAAc/iE,KAAKgjE,aAAaz+D,GAAQ,GAC5Co+B,GAAW3iC,KAAKuiE,YAAaQ,GAC7B/iE,KAAK0iE,UAAUngC,OAAOwgC,EAAa,IAEvCT,EAAkBzhE,UAAUg2D,OAAS,SAAUtyD,GAC3C,IAAIw+D,EAAc/iE,KAAKgjE,aAAaz+D,GAAQ,GACxCmgB,EAAO8d,GAAWxiC,KAAKuiE,YAAaQ,GAExC,OAD8D,MAA5C/iE,KAAK0iE,UAAUngC,OAAOwgC,EAAa,GAAG,GACnC,IAAI9M,GAAQvxC,EAAMA,EAAKxB,KAAW,GAAK,MAEhEo/C,EAAkBzhE,UAAUmiE,aAAe,SAAUz+D,EAAOm/D,GAExD,YADc,IAAVA,IAAoBA,EAAQ,GACnB,MAATn/D,EACOvE,KAAKuiE,YAAYz+C,IAAOxiB,OAASoiE,EAOrCn/D,GAEJ+9D,EAnHwB,CAoHjCF,IAIN,IAAIt9C,EAAYN,EAASiF,EAAUllB,OACnC,GAAI4f,GAAaW,IAEb0c,EAAa1c,GACFjB,KAAiB,MAE3B,CACD,IAAI8/C,EAAcn/C,EAASnB,IAAU00B,cAAwC,IAM7E,GAAI9yB,GAAWT,GAAW,CACtB,IAAI+a,EAAW/a,EAASnB,IACpBijC,EAAahiC,GAAiBmF,EAAWjF,GAE7Csd,GAAmBvC,EADMsB,GAAiBtB,EAAU+mB,GACHqd,EAv9N7D,SAASC,EAAkBrkC,EAAUpJ,GACjC,OAAOgK,GAAqBZ,GAAYA,EAAS7M,YAAYyD,GAAQA,EAAKzD,YAs9NJkxC,CAAkBrkC,EAAU+mB,SAG1F51B,GAAYizC,EAAal6C,EAAWjF,GAExCA,EAASiF,EAAUllB,OAASi9B,EACxB6kB,GAAiBvhC,EAAWN,EAAUm/C,GAAa,GACvDvd,GAAc5hC,EAAUgd,GAE5B,OAAO,IAAI2zB,GAAmB3zB,EAAY/X,EAAWjF,GAhK9C69C,CAAmBD,EAAuBvK,EAD7BrvC,KAC6DJ,OAokDjF65C,GAAoCC;;;;;;;;AASxC,SAAS2B,GAA4CpwD,EAASsX,EAAUiiB,EAAW82B,GAC/E,IAAIrvD,EAAM,8GAAgHsW,EAAW,sBAAwBiiB,EAAY,KAMzK,OALI82B,IACArvD,GACI,wJAcZ,SAASsvD,EAAetvD,EAAKhB,GACzB,IAAIuwD,EAAM,IAAIp+D,MAAM6O,GAEpB,OADAwvD,GAAiBD,EAAKvwD,GACfuwD,EAdAD,CAAetvD,EAAKhB,GAgB/B,SAASwwD,GAAiBD,EAAKvwD,GAC3BuwD,EAAInwD,IAAuBJ,EAC3BuwD,EAAIjwD,IAAgBN,EAAQywD,SAASzgE,KAAKgQ,GAK9C,SAAS0wD,GAAmBljC,GACxB,OAAO,IAAIr7B,MAAM,wDAA0Dq7B;;;;;;;OAc/E,SAASmjC,GAAe1/C,EAAM2/C,EAAgBC,GAU1C,IAAIz+B,EAAQnhB,EAAKmhB,MACb0+B,EAAoB,KAAR1+B,EAChB,OAAI0+B,IAAcF,GACd3/C,EAAKmhB,OAAiB,KAARA,EAAsCy+B,EACpD5/C,EAAK8/C,WAAa,GACX,GAEJD,IAAcD,EAIzB,SAASG,GAA4B//C,EAAM6/C,EAAWhgE,GAClD,OAAkB,KAAbmgB,EAAKmhB,SAAuC0+B,GAAa7/C,EAAK8/C,WAAajgE,IAC5EmgB,EAAK8/C,UAAYjgE,EAAQ,GAClB,GAOf,SAASmgE,GAAWhgD,EAAMngB,GACtB,OAAOmgB,EAAK0a,MAAM76B,GAKtB,SAASogE,GAAcjgD,EAAMngB,GACzB,OAAOmgB,EAAK0a,MAAM76B,GAKtB,SAASqgE,GAAelgD,EAAMngB,GAC1B,OAAOmgB,EAAK0a,MAAM76B,GAKtB,SAASsgE,GAAqBngD,EAAMngB,GAChC,OAAOmgB,EAAK0a,MAAM76B,GAKtB,SAASugE,GAAYpgD,EAAMngB,GACvB,OAAOmgB,EAAK0a,MAAM76B,GAMtB,IAAIwgE,IACAC,oBAAgB9+D,EAChB++D,oBAAgB/+D,EAChBqyD,wBAAoBryD,EACpBg/D,yBAAqBh/D,EACrBi/D,uBAAmBj/D,EACnBk/D,sBAAkBl/D,EAClBm/D,2BAAuBn/D,EACvBo/D,oBAAgBp/D,EAChBq/D,wBAAoBr/D,EACpBs/D,wBAAoBt/D,EACpBu/D,iBAAav/D,EACbw/D,gBAAYx/D,EACZy/D,wBAAoBz/D,EACpB0/D,iBAAa1/D,EACb2/D,sBAAkB3/D,EAClB4/D,oBAAgB5/D,EAChB6/D,wBAAoB7/D,GAUpB8/D,GAAO,aACPC,GAAiB,IAAIr0D;;;;;;;OACzB,SAASs0D,GAAShhE,GACd,IAAIS,EAAMsgE,GAAe38D,IAAIpE,GAK7B,OAJKS,IACDA,EAAMmB,EAAU5B,GAAS,IAAM+gE,GAAerwD,KAC9CqwD,GAAep0D,IAAI3M,EAAOS,IAEvBA,EAWX,IAYIwgE,GAAqB,EAkBzB,SAASC,GAAa1hD,EAAMxa,EAAKm8D,EAAYtkE,GAEzC,UAAkB,EAAb2iB,EAAKmhB,QACL/L,GAFWpV,EAAK4hD,UAESp8D,EAAIkxB,aAAeirC,GAAatkE,IAKlE,SAASwkE,GAAsB7hD,EAAMxa,EAAKm8D,EAAYtkE,GAClD,QAAIqkE,GAAa1hD,EAAMxa,EAAKm8D,EAAYtkE,KACpC2iB,EAAK4hD,UAAUp8D,EAAIkxB,aAAeirC,GAActkE,GACzC,GAIf,SAASykE,GAAsB9hD,EAAMxa,EAAKm8D,EAAYtkE,GAClD,IAAIgpB,EAAWrG,EAAK4hD,UAAUp8D,EAAIkxB,aAAeirC,GACjD,GAAkB,EAAb3hD,EAAKmhB,QAAsC5L,GAAelP,EAAUhpB,GAAQ,CAC7E,IAAI2mC,EAAcx+B,EAAIu8D,SAASJ,GAAYxjE,KAC3C,MAAMghE,GAA4CkB,GAASY,mBAAmBjhD,EAAMxa,EAAI2a,WAAY6jB,EAAc,KAAO3d,EAAU2d,EAAc,KAAO3mC,EAAmD,IAA9B,EAAb2iB,EAAKmhB,SAG7K,SAAS6gC,GAAwBhiD,GAE7B,IADA,IAAIiiD,EAAWjiD,EACRiiD,GACsB,EAArBA,EAASz8D,IAAIhB,QACby9D,EAAS9gC,OAAS,GAEtB8gC,EAAWA,EAASC,qBAAuBD,EAAS/1D,OAG5D,SAASi2D,GAAsCniD,EAAMoiD,GAEjD,IADA,IAAIH,EAAWjiD,EACRiiD,GAAYA,IAAaG,GAC5BH,EAAS9gC,OAAS,GAClB8gC,EAAWA,EAASC,qBAAuBD,EAAS/1D,OAG5D,SAASm2D,GAAcriD,EAAMG,EAAW82B,EAAWqrB,GAC/C,IAMI,OADAN,GAHgC,SADlBhiD,EAAKxa,IAAIk1B,MAAMva,GACL3b,MACpBy7D,GAAcjgD,EAAMG,GAAW4c,cAC/B/c,GAEGqgD,GAASa,YAAYlhD,EAAMG,EAAW82B,EAAWqrB,GAE5D,MAAO7kE,GAEHuiB,EAAKuiD,KAAKnb,aAAaz8B,YAAYltB,IAG3C,SAAS+kE,GAAsBxiD,GAC3B,OAAIA,EAAK9T,OAEE+zD,GADUjgD,EAAK9T,OACW8T,EAAKyiD,cAActiD,WAEjD,KAOX,SAASuiD,GAAa1iD,GAElB,OADiBA,EAAK9T,OAEX8T,EAAKyiD,cAAcv2D,OAGnB,KAGf,SAASy2D,GAAW3iD,EAAMxa,GACtB,OAAoB,UAAZA,EAAIhB,OACR,KAAK,EACD,OAAOy7D,GAAcjgD,EAAMxa,EAAI2a,WAAWyiD,cAC9C,KAAK,EACD,OAAO5C,GAAWhgD,EAAMxa,EAAI2a,WAAW0iD,YAGnD,SAASC,GAAqB3iE,EAAQhC,GAClC,OAAOgC,EAASA,EAAS,IAAMhC,EAAOA,EAE1C,SAAS4kE,GAAgB/iD,GACrB,QAASA,EAAK9T,WAAwC,MAA3B8T,EAAKyiD,cAAcj+D,OAElD,SAASw+D,GAAehjD,GACpB,SAASA,EAAK9T,QAAuC,MAA3B8T,EAAKyiD,cAAcj+D,OAEjD,SAASy+D,GAAcC,GACnB,OAAO,GAAMA,EAAU,GAE3B,SAASC,GAAuBC,GAC5B,IAAIC,KACAC,EAAkB,EAClBC,KAaJ,OAZIH,GACAA,EAAkBp7D,QAAQ,SAAUrJ,GAChC,IAAImwB,EAAKvxB,EAAOoB,EAAI,GAAIukE,EAAUp0C,EAAG,GAAI00C,EAAY10C,EAAG,GACjC,iBAAZo0C,GACPG,EAAeH,GAAWM,EAC1BF,GAAmBL,GAAcC,IAGjCK,EAAWL,GAAWM,KAIzBH,eAAgBA,EAAgBE,WAAYA,EAAYD,gBAAiBA,GAEtF,SAASG,GAAah6D,EAAMi6D,GACxB,OAAOj6D,EAAKpH,IAAI,SAAUhF,GACtB,IAAIsB,EACA6B,EACAgE,EAWJ,OAVI3I,MAAMqJ,QAAQ7H,IACSmH,GAAvB7F,EAAKpB,EAAOF,EAAO,IAAe,GAAImD,EAAQ7B,EAAG,KAGjD6F,EAAQ,EACRhE,EAAQnD,GAERmD,IAA2B,mBAAVA,GAAyC,iBAAVA,IAAuBkjE,GACvEhoE,OAAOwD,eAAesB,EAAOoL,IAAUvO,MAAOqmE,EAAY7yD,cAAc,KAEnErM,MAAOA,EAAOhE,MAAOA,EAAOghE,SAAUA,GAAShhE,MAGhE,SAASmjE,GAAuB3jD,EAAM4jD,EAAYp+D,GAC9C,IAAIg3B,EAAeh3B,EAAIg3B,aACvB,OAAIA,EACmD,IAAzB,EAArBA,EAAah4B,QAC0C,IAAlC,SAArBg4B,EAAah4B,QACbg4B,EAAa5jB,QAAQirD,uBAClBrnC,EAAa5jB,QAAQirD,sBAAsBloD,gBACvC/gB,EAAQkc,kBAAkB8oB,OAG3BqgC,GAAcjgD,EAAMxa,EAAIg3B,aAAarc,WAAWyiD,mBAP3D,EAWOgB,EAGf,IAAIE,GAAmB,IAAIC,QAC3B,SAASC,GAAkBrpE,GACvB,IAAI0C,EAAQymE,GAAiBl/D,IAAIjK,GAMjC,OALK0C,KACDA,EAAQ1C,EAAQ,WAAc,OAAO2mE,MAC/B3mE,QAAUA,EAChBmpE,GAAiB32D,IAAIxS,EAAS0C,IAE3BA,EAOX,SAAS4mE,GAAqBjkD,EAAMuc,EAAQrL,EAAYlD,EAAa7tB,GAElD,IAAXo8B,IACArL,EAAalR,EAAK6a,SAAS3J,WAAWyxC,GAAW3iD,EAAMA,EAAKxa,IAAI0+D,sBAEpEC,GAAwBnkD,EAAMuc,EAAQ,EAAGvc,EAAKxa,IAAIk1B,MAAM99B,OAAS,EAAGs0B,EAAYlD,EAAa7tB,GAEjG,SAASgkE,GAAwBnkD,EAAMuc,EAAQ6nC,EAAY36C,EAAUyH,EAAYlD,EAAa7tB,GAC1F,IAAK,IAAI1D,EAAI2nE,EAAY3nE,GAAKgtB,EAAUhtB,IAAK,CACzC,IAAI4nE,EAAUrkD,EAAKxa,IAAIk1B,MAAMj+B,GACT,GAAhB4nE,EAAQ7/D,OACR8/D,GAAgBtkD,EAAMqkD,EAAS9nC,EAAQrL,EAAYlD,EAAa7tB,GAGpE1D,GAAK4nE,EAAQE,YAGrB,SAASC,GAA0BxkD,EAAMykD,EAAgBloC,EAAQrL,EAAYlD,EAAa7tB,GAEtF,IADA,IAAIukE,EAAW1kD,EACR0kD,IAAa3B,GAAgB2B,IAChCA,EAAWA,EAASx4D,OAMxB,IAJA,IAAI4T,EAAW4kD,EAASx4D,OACpBy4D,EAAYjC,GAAagC,GAEzBj7C,EAAWk7C,EAAUxkD,UAAYwkD,EAAUJ,WACtC9nE,EAFQkoE,EAAUxkD,UAAY,EAEd1jB,GAAKgtB,EAAUhtB,IAAK,CACzC,IAAI4nE,EAAUvkD,EAASta,IAAIk1B,MAAMj+B,GAC7B4nE,EAAQI,iBAAmBA,GAC3BH,GAAgBxkD,EAAUukD,EAAS9nC,EAAQrL,EAAYlD,EAAa7tB,GAGxE1D,GAAK4nE,EAAQE,WAEjB,IAAKzkD,EAAS5T,OAAQ,CAElB,IAAI04D,EAAiB5kD,EAAKuiD,KAAKpR,iBAAiBsT,GAChD,GAAIG,EACA,IAASnoE,EAAI,EAAGA,EAAImoE,EAAehoE,OAAQH,IACvCooE,GAAqB7kD,EAAM4kD,EAAenoE,GAAI8/B,EAAQrL,EAAYlD,EAAa7tB,IAK/F,SAASmkE,GAAgBtkD,EAAMqkD,EAAS9nC,EAAQrL,EAAYlD,EAAa7tB,GACrE,GAAoB,EAAhBkkE,EAAQ7/D,MACRggE,GAA0BxkD,EAAMqkD,EAAQS,UAAUjlE,MAAO08B,EAAQrL,EAAYlD,EAAa7tB,OAEzF,CACD,IAAI4kE,EAAKpC,GAAW3iD,EAAMqkD,GAe1B,GAde,IAAX9nC,GAAmD,SAAhB8nC,EAAQ7/D,OACnB,GAAvB6/D,EAAQW,cAEkB,GAAvBX,EAAQW,cACRH,GAAqB7kD,EAAM+kD,EAAIxoC,EAAQrL,EAAYlD,EAAa7tB,GAEzC,GAAvBkkE,EAAQW,cAERH,GADe5E,GAAcjgD,EAAMqkD,EAAQlkD,WAAW4c,cACvBgoC,EAAIxoC,EAAQrL,EAAYlD,EAAa7tB,IAIxE0kE,GAAqB7kD,EAAM+kD,EAAIxoC,EAAQrL,EAAYlD,EAAa7tB,GAEhD,SAAhBkkE,EAAQ7/D,MAER,IADA,IAAIygE,EAAgBhF,GAAcjgD,EAAMqkD,EAAQlkD,WAAW+kD,cAAcC,eAChE11D,EAAI,EAAGA,EAAIw1D,EAAcroE,OAAQ6S,IACtCw0D,GAAqBgB,EAAcx1D,GAAI8sB,EAAQrL,EAAYlD,EAAa7tB,GAG5D,EAAhBkkE,EAAQ7/D,QAAgC6/D,EAAQzrD,QAAQza,MACxDgmE,GAAwBnkD,EAAMuc,EAAQ8nC,EAAQlkD,UAAY,EAAGkkD,EAAQlkD,UAAYkkD,EAAQE,WAAYrzC,EAAYlD,EAAa7tB,IAI1I,SAAS0kE,GAAqB7kD,EAAM2iD,EAAYpmC,EAAQrL,EAAYlD,EAAa7tB,GAC7E,IAAI06B,EAAW7a,EAAK6a,SACpB,OAAQ0B,GACJ,KAAK,EACD1B,EAAS7O,YAAYkF,EAAYyxC,GACjC,MACJ,KAAK,EACD9nC,EAASsE,aAAajO,EAAYyxC,EAAY30C,GAC9C,MACJ,KAAK,EACD6M,EAAS7N,YAAYkE,EAAYyxC,GACjC,MACJ,KAAK,EACDxiE,EAAOxC,KAAKglE,IAIxB,IAAIyC,GAAe,kBACnB,SAASC,GAAelnE,GACpB,GAAgB,MAAZA,EAAK,GAAY,CACjB,IAAIkwB,EAAQlwB,EAAKkwB,MAAM+2C,IACvB,OAAQ/2C,EAAM,GAAIA,EAAM,IAE5B,OAAQ,GAAIlwB,GAEhB,SAASmnE,GAAiBvD,GAEtB,IADA,IAAIv9D,EAAQ,EACH/H,EAAI,EAAGA,EAAIslE,EAASnlE,OAAQH,IACjC+H,GAASu9D,EAAStlE,GAAG+H,MAEzB,OAAOA,EA2CX,SAAS+gE,GAAkB3/D,GACvB,OAAY,MAALA,EAAYA,EAAEnD,WAAa,GAEtC,IAUI+iE,GAAkB,IAAI9pE,OACtB+pE,GAAsBjE,GAASv1D,IAC/By5D,GAAsBlE,GAASz1D,IAC/B45D,GAAsBnE,GAASnQ,IAkDnC,SAASuU,GAAmBrvD,EAAMsvD,EAAQhhE,QAChB,IAAlBA,IAA4BA,EAAgBoH,GAASH,oBACzD,IAAI3H,EAASF,EAAmBsS,GAChC,IACI,GAAmB,EAAfsvD,EAAOrhE,MACP,OAAOqhE,EAAOrlE,MAKlB,GAHmB,EAAfqlE,EAAOrhE,QACPK,EAAgB,MAED,EAAfghE,EAAOrhE,MACP,OAAO+R,EAAKrC,QAAQtP,IAAIihE,EAAOrlE,MAAOqE,GAE1C,IAAIihE,EAAaD,EAAOrE,SACxB,OAAQsE,GACJ,KAAKL,GACL,KAAKC,GACL,KAAKC,GACD,OAAOpvD,EAEf,IACIzR,EADAihE,EAAcxvD,EAAKyvD,KAAKC,eAAeH,GAE3C,GAAIC,EAAa,CACb,IAAIG,EAAmB3vD,EAAKtC,WAAW8xD,EAAYlmE,OAKnD,YAJyB2B,IAArB0kE,IACAA,EAAmB3vD,EAAKtC,WAAW8xD,EAAYlmE,OAC3CsmE,GAAwB5vD,EAAMwvD,IAE/BG,IAAqBV,QAAkBhkE,EAAY0kE,EAEzD,IAAKphE,EAAgBjD,EAAiBgkE,EAAOrlE,SAwB1D,SAAS4lE,EAAc1Y,EAAUloD,GAC7B,OAAyB,MAAlBA,EAAIjE,aAJf,SAAS8kE,EAA0B3Y,EAAU4Y,GACzC,OAAO5Y,EAASsY,KAAKO,QAAQ5jE,QAAQ2jE,IAAU,EAGbD,CAA0B3Y,EAAUloD,EAAIjE,aACnD,SAAnBiE,EAAIjE,YAAyBmsD,EAASsY,KAAK7rC,QA1BkBisC,CAAc7vD,EAAMzR,GAAgB,CAC7F,IAAIjF,EAAQ0W,EAAKtC,WAAWrX,OAQ5B,OAPA2Z,EAAKyvD,KAAKC,eAAeJ,EAAOrE,WAC5Bh9D,MAAO,KACPnH,MAAOyH,EAAcnK,QACrB8O,QAAU5J,MAAOA,EACjBW,MAAOqlE,EAAOrlE,OAElB+V,EAAKtC,WAAWpU,GAAS2lE,GACjBjvD,EAAKtC,WAAWpU,GACpBsmE,GAAwB5vD,EAAMA,EAAKyvD,KAAKC,eAAeJ,EAAOrE,WAEjE,OAAmB,EAAfqE,EAAOrhE,MACLK,EAEJ0R,EAAKrC,QAAQtP,IAAIihE,EAAOrlE,MAAOqE,GAE1C,QACIZ,EAAmBE,IAU3B,SAASgiE,GAAwBzY,EAAUqY,GACvC,IAAIS,EACJ,OAA4B,UAApBT,EAAYvhE,OAChB,KAAK,IACDgiE,EAsBZ,SAASC,EAAa/Y,EAAUruD,EAAMoK,GAClC,IAAI2K,EAAM3K,EAAK7M,OACf,OAAQwX,GACJ,KAAK,EACD,OAAO,IAAI/U,EACf,KAAK,EACD,OAAO,IAAIA,EAAKumE,GAAmBlY,EAAUjkD,EAAK,KACtD,KAAK,EACD,OAAO,IAAIpK,EAAKumE,GAAmBlY,EAAUjkD,EAAK,IAAKm8D,GAAmBlY,EAAUjkD,EAAK,KAC7F,KAAK,EACD,OAAO,IAAIpK,EAAKumE,GAAmBlY,EAAUjkD,EAAK,IAAKm8D,GAAmBlY,EAAUjkD,EAAK,IAAKm8D,GAAmBlY,EAAUjkD,EAAK,KACpI,QAEI,IADA,IAAIi9D,EAAY,IAAI7qE,MAAMuY,GACjB3X,EAAI,EAAGA,EAAI2X,EAAK3X,IACrBiqE,EAAUjqE,GAAKmpE,GAAmBlY,EAAUjkD,EAAKhN,IAErD,OAAO,IAAK4C,EAAKN,KAAKjC,MAAMuC,EAAMxB,QAAU,GAAS6oE,MAtCxCD,CAAa/Y,EAAUqY,EAAY1oE,MAAO0oE,EAAYt8D,MACnE,MACJ,KAAK,KACD+8D,EAsCZ,SAASG,EAAajZ,EAAU/yD,EAAS8O,GACrC,IAAI2K,EAAM3K,EAAK7M,OACf,OAAQwX,GACJ,KAAK,EACD,OAAOzZ,IACX,KAAK,EACD,OAAOA,EAAQirE,GAAmBlY,EAAUjkD,EAAK,KACrD,KAAK,EACD,OAAO9O,EAAQirE,GAAmBlY,EAAUjkD,EAAK,IAAKm8D,GAAmBlY,EAAUjkD,EAAK,KAC5F,KAAK,EACD,OAAO9O,EAAQirE,GAAmBlY,EAAUjkD,EAAK,IAAKm8D,GAAmBlY,EAAUjkD,EAAK,IAAKm8D,GAAmBlY,EAAUjkD,EAAK,KACnI,QAEI,IADA,IAAIi9D,EAAY7qE,MAAMuY,GACb3X,EAAI,EAAGA,EAAI2X,EAAK3X,IACrBiqE,EAAUjqE,GAAKmpE,GAAmBlY,EAAUjkD,EAAKhN,IAErD,OAAO9B,EAAQmC,WAAM,EAAQe,EAAS6oE,KAtDzBC,CAAajZ,EAAUqY,EAAY1oE,MAAO0oE,EAAYt8D,MACnE,MACJ,KAAK,KACD+8D,EAAaZ,GAAmBlY,EAAUqY,EAAYt8D,KAAK,IAC3D,MACJ,KAAK,IACD+8D,EAAaT,EAAY1oE,MAWjC,OAJImpE,IAAehB,IAAkC,OAAfgB,GAA6C,iBAAfA,GAC1C,OAApBT,EAAYvhE,OAAqE,mBAA3BgiE,EAAWtrD,cACnE6qD,EAAYvhE,OAAS,aAEHhD,IAAfglE,EAA2BhB,GAAkBgB,EAgHxD,SAASI,GAAmBC,EAAa5wB,GACrC,IAAIgvB,EAAgB4B,EAAY3B,cAAcC,eAI9C,IAHiB,MAAblvB,GAAqBA,GAAagvB,EAAcroE,UAChDq5C,EAAYgvB,EAAcroE,OAAS,GAEnCq5C,EAAY,EACZ,OAAO,KAEX,IAAIj2B,EAAOilD,EAAchvB,GAMzB,OALAj2B,EAAKkiD,oBAAsB,KAC3B4E,GAAgB7B,EAAehvB,GAE/BoqB,GAASgB,mBAAmBrhD,GAC5B+mD,GAAiB/mD,GACVA,EA+BX,SAASgnD,GAAyBH,EAAaI,EAAUjnD,GACrD,IAAIknD,EAAiBD,EAAWtE,GAAWsE,EAAUA,EAASzhE,IAAI0+D,oBAC9D2C,EAAYjE,cAKhBqB,GAAqBjkD,EAAM,EAJVA,EAAK6a,SAAS3J,WAAWg2C,GACxBlnD,EAAK6a,SAAS7M,YAAYk5C,QAG8B1lE,GAE9E,SAASulE,GAAiB/mD,GACtBikD,GAAqBjkD,EAAM,EAAqB,KAAM,UAAMxe,GAEhE,SAAS2lE,GAAWrkD,EAAKjjB,EAAOxC,GAExBwC,GAASijB,EAAIlmB,OACbkmB,EAAInlB,KAAKN,GAGTylB,EAAI+a,OAAOh+B,EAAO,EAAGxC,GAG7B,SAASypE,GAAgBhkD,EAAKjjB,GAEtBA,GAASijB,EAAIlmB,OAAS,EACtBkmB,EAAIskD,MAGJtkD,EAAI+a,OAAOh+B,EAAO;;;;;;;OAW1B,IAAIwnE,GAAgB,IAAI3rE,OAMxB,SAAS4rE,GAAkC9I,GACvC,OAAOA,EAAiB+I,eAE5B,IAAIC,GAAmC,SAAUtW,GAE7C,SAASsW,EAAkBlxD,EAAU06C,EAAeuW,EAAgBE,EAASC,EAAU5tD,GACnF,IAAIzE,EAGJ67C,EAAOr0D,KAAKvB,OAASA,KAOrB,OANA+Z,EAAMiB,SAAWA,EACjBjB,EAAM27C,cAAgBA,EACtB37C,EAAMoyD,QAAUA,EAChBpyD,EAAMqyD,SAAWA,EACjBryD,EAAMyE,mBAAqBA,EAC3BzE,EAAMkyD,eAAiBA,EAChBlyD,EA2CX,OAvDArZ,EAAUwrE,EAAmBtW,GAc7Bx1D,OAAOwD,eAAesoE,EAAkBrrE,UAAW,UAC/CyI,IAAK,WACD,IAAI+iE,KACA1tD,EAAS3e,KAAKmsE,QAClB,IAAK,IAAIloE,KAAY0a,EAEjB0tD,EAAUhqE,MAAO4B,SAAUA,EAAUqoE,aADlB3tD,EAAO1a,KAG9B,OAAOooE,GAEX/2D,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAesoE,EAAkBrrE,UAAW,WAC/CyI,IAAK,WACD,IAAIijE,KACJ,IAAK,IAAItoE,KAAYjE,KAAKosE,SAEtBG,EAAWlqE,MAAO4B,SAAUA,EAAUqoE,aADnBtsE,KAAKosE,SAASnoE,KAGrC,OAAOsoE,GAEXj3D,YAAY,EACZC,cAAc,IAKlB22D,EAAkBrrE,UAAUC,OAAS,SAAU8H,EAAUitD,EAAkBC,EAAoB1D,GAC3F,IAAKA,EACD,MAAM,IAAIxsD,MAAM,+BAEpB,IAAI4mE,EAAU9D,GAAkB1oE,KAAKisE,gBACjCQ,EAAqBD,EAAQptC,MAAM,GAAG9hB,QAAQovD,kBAAkB7nD,UAChEH,EAAOqgD,GAASE,eAAer8D,EAAUitD,MAAwBC,EAAoB0W,EAASpa,EAAU2Z,IACxGxvD,EAAYqoD,GAAelgD,EAAM+nD,GAAoBv/C,SAIzD,OAHI4oC,GACApxC,EAAK6a,SAAS6b,aAAaupB,GAAcjgD,EAAM,GAAG4iD,cAAe,aAAcvN,GAAQC,MAEpF,IAAI2S,GAAcjoD,EAAM,IAAIkoD,GAASloD,GAAOnI,IAEhD2vD,EAxD2B,CAyDpCpX,IACE6X,GAA+B,SAAU/W,GAEzC,SAAS+W,EAAcjV,EAAOmV,EAAUC,GACpC,IAAI/yD,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAQjC,OAPA+Z,EAAM29C,MAAQA,EACd39C,EAAM8yD,SAAWA,EACjB9yD,EAAM+yD,WAAaA,EACnB/yD,EAAMgzD,OAAShzD,EAAM29C,MAAMxtD,IAAIk1B,MAAM,GACrCrlB,EAAMyK,SAAWqoD,EACjB9yD,EAAMizD,kBAAoBH,EAC1B9yD,EAAMmT,SAAW4/C,EACV/yD,EAqBX,OA/BArZ,EAAUisE,EAAe/W,GAYzBx1D,OAAOwD,eAAe+oE,EAAc9rE,UAAW,YAC3CyI,IAAK,WACD,OAAO,IAAIuvD,GAAW8L,GAAc3kE,KAAK03D,MAAO13D,KAAK+sE,OAAOloD,WAAWyiD,gBAE3EhyD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+oE,EAAc9rE,UAAW,YAC3CyI,IAAK,WAAc,OAAO,IAAI2jE,GAAUjtE,KAAK03D,MAAO13D,KAAK+sE,SACzDz3D,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+oE,EAAc9rE,UAAW,iBAC3CyI,IAAK,WAAc,OAAOtJ,KAAK8sE,WAAWlsE,aAC1C0U,YAAY,EACZC,cAAc,IAElBo3D,EAAc9rE,UAAU+iC,QAAU,WAAc5jC,KAAK6sE,SAASjpC,WAC9D+oC,EAAc9rE,UAAU8e,UAAY,SAAUytC,GAAYptD,KAAK6sE,SAASltD,UAAUytC,IAC3Euf,EAhCuB,CAiChC9X,IACF,SAASqY,GAAwBxoD,EAAMyoD,EAAOC,GAC1C,OAAO,IAAI9K,GAAkB59C,EAAMyoD,EAAOC,GAE9C,IAAI9K,GAAmC,WACnC,SAASA,EAAkB5K,EAAOqV,EAAQM,GACtCrtE,KAAK03D,MAAQA,EACb13D,KAAK+sE,OAASA,EACd/sE,KAAKqtE,MAAQA,EAIbrtE,KAAK6pE,kBA4FT,OA1FAzpE,OAAOwD,eAAe0+D,EAAkBzhE,UAAW,WAC/CyI,IAAK,WAAc,OAAO,IAAIuvD,GAAW74D,KAAKqtE,MAAM/F,gBACpDhyD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe0+D,EAAkBzhE,UAAW,YAC/CyI,IAAK,WAAc,OAAO,IAAI2jE,GAAUjtE,KAAK03D,MAAO13D,KAAK+sE,SACzDz3D,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe0+D,EAAkBzhE,UAAW,kBAE/CyI,IAAK,WAGD,IAFA,IAAIob,EAAO1kB,KAAK03D,MACZyV,EAAQntE,KAAK+sE,OAAOn8D,QAChBu8D,GAASzoD,GACbyoD,EAAQ/F,GAAa1iD,GACrBA,EAAOA,EAAK9T,OAEhB,OAAO8T,EAAO,IAAIuoD,GAAUvoD,EAAMyoD,GAAS,IAAIF,GAAUjtE,KAAK03D,MAAO,OAEzEpiD,YAAY,EACZC,cAAc,IAElB+sD,EAAkBzhE,UAAU+b,MAAQ,WAEhC,IADA,IACSzb,EADCnB,KAAK6pE,eAAevoE,OACX,EAAGH,GAAK,EAAGA,IAAK,CAC/B,IAAIujB,EAAO4mD,GAAmBtrE,KAAKqtE,MAAOlsE,GAC1C4jE,GAASU,YAAY/gD,KAG7B49C,EAAkBzhE,UAAUyI,IAAM,SAAU/E,GACxC,IAAImgB,EAAO1kB,KAAK6pE,eAAetlE,GAC/B,GAAImgB,EAAM,CACN,IAAI4iB,EAAM,IAAIslC,GAASloD,GAEvB,OADA4iB,EAAI8vB,yBAAyBp3D,MACtBsnC,EAEX,OAAO,MAEXlnC,OAAOwD,eAAe0+D,EAAkBzhE,UAAW,UAC/CyI,IAAK,WAAc,OAAOtJ,KAAK6pE,eAAevoE,QAC9CgU,YAAY,EACZC,cAAc,IAElB+sD,EAAkBzhE,UAAU03D,mBAAqB,SAAUuK,EAAarvD,EAASlP,GAC7E,IAAIm0D,EAAUoK,EAAYvK,mBAAmB9kD,OAE7C,OADAzT,KAAKujE,OAAO7K,EAASn0D,GACdm0D,GAEX4J,EAAkBzhE,UAAUoiE,gBAAkB,SAAUC,EAAkB3+D,EAAOqE,EAAUitD,EAAkBsN,GACzG,IAAIC,EAAkBx6D,GAAY5I,KAAKqjE,eAClCF,GAAiBD,aAA4BvN,KAC9CwN,EAAcC,EAAgB95D,IAAIysD,KAEtC,IAAIuN,EAAeJ,EAAiBpiE,OAAOsiE,EAAiBvN,OAAkB3vD,EAAWi9D,GAEzF,OADAnjE,KAAKujE,OAAOD,EAAa9+C,SAAUjgB,GAC5B++D,GAEXhB,EAAkBzhE,UAAU0iE,OAAS,SAAU7K,EAASn0D,GACpD,GAAIm0D,EAAQ95B,UACR,MAAM,IAAIh5B,MAAM,sDAEpB,IAAI0nE,EAAW5U;;;;;;;;AAIf,OAvTR,SAAS6U,EAAmBljD,EAAYkhD,EAAa5wB,EAAWj2B,GAC5D,IAAIilD,EAAgB4B,EAAY3B,cAAcC,eAC5B,OAAdlvB,QAAoCz0C,IAAdy0C,IACtBA,EAAYgvB,EAAcroE,QAE9BojB,EAAKkiD,oBAAsBv8C,EAC3BwhD,GAAWlC,EAAehvB,EAAWj2B,GAMzC,SAAS8oD,EAAoBC,EAAe/oD,GACxC,IAAIgpD,EAAiBxG,GAAsBxiD,GAC3C,GAAKgpD,GAAkBA,IAAmBD,KACzB,GAAb/oD,EAAKmhB,OADT,CAWAnhB,EAAKmhB,OAAS,GACd,IAAI8nC,EAAiBD,EAAejxD,SAASmxD,gBACxCD,IACDA,EAAiBD,EAAejxD,SAASmxD,oBAE7CD,EAAetrE,KAAKqiB,GAKxB,SAASmpD,EAA4BrB,EAASzD,GAC1C,KAAoB,EAAhBA,EAAQ7/D,OAAZ,CAGAsjE,EAAQsB,WAAa,EACrB/E,EAAQ7/D,OAAS,EAEjB,IADA,IAAIi+D,EAAgB4B,EAAQn4D,OACrBu2D,GACHA,EAAc4G,YAAc,EAC5B5G,EAAgBA,EAAcv2D,QAXlCi9D,CAA4BnpD,EAAK9T,OAAO1G,IAAKwa,EAAKyiD,gBA1BlDqG,CAAoBjC,EAAa7mD,GACjCqgD,GAASgB,mBAAmBrhD,GAE5BgnD,GAAyBH,EADV5wB,EAAY,EAAIgvB,EAAchvB,EAAY,GAAK,KACdj2B,GA2S5C6oD,CAAmBvtE,KAAK03D,MAAO13D,KAAKqtE,MAAO9oE,EAD5B+oE,EAAS5V,OAExB4V,EAASlW,yBAAyBp3D,MAC3B04D,GAEX4J,EAAkBzhE,UAAU4iE,KAAO,SAAU/K,EAASoD,GAClD,GAAIpD,EAAQ95B,UACR,MAAM,IAAIh5B,MAAM,oDAEpB,IAAIs2D,EAAgBl8D,KAAK6pE,eAAexiE,QAAQqxD,EAAQhB,OAExD,OAnPR,SAASsW,EAAiBzC,EAAa0C,EAAcC,GACjD,IAAIvE,EAAgB4B,EAAY3B,cAAcC,eAC1CnlD,EAAOilD,EAAcsE,GACzBzC,GAAgB7B,EAAesE,GACX,MAAhBC,IACAA,EAAevE,EAAcroE,QAEjCuqE,GAAWlC,EAAeuE,EAAcxpD,GAGxCqgD,GAASgB,mBAAmBrhD,GAC5B+mD,GAAiB/mD,GAEjBgnD,GAAyBH,EADV2C,EAAe,EAAIvE,EAAcuE,EAAe,GAAK,KACpBxpD,GAqO5CspD,CAAiBhuE,KAAKqtE,MAAOnR,EAAeJ,GACrCpD,GAEX4J,EAAkBzhE,UAAUwG,QAAU,SAAUqxD,GAC5C,OAAO14D,KAAK6pE,eAAexiE,QAAQqxD,EAAQhB,QAE/C4K,EAAkBzhE,UAAUiuC,OAAS,SAAUvqC,GAC3C,IAAIiiC,EAAW8kC,GAAmBtrE,KAAKqtE,MAAO9oE,GAC1CiiC,GACAu+B,GAASU,YAAYj/B,IAG7B87B,EAAkBzhE,UAAUg2D,OAAS,SAAUtyD,GAC3C,IAAImgB,EAAO4mD,GAAmBtrE,KAAKqtE,MAAO9oE,GAC1C,OAAOmgB,EAAO,IAAIkoD,GAASloD,GAAQ,MAEhC49C,EApG2B,GAsGtC,SAAS6L,GAAwBzpD,GAC7B,OAAO,IAAIkoD,GAASloD,GAExB,IAAIkoD,GAA0B,WAC1B,SAASA,EAASlV,GACd13D,KAAK03D,MAAQA,EACb13D,KAAKq2D,kBAAoB,KACzBr2D,KAAKo2D,QAAU,KAmEnB,OAjEAh2D,OAAOwD,eAAegpE,EAAS/rE,UAAW,aACtCyI,IAAK,WAAc,OAxsB3B,SAAS8kE,EAAgB1pD,GACrB,IAAI2pD,KAEJ,OADA1F,GAAqBjkD,EAAM,OAAiBxe,OAAWA,EAAWmoE,GAC3DA,EAqsBuBD,CAAgBpuE,KAAK03D,QAC/CpiD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAegpE,EAAS/rE,UAAW,WACtCyI,IAAK,WAAc,OAAOtJ,KAAK03D,MAAMjkD,SACrC6B,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAegpE,EAAS/rE,UAAW,aACtCyI,IAAK,WAAc,OAAoD,IAAzB,IAAnBtJ,KAAK03D,MAAM7xB,QACtCvwB,YAAY,EACZC,cAAc,IAElBq3D,EAAS/rE,UAAUk2D,aAAe,WAAc2P,GAAwB1mE,KAAK03D,QAC7EkV,EAAS/rE,UAAUg2D,OAAS,WAAc72D,KAAK03D,MAAM7xB,QAAS,GAC9D+mC,EAAS/rE,UAAUo2D,cAAgB,WAC/B,IAAIqX,EAAKtuE,KAAK03D,MAAMuP,KAAK3nC,gBACrBgvC,EAAG92B,OACH82B,EAAG92B,QAEP,IACIutB,GAASQ,mBAAmBvlE,KAAK03D,OAErC,QACQ4W,EAAG7nD,KACH6nD,EAAG7nD,QAIfmmD,EAAS/rE,UAAUq2D,eAAiB,WAAc6N,GAASS,mBAAmBxlE,KAAK03D,QACnFkV,EAAS/rE,UAAUm2D,SAAW,WAAch3D,KAAK03D,MAAM7xB,OAAS,GAChE+mC,EAAS/rE,UAAU8e,UAAY,SAAUytC,GAChCptD,KAAK03D,MAAM6W,cACZvuE,KAAK03D,MAAM6W,gBAEfvuE,KAAK03D,MAAM6W,YAAYlsE,KAAK+qD,IAEhCwf,EAAS/rE,UAAU+iC,QAAU,WACrB5jC,KAAKo2D,QACLp2D,KAAKo2D,QAAQ5zB,WAAWxiC,MAEnBA,KAAKq2D,mBACVr2D,KAAKq2D,kBAAkBQ,OAAO72D,KAAKq2D,kBAAkBhvD,QAAQrH,OAEjE+kE,GAASU,YAAYzlE,KAAK03D,QAE9BkV,EAAS/rE,UAAUy2D,iBAAmB,WAClCt3D,KAAKo2D,QAAU,KACfqV,GAAiBzrE,KAAK03D,OACtBqN,GAASgB,mBAAmB/lE,KAAK03D,QAErCkV,EAAS/rE,UAAU02D,eAAiB,SAAUC,GAC1C,GAAIx3D,KAAKq2D,kBACL,MAAM,IAAIzwD,MAAM,qDAEpB5F,KAAKo2D,QAAUoB,GAEnBoV,EAAS/rE,UAAUu2D,yBAA2B,SAAUC,GACpD,GAAIr3D,KAAKo2D,QACL,MAAM,IAAIxwD,MAAM,iEAEpB5F,KAAKq2D,kBAAoBgB,GAEtBuV,EAvEkB,GAyE7B,SAAS4B,GAAmB9pD,EAAMxa,GAC9B,OAAO,IAAI+tD,GAAavzC,EAAMxa,GAElC,IAAI+tD,GAA8B,SAAUrC,GAExC,SAASqC,EAAawW,EAAa/D,GAC/B,IAAI3wD,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAGjC,OAFA+Z,EAAM00D,YAAcA,EACpB10D,EAAM2wD,KAAOA,EACN3wD,EAYX,OAjBArZ,EAAUu3D,EAAcrC,GAOxBqC,EAAap3D,UAAU03D,mBAAqB,SAAU9kD,GAClD,OAAO,IAAIm5D,GAAS7H,GAASxM,mBAAmBv4D,KAAKyuE,YAAazuE,KAAK0qE,KAAM1qE,KAAK0qE,KAAKptD,QAAQb,SAAUhJ,KAE7GrT,OAAOwD,eAAeq0D,EAAap3D,UAAW,cAC1CyI,IAAK,WACD,OAAO,IAAIuvD,GAAW8L,GAAc3kE,KAAKyuE,YAAazuE,KAAK0qE,KAAK7lD,WAAWyiD,gBAE/EhyD,YAAY,EACZC,cAAc,IAEX0iD,EAlBsB,CAmB/B2J,IACF,SAAS8M,GAAiBhqD,EAAMyoD,GAC5B,OAAO,IAAIF,GAAUvoD,EAAMyoD,GAE/B,IAAIF,GAA2B,WAC3B,SAASA,EAAUvoD,EAAMyoD,GACrBntE,KAAK0kB,KAAOA,EACZ1kB,KAAKmtE,MAAQA,EAOjB,OALAF,EAAUpsE,UAAUyI,IAAM,SAAUpE,EAAOqE,GAGvC,YAFsB,IAAlBA,IAA4BA,EAAgBoH,GAASH,oBAElDu0D,GAASW,WAAW1lE,KAAK0kB,KAAM1kB,KAAKmtE,QADhBntE,KAAKmtE,OAA8D,IAAlC,SAAnBntE,KAAKmtE,MAAMjkE,QACsBA,MAAO,EAAchE,MAAOA,EAAOghE,SAAUA,GAAShhE,IAAUqE,IAEvI0jE,EAVmB,GA0B9B,SAAS0B,GAAiBjqD,GACtB,OAAO,IAAIkqD,GAAgBlqD,EAAK6a,UAEpC,IAAIqvC,GAAiC,WACjC,SAASA,EAAgBC,GACrB7uE,KAAK6uE,SAAWA,EA4FpB,OA1FAD,EAAgB/tE,UAAU46C,kBAAoB,SAAUqzB,GACpD,OAAO9uE,KAAK6uE,SAASpzB,kBAAkBqzB,IAE3CF,EAAgB/tE,UAAU4vB,cAAgB,SAAU7f,EAAQm+D,GACxD,IAAI1rE,EAAKpB,EAAO8nE,GAAegF,GAAmB,GAC9C/8C,EAAKhyB,KAAK6uE,SAASp+C,cADkDptB,EAAG,GAAjBA,EAAG,IAK9D,OAHIuN,GACA5Q,KAAK6uE,SAASn+C,YAAY9f,EAAQohB,GAE/BA,GAEX48C,EAAgB/tE,UAAUmuE,eAAiB,SAAU1uC,GAAe,OAAOA,GAC3EsuC,EAAgB/tE,UAAUouE,qBAAuB,SAAUC,GACvD,IAAIvoB,EAAU3mD,KAAK6uE,SAAS92B,cAAc,IAI1C,OAHIm3B,GACAlvE,KAAK6uE,SAASn+C,YAAYw+C,EAAevoB,GAEtCA,GAEXioB,EAAgB/tE,UAAUqhC,WAAa,SAAUgtC,EAAentE,GAC5D,IAAIo0B,EAAOn2B,KAAK6uE,SAAS3sC,WAAWngC,GAIpC,OAHImtE,GACAlvE,KAAK6uE,SAASn+C,YAAYw+C,EAAe/4C,GAEtCA,GAEXy4C,EAAgB/tE,UAAUsuE,aAAe,SAAUD,EAAe9vC,GAC9D,IAAK,IAAIj+B,EAAI,EAAGA,EAAIi+B,EAAM99B,OAAQH,IAC9BnB,KAAK6uE,SAASn+C,YAAYw+C,EAAe9vC,EAAMj+B,KAGvDytE,EAAgB/tE,UAAUuuE,gBAAkB,SAAUj5C,EAAMk5C,GAGxD,IAFA,IAAIH,EAAgBlvE,KAAK6uE,SAASj5C,WAAWO,GACzCzD,EAAc1yB,KAAK6uE,SAASn8C,YAAYyD,GACnCh1B,EAAI,EAAGA,EAAIkuE,EAAc/tE,OAAQH,IACtCnB,KAAK6uE,SAAShrC,aAAaqrC,EAAeG,EAAcluE,GAAIuxB,IAGpEk8C,EAAgB/tE,UAAU2hC,WAAa,SAAU6sC,GAC7C,IAAK,IAAIluE,EAAI,EAAGA,EAAIkuE,EAAc/tE,OAAQH,IAAK,CAC3C,IAAIg1B,EAAOk5C,EAAcluE,GACrB+tE,EAAgBlvE,KAAK6uE,SAASj5C,WAAWO,GAC7Cn2B,KAAK6uE,SAASn9C,YAAYw9C,EAAe/4C,KAGjDy4C,EAAgB/tE,UAAU4kE,YAAc,SAAUnlC,EAAagvC,GAC3D,IAAK,IAAInuE,EAAI,EAAGA,EAAImuE,EAAahuE,OAAQH,IACrCnB,KAAK6uE,SAAS7sC,YAAYstC,EAAanuE,KAG/CytE,EAAgB/tE,UAAUy7C,OAAS,SAAUgrB,EAAezkE,EAAMuqD,GAC9D,OAAOptD,KAAK6uE,SAASvyB,OAAOgrB,EAAezkE,EAAMuqD,IAErDwhB,EAAgB/tE,UAAU0uE,aAAe,SAAU1qE,EAAQhC,EAAMuqD,GAC7D,OAAOptD,KAAK6uE,SAASvyB,OAAOz3C,EAAQhC,EAAMuqD,IAE9CwhB,EAAgB/tE,UAAU2uE,mBAAqB,SAAUlI,EAAemI,EAAcC,GAClF1vE,KAAK6uE,SAAStgC,YAAY+4B,EAAemI,EAAcC,IAE3Dd,EAAgB/tE,UAAU8uE,oBAAsB,SAAUrI,EAAeyH,EAAkBa,GACvF,IAAIvsE,EAAKpB,EAAO8nE,GAAegF,GAAmB,GAAIc,EAAKxsE,EAAG,GAAIR,EAAOQ,EAAG,GACtD,MAAlBusE,EACA5vE,KAAK6uE,SAASzzB,aAAaksB,EAAezkE,EAAM+sE,EAAgBC,GAGhE7vE,KAAK6uE,SAASx8C,gBAAgBi1C,EAAezkE,EAAMgtE,IAG3DjB,EAAgB/tE,UAAUivE,oBAAsB,SAAUxI,EAAemI,EAAcC,KACvFd,EAAgB/tE,UAAUkvE,gBAAkB,SAAUzI,EAAe54B,EAAWshC,GACxEA,EACAhwE,KAAK6uE,SAASjgC,SAAS04B,EAAe54B,GAGtC1uC,KAAK6uE,SAAShgC,YAAYy4B,EAAe54B,IAGjDkgC,EAAgB/tE,UAAUovE,gBAAkB,SAAU3I,EAAe4I,EAAWC,GAC1D,MAAdA,EACAnwE,KAAK6uE,SAASrmC,SAAS8+B,EAAe4I,EAAWC,GAGjDnwE,KAAK6uE,SAASrgC,YAAY84B,EAAe4I,IAGjDtB,EAAgB/tE,UAAUuvE,oBAAsB,SAAU9I,EAAe+I,EAAY/sE,GACjFgkE,EAAc+I,GAAY7uE,MAAM8lE,EAAehkE,IAEnDsrE,EAAgB/tE,UAAUyvE,QAAU,SAAUC,EAAel9D,GAAQrT,KAAK6uE,SAASpkC,SAAS8lC,EAAel9D,IAC3Gu7D,EAAgB/tE,UAAU2vE,QAAU,WAAc,MAAM,IAAI5qE,MAAM,6CAC3DgpE,EA9FyB,GAgGpC,SAASzJ,GAAkBsL,EAAY7/D,EAAQ8/D,EAAqBxmE,GAChE,OAAO,IAAIymE,GAAaF,EAAY7/D,EAAQ8/D,EAAqBxmE,GAErE,IAAIymE,GAA8B,WAC9B,SAASA,EAAaC,EAAah4D,EAASi4D,EAAsBnG,GAC9D1qE,KAAK4wE,YAAcA,EACnB5wE,KAAK4Y,QAAUA,EACf5Y,KAAK6wE,qBAAuBA,EAC5B7wE,KAAK0qE,KAAOA,EACZ1qE,KAAK8wE,qBACL9wE,KAAKmxD,YAAa,EAClBnxD,KAAK4I,SAAW5I,KA9tBxB,SAAS+wE,EAAa91D,GAGlB,IAFA,IAAI/Q,EAAM+Q,EAAKyvD,KACXrkE,EAAY4U,EAAKtC,WAAa,IAAIpY,MAAM2J,EAAI7D,UAAU/E,QACjDH,EAAI,EAAGA,EAAI+I,EAAI7D,UAAU/E,OAAQH,IAAK,CAC3C,IAAI6vE,EAAU9mE,EAAI7D,UAAUlF,GACN,KAAhB6vE,EAAQ9nE,YAEWhD,IAAjBG,EAAUlF,KACVkF,EAAUlF,GAAK0pE,GAAwB5vD,EAAM+1D,KAutBrDD,CAAa/wE,MAiCjB,OA/BA2wE,EAAa9vE,UAAUyI,IAAM,SAAUpE,EAAOqE,EAAe0nE,QACnC,IAAlB1nE,IAA4BA,EAAgBoH,GAASH,yBACrC,IAAhBygE,IAA0BA,EAAc3xE,EAAQ0F,YAAYmE,SAChE,IAAID,EAAQ,EAOZ,OANI+nE,EAAc3xE,EAAQ0F,YAAYK,SAClC6D,GAAS,EAEJ+nE,EAAc3xE,EAAQ0F,YAAYI,OACvC8D,GAAS,GAENohE,GAAmBtqE,MAAQkF,MAAOA,EAAOghE,SAAUA,GAAShhE,GAAQgE,MAAOA,GAASK,IAE/FnJ,OAAOwD,eAAe+sE,EAAa9vE,UAAW,YAC1CyI,IAAK,WAAc,OAAOtJ,KAAKsJ,IAAItJ,KAAK4wE,cACxCt7D,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+sE,EAAa9vE,UAAW,4BAC1CyI,IAAK,WAAc,OAAOtJ,KAAKsJ,IAAIgsD,KACnChgD,YAAY,EACZC,cAAc,IAElBo7D,EAAa9vE,UAAU+iC,QAAU,WAC7B,GAAI5jC,KAAKmxD,WACL,MAAM,IAAIvrD,MAAM,iBAAmBkB,EAAU9G,KAAKktB,SAAStsB,aAAe,gCAE9EZ,KAAKmxD,YAAa,EApnB1B,SAAS+f,EAAsB9e,EAAU+e,GAGrC,IAFA,IAAIjnE,EAAMkoD,EAASsY,KACf9rC,EAAY,IAAIviB,IACXlb,EAAI,EAAGA,EAAI+I,EAAI7D,UAAU/E,OAAQH,IAEtC,GAAoB,OADN+I,EAAI7D,UAAUlF,GAChB+H,MAAgC,CACxC,IAAIgkB,EAAWklC,EAASz5C,WAAWxX,GACnC,GAAI+rB,GAAYA,IAAag9C,GAAiB,CAC1C,IAAIvqD,EAAYuN,EAAStN,YACA,mBAAdD,GAA6Bif,EAAUlpB,IAAIwX,KAClDvN,EAAUne,MAAM0rB,GAChB0R,EAAU+P,IAAIzhB,MA0mB1BgkD,CAAsBlxE,MACtBA,KAAK8wE,kBAAkBpkE,QAAQ,SAAUgvC,GAAY,OAAOA,OAEhEi1B,EAAa9vE,UAAU8e,UAAY,SAAUytC,GAAYptD,KAAK8wE,kBAAkBzuE,KAAK+qD,IAC9EujB,EA1CsB,GAoD7BS,GAAqBlL,GAAS5M,IAC9B+X,GAAoBnL,GAASxM,IAC7B4X,GAAqBpL,GAASrN,IAC9B0Y,GAA2BrL,GAASlE,IACpCwP,GAAsBtL,GAAStE,IAC/B6P,GAA4BvL,GAAShF,IACrCwQ,GAAwBxL,GAASv1D,IACjCghE,GAAwBzL,GAASz1D;;;;;;;OA+BrC,SAASi6D,GAAKkH,EAAY1oE,EAAO4+D,EAAmBmB,EAAY/jE,EAAOnD,EAAOoM,EAAMs4D,EAAU7nD,GAC1F,IAAIvb,EAAKwkE,GAAuBC,GAAoBC,EAAiB1kE,EAAG0kE,eAAgBE,EAAa5kE,EAAG4kE,WAAYD,EAAkB3kE,EAAG2kE,gBACpIppD,IACDA,MAEC6nD,IACDA,MAKJ1kE,EAAQ2F,EAAkB3F,GAC1B,IAAI8vE,EAAU1J,GAAah6D,EAAMrH,EAAU5B,IAC3C,OAEI2f,WAAY,EACZjU,OAAQ,KACRswB,aAAc,KACd9F,cAAe,EACf02C,aAAc,EAEdF,WAAYA,EACZ1oE,MAAOA,EACP6kE,WAAY,EACZgE,iBAAkB,EAClBC,oBAAqB,EAAGjK,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,WAAYA,EACtGkB,gBAAiB,EAAGF,WAAYA,EAAYxC,SAAUA,EACtDiD,aAAcM,GAAiBvD,GAAW7nD,QAASA,EACnDtB,QAAS,KACTtL,UAAY9M,MAAOA,EAAOnD,MAAOA,EAAOoM,KAAM0jE,GAC9Cx+D,KAAM,KACN4+D,MAAO,KACPzI,UAAW,MAGnB,SAAS0I,GAAuBxtD,EAAMxa,GAClC,OAAOioE,GAA0BztD,EAAMxa,GAE3C,SAASkoE,GAAmB1tD,EAAMxa,GAG9B,IADA,IAAIk/D,EAAW1kD,EACR0kD,EAASx4D,SAAW62D,GAAgB2B,IACvCA,EAAWA,EAASx4D,OAKxB,OAAOyhE,GAAYjJ,EAASx4D,OAAQw2D,GAAagC,IAFtB,EAEuDl/D,EAAI8H,SAASjQ,MAAOmI,EAAI8H,SAAS7D,MAEvH,SAASmkE,GAAwB5tD,EAAMxa,GAEnC,IAEIgjB,EAAWmlD,GAAY3tD,EAAMxa,EAAI0G,QAFG,MAAZ1G,EAAIhB,OAAiC,EAEEgB,EAAI8H,SAASjQ,MAAOmI,EAAI8H,SAAS7D,MACpG,GAAIjE,EAAI0U,QAAQtd,OACZ,IAAK,IAAIH,EAAI,EAAGA,EAAI+I,EAAI0U,QAAQtd,OAAQH,IAAK,CACzC,IAAIoxE,EAASroE,EAAI0U,QAAQzd,GACrBqxE,EAAmBtlD,EAASqlD,EAAOtuE,UACvC,IAAIq1B,GAAak5C,GAKb,MAAM,IAAI5sE,MAAM,WAAa2sE,EAAOtuE,SAAW,wBAA0BipB,EAAStsB,YAAYiC,KAAO,MAJrG,IAAI45C,EAAe+1B,EAAiBj5C,UAAUk5C,GAAoB/tD,EAAMxa,EAAI0G,OAAOiU,UAAW0tD,EAAO52B,YACrGj3B,EAAK6pD,YAAYrkE,EAAI4nE,YAAc3wE,GAAKs7C,EAAa/Y,YAAYjgC,KAAKg5C,GAOlF,OAAOvvB,EAEX,SAASulD,GAAoB/tD,EAAMngB,EAAOo3C,GACtC,OAAO,SAAUqrB,GAAS,OAAOD,GAAcriD,EAAMngB,EAAOo3C,EAAWqrB,IAmF3E,SAASmL,GAA0BztD,EAAMxa,GAErC,IAAIwoE,GAAoC,KAAZxoE,EAAIhB,OAAsC,EAClEuhE,EAAcvgE,EAAI8H,SACtB,OAAoB,UAAZ9H,EAAIhB,OACR,KAAK,IACD,OAAOmpE,GAAY3tD,EAAMxa,EAAI0G,OAAQ8hE,EAAsBjI,EAAY1oE,MAAO0oE,EAAYt8D,MAC9F,KAAK,KACD,OA0BZ,SAASwkE,EAAYjuD,EAAMyoD,EAAOuF,EAAsBrzE,EAAS8O,GAC7D,IAAI2K,EAAM3K,EAAK7M,OACf,OAAQwX,GACJ,KAAK,EACD,OAAOzZ,IACX,KAAK,EACD,OAAOA,EAAQqmE,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,KACtE,KAAK,EACD,OAAO9O,EAAQqmE,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,IAAKu3D,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,KAC9H,KAAK,EACD,OAAO9O,EAAQqmE,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,IAAKu3D,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,IAAKu3D,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,KACtL,QAEI,IADA,IAAIi9D,EAAY7qE,MAAMuY,GACb3X,EAAI,EAAGA,EAAI2X,EAAK3X,IACrBiqE,EAAUjqE,GAAKukE,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAKhN,IAEtE,OAAO9B,EAAQmC,WAAM,EAAQe,EAAS6oE,KA1C/BuH,CAAYjuD,EAAMxa,EAAI0G,OAAQ8hE,EAAsBjI,EAAY1oE,MAAO0oE,EAAYt8D,MAC9F,KAAK,KACD,OAAOu3D,GAAWhhD,EAAMxa,EAAI0G,OAAQ8hE,EAAsBjI,EAAYt8D,KAAK,IAC/E,KAAK,IACD,OAAOs8D,EAAY1oE,OAG/B,SAASswE,GAAY3tD,EAAMyoD,EAAOuF,EAAsB3uE,EAAMoK,GAC1D,IAAI2K,EAAM3K,EAAK7M,OACf,OAAQwX,GACJ,KAAK,EACD,OAAO,IAAI/U,EACf,KAAK,EACD,OAAO,IAAIA,EAAK2hE,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,KACvE,KAAK,EACD,OAAO,IAAIpK,EAAK2hE,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,IAAKu3D,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,KAC/H,KAAK,EACD,OAAO,IAAIpK,EAAK2hE,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,IAAKu3D,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,IAAKu3D,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAK,KACvL,QAEI,IADA,IAAIi9D,EAAY,IAAI7qE,MAAMuY,GACjB3X,EAAI,EAAGA,EAAI2X,EAAK3X,IACrBiqE,EAAUjqE,GAAKukE,GAAWhhD,EAAMyoD,EAAOuF,EAAsBvkE,EAAKhN,IAEtE,OAAO,IAAK4C,EAAKN,KAAKjC,MAAMuC,EAAMxB,QAAU,GAAS6oE,MAuCjE,IAAIwH,MACJ,SAASlN,GAAWhhD,EAAMyoD,EAAOuF,EAAsBnI,EAAQhhE,GAE3D,QADsB,IAAlBA,IAA4BA,EAAgBoH,GAASH,oBACtC,EAAf+5D,EAAOrhE,MACP,OAAOqhE,EAAOrlE,MAElB,IAAIilB,EAAYzF,EACG,EAAf6lD,EAAOrhE,QACPK,EAAgB,MAEpB,IAAIspE,EAActI,EAAOrE,SACrB2M,IAAgBpB,KAGhBiB,KAA0BvF,IAASA,EAAM7vD,QAAQmkB,gBAEjD0rC,GAAyB,EAAf5C,EAAOrhE,QACjBwpE,GAAuB,EACvBvF,EAAQA,EAAMv8D,QAGlB,IADA,IAAIkiE,EAAapuD,EACVouD,GAAY,CACf,GAAI3F,EACA,OAAQ0F,GACJ,KAAKzB,GAED,OAAOzC,GADQoE,GAAaD,EAAY3F,EAAOuF,IAGnD,KAAKrB,GAED,OADe0B,GAAaD,EAAY3F,EAAOuF,GAC/BnzC,SAEpB,KAAK+xC,GACD,OAAO,IAAIzY,GAAW8L,GAAcmO,EAAY3F,EAAMtoD,WAAWyiD,eACrE,KAAKiK,GACD,OAAO5M,GAAcmO,EAAY3F,EAAMtoD,WAAW+kD,cACtD,KAAK4H,GACD,GAAIrE,EAAM7vD,QAAQb,SACd,OAAOkoD,GAAcmO,EAAY3F,EAAMtoD,WAAWpI,SAEtD,MAEJ,KAAKg1D,GAED,OAAOtD,GADM4E,GAAaD,EAAY3F,EAAOuF,IAGjD,KAAKhB,GACL,KAAKC,GACD,OAAOjD,GAAiBoE,EAAY3F,GACxC,QACI,IAAI6F,GAAiBN,EAAuBvF,EAAM7vD,QAAQ21D,aACtD9F,EAAM7vD,QAAQ41D,iBAAiBL,GACnC,GAAIG,EAAe,CACf,IAAIG,EAAevO,GAAekO,EAAYE,EAAcnuD,WAK5D,OAJKsuD,IACDA,GAAiBjmD,SAAUilD,GAA0BW,EAAYE,IACjEF,EAAW1zC,MAAM4zC,EAAcnuD,WAAasuD,GAEzCA,EAAajmD,UAIpCwlD,EAAuBjL,GAAgBqL,GACvC3F,EAAQ/F,GAAa0L,GACrBA,EAAaA,EAAWliE,OACL,EAAf25D,EAAOrhE,QACP4pE,EAAa,MAGrB,IAAI/wE,EAAQooB,EAAU88C,KAAKr+D,SAASU,IAAIihE,EAAOrlE,MAAO0tE,IACtD,OAAI7wE,IAAU6wE,IACVrpE,IAAkBqpE,GAMX7wE,EAEJooB,EAAU88C,KAAK7U,SAASxpD,SAASU,IAAIihE,EAAOrlE,MAAOqE,GAE9D,SAASwpE,GAAaruD,EAAMyoD,EAAOuF,GAC/B,IAAItJ,EACJ,GAAIsJ,EACAtJ,EAAWzE,GAAcjgD,EAAMyoD,EAAMtoD,WAAW4c,mBAIhD,IADA2nC,EAAW1kD,EACJ0kD,EAASx4D,SAAW62D,GAAgB2B,IACvCA,EAAWA,EAASx4D,OAG5B,OAAOw4D,EAEX,SAASgK,GAAW1uD,EAAMyuD,EAAcjpE,EAAKm8D,EAAYtkE,EAAOsxE,GAC5D,GAAgB,MAAZnpE,EAAIhB,MAA+B,CACnC,IAAIkgE,EAAWzE,GAAcjgD,EAAMxa,EAAI0G,OAAOiU,WAAW4c,cAChC,EAArB2nC,EAASl/D,IAAIhB,QACbkgE,EAASvjC,OAAS,GAS1B,GADAstC,EAAajmD,SALChjB,EAAIu8D,SAASJ,GACJxjE,MAIWd,EAClB,OAAZmI,EAAIhB,MAAgC,CACpCmqE,EAAUA,MACV,IAAItoD,EAAW4P,GAAaG,OAAOpW,EAAK4hD,UAAUp8D,EAAIkxB,aAAeirC,IAErEgN,EADgBnpE,EAAIu8D,SAASJ,GACXiN,iBACd,IAAIjlB,GAAatjC,EAAUhpB,EAA6C,IAAxB,EAAb2iB,EAAKmhB,QAGhD,OADAnhB,EAAK4hD,UAAUp8D,EAAIkxB,aAAeirC,GAActkE,EACzCsxE,EA6CX,SAASE,GAAgC7uD,EAAMysD,GAC3C,GAAMzsD,EAAKxa,IAAI4jE,UAAYqD,EAK3B,IAFA,IAAI/xC,EAAQ1a,EAAKxa,IAAIk1B,MACjBolC,EAAY,EACPrjE,EAAI,EAAGA,EAAIi+B,EAAM99B,OAAQH,IAAK,CACnC,IAAI4nE,EAAU3pC,EAAMj+B,GAChB+1B,EAAW6xC,EAAQn4D,OASvB,KARKsmB,GAAY6xC,EAAQ7/D,MAAQioE,GAE7BqC,GAAuB9uD,EAAMvjB,EAAG4nE,EAAQ7/D,MAAQioE,EAAY3M,KAEtB,IAArCuE,EAAQgF,WAAaoD,KAEtBhwE,GAAK4nE,EAAQE,YAEV/xC,GAA8B,EAAjBA,EAAShuB,OACzB/H,IAAM+1B,EAASrS,UAAYqS,EAAS+xC,YAEhC/xC,EAAS66C,iBAAmBZ,IAC5B3M,EAAYiP,GAA+B/uD,EAAMwS,EAAUi6C,EAAY3M,IAE3EttC,EAAWA,EAAStmB,QAIhC,SAAS6iE,GAA+B/uD,EAAMyoD,EAAOgE,EAAY3M,GAC7D,IAAK,IAAIrjE,EAAIgsE,EAAMtoD,UAAY,EAAG1jB,GAAKgsE,EAAMtoD,UAAYsoD,EAAMlE,WAAY9nE,IAAK,CAC5E,IAAI4nE,EAAUrkD,EAAKxa,IAAIk1B,MAAMj+B,GACzB4nE,EAAQ7/D,MAAQioE,GAChBqC,GAAuB9uD,EAAMvjB,EAAG4nE,EAAQ7/D,MAAQioE,EAAY3M,KAGhErjE,GAAK4nE,EAAQE,WAEjB,OAAOzE,EAEX,SAASgP,GAAuB9uD,EAAMngB,EAAO4sE,EAAY3M,GACrD,IAAI2O,EAAevO,GAAelgD,EAAMngB,GACxC,GAAK4uE,EAAL,CAGA,IAAInhE,EAAWmhE,EAAajmD,SACvBlb,IAGL+yD,GAASC,eAAetgD,EAAMngB,GACb,QAAb4sE,GACA1M,GAA4B//C,EAAM,IAA6C8/C,IAC/ExyD,EAASoN,qBAEI,QAAb+xD,GACAn/D,EAASsN,wBAEI,QAAb6xD,GACA1M,GAA4B//C,EAAM,IAA0C8/C,IAC5ExyD,EAASwN,kBAEI,QAAb2xD,GACAn/D,EAAS0N,qBAEI,OAAbyxD,GACAn/D,EAAS4N;;;;;;;OAWjB,IAAI8zD,GAA4C,SAAU9d,GAKtD,SAAS+d,EAA4BvhB,GACjC,IAAIr4C,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAEjC,OADA+Z,EAAMq4C,SAAWA,EACVr4C,EAOX,OAdArZ,EAAUizE,EAA6B/d,GASvC+d,EAA4B9yE,UAAUw0D,wBAA0B,SAAU94C,GAEtE,IAAIuxC,EAAezsC,GAAgB9E,GACnC,OAAO,IAAIq3D,GAAmB9lB,EAAc9tD,KAAKoyD,WAE9CuhB,EAfoC,CAgB7Cre,IACF,SAASue,GAAW9sE,GAChB,IAAI+sE,KACJ,IAAK,IAAIC,KAAehtE,EAChBA,EAAItG,eAAeszE,IAEnBD,EAAMzxE,MAAO4B,SADE8C,EAAIgtE,GACczH,aAAcyH,IAGvD,OAAOD,EAKX,IAAIE,GAAe,IAAI7jE,GAAe,sBAAwBlK,WAAY,OAAQ5G,QAAS,WAAc,OAAO4uD,GAAkBhlD,EAAOgrE,QAKrIA,GAAY,IAAI9jE,GAAe,mBAC/BlK,WAAY,OACZ5G,QAAS,WAAc,OAAO6d,MAsB9B02D,GAAoC,SAAUhe,GAM9C,SAASse,EAAoBpmB,EAAcsE,GACvC,IAAIr4C,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAUjC,OATA+Z,EAAM+zC,aAAeA,EACrB/zC,EAAMq4C,SAAWA,EACjBr4C,EAAM27C,cAAgB5H,EAAatnD,KACnCuT,EAAMiB,SAAW8yC,EAAa5tC,UAAU,GAAG,GAG3CnG,EAAMyE,mBACFsvC,EAAatvC,mBAAqBjc,GAAU,KAAMurD,EAAatvC,uBACnEzE,EAAMo6D,kBAAoB/hB,EACnBr4C,EAoEX,OApFArZ,EAAUwzE,EAAqBte,GAkB/Bx1D,OAAOwD,eAAeswE,EAAoBrzE,UAAW,UACjDyI,IAAK,WACD,OAAOuqE,GAAW7zE,KAAK8tD,aAAanvC,SAExCrJ,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeswE,EAAoBrzE,UAAW,WACjDyI,IAAK,WACD,OAAOuqE,GAAW7zE,KAAK8tD,aAAalvC,UAExCtJ,YAAY,EACZC,cAAc,IAElB2+D,EAAoBrzE,UAAUC,OAAS,SAAU8H,EAAUitD,EAAkBC,EAAoB1D,GAC7F,IAAIgiB,OAA4CluE,IAAvB4vD,EAErBue,GADJjiB,EAAWA,GAAYpyD,KAAKoyD,UAvDpC,SAASkiB,EAAsBD,EAAkBhnD,GAC7C,OACI/jB,IAAK,SAAUpE,EAAOqE,EAAeL,GACjC,IAAInH,EAAQsyE,EAAiB/qE,IAAIpE,EAAO0tE,GAAuC1pE,GAC/E,OAAInH,IAAU6wE,IACVrpE,IAAkBqpE,GAMX7wE,EAEJsrB,EAAe/jB,IAAIpE,EAAOqE,EAAeL,KA2ClBorE,CAAsB1rE,EAAUwpD,EAASxpD,UAAYA,EACnF02B,EAAkB+0C,EAAiB/qE,IAAIkwD,GAAkBp5B,IACzDrJ,EAAYs9C,EAAiB/qE,IAAI+tB,GAAW,MAC5Ck9C,EAAYH,EACZ77B,GAAcv4C,KAAKgb,SAAUskB,EAAgBe,eAAe,KAAMrgC,KAAK8tD,eACvExS,GAAkBhc,EAAiBw2B,GACnC0e,EAAYx0E,KAAK8tD,aAAajuC,OAAS,IACvC,IACAunB,EAAegtC,EAA0DnmB,KAArComB,EAAiB/qE,IAAI0qE,IACzDz0C,EAAWD,EAAgBe,eAAek0C,EAAWv0E,KAAK8tD,cAC1DgI,GAAsBye,IAEtBp0C,GAAqBZ,GACjBA,EAAS6b,aAAam5B,EAAW,aAAcxa,GAAQC,MACvDua,EAAUn5B,aAAa,aAAc2e,GAAQC,OAGrD,IAGIz9C,EACAk4D,EAJAC,EAAYv+B,GAAY,KAAMuE,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,MAAOtT,EAAaotC,EAAW,KAAM,KAAMl1C,EAAiBC,EAAUxI,EAAWs9C,GAE7JM,EAAWprD,GAAUmrD,EAAW,MAGpC,IACI,IAAIjzC,EAAgBksB,GAAwB4mB,EAAWv0E,KAAK8tD,aAAc4mB,EAAWp1C,EAAiBC,GACtGk1C,EAAehwD,GAAS,EAAGiwD,GACvB7e,IAIA4e,EAAa9yC,WACTk0B,EAAiB9uD,IAAI,SAAU6tE,GAAgB,OAAOr0E,MAAM+X,KAAKs8D,MAKzEr4D,EAAYsxC,GAAoBpsB,EAAezhC,KAAK8tD,aAAc4mB,EAAWttC,GAAc8mB,KAC3F9H,GAAcsuB,EAAWjzC,GACzBuT,GAAuB0/B,GAE3B,QACI9qD,GAAU+qD,GAEd,IAAIrR,EAAe,IAAIuR,GAAe70E,KAAK01D,cAAen5C,EAAWq7C,GAAiBiB,GAAY4b,EAAcC,GAAYA,EAAWD,GAKvI,OAJIL,IAEA9Q,EAAa9+C,SAAS8xC,WAAWl5B,MAAQq3C,GAEtCnR,GAEJ4Q,EArF4B,CAsFrCpf,IAUE+f,IAT2B,IAAInB,GASC,SAAU9d,GAE1C,SAASkf,EAAgBpf,EAAexoC,EAAUhD,EAAU6qD,EAAYpmD,GACpE,IAAI5U,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KASjC,OARA+Z,EAAMmQ,SAAWA,EACjBnQ,EAAMg7D,WAAaA,EACnBh7D,EAAM4U,OAASA,EACf5U,EAAMi7D,cACNj7D,EAAMmT,SAAWA,EACjBnT,EAAMyK,SAAWzK,EAAMizD,kBAAoB,IAAIvV,GAAYsd,GAC3Dh7D,EAAMyK,SAAS8xC,WAAa/f,GAAuBw+B,EAAWryD,IAAQ,MAAO,EAAGqyD,GAChFh7D,EAAM27C,cAAgBA,EACf37C,EAiBX,OA5BArZ,EAAUo0E,EAAiBlf,GAa3Bx1D,OAAOwD,eAAekxE,EAAgBj0E,UAAW,YAC7CyI,IAAK,WAAc,OAAO,IAAIujB,GAAa7sB,KAAK2uB,OAAQ3uB,KAAK+0E,aAC7Dz/D,YAAY,EACZC,cAAc,IAElBu/D,EAAgBj0E,UAAU+iC,QAAU,WAEhC5jC,KAAKg1E,WAAWtoE,QAAQ,SAAU/E,GAAM,OAAOA,MAC/C3H,KAAKg1E,WAAa,MACjBh1E,KAAKwkB,SAASoa,WAAa5+B,KAAKwkB,SAASof,WAE9CkxC,EAAgBj0E,UAAU8e,UAAY,SAAUytC,GAE5CptD,KAAKg1E,WAAW3yE,KAAK+qD,IAElB0nB,EA7BwB,CA8BjCjgB,KAcEogB,IACAC,OAAQ,WAORC,IACAD,OAAQ;;;;;;;;AAgBZ,SAASE,GAAcC,EAAO7tD,GAC1B,IAAK,IAAIrmB,EAAI,EAAGA,EAAIk0E,EAAM/zE,OAAQH,IAC9BqmB,EAAInlB,KAAKgzE,EAAMl0E;;;;;;;OAWvB,IAAIm0E,GAAS,IACTC,GAAmB,6CACnBC,GAAqB,qBACrBC,GAAY,wBACZC,GAAiB,iBACjBC,GAAa,6CAEbC,GAAmB,EACnBC,GAAqC,eACrCC,GAAyB,iCACzBC,GAAqB,4CACrBC,GAAiB,2BACjBC,GAA2B,OAC3BC,GAAwB,aAU5B,SAASC,GAAaC,GAClB,IAAKA,EACD,SAEJ,IAMIrjD,EANAsjD,EAAU,EACVC,KACAC,KACAC,EAAS,QAIb,IAFAA,EAAOC,UAAY,EAEZ1jD,EAAQyjD,EAAOnrE,KAAK+qE,IAAU,CACjC,IAAIM,EAAM3jD,EAAMxuB,MAChB,GAAgB,KAAZwuB,EAAM,IAEN,GADAujD,EAAWxK,MACc,GAArBwK,EAAWh1E,OAAa,CAExB,IAAIq1E,EAAQP,EAAQ9uE,UAAU+uE,EAASK,GACnCnB,GAAiBqB,KAAKD,GACtBJ,EAAQl0E,KAAKw0E,GAAcF,IAEtBA,GACLJ,EAAQl0E,KAAKs0E,GAEjBN,EAAUK,EAAM,OAGnB,CACD,GAAyB,GAArBJ,EAAWh1E,OAAa,CACxB,IAAIw1E,EAAcV,EAAQ9uE,UAAU+uE,EAASK,GAC7CH,EAAQl0E,KAAKy0E,GACbT,EAAUK,EAAM,EAEpBJ,EAAWj0E,KAAK,MAGxB,IAAIiF,EAAY8uE,EAAQ9uE,UAAU+uE,GAIlC,MAHiB,IAAb/uE,GACAivE,EAAQl0E,KAAKiF,GAEVivE,EASX,SAASM,GAAcT,GAiBnB,IAhBA,IAAIW,KACA/yE,KACAgzE,EAAU,EACVC,EAAc,EAWdvjE,EAAQyiE,GAVZC,EAAUA,EAAQxiE,QAAQ2hE,GAAkB,SAAUz3D,EAAKo5D,EAAS1wE,GAQhE,OANIwwE,EADS,WAATxwE,EACU,EAGA,EAEdywE,EAAcE,SAASD,EAAQ1jE,OAAO,GAAI,IACnC,MAIFkjE,EAAM,EAAGA,EAAMhjE,EAAMpS,QAAS,CACnC,IAAIqE,EAAM+N,EAAMgjE,KAAOtjD,OACP,IAAZ4jD,IAEArxE,EAAMA,EAAIiO,QAAQ,oBAAqB,OAEvCjO,EAAIrE,QACJy1E,EAAM10E,KAAKsD,GAEf,IAAIyxE,EAASjB,GAAaziE,EAAMgjE,MAC5BU,EAAO91E,QACP0C,EAAO3B,KAAK+0E,GAKpB,OApodJ,SAASC,EAAkBx5C,EAAQy5C,EAAU7iE,GACrCopB,GAAUy5C,GACVv5D,GAAWtJ,GAgodf4iE,CAAkBN,EAAM1vE,QAAQ,UAAW,EAAG,0CAErCb,KAAMwwE,EAASC,YAAaA,EAAaF,MAAOA,EAAO/yE,OAAQA,GAK5E,SAASuzE,GAA+BpkE,GAMpC,IALA,IAAI4f,EAIAykD,EAHAtwE,EAAM,GACN3C,EAAQ,EACRkzE,GAAa,EAEqC,QAA9C1kD,EAAQyiD,GAAmBnqE,KAAK8H,KAC/BskE,EAMG1kD,EAAM,KAAOuiD,GAAS,KAAOkC,EAAalC,KAC1C/wE,EAAQwuB,EAAMxuB,MACdkzE,GAAa,IAPjBvwE,GAAOiM,EAAQ7L,UAAU/C,EAAOwuB,EAAMxuB,MAAQwuB,EAAM,GAAGzxB,QACvDk2E,EAAazkD,EAAM,GACnB0kD,GAAa,GAYrB,OADAvwE,EAAOiM,EAAQK,OAAOjP,GAsC1B,SAASmzE,GAA6B55D,EAAK65D,EAAiBxlD,EAAUylD,QAC/C,IAAfA,IAAyBA,EAAa,MAI1C,IAHA,IAAIC,GAAiB,KAAM,MACvBC,EAAYh6D,EAAIqV,MAAMuiD,IACtBvpD,EAAO,EACFtiB,EAAI,EAAGA,EAAIiuE,EAAUx2E,OAAQuI,IAAK,CACvC,IAAIkuE,EAAYD,EAAUjuE,GAC1B,GAAQ,EAAJA,EAAO,CAEP,IAAIuxB,EAAe+7C,SAASY,EAAW,IACvCF,EAAcx1E,MAAM,EAAI+4B,GACxBjP,GAAc6rD,GAAU58C,OAEL,KAAd28C,GAELF,EAAcx1E,KAAK01E,GAU3B,OAPAF,EAAcx1E,KAAKs1E,GAAmB,GACjCxlD,EAAW,EAAe,IAC3BA,GACA0lD,EAAcx1E,KAAK8vB,EAAUylD,GAEjCC,EAAc,GAAK1rD,EACnB0rD,EAAc,GAAKA,EAAcv2E,OAAS,EACnCu2E,EAEX,SAASI,GAAeC,EAAe/rD,GAGnC,IAAI4G,OAFS,IAAT5G,IAAmBA,EAAO,GAC9BA,GAAc6rD,GAAUE,EAAcjB,aAEtC,IAAK,IAAI91E,EAAI,EAAGA,EAAI+2E,EAAcl0E,OAAO1C,OAAQH,IAE7C,IADA,IAAIg3E,EAAWD,EAAcl0E,OAAO7C,GAC3B0I,EAAI,EAAGA,EAAIsuE,EAAS72E,OAAQuI,IAAK,CACtC,IAAI9H,EAAQo2E,EAAStuE,GACrB,GAAqB,iBAAV9H,EACP,KAAOgxB,EAAQ2iD,GAAerqE,KAAKtJ,IAC/BoqB,GAAc6rD,GAAUb,SAASpkD,EAAM,GAAI,UAI/C5G,EAAO8rD,GAAel2E,EAAOoqB,GAIzC,OAAOA,EAEX,IAAIisD,MACAC,IAAyB,EAS7B,SAASL,GAAU58C,GACf,OAAO,GAAKk9C,KAAKC,IAAIn9C,EAAc,IAEvC,IAmCIo9C,GAnCAC,MAwBJ,SAASC,GAAUn0E,EAAO4O,EAASwlE,GAC/B,IAAIxyD,EAAQiC,KAAW1F,IAEvB01D,KAAiBC,IAAyB9zE,EACtC4hB,EAAMI,mBAA2D,OAAtCJ,EAAMlL,KAAK1W,EAAQof,KAWtD,SAASi1D,EAAmBzyD,EAAO5hB,EAAO4O,EAASwlE,GAC/C,IAAInyC,EAAWpe,KACX0gD,EAAa3iD,EAAMqF,UAAUlqB,OAASqiB,GAC1C60D,GAAgB,EAChB,IAAI1wD,EAAwBU,KACxBic,EAAc9b,KAAgBH,KAC9BV,GAAyBA,EAAsBlX,OAC/C+a,EAAc8Y,GAAeA,IAAgB+B,EAASzjB,IAAU0hB,EAAYlgC,MAAQof,GAAgBpf,EACpGs0E,EAAqB,EACzBJ,GAAiBI,GAAsBltD,EACvC,IAAImtD,KAGAv0E,EAAQ,GAAKujB,IAA0B2c,GAEvCq0C,EAAcz2E,KAAKylB,EAAsBvjB,OAAS,EAAoB,GAM1E,IAJA,IAAIszE,KACAkB,KAEAC,EA3IR,SAASC,EAA0B9lE,EAASwlE,GACxC,GAAgC,iBAArBA,EAEP,OAAOpB,GAA+BpkE,GAItC,IAAIw1B,EAAQx1B,EAAQ9L,QAAQ,IAAMsxE,EAAmBrD,IAAU,EAAIqD,EAAiBxxE,WAAW7F,OAC3FmlB,EAAMtT,EAAQ+lE,OAAO,IAAI3hD,OAAO+9C,GAAS,cAAgBqD,EAAmBrD,KAChF,OAAOiC,GAA+BpkE,EAAQ7L,UAAUqhC,EAAOliB,IAiIzCwyD,CAA0B9lE,EAASwlE,GAC1BxlD,MAAMsiD,IAChCt0E,EAAI,EAAGA,EAAI63E,EAAS13E,OAAQH,IAAK,CACtC,IAAIY,EAAQi3E,EAAS73E,GACrB,GAAQ,EAAJA,EAEA,GAAwB,MAApBY,EAAMwR,OAAO,IAEb,GAAwB,MAApBxR,EAAMwR,OAAO,GAAY,CACzB,IAAI4lE,EAAUhC,SAASp1E,EAAMyR,OAAO,GAAI,IACxCmY,EAAc8sD,KAAmBI,GACjCC,EAAcz2E,KAAK82E,GAAW,EAAoB,SAIlDA,EAAUhC,SAASp1E,EAAMyR,OAAO,GAAI,IAExCslE,EAAcz2E,KAAK82E,GAAW,EAAoB,EAAgBxtD,GAAe,GAAwB,GACjF,MAApB5pB,EAAMwR,OAAO,KACbklE,KAAmBI,GAAsBltD,EAAcwtD,QAO/D,IADA,IAAIzlE,EAAQyiE,GAAap0E,GAChB8H,EAAI,EAAGA,EAAI6J,EAAMpS,OAAQuI,IAC9B,GAAQ,EAAJA,EAAO,CAGP,IAAIuvE,EAAetQ,EAAa0P,KAChCM,EAAcz2E,KAAK8yE,GAAoD,GAAIiE,EAAcztD,GAAe,GAAwB,GAEhI,IAAIusD,EAAgBxkE,EAAM7J,GACtBsiB,EAAO8rD,GAAeC,GAC1BmB,GAASN,EAAgBb,EAAekB,EAAcA,GAEtD,IAAIE,EAAYP,EAAez3E,OAAS,EACxCu2E,EAAcx1E,KAAK21E,GAAUE,EAAcjB,aAC3C,GACC,EAAIiB,EAAcjB,YAAamC,GAAgB,EAAoB,EAAmBE,EAAWntD,EAClG,EACAitD,GAAgB,EAAoB,EAAmBE,QAEtD,GAAiB,KAAb5lE,EAAM7J,GAAW,CACtB,IAAI0vE,EAAU7lE,EAAM7J,GAEhB2vE,EAAaD,EAAQxmD,MAAM2iD,IAE3B+D,EAAgB3Q,EAAa0P,KACjCM,EAAcz2E,KAEdm3E,EAAa,GAAKD,EAASE,EAAe9tD,GAAe,GAAwB,GAC7E6tD,GACApE,GAAcsC,GAA6B6B,EAASE,GAAgB5B,KAv6Q5F,SAAS6B,EAAah1D,EAAMi1D,GACxB,IAAIxzD,EAAQzB,EAAKhC,IACjB,GAAIyD,EAAMI,kBAAmB,CACzB,IAAK,IAAIplB,EAAI,EAAGA,EAAIw4E,EAAiBx4E,IACjCglB,EAAMqF,UAAUnpB,KAAK,MACrB8jB,EAAMlL,KAAK5Y,KAAK,MAChBqiB,EAAKriB,KAAK,MAIT8jB,EAAMovB,oBAMPpvB,EAAMovB,oBAAoBlzC,KAAKs3E,GAL/BxzD,EAAMqvB,mBAAqBmkC,IAk6QnCD,CAAalzC,EAAUgyC,IAQvBryD,EAAMlL,KAAK1W,EAAQof,KALfpF,KAAMi6D,GACN13E,OAAQg4E,EACRc,OAAQ/B,EACRgC,KAAMd,EAAez3E,OAASy3E,EAAiB,MA/F/CH,CAAmBzyD,EAAO5hB,EAAO4O,EAASwlE,GAmGlD,SAASmB,GAAev1D,EAAOkgB,EAAas1C,GAExC,IAAI3jD,EAAW7R,EAAMziB,KACjB0kC,EAAWpe,KACV2xD,IACDA,EAAgBt1C,GAGhBs1C,IAAkBt1C,GAAelgB,IAAUkgB,EAAYrH,OACvD7Y,EAAMziB,KAAO2iC,EAAYrH,MACzBqH,EAAYrH,MAAQ7Y,GAEfw1D,IAAkBt1C,GAAelgB,IAAUw1D,EAAcj4E,MAC9DyiB,EAAMziB,KAAOi4E,EAAcj4E,KAC3Bi4E,EAAcj4E,KAAOyiB,GAGrBA,EAAMziB,KAAO,KAEb2iC,IAAgB+B,EAASzjB,MACzBwB,EAAM3T,OAAS6zB,GAInB,IADA,IAAIu1C,EAASz1D,EAAMziB,KACZk4E,GACCA,EAAOl4E,OAASyiB,IAChBy1D,EAAOl4E,KAAOs0B,GAElB4jD,EAASA,EAAOl4E,KAEpB4uB,GAAYpM,GAAiBC,EAAOiiB,GAAWjiB,EAAOiiB,GACtD,IAAI1hB,EAAY0hB,EAASjiB,EAAMhgB,OAK/B,OAJmB,IAAfggB,EAAM/d,MAA8B2d,GAAaW,IAEjD4L,GAAY5L,EAAUf,IAASQ,EAAOiiB,GAEnCjiB,EAqBX,SAAS01D,GAAgB9mE,EAAS+mE,QACT,IAAjBA,IAA2BA,MAW/B,IAAIjvE,EAASkI,EACb,GAAI0iE,GAAmCe,KAAKzjE,GAAU,CAClD,IAAIgnE,KACAC,GAAsBxE,IAwC1B,GAvCA3qE,EAASA,EAAO2I,QAAQkiE,GAAwB,SAAUn0E,EAAG04E,EAAKC,GAC9D,IAAIljD,EAAUijD,GAAOC,EACrB,IAAKH,EAAU/iD,GAAU,CACrB,IAAImjD,KACJnjD,EAAQjE,MAAM,KAAKzmB,QAAQ,SAAU8tE,GACjC,IAAIznD,EAAQynD,EAAYznD,MAAMmjD,IAC1BuE,EAAa1nD,EAAQokD,SAASpkD,EAAM,GAAI,IAAM6iD,GAC9C8E,EAAqBzE,GAAyBW,KAAK4D,GACvDD,EAAel4E,MAAMo4E,EAAYC,EAAoBF,MAEzDL,EAAU/iD,GAAWmjD,EAEzB,IAAKJ,EAAU/iD,GAAS91B,OACpB,MAAM,IAAIsE,MAAM,6CAA+CwxB,GAMnE,IAJA,IAAIujD,EAAoBP,EAAmBA,EAAmB94E,OAAS,GACnEs5E,EAAeT,EAAU/iD,GACzBslB,EAAM,EAEDv7C,EAAI,EAAGA,EAAIy5E,EAAat5E,OAAQH,IACrC,GAAIy5E,EAAaz5E,GAAG,KAAOw5E,EAAmB,CAC1Cj+B,EAAMv7C,EACN,MAIR,IAAIkC,EAAKpB,EAAO24E,EAAal+B,GAAM,GAAI+9B,EAAap3E,EAAG,GAAgCm3E,EAAcn3E,EAAG,GASxG,OATgFA,EAAG,GAE/E+2E,EAAmBtO,MAEd6O,IAAsBF,GAC3BL,EAAmB/3E,KAAKo4E,GAG5BG,EAAar4C,OAAOma,EAAK,GAClB89B,IAGcp6E,OAAOqM,KAAK0tE,GAAW9iE,KAAK,SAAU1R,GAAO,QAASw0E,EAAUx0E,GAAKrE,SAE1F,MAAM,IAAIsE,MAAM,wCAA0C+N,KAAK7M,UAAUqzE,IAIjF,OAAK/5E,OAAOqM,KAAKytE,GAAc54E,OAa/B2J,GAPAA,EAASA,EAAO2I,QAAQmiE,GAAoB,SAAUhjD,EAAO4V,EAAOhjC,EAAK8rC,EAAOopC,EAAMp0D,GAClF,OAAOyzD,EAAaz5E,eAAekF,GAAO,GAAKgjC,EAAQuxC,EAAav0E,GAAO8gB,EAAMsM,KAMrEnf,QAAQoiE,GAAgB,SAAUjjD,EAAOptB,GACrD,GAAIu0E,EAAaz5E,eAAekF,GAAM,CAClC,IAAIm1E,EAAOZ,EAAav0E,GACxB,IAAKm1E,EAAKx5E,OACN,MAAM,IAAIsE,MAAM,qCAAuCmtB,EAAQ,cAAgBptB,GAEnF,OAAOm1E,EAAKpX,QAEhB,OAAO3wC,IApBA9nB,EA4Bf,SAAS8vE,MAiBT,SAASC,EAAiB70D,GACtB,IAAIqgB,EAAWpe,KAEX6yD,EAAY7C,GAAeC,MAC3B6C,EAAQ/0D,EAAMlL,KAAKggE,EAAYt3D,IAG/BmE,EAAwBU,KACxB2yD,EAAeC,GAAkBH,EAAWC,EAAMp6E,OAAQo6E,EAAY10C,GAEtE60C,EAAkBvzD,EAClBuzD,EAAgBj+C,QAChBi+C,EAxBR,SAASC,EAAanlD,GAClB,KAAOA,EAAKr0B,MACRq0B,EAAOA,EAAKr0B,KAEhB,OAAIq0B,EAAKiH,MACEk+C,EAAanlD,EAAKiH,OAEtBjH,EAiBemlD,CAAaD,EAAgBj+C,QAGnD,IAAK,IAAIj8B,EAAI85E,EAAY,EAAG95E,GAAKk6E,EAAgB92E,MAAQof,GAAexiB,KACnC,IAA7Bg6E,EAAa9zE,QAAQlG,IACrBo6E,GAAWp6E,EAAGqlC,GA/BtBw0C,CAFY5yD,KAAW1F,KAwC3B,SAAS84D,GAAyBj3E,EAAOiC,EAAMo2B,EAAQ/5B,GACnD,IAAIilB,EAAwBU,KACxBjE,EAAQ8xB,GAAkB9xC,EAAOiC,EAAMo2B,EAAQ/5B,EAAM,MAMzD,OAHIilB,EAAsBhmB,OAASyiB,IAC/BuD,EAAsBhmB,KAAO,MAE1ByiB,EAEX,SAAS62D,GAAkB72E,EAAOu0E,EAAee,EAAMrzC,GAKnD,IAJA,IAAIjH,EAAWnX,KAAW/E,IACtBo4D,EAAe,KACf1B,EAAgB,KAChBoB,KACKh6E,EAAI,EAAGA,EAAI23E,EAAcx3E,OAAQH,IAAK,CAC3C,IAAIu6E,EAAS5C,EAAc33E,GAC3B,GAAqB,iBAAVu6E,EAAoB,CAC3B,IAAIC,EAAY15C,GAAey5C,EAAQn8C,GACnCk6C,EAAgBX,IAAgB33E,GAEpC44E,EAAgB0B,EAChBA,EAAeD,GAAyB/B,EAAe,EAAiBkC,EAAW,MACnFR,EAAa94E,KAAKo3E,GAClB7wD,IAAY,QAEX,GAAqB,iBAAV8yD,EACZ,OAAiB,EAATA,GACJ,KAAK,EACD,IAAIE,EAAuBF,IAAW,GAClCG,OAAmB,EAWvB9B,EAAgBD,GAAe2B,EAP3BI,EAHAD,IAAyBr3E,EAGNiiC,EAASzjB,IAGT0B,GAASm3D,EAAsBp1C,GAISuzC,GAC/D8B,EAAiB/5E,KAAO,KACxB,MACJ,KAAK,EACD,IAAI+iB,EAAY62D,IAAW,EAC3BP,EAAa94E,KAAKwiB,GAClBk1D,EAAgB0B,GAChBA,EAAeh3D,GAASI,EAAW2hB,MAE/B/d,GAAyBgzD,GACC,IAAtBA,EAAaj1E,MACboiB,IAAY,IAGpB,MACJ,KAAK,EAEDmxD,EAAgB0B,EAAeh3D,GADZi3D,IAAW,EACwBl1C,GACtD/d,GAAyBgzD,GACzB7yD,IAAY,GACZ,MACJ,KAAK,EAIDo0B,GAHI8+B,EAAmBJ,IAAW,EACnB5C,IAAgB33E,GACf23E,IAAgB33E,IAEhC,MACJ,QACI,MAAM,IAAIyE,MAAM,yDAA4D81E,EAAS,UAI7F,OAAQA,GACJ,KAAKvG,GACD,IAAI4G,EAAejD,IAAgB33E,GAC/B66E,EAAmBlD,IAAgB33E,GAEnC86E,EAAe18C,EAASwY,cAAcgkC,GAE1ChC,EAAgB0B,EAChBA,EAAeD,GAAyBQ,EAAkB,EAAsBC,EAAc,MAC9Fd,EAAa94E,KAAK25E,GAClBl/C,GAAgBm/C,EAAcz1C,GAC9Bi1C,EAAaS,gBAAkB,KAE/BtzD,IAAY,GACZ,MACJ,KAAKqsD,GACD,IACI6G,EADAK,EAAerD,IAAgB33E,GAKnC44E,EAAgB0B,EAChBA,EAAeD,GALXM,EAAmBhD,IAAgB33E,GAKmB,EAHvCo+B,EAAS9O,cAAc0rD,GAG+CA,GACzFhB,EAAa94E,KAAKy5E,GAClB,MACJ,QACI,MAAM,IAAIl2E,MAAM,yDAA4D81E,EAAS,MAKrG,OADA9yD,IAAY,GACLuyD,EAqFX,SAASI,GAAWh3E,EAAOiiC,GACvB,IAAI41C,EAAiB33D,GAASlgB,EAAOiiC,GACjC61C,EAAiBj4D,GAAiB7f,EAAOiiC,GACzC61C,GACAt6C,GAAiByE,EAASnjB,IAAWg5D,GAEzC,IAAIv3D,EAAYwmC,GAAK/mD,GACjB4f,GAAaW,IAEe,IAAxBs3D,EAAe51E,MACfu7B,GAAiByE,EAASnjB,IAFbyB,EAEmCf,KA6B5D,SAASu4D,GAAK/3E,EAAO4O,EAASwlE,GAC1BD,GAAUn0E,EAAO4O,EAASwlE,GAC1BoC,KAQJ,SAASwB,GAAeh4E,EAAOP,GAC3B,IAAImiB,EAAQiC,KAAW1F,IAEnByD,EAAMI,mBAA2D,OAAtCJ,EAAMlL,KAAK1W,EAAQof,KAOtD,SAAS64D,EAAwBr2D,EAAO5hB,EAAOP,GAI3C,IAHA,IACIy4E,EADkBj0D,KACqBjkB,MAAQof,GAC/Ck0D,KACK12E,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,GAAK,EAIpC,IAHA,IAAIgxB,EAAWnuB,EAAO7C,GAElBuS,EADU1P,EAAO7C,EAAI,GACLgyB,MAAMwiD,IACjB9rE,EAAI,EAAGA,EAAI6J,EAAMpS,OAAQuI,IAAK,CACnC,IAAI9H,EAAQ2R,EAAM7J,GACV,EAAJA,GACe,KAAV9H,IAEcA,EAAMgxB,MAAM2iD,IAE3BN,GAAcsC,GAA6B31E,EAAO06E,EAAsBtqD,GAAW0lD,GAGnF76B,GAAiBy/B,EAAsBtqD,EAAUpwB,IAKjEokB,EAAMlL,KAAK1W,EAAQof,IAAiBk0D,EA7BhC2E,CAAwBr2D,EAAO5hB,EAAOP,GA+B9C,IA0CI04E,GA1CAC,GAAa,EACbC,GAAgB,EAOpB,SAASC,GAAQC,GACTA,IAAe5hD,KACfyhD,IAA2B,GAAKC,IAEpCA,KAQJ,SAASG,GAAUx4E,GACf,GAAIq4E,GAAe,CACf,IAAIv4D,EAAQ+D,KAGR8yD,EAFQ72D,EAAM3B,IAEAzH,KAAK1W,EAAQof,IAC3Bk0D,OAAgB,EAChBgC,EAAO,KACPt5E,MAAMqJ,QAAQsxE,GACdrD,EAAgBqD,GAGhBrD,EAAgBqD,EAAMtB,OACtBC,EAAOqB,EAAMrB,MAxMzB,SAASmD,EAAkBnF,EAAegC,EAAMoD,EAAoBN,EAAYn2C,EAAU02C,QAC/D,IAAnBA,IAA6BA,GAAiB,GAElD,IADA,IAAIC,GAAc,EACTh8E,EAAI,EAAGA,EAAI02E,EAAcv2E,OAAQH,IAAK,CAE3C,IAAIi8E,EAAWvF,EAAc12E,GAEzBk8E,EAAYxF,IAAgB12E,GAChC,GAAI+7E,GAAmBE,EAAWT,EAG9B,IADA,IAAI56E,EAAQ,GACH8H,EAAI1I,EAAI,EAAG0I,GAAM1I,EAAIk8E,EAAYxzE,IAAK,CAC3C,IAAI6xE,EAAS7D,EAAchuE,GAC3B,GAAqB,iBAAV6xE,EACP35E,GAAS25E,OAER,GAAqB,iBAAVA,EACZ,GAAIA,EAAS,EAET35E,GAASkb,GAAgBupB,EAASy2C,EAAqBvB,QAEtD,CACD,IAAI72D,EAAY62D,IAAW,EAEvB4B,OAAO,EACPC,OAAW,EACf,OAAiB,EAAT7B,GACJ,KAAK,EAGD1+B,GAAiBn4B,EAFFgzD,IAAgBhuE,GAEO9H,EADrB81E,IAAgBhuE,IAEjC,MACJ,KAAK,EACDw7C,GAAYxgC,EAAW9iB,GACvB,MACJ,KAAK,EAKD,GAHAu7E,EAAOzD,EADKhC,IAAgBhuE,IAIK,QAFjC0zE,EAAW94D,GAASI,EAAW2hB,IAElB01C,gBAET,IADA,IAAIsB,EAAcF,EAAKxuC,OAAOyuC,EAASrB,iBAC9B/nE,EAAI,EAAGA,EAAIqpE,EAAYl8E,OAAQ6S,IAAK,CACzC,IAAIspE,EAAeD,EAAYrpE,GAC/B,OAAuB,EAAfspE,GACJ,KAAK,EAEDlC,GADkBkC,IAAiB,EACXj3C,GACxB,MACJ,KAAK,EACD,IAEIk3C,EADiBj5D,GADI+4D,EAAYrpE,EAAI,KAAO,EACEqyB,GACjB01C,gBACb,OAAhBwB,GAGAtI,GADiByE,EADK4D,IAAiB,GAEd3uC,OAAO4uC,GAAcF,IAOlE,IAAIG,EAAYC,GAAaN,EAAMv7E,GACnCw7E,EAASrB,iBAAiC,IAAfyB,EAAmBA,EAAY,KAE1DvC,IAAmB,EAAGkC,EAAKx8E,OAAO68E,GAAY9D,EAAMrzC,GACpD22C,GAAc,EACd,MACJ,KAAK,EAEDG,EAAOzD,EADKhC,IAAgBhuE,IAE5B0zE,EAAW94D,GAASI,EAAW2hB,GAC/Bw2C,EAAkBM,EAAK1D,OAAO2D,EAASrB,iBAAkBrC,EAAMoD,EAAoBN,EAAYn2C,EAAU22C,KAOjIh8E,GAAKk8E,GA2HLL,CAAkBnF,EAAegC,EADRx1D,EAAMrB,IAAiB45D,GAAgB,EACLD,GAAYt4D,GAEvEs4D,GAAa,EACbC,GAAgB,GAwZxB,SAASgB,GAAa1F,EAAe2F,GACjC,IAAIt5E,EAAQ2zE,EAAcnB,MAAM1vE,QAAQw2E,GACxC,IAAe,IAAXt5E,EACA,OAAQ2zE,EAAc1xE,MAClB,KAAK,EAED,IACIs3E,EA9BpB,SAASC,EAAkBh8E,EAAOi8E,GAE9B,OAhXJ,SAASC,EAAcD,EAAQE,GACN,iBAAVA,IACPA,EAAQ/G,SAAS+G,EAAO,KAE5B,IAAI98E,EAAI88E,EACJC,EAAW/8E,EAAE+F,WAAWyM,QAAQ,YAAa,IAC7CzS,EAAIm3E,KAAK8F,MAAM9F,KAAK+F,IAAIj9E,IACxBkJ,EAAI6zE,EAAS78E,OACb2yD,EAAIkjB,SAASgH,EAAU,IACvBl9E,EAAIk2E,SAAS/1E,EAAE+F,WAAWyM,QAAQ,iBAAkB,IAAK,KAAO,EAEpE,OADWoqE,EAAO7qD,MAAM,KAAK,GAAG4C,eAE5B,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,MACL,IAAK,MACD,OAAU,IAAN30B,EACOs7E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAIn9E,IAAMk3E,KAAK8F,MAAMh9E,IAAMA,GAAK,GAAKA,GAAK,EAC/Bs7E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAANp9E,GAAiB,IAANC,EACJs7E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANn9E,EACOs7E,GAAO8B,KACR,IAANp9E,EACOs7E,GAAO4B,IACR,IAANl9E,EACOs7E,GAAO+B,IACdr9E,EAAI,MAAQk3E,KAAK8F,MAAMh9E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACvDs7E,GAAOgC,IACdt9E,EAAI,MAAQk3E,KAAK8F,MAAMh9E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxDs7E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,MACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAANp9E,GAAiB,IAANmJ,EACJoyE,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAIn9E,EAAI,IAAO,GAAOA,EAAI,KAAQ,GACvBs7E,GAAO4B,IACdl9E,EAAI,KAAOk3E,KAAK8F,MAAMh9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACxDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBs7E,GAAOgC,IACdt9E,EAAI,IAAO,GAAKA,EAAI,KAAOk3E,KAAK8F,MAAMh9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC1EA,EAAI,MAAQk3E,KAAK8F,MAAMh9E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxDs7E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAIn9E,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAC3Ds7E,GAAO4B,IACdl9E,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAC3Ds7E,GAAO+B,IACdr9E,EAAI,KAAOk3E,KAAK8F,MAAMh9E,EAAI,MAAQA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAAKA,EAAI,IAAO,MACzEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAC5DA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACzBs7E,GAAOgC,IACN,IAANt9E,GAAYA,EAAI,KAAQ,EACnBs7E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACD,OAAU,IAANj0E,GAAWnJ,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAO8yD,EAAI,IAAO,GAAOA,EAAI,KAAQ,GACvEyoB,GAAO4B,IACR,IAANh0E,GAAWnJ,EAAI,KAAOm3E,KAAK8F,MAAMj9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,KAC9B8yD,EAAI,KAAOqkB,KAAK8F,MAAMnqB,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACpDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IAC3ByoB,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACL,IAAK,KACD,OAAU,IAANp9E,GAAiB,IAANmJ,EACJoyE,GAAO4B,IACdn9E,IAAMm3E,KAAK8F,MAAMj9E,IAAMA,GAAK,GAAKA,GAAK,GAAW,IAANmJ,EACpCoyE,GAAOgC,IACN,IAANp0E,EACKoyE,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANn9E,EACOs7E,GAAO8B,KACR,IAANp9E,EACOs7E,GAAO4B,IACR,IAANl9E,EACOs7E,GAAO+B,IACR,IAANr9E,EACOs7E,GAAOgC,IACR,IAANt9E,EACOs7E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANn9E,GAAmB,IAANH,IAAmB,IAANE,GAAiB,IAANA,GAC9Bu7E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,MACL,IAAK,MACD,OAAU,IAANj0E,GAAWnJ,EAAI,KAAQ,GAAK8yD,EAAI,KAAQ,EACjCyoB,GAAO4B,IACR,IAANh0E,GAAWnJ,EAAI,KAAQ,GAAK8yD,EAAI,KAAQ,EACjCyoB,GAAO+B,IACR,IAANn0E,GAAWnJ,EAAI,MAAQm3E,KAAK8F,MAAMj9E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACzE8yD,EAAI,MAAQqkB,KAAK8F,MAAMnqB,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,EACvDyoB,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,MACD,OAAU,IAANp9E,GAAiB,IAANA,EACJu7E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,MACD,OAAU,IAANj0E,IAAkB,IAANnJ,GAAiB,IAANA,GAAiB,IAANA,IAC5B,IAANmJ,GAAanJ,EAAI,IAAO,GAAKA,EAAI,IAAO,GAAKA,EAAI,IAAO,GAChD,IAANmJ,GAAc2pD,EAAI,IAAO,GAAKA,EAAI,IAAO,GAAKA,EAAI,IAAO,EACpDyoB,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANn9E,EACOs7E,GAAO4B,IACR,IAANl9E,EACOs7E,GAAO+B,IACdr9E,IAAMk3E,KAAK8F,MAAMh9E,IAAMA,GAAK,GAAKA,GAAK,EAC/Bs7E,GAAOgC,IACdt9E,IAAMk3E,KAAK8F,MAAMh9E,IAAMA,GAAK,GAAKA,GAAK,GAC/Bs7E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANn9E,GAAiB,KAANA,EACJs7E,GAAO4B,IACR,IAANl9E,GAAiB,KAANA,EACJs7E,GAAO+B,IACdr9E,IAAMk3E,KAAK8F,MAAMh9E,KAAOA,GAAK,GAAKA,GAAK,IAAMA,GAAK,IAAMA,GAAK,IACtDs7E,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANj0E,GAAWnJ,EAAI,IAAO,EACfu7E,GAAO4B,IACR,IAANh0E,GAAWnJ,EAAI,IAAO,EACfu7E,GAAO+B,IACR,IAANn0E,GACCnJ,EAAI,KAAQ,GAAKA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,IAAMA,EAAI,KAAQ,GAE5E,IAANmJ,EACKoyE,GAAOiC,KACXjC,GAAO6B,MAHH7B,GAAOgC,IAItB,IAAK,KACD,OAAU,IAANv9E,GAAiB,IAANmJ,EACJoyE,GAAO4B,IACR,IAANn9E,GAAiB,IAANmJ,EACJoyE,GAAO+B,IACR,IAANn0E,GAAalJ,GAAK,GAAKA,GAAK,IAAOA,EAAI,IAAO,EAE3Cs7E,GAAO6B,MADH7B,GAAOiC,KAEtB,IAAK,KACD,OAAU,IAAN19E,GAAWE,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAe,IAANF,EAC3Cy7E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,MACD,OAAU,IAANn9E,EACOs7E,GAAO8B,KACR,IAANp9E,EACOs7E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACL,IAAK,MACL,IAAK,KACL,IAAK,MACD,OAAU,IAANn9E,EACOs7E,GAAO4B,IACR,IAANl9E,EACOs7E,GAAO+B,IACX/B,GAAO6B,MAClB,IAAK,MACD,OAAU,IAANn9E,EACOs7E,GAAO8B,KACP,IAANr9E,GAAiB,IAANA,GAAoB,IAANC,EAEvBs7E,GAAO6B,MADH7B,GAAO4B,IAEtB,IAAK,KACD,OAAIl9E,EAAI,IAAO,GAAOA,EAAI,KAAO,IAAMA,EAAI,KAAO,GAE9CA,EAAI,KAAOk3E,KAAK8F,MAAMh9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACxDA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBs7E,GAAOgC,IACN,IAANzqB,EACKyoB,GAAOiC,KACXjC,GAAO6B,MANH7B,GAAO4B,IAOtB,IAAK,KACL,IAAK,MACD,OAAIl9E,EAAI,IAAO,GAAKA,EAAI,MAAQk3E,KAAK8F,MAAMh9E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACzE,IAANkJ,GAAW2pD,EAAI,MAAQqkB,KAAK8F,MAAMnqB,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnEyoB,GAAO8B,KACdp9E,EAAI,IAAO,GAAOA,EAAI,KAAQ,IAAa,IAANkJ,GAAW2pD,EAAI,IAAO,GAAOA,EAAI,KAAQ,IACtE,IAAN3pD,GAAY2pD,EAAI,IAAO,EAClByoB,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANj0E,GAAWnJ,EAAI,IAAO,GAAK8yD,EAAI,IAAO,EAC/ByoB,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANn9E,EACOs7E,GAAO4B,IACR,IAANl9E,GAAWA,EAAI,MAAQk3E,KAAK8F,MAAMh9E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GAClEs7E,GAAOgC,IACdt9E,EAAI,MAAQk3E,KAAK8F,MAAMh9E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACxDs7E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANp9E,GAAiB,IAANmJ,EACJoyE,GAAO4B,IACR,IAANh0E,GAAWnJ,EAAI,KAAOm3E,KAAK8F,MAAMj9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBu7E,GAAOgC,IACR,IAANp0E,GAAmB,IAANnJ,GAAYA,EAAI,KAAOm3E,KAAK8F,MAAMj9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC7E,IAANmJ,GAAWnJ,EAAI,KAAOm3E,KAAK8F,MAAMj9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC/D,IAANmJ,GAAWnJ,EAAI,MAAQm3E,KAAK8F,MAAMj9E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnEu7E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,KACD,OAAIn9E,IAAMk3E,KAAK8F,MAAMh9E,IAAMA,GAAK,GAAKA,GAAK,GAAa,IAANA,EACtCs7E,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANp9E,GAAiB,IAANmJ,EACJoyE,GAAO4B,IACN,IAANh0E,GAAkB,IAANlJ,GACN,IAANA,GAAYA,EAAI,MAAQk3E,KAAK8F,MAAMh9E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GACrEs7E,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACL,IAAK,KACD,OAAU,IAANj0E,GAAWnJ,EAAI,IAAO,GAAOA,EAAI,KAAQ,GAClCu7E,GAAO4B,IACR,IAANh0E,GAAWnJ,EAAI,KAAOm3E,KAAK8F,MAAMj9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,KACnEA,EAAI,KAAO,IAAMA,EAAI,KAAO,IACvBu7E,GAAOgC,IACR,IAANp0E,GAAWnJ,EAAI,IAAO,GAChB,IAANmJ,GAAWnJ,EAAI,KAAOm3E,KAAK8F,MAAMj9E,EAAI,KAAOA,EAAI,IAAM,GAAKA,EAAI,IAAM,GAC/D,IAANmJ,GAAWnJ,EAAI,MAAQm3E,KAAK8F,MAAMj9E,EAAI,MAAQA,EAAI,KAAO,IAAMA,EAAI,KAAO,GACnEu7E,GAAOiC,KACXjC,GAAO6B,MAClB,IAAK,MACD,OAAU,IAANp9E,GAAiB,IAANC,EACJs7E,GAAO4B,IACdl9E,IAAMk3E,KAAK8F,MAAMh9E,IAAMA,GAAK,GAAKA,GAAK,GAC/Bs7E,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANn9E,GAAiB,IAANA,GAAiB,IAAND,GAAiB,IAAN8yD,EAC1ByoB,GAAO4B,IACX5B,GAAO6B,MAClB,IAAK,KACD,OAAU,IAANj0E,GAAWnJ,EAAI,KAAQ,EAChBu7E,GAAO4B,IACR,IAANh0E,GAAWnJ,EAAI,KAAQ,EAChBu7E,GAAO+B,IACR,IAANn0E,GAAWnJ,EAAI,MAAQm3E,KAAK8F,MAAMj9E,EAAI,MAAQA,EAAI,KAAO,GAAKA,EAAI,KAAO,GAAa,IAANmJ,EACzEoyE,GAAOgC,IACXhC,GAAO6B,MAClB,IAAK,MACD,OAAIn9E,IAAMk3E,KAAK8F,MAAMh9E,IAAMA,GAAK,GAAKA,GAAK,GAAKA,IAAMk3E,KAAK8F,MAAMh9E,IAAMA,GAAK,IAAMA,GAAK,GAC3Es7E,GAAO4B,IACX5B,GAAO6B,MAIlB,QACI,OAAO7B,GAAO6B,OAITN,CAAcD,EAAQj8E,IAE/B,KAAK26E,GAAO8B,KACR,MAAO,OACX,KAAK9B,GAAO4B,IACR,MAAO,MACX,KAAK5B,GAAO+B,IACR,MAAO,MACX,KAAK/B,GAAOgC,IACR,MAAO,MACX,KAAKhC,GAAOiC,KACR,MAAO,OACX,QACI,MAAO,SAgBgBZ,CAAkBF,EADxB,UAGE,KADft5E,EAAQ2zE,EAAcnB,MAAM1vE,QAAQy2E,KACC,UAAjBA,IAChBv5E,EAAQ2zE,EAAcnB,MAAM1vE,QAAQ,UAExC,MAEJ,KAAK,EACD9C,EAAQ2zE,EAAcnB,MAAM1vE,QAAQ,SAKhD,OAAO9C,EAUX,SAAS80E,GAASuF,EAAO1G,EAAepP,EAAYtzB,GAMhD,IALA,IAAIqpC,KACArB,KACAsB,KACAvgE,KACAwgE,KACK59E,EAAI,EAAGA,EAAI+2E,EAAcl0E,OAAO1C,OAAQH,IAAK,CAIlD,IAFA,IAAIg3E,EAAWD,EAAcl0E,OAAO7C,GAChC69E,KACKn1E,EAAI,EAAGA,EAAIsuE,EAAS72E,OAAQuI,IAAK,CACtC,IAAI9H,EAAQo2E,EAAStuE,GACrB,GAAqB,iBAAV9H,EAAoB,CAE3B,IAAIk9E,EAAWD,EAAW38E,KAAKN,GAAS,EAExCo2E,EAAStuE,GAAK,WAAeo1E,EAAW,WAGhD,IAAIC,EAAUC,GAAahH,EAASnxE,KAAK,IAAK8hE,EAAYkW,EAAYJ,EAAOppC,GAC7EqpC,EAAYx8E,KAAK68E,EAAQp+E,QACzB08E,EAAYn7E,KAAK68E,EAAQpwC,QACzBgwC,EAAYz8E,KAAK68E,EAAQtF,QACzBr7D,EAAKlc,KAAK68E,EAAQ3gE,MAClBwgE,EAAU18E,KAAK68E,EAAQH,WAW3BH,EAAMv8E,MARFmE,KAAM0xE,EAAc1xE,KACpB+X,KAAMA,EACNwgE,UAAWA,EACXhI,MAAOmB,EAAcnB,MACrBj2E,OAAQ+9E,EACR/vC,OAAQ0uC,EACR5D,OAAQkF,IAIZtG,IAAiBF,KAAK8G,IAAI59E,MAAM82E,KAAM/1E,EAASgc,IAYnD,SAAS4gE,GAAavoD,EAAYjL,EAAaqzD,EAAYJ,EAAOppC,GAC9D,IACIjlB,EADkB,IAAIL,GAAgBiI,UACHtH,oBAAoB+F,GAC3D,IAAKrG,EACD,MAAM,IAAI3qB,MAAM,yCAEpB,IACIy5E,GAAY9gE,KAAM,EAAGwgE,aAAej+E,UAAYguC,UAAY8qC,WAEhE,OAaJ,SAAS0F,EAAWC,EAAaL,EAASvzD,EAAaqzD,EAAYJ,EAAOppC,GACtE,GAAI+pC,EAAa,CAEb,IADA,IAAIC,KACGD,GAAa,CAChB,IAAInpD,EAAWmpD,EAAY7sD,YACvB+a,EAAW+H,KAAsB0pC,EAAQ3gE,KAC7C,OAAQghE,EAAYhtD,UAChB,KAAKC,KAAKC,aACN,IAAIgtD,EAAaF,EACb1pD,EAAU4pD,EAAW5pD,QAAQE,cACjC,GAAKrB,GAAej0B,eAAeo1B,GAI9B,CACDqpD,EAAQp+E,OAAOuB,KAAK4yE,GAAgBp/C,EAAS4X,EAAU9hB,GAAe,GAAwB,GAE9F,IADA,IAAIsG,EAAUwtD,EAAWvtD,WAChB/wB,EAAI,EAAGA,EAAI8wB,EAAQ3wB,OAAQH,IAAK,CACrC,IAAI2mC,EAAO7V,EAAQG,KAAKjxB,GACpBu+E,EAAgB53C,EAAKjlC,KAAKkzB,cACT+R,EAAK/lC,MAAMgxB,MAAM2iD,IAG9B5gD,GAAYr0B,eAAei/E,IAEvBtK,GADAzgD,GAAU+qD,GACIhI,GAA6B5vC,EAAK/lC,MAAO0rC,EAAU3F,EAAKjlC,KAAMgwB,IAEvE+B,GAAa8qD,GACJhI,GAA6B5vC,EAAK/lC,MAAO0rC,EAAU3F,EAAKjlC,KAAMowB,IAG9DykD,GAA6B5vC,EAAK/lC,MAAO0rC,EAAU3F,EAAKjlC,MANqBq8E,EAAQtF,QAe3GsF,EAAQp+E,OAAOuB,KAAKorC,GAAY,EAAoB,EAAc3F,EAAKjlC,KAAMilC,EAAK/lC,OAI1Fu9E,EAAWC,EAAY5tD,WAAYutD,EAASzxC,EAAUuxC,EAAYJ,EAAOppC,GAEzE0pC,EAAQpwC,OAAOzsC,KAAKorC,GAAY,EAAoB,QAlCpDyxC,EAAQ3gE,OAoCZ,MACJ,KAAKiU,KAAK+C,UACN,IAAIxzB,EAAQw9E,EAAYthD,aAAe,GACnCu7C,EAAaz3E,EAAMgxB,MAAM2iD,IAC7BwJ,EAAQp+E,OAAOuB,KAAKm3E,EAAa,GAAKz3E,EAAO0rC,EAAU9hB,GAAe,GAAwB,GAC9FuzD,EAAQpwC,OAAOzsC,KAAKorC,GAAY,EAAoB,GAChD+rC,GACApE,GAAcsC,GAA6B31E,EAAO0rC,GAAWyxC,EAAQtF,QAEzE,MACJ,KAAKpnD,KAAKmtD,aAEN,IAAI5sD,EAAQ6sD,GAAWv0E,KAAKk0E,EAAYthD,aAAe,IACvD,GAAIlL,EAAO,CACP,IAAI8sD,EAAiB1I,SAASpkD,EAAM,GAAI,IAGxCmsD,EAAQp+E,OAAOuB,KAAK8yE,GAFwC,GAEd1nC,EAAU9hB,GAAe,GAAwB,GAE/F6zD,EAAmBn9E,MADfy9E,EAAYd,EAAWa,GACSpyC,SAIpCyxC,EAAQ3gE,OAEZ,MACJ,QAEI2gE,EAAQ3gE,OAEhBghE,EAAcnpD,EAElB,IAASj1B,EAAI,EAAGA,EAAIq+E,EAAmBl+E,OAAQH,IAAK,CAChD,IAAI2+E,EACAC,EAAqBP,EAAmBr+E,GAAG,GAC/Ck4E,GAASuF,EAFLkB,EAAYN,EAAmBr+E,GAAG,GAEX4+E,EAAoBvqC,EAAoB0pC,EAAQ3gE,MAE3E,IAAIyhE,EAAgBpB,EAAMt9E,OAAS,EACnC49E,EAAQ3gE,MAAQ+5D,KAAK8G,IAAI59E,MAAM82E,KAAM/1E,EAASq8E,EAAMoB,GAAezhE,OACnE2gE,EAAQH,UAAU18E,KAAK29E,GACvB,IAAI7zD,EAAO8rD,GAAe6H,GAC1BZ,EAAQtF,OAAOv3E,KAAK21E,GAAU8H,EAAU7I,aACxC,GACC,EAAI6I,EAAU7I,YAAa8I,GAAsB,EAAoB,EAAmBC,EAAe7zD,EACxG,EACA4zD,GAAsB,EAAoB,EAAmBC,GAC7Dd,EAAQpwC,OAAOzsC,KAAK29E,GAAiB,EAAoB,EAAyBD,GAAsB,EAAoB;;;;;;;OA5GpIT,EAFcroD,GAAmB1G,IAAqBA,GAEnCoB,WAAY0tD,EAAS1zD,EAAaqzD,EAAYJ,EAAOppC,GACjE6pC,GA5eX,SAAW3C,GACPA,EAAOA,EAAa,KAAI,GAAK,OAC7BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAY,IAAI,GAAK,MAC5BA,EAAOA,EAAa,KAAI,GAAK,OAC7BA,EAAOA,EAAc,MAAI,GAAK,QANlC,CAOGA,KAAWA,QAued,IAAIkD,GAAa,UAqHbK,IACAlxE,QAASumD,GACTnmD,SAAUukE,GACVvlE,MAAO4nD,KAEPmqB,GAA+B,SAAUtqB,GAEzC,SAASuqB,EAAe1tB,EAAc75C,GAClC,IAAImB,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KACjC+Z,EAAMnB,QAAUA,EAEhBmB,EAAM82D,wBACN92D,EAAMnR,SAAWmR,EACjBA,EAAMi7D,cACN,IAAIh5D,EAAcuG,GAAekwC,GAYjC,OAVA14C,EAAM82D,qBAAuB70D,EAAYyF,UAQzC1H,EAAMqmE,YAActvB,GAAe2B,EAAc75C,IALzC7J,QAASgnD,GACT9mD,SAAU8K,GAEdkmE,IAE2En5E,EAAU2rD,IACzF14C,EAAMmT,SAAWnT,EAAMzQ,IAAImpD,GACpB14C,EA4BX,OAhDArZ,EAAUy/E,EAAgBvqB,GAsB1BuqB,EAAet/E,UAAUyI,IAAM,SAAUpE,EAAOqE,EAAe0nE,GAG3D,YAFsB,IAAlB1nE,IAA4BA,EAAgBoH,GAASH,yBACrC,IAAhBygE,IAA0BA,EAAc3xE,EAAQ0F,YAAYmE,SAC5DjE,IAAUyL,IAAYzL,IAAU6wD,IAAe7wD,IAAUuL,GAClDzQ,KAEJA,KAAKogF,YAAY92E,IAAIpE,EAAOqE,EAAe0nE,IAEtD7wE,OAAOwD,eAAeu8E,EAAet/E,UAAW,4BAC5CyI,IAAK,WACD,OAAOtJ,KAAKsJ,IAAIgsD,KAEpBhgD,YAAY,EACZC,cAAc,IAElB4qE,EAAet/E,UAAU+iC,QAAU,WAE/B,IAAIh7B,EAAW5I,KAAKogF,aACnBx3E,EAASg2B,WAAah2B,EAASg7B,UAChC5jC,KAAKg1E,WAAWtoE,QAAQ,SAAU/E,GAAM,OAAOA,MAC/C3H,KAAKg1E,WAAa,MAEtBmL,EAAet/E,UAAU8e,UAAY,SAAUytC,GAE3CptD,KAAKg1E,WAAW3yE,KAAK+qD,IAElB+yB,EAjDuB,CAkDhCpqB,IACEsqB,GAAmC,SAAUzqB,GAE7C,SAAS0qB,EAAmB7P,GACxB,IAAI12D,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAEjC,OADA+Z,EAAM02D,WAAaA,EACZ12D,EAKX,OATArZ,EAAU4/E,EAAoB1qB,GAM9B0qB,EAAmBz/E,UAAUC,OAAS,SAAUuiE,GAC5C,OAAO,IAAI6c,GAAclgF,KAAKywE,WAAYpN,IAEvCid,EAV2B,CAWpCtqB;;;;;;;;AAkFF,SAASuqB,GAAcC,EAAYC,EAAQC,GAEvC,IAAItlD,EAAelS,KAAmBs3D,EAClCn8D,EAAQ+D,KACZ,OAAOS,KACHsS,GAAc9W,EAAO+W,EAAcslD,EAAUD,EAAOl/E,KAAKm/E,GAAWD,KACpEplD,GAAWhX,EAAO+W,GAY1B,SAASulD,GAAcH,EAAYC,EAAQG,EAAKF,GAE5C,IAAIr8D,EAAQ+D,KACRgT,EAAelS,KAAmBs3D,EACtC,OAAOllD,GAAejX,EAAO+W,EAAcwlD,GACvCzlD,GAAc9W,EAAO+W,EAAe,EAAGslD,EAAUD,EAAOl/E,KAAKm/E,EAASE,GAAOH,EAAOG,IACpFvlD,GAAWhX,EAAO+W,EAAe,GAazC,SAASylD,GAAcL,EAAYC,EAAQhlD,EAAMC,EAAMglD,GAEnD,IAAItlD,EAAelS,KAAmBs3D,EAClCn8D,EAAQ+D,KACZ,OAAOoT,GAAgBnX,EAAO+W,EAAcK,EAAMC,GAC9CP,GAAc9W,EAAO+W,EAAe,EAAGslD,EAAUD,EAAOl/E,KAAKm/E,EAASjlD,EAAMC,GAAQ+kD,EAAOhlD,EAAMC,IACjGL,GAAWhX,EAAO+W,EAAe,GAczC,SAAS0lD,GAAcN,EAAYC,EAAQhlD,EAAMC,EAAMG,EAAM6kD,GAEzD,IAAItlD,EAAelS,KAAmBs3D,EAClCn8D,EAAQ+D,KACZ,OAAOwT,GAAgBvX,EAAO+W,EAAcK,EAAMC,EAAMG,GACpDV,GAAc9W,EAAO+W,EAAe,EAAGslD,EAAUD,EAAOl/E,KAAKm/E,EAASjlD,EAAMC,EAAMG,GAAQ4kD,EAAOhlD,EAAMC,EAAMG,IAC7GR,GAAWhX,EAAO+W,EAAe,GAezC,SAAS2lD,GAAcP,EAAYC,EAAQhlD,EAAMC,EAAMG,EAAME,EAAM2kD,GAE/D,IAAItlD,EAAelS,KAAmBs3D,EAClCn8D,EAAQ+D,KACZ,OAAO0T,GAAgBzX,EAAO+W,EAAcK,EAAMC,EAAMG,EAAME,GAC1DZ,GAAc9W,EAAO+W,EAAe,EAAGslD,EAAUD,EAAOl/E,KAAKm/E,EAASjlD,EAAMC,EAAMG,EAAME,GAAQ0kD,EAAOhlD,EAAMC,EAAMG,EAAME,IACzHV,GAAWhX,EAAO+W,EAAe,GAgBzC,SAAS4lD,GAAcR,EAAYC,EAAQhlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAMP,GAErE,IAAItlD,EAAelS,KAAmBs3D,EAClCn8D,EAAQ+D,KACRuT,EAAYG,GAAgBzX,EAAO+W,EAAcK,EAAMC,EAAMG,EAAME,GACvE,OAAOT,GAAejX,EAAO+W,EAAe,EAAG6lD,IAAStlD,EACpDR,GAAc9W,EAAO+W,EAAe,EAAGslD,EAAUD,EAAOl/E,KAAKm/E,EAASjlD,EAAMC,EAAMG,EAAME,EAAMklD,GAC1FR,EAAOhlD,EAAMC,EAAMG,EAAME,EAAMklD,IACnC5lD,GAAWhX,EAAO+W,EAAe,GAiBzC,SAAS8lD,GAAcV,EAAYC,EAAQhlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,EAAMT,GAE3E,IAAItlD,EAAelS,KAAmBs3D,EAClCn8D,EAAQ+D,KACRuT,EAAYG,GAAgBzX,EAAO+W,EAAcK,EAAMC,EAAMG,EAAME,GACvE,OAAOP,GAAgBnX,EAAO+W,EAAe,EAAG6lD,EAAME,IAASxlD,EAC3DR,GAAc9W,EAAO+W,EAAe,EAAGslD,EACnCD,EAAOl/E,KAAKm/E,EAASjlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,GACnDV,EAAOhlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,IACzC9lD,GAAWhX,EAAO+W,EAAe,GAkBzC,SAASgmD,GAAcZ,EAAYC,EAAQhlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,EAAME,EAAMX,GAEjF,IAAItlD,EAAelS,KAAmBs3D,EAClCn8D,EAAQ+D,KACRuT,EAAYG,GAAgBzX,EAAO+W,EAAcK,EAAMC,EAAMG,EAAME,GACvE,OAAOH,GAAgBvX,EAAO+W,EAAe,EAAG6lD,EAAME,EAAME,IAAS1lD,EACjER,GAAc9W,EAAO+W,EAAe,EAAGslD,EACnCD,EAAOl/E,KAAKm/E,EAASjlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,EAAME,GACzDZ,EAAOhlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,EAAME,IAC/ChmD,GAAWhX,EAAO+W,EAAe,GAmBzC,SAASkmD,GAAcd,EAAYC,EAAQhlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,EAAME,EAAME,EAAMb,GAEvF,IAAItlD,EAAelS,KAAmBs3D,EAClCn8D,EAAQ+D,KACRuT,EAAYG,GAAgBzX,EAAO+W,EAAcK,EAAMC,EAAMG,EAAME,GACvE,OAAOD,GAAgBzX,EAAO+W,EAAe,EAAG6lD,EAAME,EAAME,EAAME,IAAS5lD,EACvER,GAAc9W,EAAO+W,EAAe,EAAGslD,EACnCD,EAAOl/E,KAAKm/E,EAASjlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,EAAME,EAAME,GAC/Dd,EAAOhlD,EAAMC,EAAMG,EAAME,EAAMklD,EAAME,EAAME,EAAME,IACrDlmD,GAAWhX,EAAO+W,EAAe,GAezC,SAASomD,GAAchB,EAAYC,EAAQgB,EAAMf,GAK7C,IAHA,IAAItlD,EAAelS,KAAmBs3D,EAClC7kD,GAAY,EACZtX,EAAQ+D,KACHjnB,EAAI,EAAGA,EAAIsgF,EAAKngF,OAAQH,IAC7Bm6B,GAAejX,EAAO+W,IAAgBqmD,EAAKtgF,MAAQw6B,GAAY,GAEnE,OAAOA,EAAYR,GAAc9W,EAAO+W,EAAcqlD,EAAOj/E,MAAMk/E,EAASe,IACxEpmD,GAAWhX,EAAO+W;;;;;;;OAiB1B,SAASsmD,GAAKn9E,EAAOo9E,GACjB,IACIt/D,EADA8D,EAAQiC,KAAW1F,IAEnBssB,EAAgBzqC,EAAQof,GACxBwC,EAAMI,mBACNlE,EAqBR,SAASu/D,EAAa/+E,EAAMg3C,GACxB,GAAIA,EACA,IAAK,IAAI14C,EAAI04C,EAASv4C,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC3C,IAAIkhB,EAAUw3B,EAAS14C,GACvB,GAAI0B,IAASwf,EAAQxf,KACjB,OAAOwf,EAInB,MAAM,IAAIzc,MAAM,aAAe/C,EAAO,yBA9BxB++E,CAAaD,EAAUx7D,EAAM60B,cACvC70B,EAAMlL,KAAK+zB,GAAiB3sB,EACxBA,EAAQ1C,YACPwG,EAAMY,eAAiBZ,EAAMY,kBAAoB1kB,KAAK2sC,EAAe3sB,EAAQ1C,YAIlF0C,EAAU8D,EAAMlL,KAAK+zB,GAEzB,IAAI6yC,EAAex/D,EAAQhjB,QAAQ,MAEnC,OADA+uC,GAAM7pC,EAAOs9E,GACNA,EA+BX,SAASC,GAAUv9E,EAAOi8E,EAAYv2B,GAClC,IAAI43B,EAAev2B,GAAK/mD,GACxB,OAAOw9E,GAAcC,GAAOz9E,GAASo8E,GAAcH,EAAYqB,EAAaI,UAAWh4B,EAAI43B,GACvFA,EAAaI,UAAUh4B,IAa/B,SAASi4B,GAAU39E,EAAOi8E,EAAYv2B,EAAIG,GACtC,IAAIy3B,EAAev2B,GAAK/mD,GACxB,OAAOw9E,GAAcC,GAAOz9E,GAASs8E,GAAcL,EAAYqB,EAAaI,UAAWh4B,EAAIG,EAAIy3B,GAC3FA,EAAaI,UAAUh4B,EAAIG,IAcnC,SAAS+3B,GAAU59E,EAAOi8E,EAAYv2B,EAAIG,EAAIG,GAC1C,IAAIs3B,EAAev2B,GAAK/mD,GACxB,OAAOw9E,GAAcC,GAAOz9E,GAASu8E,GAAcN,EAAYqB,EAAaI,UAAWh4B,EAAIG,EAAIG,EAAIs3B,GAC/FA,EAAaI,UAAUh4B,EAAIG,EAAIG,IAevC,SAAS63B,GAAU79E,EAAOi8E,EAAYv2B,EAAIG,EAAIG,EAAIG,GAC9C,IAAIm3B,EAAev2B,GAAK/mD,GACxB,OAAOw9E,GAAcC,GAAOz9E,GACxBw8E,GAAcP,EAAYqB,EAAaI,UAAWh4B,EAAIG,EAAIG,EAAIG,EAAIm3B,GAClEA,EAAaI,UAAUh4B,EAAIG,EAAIG,EAAIG,IAY3C,SAAS23B,GAAU99E,EAAOi8E,EAAYx8E,GAClC,IAAI69E,EAAev2B,GAAK/mD,GACxB,OAAOw9E,GAAcC,GAAOz9E,GAASi9E,GAAchB,EAAYqB,EAAaI,UAAWj+E,EAAQ69E,GAC3FA,EAAaI,UAAUzgF,MAAMqgF,EAAc79E,IAEnD,SAASg+E,GAAOz9E,GACZ,OAAO6jB,KAAW1F,IAAOzH,KAAK1W,EAAQof,IAAerB,KASzD,SAASy/D,GAAczwC,GACnB,GAAI3W,GAAaI,UAAUuW,GAAW,CAClCA,EAAW3W,GAAaG,OAAOwW,GAC/B,IAAIjtB,EAAQ+D,KAIZ/D,EAD6BA,EAAMrB,KACHkY,GAEpC,OAAOoW;;;;;;;OA+DX,IAAIgxC,GAA8B,SAAU1sB,GASxC,SAAS0sB,EAAaC,QACF,IAAZA,IAAsBA,GAAU,GACpC,IAAIxoE,EAAQ67C,EAAOr0D,KAAKvB,OAASA,KAEjC,OADA+Z,EAAMyoE,UAAYD,EACXxoE,EAkDX,OA9DArZ,EAAU4hF,EAAc1sB,GAkBxB0sB,EAAazhF,UAAU4hF,KAAO,SAAU1gF,GAAS6zD,EAAO/0D,UAAUiB,KAAKP,KAAKvB,KAAM+B,IASlFugF,EAAazhF,UAAU04B,UAAY,SAAUmpD,EAAiBpgF,EAAOqgF,GACjE,IAAIC,EACAC,EAAU,SAAU7e,GAAO,OAAO,MAClC8e,EAAa,WAAc,OAAO,MAClCJ,GAA8C,iBAApBA,GAC1BE,EAAc5iF,KAAKwiF,UAAY,SAAUzgF,GACrCqb,WAAW,WAAc,OAAOslE,EAAgB5gF,KAAKC,MACrD,SAAUA,GAAS2gF,EAAgB5gF,KAAKC,IACxC2gF,EAAgBpgF,QAChBugF,EAAU7iF,KAAKwiF,UAAY,SAAUxe,GAAO5mD,WAAW,WAAc,OAAOslE,EAAgBpgF,MAAM0hE,MAC9F,SAAUA,GAAO0e,EAAgBpgF,MAAM0hE,KAE3C0e,EAAgBC,WAChBG,EAAa9iF,KAAKwiF,UAAY,WAAcplE,WAAW,WAAc,OAAOslE,EAAgBC,cACxF,WAAcD,EAAgBC,eAItCC,EAAc5iF,KAAKwiF,UAAY,SAAUzgF,GAASqb,WAAW,WAAc,OAAOslE,EAAgB3gF,MAC9F,SAAUA,GAAS2gF,EAAgB3gF,IACnCO,IACAugF,EACI7iF,KAAKwiF,UAAY,SAAUxe,GAAO5mD,WAAW,WAAc,OAAO9a,EAAM0hE,MAAc,SAAUA,GAAO1hE,EAAM0hE,KAEjH2e,IACAG,EACI9iF,KAAKwiF,UAAY,WAAcplE,WAAW,WAAc,OAAOulE,OAAoB,WAAcA,OAG7G,IAAII,EAAOntB,EAAO/0D,UAAU04B,UAAUh4B,KAAKvB,KAAM4iF,EAAaC,EAASC,GAIvE,OAHIJ,aAA2B5iF,EAAKkjF,cAChCN,EAAgB/zC,IAAIo0C,GAEjBA,GAEJT,EA/DsB,CAgE/BxiF,EAAKmjF,SAmCHC,GAA2B,WAC3B,SAASA,IACLljF,KAAK0+B,OAAQ,EACb1+B,KAAKmjF,YACLnjF,KAAKqzE,QAAU,IAAIiP,GACnBtiF,KAAKsB,OAAS,EA0DlB,OApDA4hF,EAAUriF,UAAUkG,IAAM,SAAUY,GAAM,OAAO3H,KAAKmjF,SAASp8E,IAAIY,IAKnEu7E,EAAUriF,UAAUuiF,OAAS,SAAUz7E,GACnC,OAAO3H,KAAKmjF,SAASC,OAAOz7E,IAMhCu7E,EAAUriF,UAAUggE,KAAO,SAAUl5D,GACjC,OAAO3H,KAAKmjF,SAAStiB,KAAKl5D,IAM9Bu7E,EAAUriF,UAAUwiF,OAAS,SAAU17E,EAAI27E,GACvC,OAAOtjF,KAAKmjF,SAASE,OAAO17E,EAAI27E,IAMpCJ,EAAUriF,UAAU6L,QAAU,SAAU/E,GAAM3H,KAAKmjF,SAASz2E,QAAQ/E,IAKpEu7E,EAAUriF,UAAUwW,KAAO,SAAU1P,GACjC,OAAO3H,KAAKmjF,SAAS9rE,KAAK1P,IAE9Bu7E,EAAUriF,UAAU0iF,QAAU,WAAc,OAAOvjF,KAAKmjF,SAAShyE,SACjE+xE,EAAUriF,UAAU84B,MAAuB,WAAc,OAAO35B,KAAKmjF,SAASxpD,SAC9EupD,EAAUriF,UAAUsG,SAAW,WAAc,OAAOnH,KAAKmjF,SAASh8E,YAClE+7E,EAAUriF,UAAU2iF,MAAQ,SAAUt8E,GAClClH,KAAKmjF,SAgBb,SAASM,EAAU3I,GACf,OAAOA,EAAKuI,OAAO,SAAUK,EAAMtxD,GAC/B,IAAIuxD,EAAWpjF,MAAMqJ,QAAQwoB,GAAQqxD,EAAUrxD,GAAQA,EACvD,OAAOsxD,EAAKlhF,OAAOmhF;;;;;;;;;;;;;;;;;;;;;OAnBHF,CAAUv8E,GAC1BlH,KAAK0+B,OAAQ,EACb1+B,KAAKsB,OAAStB,KAAKmjF,SAAS7hF,OAC5BtB,KAAK4jF,KAAO5jF,KAAKmjF,SAASnjF,KAAKsB,OAAS,GACxCtB,KAAKoa,MAAQpa,KAAKmjF,SAAS,IAE/BD,EAAUriF,UAAUgjF,gBAAkB,WAAc7jF,KAAKqzE,QAAQoP,KAAKziF,OAEtEkjF,EAAUriF,UAAU+pC,SAAW,WAAc5qC,KAAK0+B,OAAQ,GAE1DwkD,EAAUriF,UAAU+iC,QAAU,WAC1B5jC,KAAKqzE,QAAQsP,WACb3iF,KAAKqzE,QAAQ3vC,eAEVw/C,EA/DmB,GA+F1BY,GAA2B,WAC3B,SAASA,EAAUlzE,EAAQmzE,EAASC,GAChChkF,KAAK4Q,OAASA,EACd5Q,KAAK+jF,QAAUA,EACf/jF,KAAKgkF,KAAOA,EAiChB,OA/BAF,EAAUjjF,UAAUojF,MAAQ,SAAUC,EAAWC,EAAWC,EAASC,GAC7DD,EACApkF,KAAKgkF,KAAOM,GAAYtkF,KAAKgkF,KAAME,EAAWC,EAAmB,MAARE,EAAeA,EAAO,MAG/ErkF,KAAK+jF,QAAUO,GAAYtkF,KAAK+jF,QAASG,EAAWC,EAAmB,MAARE,EAAeA,EAAO,OAG7FP,EAAUjjF,UAAUs3C,MAAQ,WAAc,OAAO,IAAI2rC,EAAU9jF,KAAM,KAAMA,KAAKgkF,OAChFF,EAAUjjF,UAAU6/B,UAAY,WAC5B,IAAI6jD,EAAiBC,GAAuBxkF,KAAK+jF,SAC7CU,EAAcD,GAAuBxkF,KAAKgkF,MAC9C,OAAOO,GAAkBE,EAAc,IAAIX,EAAU9jF,KAAMukF,EAAgBE,GAAe,MAE9FX,EAAUjjF,UAAU0mD,WAAa,WAC7B,IAAIg9B,EAAiBG,GAAkB1kF,KAAK+jF,SACxCU,EAAcC,GAAkB1kF,KAAKgkF,MACzC,OAAOO,GAAkBE,EAAc,IAAIX,EAAU9jF,KAAMukF,EAAgBE,GAAe,MAE9FX,EAAUjjF,UAAUwhC,WAAa,SAAU99B,GACvCogF,GAAapgF,EAAOvE,KAAK+jF,SACzBY,GAAapgF,EAAOvE,KAAKgkF,OAE7BF,EAAUjjF,UAAUq3C,QAAU,SAAU3zB,GACpCoqB,GAAI3uC,KAAKgkF,KAAMz/D,GACfoqB,GAAI3uC,KAAK+jF,QAASx/D,IAEtBu/D,EAAUjjF,UAAU8hC,WAAa,WAC7BiiD,GAAa5kF,KAAK+jF,SAClBa,GAAa5kF,KAAKgkF,OAEfF,EArCmB;;;;;;;OAuC9B,SAASU,GAAuBvS,GAE5B,IADA,IAAIhnE,EAAS,KACNgnE,GAAO,CACV,IAAI4S,KACJ5S,EAAMjuE,OAAO3B,KAAKwiF,GAQlB55E,GANInJ,KAAMmJ,EACN6vE,KAAM7I,EAAM6I,KACZqJ,UAAWlS,EAAMkS,UACjBngF,OAAQ6gF,EACRA,gBAAiB,MAGrB5S,EAAQA,EAAMnwE,KAElB,OAAOmJ,EAEX,SAASy5E,GAAkBzS,GAEvB,IADA,IAAIhnE,EAAS,KACNgnE,GAQHhnE,GANInJ,KAAMmJ,EACN6vE,KAAM7I,EAAM6I,KACZqJ,UAAWlS,EAAMkS,UACjBngF,UACA6gF,gBAAiB5S,EAAMjuE,QAG3BiuE,EAAQA,EAAMnwE,KAElB,OAAOmJ,EAEX,SAAS05E,GAAapgF,EAAO0tE,GACzB,KAAOA,GAEHA,EAAM4S,gBAAgBtiD,OAAOh+B,EAAO,EAAG0tE,EAAMjuE,QAEzCiuE,EAAMjuE,OAAO1C,QACb2wE,EAAM6I,KAAKlwC,WAEfqnC,EAAQA,EAAMnwE,KAGtB,SAAS8iF,GAAa3S,GAClB,KAAOA,GAAO,CAEV,IAAI4S,EAAkB5S,EAAM4S,gBACxBC,EAAgBD,EAAgBx9E,QAAQ4qE,EAAMjuE,QACpC6gF,EAAgBtiD,OAAOuiD,EAAe,GAGxC,GAAGxjF,QACX2wE,EAAM6I,KAAKlwC,WAEfqnC,EAAQA,EAAMnwE,MActB,SAASijF,GAAyBxgE,EAAOvJ,GACrC,IAAI2+B,EAAap1B,EAAMo1B,WACvB,GAAIA,EACA,IAAK,IAAIx4C,EAAI,EAAGA,EAAIw4C,EAAWr4C,OAAQH,GAAK,EACxC,GAAIw4C,EAAWx4C,KAAO6Z,EAClB,OAAO2+B,EAAWx4C,EAAI,GAIlC,OAAO,KAGX,SAAS6jF,GAAiBX,EAAM9/D,EAAO0C,GACnC,IAAInQ,EAAYutE,EAAKloE,IACrB,GAAyB,mBAAdrF,EACP,OAAOA,IAGP,IAAImuE,EAAcx3D,GAA0BlJ,EAAO0C,EAAao9D,GAAM,GAAO,GAC7E,OAAoB,OAAhBY,EACOv3D,GAAkBzG,EAAYvE,IAAOzH,KAAMgM,EAAag+D,EAAa1gE,GAG7E,KAWX,SAAS2gE,GAAmBC,EAAkB5gE,EAAO0C,EAAao9D,GAC9D,IAAIe,EAAoBD,EAAiBhpE,MACzC,OAAIkoE,EACOe,EAAoBJ,GAAiBX,EAAM9/D,EAAO0C,GAAe,KAErEm+D,EAEX,SAASC,GAAU9gE,EAAO0C,EAAao9D,EAAMY,GACzC,OAAIZ,EACOW,GAAiBX,EAAM9/D,EAAO0C,GAErCg+D,GAAe,EACRv3D,GAAkBzG,EAAYvE,IAAOzH,KAAMgM,EAAag+D,EAAa1gE,GArBpF,SAAS+gE,EAAiB/gE,EAAO0C,GAC7B,OAAmB,IAAf1C,EAAM/d,MAA2C,IAAf+d,EAAM/d,KACjCoxD,GAAiBiB,GAAYt0C,EAAO0C,GAE5B,IAAf1C,EAAM/d,KACCuxD,GAAkB6J,GAAa/I,GAAYt0C,EAAO0C,GAEtD,KAkBAq+D,CAAiB/gE,EAAO0C,GAEnC,SAAS0nB,GAAIsjC,EAAO1tD,GAEhB,IADA,IAAI0C,EAAcmB,KACX6pD,GAAO,CACV,IAAIkS,EAAYlS,EAAMkS,UAClB39E,EAAO29E,EAAU39E,KACrB,GAAIA,EAAM,CACN,IAAIyE,EAAS,KACTzE,IAASo7D,GACT32D,EAASi6E,GAAmB1+E,EAAM+d,EAAO0C,EAAak9D,EAAUE,MAI5C,QADhBY,EAAcx3D,GAA0BlJ,EAAO0C,EAAazgB,GAAM,GAAO,MAEzEyE,EAASo6E,GAAU9gE,EAAO0C,EAAak9D,EAAUE,KAAMY,IAGhD,OAAXh6E,GACAs6E,GAAStT,EAAOhnE,QAKpB,IADA,IAAI+P,EAAWmpE,EAAUnpE,SAChB7Z,EAAI,EAAGA,EAAI6Z,EAAS1Z,OAAQH,IAAK,CACtC,IAAI8jF,EACgB,QADhBA,EAAcF,GAAyBxgE,EAAOvJ,EAAS7Z,MAGxC,QADX8J,EAASo6E,GAAU9gE,EAAO0C,EAAak9D,EAAUE,KAAMY,KAEvDM,GAAStT,EAAOhnE,GAKhCgnE,EAAQA,EAAMnwE,MAGtB,SAASyjF,GAAStT,EAAOuT,GACrBvT,EAAMjuE,OAAO3B,KAAKmjF,GAClBvT,EAAM6I,KAAKlwC,WAUf,SAAS05C,GAAYt7E,EAAUk7E,EAAWC,EAAWE,GACjD,OACIviF,KAAMkH,EACN8xE,KAAMoJ,EACNC,UAZR,SAASsB,EAAgBtB,EAAWE,GAChC,IAAIz6E,EAAUrJ,MAAMqJ,QAAQu6E,GAC5B,OACI39E,KAAMoD,EAAU,KAAOu6E,EACvBnpE,SAAUpR,EAAUu6E,EAAY,KAChCE,KAAMA,GAOKoB,CAAgBtB,EAAWE,GACtCrgF,OAAQkgF,EAAUwB,YAClBb,gBAAiB,MAWzB,SAAS5S,GAETkS,EAAWC,EAASC,GAEhB,IAAIhgE,EAAQ+D,KACR87D,EAAY,IAAIhB,GAChBvjD,EAAUtb,EAAMvB,MAAauB,EAAMvB,IAAW,IAAIghE,GAAU,KAAM,KAAM,OAK5E,OAJAI,EAAUwB,eACVxB,EAAUyB,SAAU,EACpBhmD,EAAQskD,MAAMC,EAAWC,EAAWC,EAASC,GAx3TjD,SAASuB,EAAwBvhE,EAAO5Q,EAASkwB,GAC7C,IAAIL,EAAW8Y,GAAW/3B,GAC1Bif,EAASjhC,KAAKoR,GACV4Q,EAAM3B,IAAO6D,mBACbslC,GAAgBxnC,GAAOhiB,KAAKshC,EAAWL,EAAShiC,OAAS,GAq3T7DskF,CAAwBvhE,EAAO6/D,EAAWA,EAAUtgD,SAC7CsgD,EAOX,SAAS2B,GAAa3B,GAClB,IAAI4B,EAAgB5B,EAChB3lD,EAAe1V,KAEnB,SAAIq7D,EAAUxlD,OAASH,IAAiBunD,EAAcH,UAClDzB,EAAUV,MAAMsC,EAAcJ,iBAC9BxB,EAAUL,kBACH,IAWf,SAASkC,GAET5B,EAAWC,EAASC,GAChB,IAAIH,EAAY/jE,GAAUgkE,EAAWC,EAASC,GAC1Cl+D,EAAQiC,KAAW1F,IACvBwhE,EAAUyB,SAAU,EACfx/D,EAAM40B,oBACP50B,EAAM40B,mBAAoB,GAWlC,SAAS56B,GAETgkE,EAAWC,EAASC,GAChB,IACIl+D,EADQiC,KACM1F,IACdyD,EAAMI,mBACNJ,EAAMqvB,oBAEV,IAAIjxC,EAAQ8kB,KACRlJ,EAAY8xD,GAAMkS,EAAWC,EAASC,GAG1C,OAFAj2C,GAAM7pC,EAAQof,GAAexD,GAC7BmJ,GAAqB/kB,EAAQ,GACtB4b,EAKX,SAAS6lE,KACL,IAAIzhF,EAAQ8kB,KAEZ,OADAC,GAAqB/kB,EAAQ,GACtB+mD,GAAK/mD,EAAQof,IAYxB,SAASsiE,GAAahgE,EAAgBk+D,EAAWC,EAEjDC,GACI,IAAIhgE,EAAQ+D,KACRjC,EAAQ9B,EAAM3B,IACdujE,EAAehU,GAAMkS,EAAWC,EAASC,GAE7C,IADChgE,EAAMZ,MAAqBY,EAAMZ,SAAwBphB,KAAK4jF,GAC3D9/D,EAAMI,kBAAmB,CACzB,IAAI2/D,EAAsB//D,EAAMzH,iBAAmByH,EAAMzH,mBAErDuH,KAD0BE,EAAMzH,eAAepd,OAAS6kB,EAAMzH,eAAeyH,EAAMzH,eAAepd,OAAS,IAAM,IAEjH4kF,EAAoB7jF,KAAK4jB,GAGjC,OAAOggE,EAYX,SAASE,GAAmBlgE,EAAgBk+D,EAAWC,EAEvDC,GACI,IAAIH,EAAY+B,GAAahgE,EAAgBk+D,EAAWC,EAASC,GAC7Dl+D,EAAQiC,KAAW1F,IACvBwhE,EAAUyB,SAAU,EACfx/D,EAAMyvB,uBACPzvB,EAAMyvB,sBAAuB,GAGrC,SAASwwC,KACL,IAAI/hE,EAAQ+D,KAGR7jB,EAAQ8kB,KAGZ,OADAC,GAAqB/kB,EAAQ,GACtB8f,EAAMZ,IAAiBlf;;;;;;;OAclC,SAAS8hF,GAAqB9hE,EAAO0C,GACjC,OAAO8wC,GAAkB6J,GAAa/I,GAAYt0C,EAAO0C;;;;;;;;;;;;;;OAuB7D,IAAIq/D,IACAC,cAAetkE,GACfukE,mBAAoBvoE,GACpBwoE,mBAAoBtkE,GACpBpc,iBAAoBA,EACpBI,eAAkBA,EAClBugF,kBAAmBllE,GACnBmlE,cAAevkE,GACfwkE,mBAAoBr7B,GACpBxhD,gBAAiB8kB,GACjBg4D,uBAAwB/3D,GACxB7lB,OAAUA,EACV69E,mBAAoBt7B,GACpBu7B,wBAAyBV,GACzBW,sBAAuBv4B,GACvBw4B,oBAAqBtyB,GACrBuyB,4BAA6B73B,GAC7B83B,oBAAqBnqC,GACrBoqC,QAAS3jF,GACT4jF,aAAc3mD,GACd4mD,eAAgBvwC,GAChBwwC,yBAA0B3gC,GAC1B4gC,uBAAwB3gC,GACxB4gC,iBAAkB5wC,GAClB6wC,mBAAoB/vC,GACpBgwC,gBAAiBjwC,GACjBkwC,kBAAmB1/D,GACnB2/D,mBAAoB1/D,GACpB2/D,iBAAkBz+B,GAClB0+B,gBAAiBnwC,GACjBowC,cAAenwC,GACfowC,WAAY3qE,GACZ4qE,yBAA0BpwC,GAC1BqwC,uBAAwB7vC,GACxB8vC,iBAAkB7H,GAClB8H,iBAAkB1H,GAClB2H,iBAAkBzH,GAClB0H,iBAAkBzH,GAClB0H,iBAAkBzH,GAClB0H,iBAAkBzH,GAClB0H,iBAAkBxH,GAClByH,iBAAkBvH,GAClBwH,iBAAkBtH,GAClBuH,iBAAkBrH,GAClBsH,kBAAmBl9B,GACnBm9B,eAAgB1gE,GAChB2gE,kBAAmBp/B,GACnBq/B,kBAAmBl/B,GACnBm/B,kBAAmBh/B,GACnBi/B,kBAAmB9+B,GACnB++B,kBAAmB5+B,GACnB6+B,kBAAmB1+B,GACnB2+B,kBAAmBx+B,GACnBy+B,kBAAmBt+B,GACnBu+B,kBAAmB7/B,GACnB8/B,oBAAqB7lC,GACrB8lC,YAAahuC,GACbiuC,QAASr+B,GACTs+B,cAAejoD,GACfkoD,mBAAoBzsC,GACpB0sC,kCAAmCvsC,GACnCwsC,kCAAmC/tC,GACnCguC,aAAclI,GACdmI,aAAc/H,GACdgI,aAAc/H,GACdgI,aAAc/H,GACdgI,aAAc/H,GACdgI,iBAAkB3iC,GAClB4iC,QAAS5I,GACT6I,gBAAiB1E,GACjB2E,aAAcrqE,GACdsqE,mBAAoB1E,GACpB2E,sBAAuBvE,GACvBwE,iBAAkB3E,GAClB4E,gBAAiB3E,GACjB4E,oBAAqBzE,GACrB0E,aAAc1/B,GACd2/B,kBAAmB9rC,GACnB+rC,oBAAqB7oC,GACrB8oC,qBAAsBjnC,GACtBknC,oBAAqB3nC,GACrB4nC,uBAAwB7oC,GACxB8oC,YAAa3uE,GACb4uE,QAASh4E,GACTi4E,eAAgBjmC,GAChBkmC,qBAAsBxkC,GACtBykC,mBAAoBhkC,GACpBikC,QAASnP,GACToP,kBAAmBnP,GACnBoP,WAAY9O,GACZ+O,aAAclT,GACdmT,WAAY9Q,GACZ+Q,aAAc/O,GACdgP,mBAAoB9R,GACpB+R,iBAAkB3uE,GAClB4uE,mBAAoBxuE,GACpByuE,eAAgBxuE,GAChByuE,qBAAsB/qE,GACtBgrE,gBAAiBr0D,GACjBs0D,iBAAkBj0D,GAClBk0D,yBAA0BnzD,GAC1BozD,uBAAwB7zD,GACxB8zD,kBAAmB3zD,GACnB4zD,eAAgBl0D,GAChBm0D,4BAA6B1zD,IAQ7B2zD,GACA,SAASA,OAST1hB,GAAU,IAAIr5D,IAUlB,SAASg7E,GAAwB13E,EAAI1O,EAAMqmF,GACvC,GAAIrmF,GAAQA,IAASqmF,EACjB,MAAM,IAAIjnF,MAAM,mCAAqCsP,EAAK,MAAQpO,EAAUN,GAAQ,OAASM,EAAUN,EAAK3D,OAQpH,SAASiqF,GAA4B53E,GACjC,IAAI1O,EAAOykE,GAAQ3hE,IAAI4L,GACvB,IAAK1O,EACD,MAUR,SAASumF,EAAc73E,GACnB,OAAO,IAAItP,MAAM,qBAAuBsP,EAAK;;;;;;;OAXnC63E,CAAc73E,GACxB,OAAO,IAAImrE,GAAkB75E,GAQjC,IAAIwmF,GAAmBF,GAYnBG,MACAC,MAQAC,IAAsB,EAM1B,SAASC,KACL,IAAKD,GAAqB,CACtBA,IAAsB,EACtB,IACI,IAAK,IAAIhsF,EAAI+rF,GAAY5rF,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC9C,IAAIkC,EAAK6pF,GAAY/rF,GAAIsvE,EAAaptE,EAAGotE,WAAYre,EAAW/uD,EAAG+uD,SAC/DA,EAAS1wC,cAAgB0wC,EAAS1wC,aAAa2rE,MAAMC,MAErDJ,GAAY3qD,OAAOphC,EAAG,GACtBosF,GAA6B9c,EAAYre,KAIrD,QACI+6B,IAAsB,IASlC,SAASG,GAAsBE,GAC3B,OAAIjtF,MAAMqJ,QAAQ4jF,GACPA,EAAYH,MAAMC,MAEpB5lF,EAAkB8lF,GAO/B,SAASC,GAAgBhd,EAAYre,QAChB,IAAbA,IAAuBA,MAC3Bs7B,GAAoBjd,EAAYre,GA7CpC,SAASu7B,EAA+Bld,EAAYre,GAChD86B,GAAY7qF,MAAOouE,WAAYA,EAAYre,SAAUA,IAiDrDu7B,CAA+Bld,EAAYre,GAK/C,SAASs7B,GAAoBjd,EAAYre,GAGrC,IAAI1wC,EAAeksE,GAAUx7B,EAAS1wC,cAAgBurE,IAClDjxE,EAAc,KAClB5b,OAAOwD,eAAe6sE,EAAY10D,IAC9BxG,cAAc,EACdjM,IAAK,WAcD,OAboB,OAAhB0S,IACAA,EAAc1T,IAAoBmlF,gBAAgBnH,GAAgB,QAAU7V,EAAW5tE,KAAO,mBAC1F2D,KAAMiqE,EACNhvD,UAAWmsE,GAAUx7B,EAAS3wC,WAAawrE,GAAevlF,GAC1Dga,aAAcA,EAAa3a,IAAIW,GAC/BpB,QAASsnF,GAAUx7B,EAAS9rD,SAAW2mF,GAAevlF,GACjDX,IAAI8mF,IACTvuF,QAASsuF,GAAUx7B,EAAS9yD,SAAW2tF,GAAevlF,GACjDX,IAAI8mF,IACTC,YAAY,EACZptE,QAAS0xC,EAAS1xC,QAAUktE,GAAUx7B,EAAS1xC,SAAW,QAG3D1E,KAGXo2C,EAASl9C,IAlHjB,SAAS64E,EAAqB74E,EAAIu9C,GAE9Bm6B,GAAwB13E,EADT+1D,GAAQ3hE,IAAI4L,GACWu9C,GACtCwY,GAAQp5D,IAAIqD,EAAIu9C,GAgHZs7B,CAAqB37B,EAASl9C,GAAIu7D,GAEtC,IAAI5pE,EAAgB,KACpBzG,OAAOwD,eAAe6sE,EAAY9pE,GAC9B2C,IAAK,WACD,GAAsB,OAAlBzC,EAAwB,CAExB,IAAI/B,GACAjC,KAAM4tE,EAAW5tE,KACjB2D,KAAMiqE,EACNtiE,KAAMF,GAAoBwiE,GAC1BpqE,UAAW+rD,EAAS/rD,WAAa4mF,GACjC3mF,UACK8rD,EAAS9rD,SAAW2mF,IAAelmF,IAAIW,IACvC0qD,EAAS9yD,SAAW2tF,IAAelmF,IAAIW,KAGhDb,EAAgByB,IAAoB0lF,gBAAgB1H,GAAgB,QAAU7V,EAAW5tE,KAAO,oBAAqBiC,GAEzH,OAAO+B,GAGX0O,cAAc,IA0JtB,SAASg4E,GAA6B9c,EAAYre,GAC9C,IAAI1wC,EAAeksE,GAAUx7B,EAAS1wC,cAAgBurE,IAClDgB,EAAmBC,GAAoBzd,GAC3C/uD,EAAahV,QAAQ,SAAU8gF,GACvBA,EAAY/sF,eAAegb,IAI3B0yE,GADmB9sE,GADHmsE,GAEyBS,GAEnCT,EAAY/sF,eAAekb,KAAsB6xE,EAAY/sF,eAAeob,MAElF2xE,EAAYY,gBAAkB3d,KAQ1C,SAAS0d,GAA2BrgC,EAAcmgC,GAC9CngC,EAAa9tC,cAAgB,WACzB,OAAOzf,MAAM+X,KAAK21E,EAAiBI,YAAYxtE,YAC1C9Z,IAAI,SAAUunF,GAAO,OAAOA,EAAI7tF,eAAegb,IAAoB4F,GAAgBitE,GACpFhtE,GAAgBgtE,KACflL,OAAO,SAAUl5E,GAAO,QAASA,KAE1C4jD,EAAa7tC,SAAW,WACpB,OAAO1f,MAAM+X,KAAK21E,EAAiBI,YAAYrtE,OAAOja,IAAI,SAAU26E,GAAQ,OAAOngE,GAAWmgE,MAElG5zB,EAAaptC,QAAUutE,EAAiBvtE,QAS5C,SAASwtE,GAAoBzd,EAAY8d,GACrC,IAAKC,GAAW/d,GACZ,MAAM,IAAI7qE,MAAM6qE,EAAW5tE,KAAO,iCAEtC,IAAIqH,EAAMqY,GAAekuD,GACzB,GAAoC,OAAhCvmE,EAAIyX,wBACJ,OAAOzX,EAAIyX,wBAEf,IAAI8sE,GACA/tE,QAASxW,EAAIwW,SAAW,KACxB2tE,aACIxtE,WAAY,IAAIxE,IAChB2E,MAAO,IAAI3E,KAEfqyE,UACI7tE,WAAY,IAAIxE,IAChB2E,MAAO,IAAI3E,MAsDnB,OAnDAnS,EAAIwX,aAAahV,QAAQ,SAAUiiF,GAE3BptE,GADmBotE,GAEnBF,EAAOJ,YAAYrtE,MAAM2tB,IAAIggD,GAM7BF,EAAOJ,YAAYxtE,WAAW8tB,IAAIggD,KAG1CzkF,EAAI5D,QAAQoG,QAAQ,SAAU4lD,GAC1B,IAAIs8B,EAAet8B,EACnB,IAAKk8B,GAAWI,GACZ,MAAM,IAAIhpF,MAAM,aAAegpF,EAAa/rF,KAAO,uCAEnD0rF,GACAA,EAAkBK,GAItB,IAAIC,EAAgBX,GAAoBU,EAAcL,GACtDM,EAAcH,SAAS7tE,WAAWnU,QAAQ,SAAUoiF,GAAS,OAAOL,EAAOJ,YAAYxtE,WAAW8tB,IAAImgD,KACtGD,EAAcH,SAAS1tE,MAAMtU,QAAQ,SAAUoiF,GAAS,OAAOL,EAAOJ,YAAYrtE,MAAM2tB,IAAImgD,OAEhG5kF,EAAI5K,QAAQoN,QAAQ,SAAUgiF,GAC1B,IAAIK,EAAeL,EAGnB,GAAIF,GAAWO,GAAe,CAG1B,IAAIC,EAAgBd,GAAoBa,EAAcR,GACtDS,EAAcN,SAAS7tE,WAAWnU,QAAQ,SAAUoiF,GAChDL,EAAOJ,YAAYxtE,WAAW8tB,IAAImgD,GAClCL,EAAOC,SAAS7tE,WAAW8tB,IAAImgD,KAEnCE,EAAcN,SAAS1tE,MAAMtU,QAAQ,SAAUoiF,GAC3CL,EAAOJ,YAAYrtE,MAAM2tB,IAAImgD,GAC7BL,EAAOC,SAAS1tE,MAAM2tB,IAAImgD,UAGzBvtE,GAAWwtE,GAChBN,EAAOC,SAAS1tE,MAAM2tB,IAAIogD,GAG1BN,EAAOC,SAAS7tE,WAAW8tB,IAAIogD,KAGvC7kF,EAAIyX,wBAA0B8sE,EACvBA,EAEX,SAASb,GAAU5pF,EAAQirF,GACvB,IAAIC,KASJ,OARAlrF,EAAO0I,QAAQ,SAAU3K,GACjBxB,MAAMqJ,QAAQ7H,GACdmtF,EAAI7sF,KAAKb,MAAM0tF,EAAK3sF,EAASqrF,GAAU7rF,EAAOktF,KAG9CC,EAAI7sF,KAAK4sF,EAAQA,EAAMltF,GAASA,KAGjCmtF,EAEX,SAASrB,GAA0B9rF,GAC/B,OAKJ,SAASotF,EAAsBptF,GAC3B,YAA0BmE,IAAnBnE,EAAMqwD,SANT+8B,CAAsBptF,GACfA,EAAMqwD,SAEVrwD,EAKX,SAASysF,GAAWzsF,GAChB,QAASwgB,GAAexgB;;;;;;;OAmB5B,SAASqtF,GAAiB5oF,EAAM8Q,GAC5B,IAAIoE,EAAiB,MA14jBzB,SAAS2zE,EAAyC/3E,GAC1CgF,GAAyBhF,IACzB8E,GAAiCuyB,IAAIr3B,GA04jBzC+3E,CAAyC/3E,GACzClX,OAAOwD,eAAe4C,EAAMiV,IACxBnS,IAAK,WACD,IAAI8E,EAAW9F,IACf,GAAuB,OAAnBoT,EAAyB,CACzB,GAAIY,GAAyBhF,GAAW,CACpC,IAAIhV,GAAS,cAAgB2a,GAAgBzW,GAAQ,sBAQrD,MAPI8Q,EAASkF,aACTla,EAAMD,KAAK,mBAAqB4a,GAAgB3F,EAASkF,cAEzDlF,EAASoF,WAAapF,EAASoF,UAAUpb,QACzCgB,EAAMD,KAAK,iBAAmBsR,KAAK7M,UAAUwQ,EAASoF,YAE1Dpa,EAAMD,KAAK,2DACL,IAAIuD,MAAMtD,EAAM0E,KAAK,OAE/B,IAAIwV,EAAclF,EAASkF,aAAe,SAAWS,GAAgBzW,GAAQ,iBACzE1B,EAAO/D,KAAauuF,GAAkB9oF,EAAM8Q,IAAai4E,eAAgBnhF,EAASohF,sBAAsB,YAAavyE,GAAgBzW,GAAOgW,GAAcC,SAAUnF,EAASmF,UAAY,GAAIgzE,oBAAqBn4E,EAASm4E,sBAAuB,EAAOlvE,OAAQjJ,EAASiJ,QAAUvD,GAAeo8C,WAAY9hD,EAAS8hD,WAAYs2B,YAAaC,GAAuBnpF,EAAMwH,KAAanB,gBAAgBrG,GAAO0U,IAAc2F,cAAgBf,gBAAiBxI,EAASwI,gBAAiBkB,MAAO,IAAIpP,IAAOyO,cAAe/I,EAAS+I,eAAiB/gB,EAAQkc,kBAAkB8E,SAAUsvE,cAAet4E,EAASs4E,cAAeh7B,cAAet9C,EAASs9C,eAAiB,OAY9oB,GAXAl5C,EAAiBtN,EAASghF,iBAAiB9I,GAAgB9pE,EAAa1X,GAMxEsoF,KAgBhB,SAASyC,EAAiBtzE,GACtB,YAAqCrW,IAA9BqW,EAAU6xE,gBAZDyB,CAAiBrpF,GAAO,CACxB,IAAIioF,EAASP,GAAoB1nF,EAAK4nF,iBACtCD,GAA2BzyE,EAAgB+yE,IAGnD,OAAO/yE,GAGXnG,cAAc,IAatB,SAASu6E,GAAiBtpF,EAAMmhB,GAC5B,IAAI/L,EAAiB,KACrBxb,OAAOwD,eAAe4C,EAAMmV,IACxBrS,IAAK,WACD,GAAuB,OAAnBsS,EAAyB,CACzB,IACIm0E,EAAe,SADNvpF,GAAQA,EAAK3D,MACY,qBAClCuL,EAAW9F,IACX0nF,EAASV,GAAkB9oF,EAAMmhB,GACrCqoE,EAAOT,eACHnhF,EAASohF,sBAAsB,YAAavyE,GAAgBzW,GAAOupF,GACvEn0E,EAAiBxN,EAAS0hF,iBAAiBxJ,GAAgByJ,EAAcC,GAE7E,OAAOp0E,GAGXrG,cAAc,IAUtB,SAAS+5E,GAAkB9oF,EAAM8Q,GAE7B,IAAIjL,EAAe2B,KAAanB,gBAAgBrG,GAChD,OACI3D,KAAM2D,EAAK3D,KACX2D,KAAMA,EACNwJ,kBAAmB,EACnBgL,SAAU1D,EAAS0D,SACnB7M,KAAMF,GAAoBzH,GAC1B+H,KAAM+I,EAAS/I,MAAQwO,GACvB1Q,aAAcA,EACdsS,OAAQrH,EAASqH,QAAU3B,GAC3B4B,QAAStH,EAASsH,SAAW5B,GAC7B2iB,QAASgwD,GAAuBnpF,EAAM6F,EAAc4jF,IACpDC,WAAaC,cAAe3pF,EAAK3F,UAAUJ,eAAe,gBAC1D8uF,eAAgB,KAChBa,iBAvBR,SAASC,EAA0B7pF,GAC/B,OAAOpG,OAAO2N,eAAevH,EAAK3F,aAAeT,OAAOS,UAsBlCwvF,CAA0B7pF,GAC5CqY,SAyCR,SAASyxE,EAAgBzxE,GACrB,YAAiB3Y,IAAb2Y,EACO,KAEJA,EAASsU,MAAM,KAAKpsB,IAAI,SAAUwpF,GAAQ,OAAOA,EAAKn9D,SA7C/Ck9D,CAAgBh5E,EAASuH,UACnCxY,UAAWiR,EAASjR,WAAa,MAgBzC,SAASspF,GAAuBnpF,EAAM6F,EAAcmkF,GAChD,IAAIC,KACAjhC,EAAU,SAAUkhC,GACpB,GAAIrkF,EAAa5L,eAAeiwF,GAAQ,CACpC,IAAIC,EAAgBtkF,EAAaqkF,GACjCC,EAAcjkF,QAAQ,SAAUkkF,GAC5B,GAAIJ,EAAWI,GAAM,CACjB,IAAKA,EAAI51E,SACL,MAAM,IAAIpV,MAAM,8CAAgD8qF,EAAQ,SAC5DzzE,GAAgBzW,GAAQ,+CAExC,GAAImqF,EAAct5E,KAAKw5E,IACnB,MAAM,IAAIjrF,MAAM,0DAEpB6qF,EAAYpuF,KAxBhC,SAASyuF,EAAyBrhB,EAAcmhB,GAC5C,OACInhB,aAAcA,EACd0U,UANR,SAAS4M,EAA0B/1E,GAC/B,MAA2B,iBAAbA,EAqDlB,SAASg2E,EAAajvF,GAClB,OAAOA,EAAMoxB,MAAM,KAAKpsB,IAAI,SAAUkqF,GAAS,OAAOA,EAAM79D;;;;;;;OAtDtB49D,CAAah2E,GAAYtT,EAAkBsT,GAKlE+1E,CAA0BH,EAAI51E,UACzCG,YAAay1E,EAAIz1E,YACjBf,MAAOw2E,EAAIx2E,MACXiqE,KAAMuM,EAAIvM,KAAOuM,EAAIvM,KAAO,KAC5B6M,SAAUN,EAAIM,QAiBeJ,CAAyBJ,EAAOE,SAKjE,IAAK,IAAIF,KAASrkF,EACdmjD,EAAQkhC,GAEZ,OAAOD,EAQX,SAASR,GAAeluF,GACpB,IAAIc,EAAOd,EAAM8B,eACjB,MAAgB,iBAAThB,GAAoC,oBAATA,EAEtC,SAASqY,GAAYnZ,GACjB,IAAIc,EAAOd,EAAM8B,eACjB,MAAgB,cAAThB,GAAiC,iBAATA,EAEnC,SAASguF,GAAW9uF,GAChB,MAAgC,UAAzBA,EAAM8B,eAajB,SAASstF,GAAY3qF,EAAM1B,GACvB,IAAIgX,EAAY,KAChB1b,OAAOwD,eAAe4C,EAAMqV,IACxBvS,IAAK,WAUD,OATkB,OAAdwS,IACAA,EAAYxT,IAAoB6oF,YAAY7K,GAAgB,QAAUrpE,GAAgBzW,GAAQ,iBAC1FA,KAAMA,EACN3D,KAAM2D,EAAK3D,KACXsL,KAAMF,GAAoBzH,GAC1Bm7E,SAAU78E,EAAKjC,KACfyf,UAAoBpc,IAAdpB,EAAKwd,MAAqBxd,EAAKwd,QAGtCxG,GAGXvG,cAAc,IA7WF,IAAI3D,IACD,IAAIA,IAqX3B,IAAIw/E,GAAYxuF,EAAc,YAAa,SAAU0rF,GAEjD,YADY,IAARA,IAAkBA,MACfA,QACRpoF,OAAWA,EAAW,SAAUM,EAAM1B,GAAQ,OAAOusF,GAAyB7qF,EAAM1B,KAOnFwsF,GAAY1uF,EAAc,YAAa,SAAUk1B,GAEjD,YADU,IAANA,IAAgBA,MACZ/2B,GAAW+e,gBAAiBxgB,EAAQmY,wBAAwBtO,SAAW2uB,IAChFs5D,QAAWlrF,EAAW,SAAUM,EAAM1B,GAAQ,OAAOysF,GAAyB/qF,EAAM1B,KAKnF0sF,GAAO5uF,EAAc,OAAQ,SAAUpC,GAAK,OAAQO,GAAWuhB,MAAM,GAAQ9hB,SAAQ0F,OAAWA,EAAW,SAAUM,EAAM1B,GAAQ,OAAO2sF,GAAoBjrF,EAAM1B,KAmBpK4sF,GAA0B,SAAU9oD,GACpC,OAAO,SAAU/jC,EAAQhC,GAErB,IADA,IAAIS,KACKC,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCD,EAAKC,EAAK,GAAKlC,UAAUkC,GAE7B,IAAI3C,EAAciE,EAAOjE,YACpBA,EAAYH,eAAewb,KAzBhB,SAAUpX,GAC9B,IAAIjE,EAAciE,EAAOjE,YACrB+wF,EAAmB/wF,EAAYsb,UAC/BwzC,EAAU9uD,EAAYsb,WACtByC,UACAC,WACAR,mBAEAuzE,IACA9rF,EAAe6pD,EAAQ/wC,OAAQgzE,EAAiBhzE,QAChD9Y,EAAe6pD,EAAQ9wC,QAAS+yE,EAAiB/yE,SACjD/Y,EAAe6pD,EAAQtxC,eAAgBuzE,EAAiBvzE,iBAepDwzE,CAAkB/sF,GAGR+jC,EADAhoC,EAAYsb,WAElBrZ,GAAQS,EAAK,IAAMT,IAO/BgvF,GAAQptF,EAAkB,QAAS,SAAUqtF,GAAuB,OAAUA,oBAAqBA,SAA2B5rF,EAAWwrF,GAAwB,SAAUhiC,GAAW,OAAOA,EAAQ/wC,cAKrMozE,GAASttF,EAAkB,SAAU,SAAUqtF,GAAuB,OAAUA,oBAAqBA,SAA2B5rF,EAAWwrF,GAAwB,SAAUhiC,GAAW,OAAOA,EAAQ9wC,eAKvMozE,GAAcvtF,EAAkB,cAAe,SAAUwtF,GAAoB,OAAUA,iBAAkBA,KAiCzGC,GAAeztF,EAAkB,eAAgB,SAAUk3C,EAAWr4C,GAAQ,OAAUq4C,UAAWA,EAAWr4C,KAAMA,KACpH6uF,GAAsC/C,GACtCgD,GAAsCtC,GACtCuC,GAAiClB,GACjCI,GAA2BY,GAC3Bd,GAA2Be,GAC3BX,GAAsBY,GAMtBC,GAAW1vF,EAAc,WAAY,SAAUwvD,GAAY,OAAOA,QAAalsD,OAAWA,EAY9F,SAAUM,EAAM1B,GAAQ,OAAOytF,GAAwB/rF,EAAM1B,KACzD0tF,GAAqC/E,GACrC8E,GAA0BC,GA8B1BC,GAAkB,IAAItiF,GAAe,2BAMrCuiF,GAAuC,WACvC,SAASA,EAAsBC,GAC3B,IAAI54E,EAAQ/Z,KACZA,KAAK2yF,SAAWA,EAChB3yF,KAAK4yF,aAAc,EACnB5yF,KAAKgC,MAAO,EACZhC,KAAK6yF,YAAc,IAAI99C,QAAQ,SAAU7tC,EAAK4rF,GAC1C/4E,EAAMjC,QAAU5Q,EAChB6S,EAAMg5E,OAASD,IA6BvB,OAzBAJ,EAAsB7xF,UAAUmyF,gBAAkB,WAC9C,IAAIj5E,EAAQ/Z,KACZ,IAAIA,KAAK4yF,YAAT,CAGA,IAAIK,KACAtQ,EAAW,WACX5oE,EAAM/X,MAAO,EACb+X,EAAMjC,WAEV,GAAI9X,KAAK2yF,SACL,IAAK,IAAIxxF,EAAI,EAAGA,EAAInB,KAAK2yF,SAASrxF,OAAQH,IAAK,CAC3C,IAAI+xF,EAAalzF,KAAK2yF,SAASxxF,KAC3Bi4B,GAAU85D,IACVD,EAAkB5wF,KAAK6wF,GAInCn+C,QAAQo+C,IAAIF,GAAmB55D,KAAK,WAAcspD,MAAeyQ,MAAM,SAAUjxF,GAAK4X,EAAMg5E,OAAO5wF,KAClE,IAA7B8wF,EAAkB3xF,QAClBqhF,IAEJ3iF,KAAK4yF,aAAc,IAEvBF,EAAsB9rF,gBAAkBb,GAAmBb,MAAOwtF,EAAuBrzF,QAAS,SAASg0F,EAA8BpyF,GAAK,OAAO,IAAKA,GAAKyxF,GAAuBzpF,EAAOwpF,GAAiB,KAAQxsF,WAAY,OAC3NysF,EArC+B,GAoEtCY,GAAS,IAAInjF,GAAe,SAQ5BojF,IACAxkF,QAASukF,GACThkF,WATJ,SAASkkF,KACL,MAAO,GAAKC,KAAgBA,KAAgBA,MAS5CtlF,SAEJ,SAASslF,KACL,OAAOzkF,OAAO0kF,aAAa,GAAKpb,KAAK8F,MAAsB,GAAhB9F,KAAKqb,WAMpD,IAkKIC,GACAC,GAnKAC,GAAuB,IAAI3jF,GAAe,wBAK1C4jF,GAAc,IAAI5jF,GAAe,eASjC6jF,GAAyB,IAAI7jF,GAAe,wBAK5C8jF,GAAmB,IAAI9jF,GAAe,iCAStC+jF,GAAyB,WACzB,SAASA,KAYT,OAVAA,EAAQrzF,UAAUszF,IAAM,SAAUhhF,GAE9B+b,QAAQilE,IAAIhhF,IAGhB+gF,EAAQrzF,UAAUmyB,KAAO,SAAU7f,GAE/B+b,QAAQ8D,KAAK7f,IAEjB+gF,EAAQttF,gBAAkBb,GAAmBb,MAAOgvF,EAAS70F,QAAS,SAAS+0F,EAAgBnzF,GAAK,OAAO,IAAKA,GAAKizF,IAAejuF,WAAY,OACzIiuF,EAbiB,GA+BxBG,GACA,SAASA,GAA6BC,EAAiBC,GACnDv0F,KAAKs0F,gBAAkBA,EACvBt0F,KAAKu0F,mBAAqBA,GAI9BC,GAAwC,SAAU/jB,GAClD,OAAO,IAAI4P,GAAkB5P,IAE7BgkB,GAA6BD,GAC7BE,GAAyC,SAAUjkB,GACnD,OAAO17B,QAAQj9B,QAAQ08E,GAAsC/jB,KAE7DkkB,GAA8BD,GAC9BE,GAAwD,SAAUnkB,GAClE,IAAI6jB,EAAkBE,GAAsC/jB,GAExD8jB,EADYhyE,GAAekuD,GACI/uD,aAAa2hE,OAAO,SAAU7uB,EAAWg5B,GACxE,IAAI1/B,EAAezsC,GAAgBmsE,GAEnC,OADA1/B,GAAgB0G,EAAUnyD,KAAK,IAAIuxE,GAAmB9lB,IAC/C0G,OAEX,OAAO,IAAI6/B,GAA6BC,EAAiBC,IAEzDM,GAA6CD,GAC7CE,GAAyD,SAAUrkB,GACnE,OAAO17B,QAAQj9B,QAAQ88E,GAAsDnkB,KAE7EskB,GAA8CD,GAY9CE,GAA0B,WAC1B,SAASA,IAKLh1F,KAAKi1F,kBAAoBR,GAIzBz0F,KAAKk1F,mBAAqBP,GAI1B30F,KAAKm1F,kCAAoCN,GAIzC70F,KAAKo1F,mCAAqCL,GAe9C,OAVAC,EAASn0F,UAAUw0F,WAAa,aAIhCL,EAASn0F,UAAUy0F,cAAgB,SAAU9uF,KAI7CwuF,EAASn0F,UAAU00F,YAAc,SAAU9kB,KAC3CukB,EAASpuF,gBAAkBb,GAAmBb,MAAO8vF,EAAU31F,QAAS,SAASm2F,EAAiBv0F,GAAK,OAAO,IAAKA,GAAK+zF,IAAgB/uF,WAAY,OAC7I+uF,EAjCkB,GA2CzBS,GAAmB,IAAItlF,GAAe,mBAMtCulF,GACA,SAASA,OAkDTC,GApCJ,SAASC,KACL,IAAIC,EAAMhuF,EAA+B,IACzC,SAAIguF,KACAjC,GAAQiC,EAAW,SAEfhC,GAASD,GAAc,OAChB,IA8BFgC,GACjB,SAASE,GAAUC,EAAMC,GACrB,OAAO,KAgCX,IAAIC,GAAiBN,GA3DrB,SAASO,GAAYphF,EAAW5L,GAE5B,YADc,IAAVA,IAAoBA,EAAQ,MACzB2qF,GAAOqC,YAAYphF,EAAW5L,IAyDO,SAAU4L,EAAW5L,GAAS,OAAO4sF,IAUjFK,GAAWR,GAjEf,SAASS,GAAMprB,EAAOxiB,GAElB,OADAorC,GAAMyC,WAAWrrB,EAAOxiB,GACjBA,GA+DyB,SAAUtnD,EAAGgB,GAAK,OAAOA,GAczDo0F,GAAoBX,GA3ExB,SAASY,GAAeC,EAAWv1D,GAC/B,OAAO2yD,GAAM6C,eAAeD,EAAWv1D,IA0EW,SAAUu1D,EAAWv1D,GAAU,OAAO,MAOxFy1D,GAAkBf,GA/EtB,SAASgB,GAAaC,GAClBhD,GAAM+C,aAAaC;;;;;;;QA8E2B,SAAU10F,GAAK,OAAO,MASpE20F,GAAU9hD,QAAQj9B,QAAQ,GAC9B,SAASg/E,GAAkBnvF,GACH,oBAATovF,KAEPF,GAAQx9D,KAAK,WAAc1xB,GAAMA,EAAGnG,MAAM,KAAM,QAGhDu1F,KAAK3hE,QAAQ0hE,kBAAkB,oBAAqBnvF;;;;;;;OAqF5D,IAAIqvF,GAAwB,WACxB,SAASA,EAAO3zF,GACZ,IAAImwB,EAAKnwB,EAAG4zF,qBAAsBA,OAA8B,IAAPzjE,GAAwBA,EA2BjF,GA1BAxzB,KAAKk3F,sBAAuB,EAC5Bl3F,KAAKm3F,sBAAuB,EAI5Bn3F,KAAKo3F,UAAW,EAIhBp3F,KAAKq3F,WAAa,IAAI/U,IAAa,GAMnCtiF,KAAKs3F,iBAAmB,IAAIhV,IAAa,GAMzCtiF,KAAKu3F,SAAW,IAAIjV,IAAa,GAIjCtiF,KAAKw3F,QAAU,IAAIlV,IAAa,GACb,oBAARyU,KACP,MAAM,IAAInxF,MAAM,kDAEpBmxF,KAAKU,oBACMz3F,KACN03F,SAAW,EADL13F,KAEN23F,OAFM33F,KAEQ43F,OAASb,KAAK3hE,QAC7B2hE,KAAkB,cAHX/2F,KAIF43F,OAJE53F,KAIY43F,OAAOC,KAAKd,KAAkB,cAEjDA,KAA2B,uBANpB/2F,KAOF43F,OAPE53F,KAOY43F,OAAOC,KAAK,IAAId,KAA2B,uBAE9DE,GAAwBF,KAA6B,yBAT9C/2F,KAUF43F,OAVE53F,KAUY43F,OAAOC,KAAKd,KAA6B,yBAkGxE,SAASe,EAAiCC,GACtCA,EAAKH,OAASG,EAAKH,OAAOC,MACtBh1F,KAAM,UACNm1F,YAAcC,eAAiB,GAC/BC,aAAc,SAAUrpB,EAAUz5C,EAASvwB,EAAQszF,EAAMC,EAAWC,GAChE,IAEI,OADAC,GAAQP,GACDlpB,EAAS0pB,WAAW1zF,EAAQszF,EAAMC,EAAWC,GAExD,QACIG,GAAQT,KAGhBU,SAAU,SAAU5pB,EAAUz5C,EAASvwB,EAAQuoD,EAAUgrC,EAAWC,EAAWvyF,GAC3E,IAEI,OADAwyF,GAAQP,GACDlpB,EAAS6pB,OAAO7zF,EAAQuoD,EAAUgrC,EAAWC,EAAWvyF,GAEnE,QACI0yF,GAAQT,KAGhBY,UAAW,SAAU9pB,EAAUz5C,EAASvwB,EAAQ+zF,GAC5C/pB,EAASgqB,QAAQh0F,EAAQ+zF,GACrBxjE,IAAYvwB,IAGe,aAAvB+zF,EAAaE,QACbf,EAAKb,qBAAuB0B,EAAaG,UACzCC,GAAYjB,IAEgB,aAAvBa,EAAaE,SAClBf,EAAKZ,qBAAuByB,EAAaK,aAIrDC,cAAe,SAAUrqB,EAAUz5C,EAASvwB,EAAQvC,GAGhD,OAFAusE,EAASx/C,YAAYxqB,EAAQvC,GAC7By1F,EAAKoB,kBAAkB,WAAc,OAAOpB,EAAKP,QAAQ/U,KAAKngF,MACvD,KAvIXw1F,CAZW93F,MAqFf,OAvEAg3F,EAAOoC,gBAAkB,WAAc,OAA6C,IAAtCrC,KAAK3hE,QAAQ9rB,IAAI,kBAC/D0tF,EAAOqC,oBAAsB,WACzB,IAAKrC,EAAOoC,kBACR,MAAM,IAAIxzF,MAAM,mDAGxBoxF,EAAOsC,uBAAyB,WAC5B,GAAItC,EAAOoC,kBACP,MAAM,IAAIxzF,MAAM,mDAexBoxF,EAAOn2F,UAAU04F,IAAM,SAAU5xF,EAAIywF,EAAWC,GAC5C,OAAOr4F,KAAK43F,OAAO2B,IAAI5xF,EAAIywF,EAAWC,IAc1CrB,EAAOn2F,UAAU24F,QAAU,SAAU7xF,EAAIywF,EAAWC,EAAWx1F,GAC3D,IAAIk1F,EAAO/3F,KAAK43F,OACZO,EAAOJ,EAAK0B,kBAAkB,gBAAkB52F,EAAM8E,EAAI+xF,GAAeC,GAAQA,IACrF,IACI,OAAO5B,EAAKyB,QAAQrB,EAAMC,EAAWC,GAEzC,QACIN,EAAK6B,WAAWzB,KAOxBnB,EAAOn2F,UAAUg5F,WAAa,SAAUlyF,EAAIywF,EAAWC,GACnD,OAAOr4F,KAAK43F,OAAOiC,WAAWlyF,EAAIywF,EAAWC,IAejDrB,EAAOn2F,UAAUs4F,kBAAoB,SAAUxxF,GAC3C,OAAO3H,KAAK23F,OAAO4B,IAAI5xF,IAEpBqvF,EAtHgB,GAwH3B,SAAS2C,MACT,IAAID,MACJ,SAASV,GAAYjB,GACjB,GAAqB,GAAjBA,EAAKL,WAAkBK,EAAKb,uBAAyBa,EAAKX,SAC1D,IACIW,EAAKL,WACLK,EAAKT,iBAAiB7U,KAAK,MAE/B,QAEI,GADAsV,EAAKL,YACAK,EAAKb,qBACN,IACIa,EAAKoB,kBAAkB,WAAc,OAAOpB,EAAKR,SAAS9U,KAAK,QAEnE,QACIsV,EAAKX,UAAW,IAiDpC,SAASkB,GAAQP,GACbA,EAAKL,WACDK,EAAKX,WACLW,EAAKX,UAAW,EAChBW,EAAKV,WAAW5U,KAAK,OAG7B,SAAS+V,GAAQT,GACbA,EAAKL,WACLsB,GAAYjB,GAMhB,IA4QI+B,GA5QAC,GAA4B,WAC5B,SAASA,IACL/5F,KAAKk3F,sBAAuB,EAC5Bl3F,KAAKm3F,sBAAuB,EAC5Bn3F,KAAKo3F,UAAW,EAChBp3F,KAAKq3F,WAAa,IAAI/U,GACtBtiF,KAAKs3F,iBAAmB,IAAIhV,GAC5BtiF,KAAKu3F,SAAW,IAAIjV,GACpBtiF,KAAKw3F,QAAU,IAAIlV,GAMvB,OAJAyX,EAAWl5F,UAAU04F,IAAM,SAAU5xF,GAAM,OAAOA,KAClDoyF,EAAWl5F,UAAUg5F,WAAa,SAAUlyF,GAAM,OAAOA,KACzDoyF,EAAWl5F,UAAUs4F,kBAAoB,SAAUxxF,GAAM,OAAOA,KAChEoyF,EAAWl5F,UAAU24F,QAAU,SAAU7xF,GAAM,OAAOA,KAC/CoyF,EAdoB,GA8B3BC,GAA6B,WAC7B,SAASA,EAAYC,GACjB,IAAIlgF,EAAQ/Z,KACZA,KAAKi6F,QAAUA,EACfj6F,KAAKk6F,cAAgB,EACrBl6F,KAAKm6F,eAAgB,EAOrBn6F,KAAKo6F,UAAW,EAChBp6F,KAAKq6F,cACLr6F,KAAKs6F,iBAAmB,KACxBt6F,KAAKu6F,sBACLN,EAAQV,IAAI,WACRx/E,EAAMugF,iBACa,oBAARvD,KAAsB,KAAOA,KAAK3hE,QAAQ9rB,IAAI,sBA2IjE,OAxIA0wF,EAAYn5F,UAAU05F,oBAAsB,WACxC,IAAIxgF,EAAQ/Z,KACZA,KAAKi6F,QAAQ5C,WAAW99D,WACpBz3B,KAAM,WACFiY,EAAMqgF,UAAW,EACjBrgF,EAAMogF,eAAgB,KAG9Bn6F,KAAKi6F,QAAQd,kBAAkB,WAC3Bp/E,EAAMkgF,QAAQ1C,SAASh+D,WACnBz3B,KAAM,WACFk1F,GAAOsC,yBACPxC,GAAkB,WACd/8E,EAAMogF,eAAgB,EACtBpgF,EAAMygF,+BAU1BR,EAAYn5F,UAAU45F,4BAA8B,WAGhD,OAFAz6F,KAAKk6F,eAAiB,EACtBl6F,KAAKo6F,UAAW,EACTp6F,KAAKk6F,eAMhBF,EAAYn5F,UAAU65F,4BAA8B,WAEhD,GADA16F,KAAKk6F,eAAiB,EAClBl6F,KAAKk6F,cAAgB,EACrB,MAAM,IAAIt0F,MAAM,qCAGpB,OADA5F,KAAKw6F,uBACEx6F,KAAKk6F,eAKhBF,EAAYn5F,UAAUu2F,SAAW,WAC7B,OAAOp3F,KAAKm6F,eAAwC,IAAvBn6F,KAAKk6F,gBAAwBl6F,KAAKi6F,QAAQ9C,sBAE3E6C,EAAYn5F,UAAU25F,qBAAuB,WACzC,IAAIzgF,EAAQ/Z,KACZ,GAAIA,KAAKo3F,WAELN,GAAkB,WACd,KAAmC,IAA5B/8E,EAAMsgF,WAAW/4F,QAAc,CAClC,IAAIq5F,EAAK5gF,EAAMsgF,WAAWvuB,MAC1B8uB,aAAaD,EAAGE,WAChBF,EAAGG,OAAO/gF,EAAMqgF,UAEpBrgF,EAAMqgF,UAAW,QAGpB,CAED,IAAIW,EAAY/6F,KAAKg7F,kBACrBh7F,KAAKq6F,WAAar6F,KAAKq6F,WAAWjX,OAAO,SAAUuX,GAC/C,OAAIA,EAAGM,WAAYN,EAAGM,SAASF,KAC3BH,aAAaD,EAAGE,YACT,KAIf76F,KAAKo6F,UAAW,IAGxBJ,EAAYn5F,UAAUm6F,gBAAkB,WACpC,OAAKh7F,KAAKs6F,iBAIHt6F,KAAKs6F,iBAAiBY,WAAWn0F,IAAI,SAAU9F,GAClD,OACI6E,OAAQ7E,EAAE6E,OAGVq1F,iBAAkBl6F,EAAEk6F,iBACpBlgF,KAAMha,EAAEga,YAIpB++E,EAAYn5F,UAAUu6F,YAAc,SAAUT,EAAIU,EAASJ,GACvD,IAAIlhF,EAAQ/Z,KACR66F,GAAa,EACbQ,GAAWA,EAAU,IACrBR,EAAYz9E,WAAW,WACnBrD,EAAMsgF,WAAatgF,EAAMsgF,WAAWjX,OAAO,SAAUuX,GAAM,OAAOA,EAAGE,YAAcA,IACnFF,EAAG5gF,EAAMqgF,SAAUrgF,EAAMihF,oBAC1BK,IAEPr7F,KAAKq6F,WAAWh4F,MAAOy4F,OAAQH,EAAIE,UAAWA,EAAWI,SAAUA,KAcvEjB,EAAYn5F,UAAUy6F,WAAa,SAAUR,EAAQO,EAASJ,GAC1D,GAAIA,IAAaj7F,KAAKs6F,iBAClB,MAAM,IAAI10F,MAAM,8HAIpB5F,KAAKo7F,YAAYN,EAAQO,EAASJ,GAClCj7F,KAAKw6F,wBAMTR,EAAYn5F,UAAU06F,uBAAyB,WAAc,OAAOv7F,KAAKk6F,eAOzEF,EAAYn5F,UAAU26F,cAAgB,SAAUC,EAAOzpF,EAAU0pF,GAE7D,UAEJ1B,EAAYpzF,gBAAkBb,GAAmBb,MAAO80F,EAAa36F,QAAS,SAASs8F,EAAoB16F,GAAK,OAAO,IAAKA,GAAK+4F,GAAa/wF,EAAO+tF,MAAa/wF,WAAY,OACvK+zF,EA7JqB,GAwK5B4B,GAAqC,WACrC,SAASA,IAEL57F,KAAK67F,cAAgB,IAAIjqF,IACzBkqF,GAAmBC,YAAY/7F,MA2CnC,OApCA47F,EAAoB/6F,UAAUm7F,oBAAsB,SAAU92F,EAAO+2F,GACjEj8F,KAAK67F,cAAchqF,IAAI3M,EAAO+2F,IAMlCL,EAAoB/6F,UAAUq7F,sBAAwB,SAAUh3F,GAASlF,KAAK67F,cAAcv8B,OAAOp6D,IAInG02F,EAAoB/6F,UAAUs7F,0BAA4B,WAAcn8F,KAAK67F,cAAcj/E,SAK3Fg/E,EAAoB/6F,UAAUu7F,eAAiB,SAAUC,GAAQ,OAAOr8F,KAAK67F,cAAcvyF,IAAI+yF,IAAS,MAIxGT,EAAoB/6F,UAAUy7F,oBAAsB,WAAc,OAAO/7F,MAAM+X,KAAKtY,KAAK67F,cAAc73F,WAIvG43F,EAAoB/6F,UAAU07F,mBAAqB,WAAc,OAAOh8F,MAAM+X,KAAKtY,KAAK67F,cAAcpvF,SAOtGmvF,EAAoB/6F,UAAU27F,sBAAwB,SAAUH,EAAMI,GAElE,YADwB,IAApBA,IAA8BA,GAAkB,GAC7CX,GAAmBU,sBAAsBx8F,KAAMq8F,EAAMI,IAEhEb,EAAoBh1F,gBAAkBb,GAAmBb,MAAO02F,EAAqBv8F,QAAS,SAASq9F,EAA4Bz7F,GAAK,OAAO,IAAKA,GAAK26F,IAA2B31F,WAAY,OACzL21F,EA/C6B,GAoEpCE,GAAqB,IAhBgB,WACrC,SAASa,KAMT,OAJAA,EAAoB97F,UAAUk7F,YAAc,SAAUliD,KACtD8iD,EAAoB97F,UAAU27F,sBAAwB,SAAU3iD,EAAUwiD,EAAMI,GAC5E,OAAO,MAEJE,EAP6B,IAmBpCC,GAAyBC;;;;;;;OAC7B,SAASA,GAAkCj0F,EAAUxC,EAASqqE,GAE1D,OAAO17B,QAAQj9B,QAAQ,IAAIuoE,GAAkB5P,IAEjD,IAAI0D,GAAkB2oB,GACtB,SAASA,GAA2BC,GAChC,OAAOA,EAAG5oB,gBAEd,IAAI6oB,GAA2B,IAAI7sF,GAAe,sBAM9C8sF,GACA,SAASA,GAAap6F,EAAMqC,GACxBlF,KAAK6C,KAAOA,EACZ7C,KAAKkF,MAAQA,GAUrB,SAASg4F,GAAet0F,GACpB,GAAIkxF,KAAcA,GAAUl7D,YACvBk7D,GAAUlxF,SAASU,IAAI0zF,IAA0B,GAClD,MAAM,IAAIp3F,MAAM,iFAEpBk0F,GAAYlxF,EAASU,IAAI6zF,IACzB,IAAIC,EAAQx0F,EAASU,IAAIwqF,GAAsB,MAG/C,OAFIsJ,GACAA,EAAM1wF,QAAQ,SAAU42E,GAAQ,OAAOA,MACpCwW,GAOX,SAASuD,GAAsBC,EAAuBz6F,EAAMwD,QACtC,IAAdA,IAAwBA,MAC5B,IAAIk3F,EAAO,aAAe16F,EACtBqyE,EAAS,IAAI/kE,GAAeotF,GAChC,OAAO,SAAUC,QACU,IAAnBA,IAA6BA,MACjC,IAAIC,EAAWC,KACf,IAAKD,GAAYA,EAAS70F,SAASU,IAAI0zF,IAA0B,GAC7D,GAAIM,EACAA,EAAsBj3F,EAAU7D,OAAOg7F,GAAgBh7F,QAASuM,QAASmmE,EAAQjmE,UAAU,SAE1F,CACD,IAAI0uF,EAAoBt3F,EAAU7D,OAAOg7F,GAAgBh7F,QAASuM,QAASmmE,EAAQjmE,UAAU,IAC7FiuF,GAAevsF,GAAS7P,QAASuF,UAAWs3F,EAAmB96F,KAAM06F,KAG7E,OAAOK,GAAe1oB,IAQ9B,SAAS0oB,GAAeC,GACpB,IAAIJ,EAAWC,KACf,IAAKD,EACD,MAAM,IAAI73F,MAAM,uBAEpB,IAAK63F,EAAS70F,SAASU,IAAIu0F,EAAe,MACtC,MAAM,IAAIj4F,MAAM,wFAEpB,OAAO63F,EAiBX,SAASC,KACL,OAAO5D,KAAcA,GAAUl7D,UAAYk7D,GAAY,KAY3D,IAAIqD,GAA6B,WAE7B,SAASA,EAAYW,GACjB99F,KAAK89F,UAAYA,EACjB99F,KAAK+9F,YACL/9F,KAAK8wE,qBACL9wE,KAAKmxD,YAAa,EAyHtB,OAjGAgsC,EAAYt8F,UAAUm9F,uBAAyB,SAAUC,EAAe73F,GACpE,IAAI2T,EAAQ/Z,KAMRk+F,EAiGZ,SAASC,EAAUC,GASf,MAPqB,SAAjBA,EACS,IAAIrE,IAGc,YAAjBqE,OAA6Bl4F,EAAYk4F,IAC/C,IAAIpH,IAASC,qBAAsBhnE,OAxG1BkuE,CADM/3F,EAAUA,EAAQ83F,YAASh4F,GAE1CG,IAAe0I,QAASioF,GAAQ/nF,SAAUivF,IAG9C,OAAOA,EAAO3E,IAAI,WACd,IAAI8E,EAAiB1tF,GAAS7P,QAASuF,UAAWA,EAAWuK,OAAQmJ,EAAMnR,SAAU/F,KAAMo7F,EAAcxtB,WAAW5tE,OAChHy7F,EAAYL,EAAcn9F,OAAOu9F,GACjCE,EAAmBD,EAAU11F,SAASU,IAAI6lB,GAAc,MAC5D,IAAKovE,EACD,MAAM,IAAI34F,MAAM,iEAIpB,OAFA04F,EAAU3+E,UAAU,WAAc,OAAOmvB,GAAO/0B,EAAMgkF,SAAUO,KAChEJ,EAAO/E,kBAAkB,WAAc,OAAO+E,EAAO1G,QAAQj+D,WAAYz3B,KAAM,SAAUQ,GAASi8F,EAAiBlvE,YAAY/sB,QAgG3I,SAASk8F,EAA6B1yC,EAAcoyC,EAAQ9wC,GACxD,IACI,IAAIniD,EAASmiD,IACb,OAAIh0B,GAAUnuB,GACHA,EAAOmoF,MAAM,SAAUjxF,GAG1B,MAFA+7F,EAAO/E,kBAAkB,WAAc,OAAOrtC,EAAaz8B,YAAYltB,KAEjEA,IAGP8I,EAEX,MAAO9I,GAGH,MAFA+7F,EAAO/E,kBAAkB,WAAc,OAAOrtC,EAAaz8B,YAAYltB,KAEjEA,GA9GKq8F,CAA6BD,EAAkBL,EAAQ,WAC1D,IAAIO,EAAaH,EAAU11F,SAASU,IAAIopF,IAExC,OADA+L,EAAWzL,kBACJyL,EAAW5L,YAAYx5D,KAAK,WAE/B,OADAtf,EAAM2kF,mBAAmBJ,GAClBA,SAqBvBnB,EAAYt8F,UAAU89F,gBAAkB,SAAUluB,EAAYmuB,GAC1D,IAAI7kF,EAAQ/Z,UACY,IAApB4+F,IAA8BA,MAClC,IAAIx4F,EAAUy4F,MAAmBD,GACjC,OAAOhC,GAAuB58F,KAAK4I,SAAUxC,EAASqqE,GACjDp3C,KAAK,SAAU4kE,GAAiB,OAAOlkF,EAAMikF,uBAAuBC,EAAe73F,MAE5F+2F,EAAYt8F,UAAU69F,mBAAqB,SAAUJ,GACjD,IAAI9mC,EAAS8mC,EAAU11F,SAASU,IAAIw1F,IACpC,GAAIR,EAAUztB,qBAAqBvvE,OAAS,EACxCg9F,EAAUztB,qBAAqBnkE,QAAQ,SAAUunD,GAAK,OAAOuD,EAAO/1C,UAAUwyC,SAE7E,CAAA,IAAIqqC,EAAUpxE,SAAS6xE,cAIxB,MAAM,IAAIn5F,MAAM,cAAgBkB,EAAUw3F,EAAUpxE,SAAStsB,aAAe,yIAH5E09F,EAAUpxE,SAAS6xE,cAAcvnC,GAMrCx3D,KAAK+9F,SAAS17F,KAAKi8F,IAKvBnB,EAAYt8F,UAAU8e,UAAY,SAAUytC,GAAYptD,KAAK8wE,kBAAkBzuE,KAAK+qD,IACpFhtD,OAAOwD,eAAeu5F,EAAYt8F,UAAW,YAKzCyI,IAAK,WAAc,OAAOtJ,KAAK89F,WAC/BxoF,YAAY,EACZC,cAAc,IAKlB4nF,EAAYt8F,UAAU+iC,QAAU,WAC5B,GAAI5jC,KAAKmxD,WACL,MAAM,IAAIvrD,MAAM,4CAEpB5F,KAAK+9F,SAAS5sF,QAAQzE,QAAQ,SAAUnN,GAAU,OAAOA,EAAOqkC,YAChE5jC,KAAK8wE,kBAAkBpkE,QAAQ,SAAUgvC,GAAY,OAAOA,MAC5D17C,KAAKmxD,YAAa,GAEtB/wD,OAAOwD,eAAeu5F,EAAYt8F,UAAW,aACzCyI,IAAK,WAAc,OAAOtJ,KAAKmxD,YAC/B77C,YAAY,EACZC,cAAc,IAElB4nF,EAAYv2F,gBAAkBb,GAAmBb,MAAOi4F,EAAa99F,QAAS,SAAS2/F,EAAoB/9F,GAAK,OAAO,IAAKA,GAAKk8F,GAAal0F,EAAO0H,MAAe1K,WAAY,OACzKk3F,EA/HqB,GAmKhC,SAAS0B,GAAeI,EAAKjmF,GAOzB,OANIzY,MAAMqJ,QAAQoP,GACRA,EAAKqqE,OAAOwb,GAAgBI,GAG5Bl+F,KAAak+F,EAAKjmF,GAiGhC,IAAI8lF,GAAgC,WAEhC,SAASA,EAAeI,EAAO9vE,EAAU0uE,EAAWqB,EAAmBC,EAA2BC,GAC9F,IAAItlF,EAAQ/Z,KACZA,KAAKk/F,MAAQA,EACbl/F,KAAKovB,SAAWA,EAChBpvB,KAAK89F,UAAYA,EACjB99F,KAAKm/F,kBAAoBA,EACzBn/F,KAAKo/F,0BAA4BA,EACjCp/F,KAAKq/F,YAAcA,EACnBr/F,KAAKs/F,uBACLt/F,KAAKu/F,UACLv/F,KAAKw/F,cAAe,EACpBx/F,KAAKy/F,sBAAuB,EAC5Bz/F,KAAK0/F,SAAU,EAKf1/F,KAAK2/F,kBAIL3/F,KAAKs9B,cACLt9B,KAAKy/F,qBAAuBxvE,KAC5BjwB,KAAKk/F,MAAM5H,iBAAiB/9D,WAAYz3B,KAAM,WAAciY,EAAMmlF,MAAM3F,IAAI,WAAcx/E,EAAM6lF,YAChG,IAAIC,EAAoB,IAAI//F,EAAKggG,WAAW,SAAUC,GAClDhmF,EAAM2lF,QAAU3lF,EAAMmlF,MAAM9H,WAAar9E,EAAMmlF,MAAM/H,uBAChDp9E,EAAMmlF,MAAMhI,qBACjBn9E,EAAMmlF,MAAM/F,kBAAkB,WAC1B4G,EAASj+F,KAAKiY,EAAM2lF,SACpBK,EAASpd,eAGbyU,EAAW,IAAIt3F,EAAKggG,WAAW,SAAUC,GAGzC,IAAIC,EACJjmF,EAAMmlF,MAAM/F,kBAAkB,WAC1B6G,EAAYjmF,EAAMmlF,MAAM3H,SAASh+D,UAAU,WACvCy9D,GAAOsC,yBAGPxC,GAAkB,WACT/8E,EAAM2lF,SAAY3lF,EAAMmlF,MAAM/H,sBAC9Bp9E,EAAMmlF,MAAMhI,uBACbn9E,EAAM2lF,SAAU,EAChBK,EAASj+F,MAAK,UAK9B,IAAIm+F,EAAclmF,EAAMmlF,MAAM7H,WAAW99D,UAAU,WAC/Cy9D,GAAOqC,sBACHt/E,EAAM2lF,UACN3lF,EAAM2lF,SAAU,EAChB3lF,EAAMmlF,MAAM/F,kBAAkB,WAAc4G,EAASj+F,MAAK,QAGlE,OAAO,WACHk+F,EAAUt8D,cACVu8D,EAAYv8D,iBAGpB1jC,KAAKo3F,SACDt3F,EAAK8zB,MAAMisE,EAAmBzI,EAAS1V,KAAK3hF,EAAUmgG,UA8H9D,OA5GApB,EAAej+F,UAAU4gB,UAAY,SAAU0+E,EAAoBrqC,GAC/D,IAIIoN,EAJAnpD,EAAQ/Z,KACZ,IAAKA,KAAKq/F,YAAYr9F,KAClB,MAAM,IAAI4D,MAAM,iJAIhBs9D,EADAi9B,aAA8BrrC,GACXqrC,EAIfngG,KAAKo/F,0BAA0B/pC,wBAAwB8qC,GAE/DngG,KAAK2/F,eAAet9F,KAAK6gE,EAAiBxN,eAE1C,IAAItD,EAAW+hB,GAAgBjR,GAAoB,KAAOljE,KAAK89F,UAAUx0F,IAAIysD,IAEzEqqC,EAAUl9B,EAAiBpiE,OAAO6P,GAASG,QAD1BglD,GAAsBoN,EAAiBloD,SACao3C,GACzEguC,EAAQzgF,UAAU,WAAc5F,EAAMsmF,iBAAiBD,KACvD,IAAInE,EAAcmE,EAAQx3F,SAASU,IAAI0wF,GAAa,MASpD,OARIiC,GACAmE,EAAQx3F,SAASU,IAAIsyF,IAChBI,oBAAoBoE,EAAQl2E,SAAS4uC,cAAemjC,GAE7Dj8F,KAAKsgG,eAAeF,GAChBnwE,MACAjwB,KAAKovB,SAAS+kE,IAAI,oGAEfiM,GAYXtB,EAAej+F,UAAU++F,KAAO,WAC5B,IAAI7lF,EAAQ/Z,KACZ,GAAIA,KAAKw/F,aACL,MAAM,IAAI55F,MAAM,6CAEpB,IAAIolE,EAAQ8zB,EAAeyB,aAC3B,IACIvgG,KAAKw/F,cAAe,EACpBx/F,KAAKu/F,OAAO7yF,QAAQ,SAAUgY,GAAQ,OAAOA,EAAKuyC,kBAC9Cj3D,KAAKy/F,sBACLz/F,KAAKu/F,OAAO7yF,QAAQ,SAAUgY,GAAQ,OAAOA,EAAKwyC,mBAG1D,MAAO/0D,GAEHnC,KAAKk/F,MAAM/F,kBAAkB,WAAc,OAAOp/E,EAAMolF,kBAAkB9vE,YAAYltB,KAE1F,QACInC,KAAKw/F,cAAe,EACpBrJ,GAASnrB,KAQjB8zB,EAAej+F,UAAU2/F,WAAa,SAAU9nC,GAC5C,IAAIh0C,EAAOg0C,EACX14D,KAAKu/F,OAAOl9F,KAAKqiB,GACjBA,EAAK6yC,eAAev3D,OAKxB8+F,EAAej+F,UAAU2hC,WAAa,SAAUk2B,GAC5C,IAAIh0C,EAAOg0C,EACX5pB,GAAO9uC,KAAKu/F,OAAQ76E,GACpBA,EAAK4yC,oBAETwnC,EAAej+F,UAAUy/F,eAAiB,SAAUh9B,GAChDtjE,KAAKwgG,WAAWl9B,EAAa9+C,UAC7BxkB,KAAK4/F,OACL5/F,KAAKs9B,WAAWj7B,KAAKihE,GAELtjE,KAAK89F,UAAUx0F,IAAI0qF,OAA4BxxF,OAAOxC,KAAKs/F,qBACjE5yF,QAAQ,SAAUgvC,GAAY,OAAOA,EAAS4nB,MAE5Dw7B,EAAej+F,UAAUw/F,iBAAmB,SAAU/8B,GAClDtjE,KAAKwiC,WAAW8gC,EAAa9+C,UAC7BsqB,GAAO9uC,KAAKs9B,WAAYgmC,IAG5Bw7B,EAAej+F,UAAU+e,YAAc,WAEnC5f,KAAKu/F,OAAOpuF,QAAQzE,QAAQ,SAAUgY,GAAQ,OAAOA,EAAKkf,aAE9DxjC,OAAOwD,eAAek7F,EAAej+F,UAAW,aAI5CyI,IAAK,WAAc,OAAOtJ,KAAKu/F,OAAOj+F,QACtCgU,YAAY,EACZC,cAAc,IAGlBupF,EAAeyB,WAAatK,GAAe,yBAC3C6I,EAAel4F,gBAAkBb,GAAmBb,MAAO45F,EAAgBz/F,QAAS,SAASohG,EAAuBx/F,GAAK,OAAO,IAAKA,GAAK69F,GAAgB71F,EAAO+tF,IAAS/tF,EAAOirF,IAAUjrF,EAAO0H,IAAW1H,EAAOkmB,IAAelmB,EAAOqsD,IAA2BrsD,EAAOypF,MAA4BzsF,WAAY,OAC7S64F,EA/LwB,GAgNnC,SAAShwD,GAAOgsC,EAAM9oD,GAClB,IAAIztB,EAAQu2E,EAAKzzE,QAAQ2qB,GACrBztB,GAAS,GACTu2E,EAAKv4C,OAAOh+B,EAAO;;;;;;;;;;;;;;OAoB3B,IAQIm8F,GACA,SAASA,OAITC,IACAC,kBAAmB,GACnBC,kBAAmB,cAMnBC,GAAwC,WACxC,SAASA,EAAuBC,EAAWC,GACvChhG,KAAK+gG,UAAYA,EACjB/gG,KAAKihG,QAAUD,GAAUL,GA6B7B,OA3BAG,EAAuBjgG,UAAUyqD,KAAO,SAAU41C,GAE9C,OADkBlhG,KAAK+gG,qBAAqB/L,GACvBh1F,KAAKmhG,YAAYD,GAAQlhG,KAAKohG,eAAeF,IAEtEJ,EAAuBjgG,UAAUugG,eAAiB,SAAUF,GACxD,IAAInnF,EAAQ/Z,KACRqD,EAAKpB,EAAOi/F,EAAK/tE,MAhCZ,KAgC+B,GAAI5zB,EAAS8D,EAAG,GAAIg+F,EAAah+F,EAAG,GAI5E,YAHmB6C,IAAfm7F,IACAA,EAAa,WAEVC,OAAOC,OAAOhiG,GAChB85B,KAAK,SAAU95B,GAAU,OAAOA,EAAO8hG,KACvChoE,KAAK,SAAU7yB,GAAQ,OAAOg7F,GAAch7F,EAAMjH,EAAQ8hG,KAC1DhoE,KAAK,SAAU7yB,GAAQ,OAAOuT,EAAMgnF,UAAU7L,mBAAmB1uF,MAE1Es6F,EAAuBjgG,UAAUsgG,YAAc,SAAUD,GACrD,IAAI79F,EAAKpB,EAAOi/F,EAAK/tE,MA1CZ,KA0C+B,GAAI5zB,EAAS8D,EAAG,GAAIg+F,EAAah+F,EAAG,GACxEo+F,EA1Ce,YA+CnB,YAJmBv7F,IAAfm7F,IACAA,EAAa,UACbI,EAAqB,IAElBH,OAAOC,OAAOvhG,KAAKihG,QAAQL,kBAAoBrhG,EAASS,KAAKihG,QAAQJ,mBACvExnE,KAAK,SAAU95B,GAAU,OAAOA,EAAO8hG,EAAaI,KACpDpoE,KAAK,SAAUh6B,GAAW,OAAOmiG,GAAcniG,EAASE,EAAQ8hG,MAEzEP,EAAuBl6F,gBAAkBb,GAAmBb,MAAO47F,EAAwBzhG,QAAS,SAASqiG,EAA+BzgG,GAAK,OAAO,IAAKA,GAAK6/F,GAAwB73F,EAAO+rF,IAAW/rF,EAAOy3F,GAA8B,KAAQz6F,WAAY,OAC9P66F,EAhCgC,GA4C3C,SAASU,GAAcz/F,EAAO4/F,EAAYN,GACtC,IAAKt/F,EACD,MAAM,IAAI6D,MAAM,gBAAkBy7F,EAAa,SAAWM,EAAa,KAE3E,OAAO5/F;;;;;;;OAoBX,IAAI6/F,GAA2B,SAAUhsC,GAErC,SAASK,IACL,OAAkB,OAAXL,GAAmBA,EAAOp0D,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUu1D,EAASL,GAIZK,EALmB,CAM5BiL,IAsDE2gC,GAAiC,SAAUjsC,GAE3C,SAASisC,IACL,OAAkB,OAAXjsC,GAAmBA,EAAOp0D,MAAMxB,KAAMqB,YAAcrB,KAE/D,OAJAU,EAAUmhG,EAAiBjsC,GAIpBisC,EALyB,CAMlCD,IAUEE,GACA,SAASA,GAAcj/F,EAAMuqD,GACzBptD,KAAK6C,KAAOA,EACZ7C,KAAKotD,SAAWA,GAIpB20C,GAAqC,WACrC,SAASA,EAAoBtrC,EAAY7lD,EAAQoxF,GAC7ChiG,KAAKgtD,aACLhtD,KAAK4Q,OAAS,KACd5Q,KAAKgiG,cAAgBA,EACrBhiG,KAAKy2D,WAAaA,EACd7lD,GAAUA,aAAkBqxF,IAC5BrxF,EAAOsxF,SAASliG,MA4BxB,OAzBAI,OAAOwD,eAAem+F,EAAoBlhG,UAAW,YACjDyI,IAAK,WAAc,OAAOtJ,KAAKgiG,cAAcp5F,UAC7C0M,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem+F,EAAoBlhG,UAAW,qBACjDyI,IAAK,WAAc,OAAOtJ,KAAKgiG,cAAczlF,WAC7CjH,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem+F,EAAoBlhG,UAAW,WACjDyI,IAAK,WAAc,OAAOtJ,KAAKgiG,cAAcvuF,SAC7C6B,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem+F,EAAoBlhG,UAAW,cACjDyI,IAAK,WAAc,OAAOtJ,KAAKgiG,cAAc/5B,YAC7C3yD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAem+F,EAAoBlhG,UAAW,kBACjDyI,IAAK,WAAc,OAAOtJ,KAAKgiG,cAAcG,gBAC7C7sF,YAAY,EACZC,cAAc,IAEXwsF,EAnC6B,GAqCpCE,GAAwC,SAAUrsC,GAElD,SAASqsC,EAAuBxrC,EAAY7lD,EAAQoxF,GAChD,IAAIjoF,EAAQ67C,EAAOr0D,KAAKvB,KAAMy2D,EAAY7lD,EAAQoxF,IAAkBhiG,KAOpE,OANA+Z,EAAMi+E,cACNj+E,EAAMmY,cACNnY,EAAMkqC,WACNlqC,EAAMwG,UACNxG,EAAMqoF,cACNroF,EAAM++C,cAAgBrC,EACf18C,EAwEX,OAjFArZ,EAAUuhG,EAAwBrsC,GAWlCqsC,EAAuBphG,UAAUqhG,SAAW,SAAU9kE,GAC9CA,IACAp9B,KAAKoiG,WAAW//F,KAAK+6B,GACrBA,EAAMxsB,OAAS5Q,OAGvBiiG,EAAuBphG,UAAU6wB,YAAc,SAAU0L,GACrD,IAAIilE,EAAariG,KAAKoiG,WAAW/6F,QAAQ+1B,IACrB,IAAhBilE,IACAjlE,EAAMxsB,OAAS,KACf5Q,KAAKoiG,WAAW7/D,OAAO8/D,EAAY,KAG3CJ,EAAuBphG,UAAUyhG,oBAAsB,SAAUllE,EAAOmlE,GACpE,IACIl/F,EADA0W,EAAQ/Z,KAERwiG,EAAexiG,KAAKoiG,WAAW/6F,QAAQ+1B,IACrB,IAAlBolE,KACCn/F,EAAKrD,KAAKoiG,YAAY7/D,OAAO/gC,MAAM6B,EAAId,GAAUigG,EAAe,EAAG,GAAID,IACxEA,EAAY71F,QAAQ,SAAUorB,GACtBA,EAAElnB,QACFknB,EAAElnB,OAAO8gB,YAAYoG,GAEzBsF,EAAMxsB,OAASmJ,MAI3BkoF,EAAuBphG,UAAUgjC,aAAe,SAAU4+D,EAAUC,GAChE,IAAIC,EAAW3iG,KAAKoiG,WAAW/6F,QAAQo7F,IACrB,IAAdE,EACA3iG,KAAKkiG,SAASQ,IAGVA,EAAS9xF,QACT8xF,EAAS9xF,OAAO8gB,YAAYgxE,GAEhCA,EAAS9xF,OAAS5Q,KAClBA,KAAKoiG,WAAW7/D,OAAOogE,EAAU,EAAGD,KAG5CT,EAAuBphG,UAAUoxE,MAAQ,SAAUkS,GAE/C,OADcnkF,KAAK4iG,SAASze,GACb,IAAM,MAEzB8d,EAAuBphG,UAAU+hG,SAAW,SAAUze,GAClD,IAAIpqC,KAEJ,OADA8oD,GAAsB7iG,KAAMmkF,EAAWpqC,GAChCA,GAEXkoD,EAAuBphG,UAAUiiG,cAAgB,SAAU3e,GACvD,IAAIpqC,KAEJ,OADAgpD,GAAmB/iG,KAAMmkF,EAAWpqC,GAC7BA,GAEX35C,OAAOwD,eAAeq+F,EAAuBphG,UAAW,YACpDyI,IAAK,WACD,OAAOtJ,KACFoiG,WACAhf,OAAO,SAAUjtD,GAAQ,OAAOA,aAAgB8rE,KAEzD3sF,YAAY,EACZC,cAAc,IAElB0sF,EAAuBphG,UAAUmiG,oBAAsB,SAAUrnD,EAAWsnD,GACxEjjG,KAAKgtD,UAAUtgD,QAAQ,SAAUgvC,GACzBA,EAAS74C,MAAQ84C,GACjBD,EAAS0R,SAAS61C,MAIvBhB,EAlFgC,CAmFzCF,IAOF,SAASc,GAAsBvlF,EAAS6mE,EAAWpqC,GAC/Cz8B,EAAQ8kF,WAAW11F,QAAQ,SAAUypB,GAC7BA,aAAgB8rE,KACZ9d,EAAUhuD,IACV4jB,EAAQ13C,KAAK8zB,GAEjB0sE,GAAsB1sE,EAAMguD,EAAWpqC,MAInD,SAASgpD,GAAmBntE,EAAYuuD,EAAWpqC,GAC3CnkB,aAAsBqsE,IACtBrsE,EAAWwsE,WAAW11F,QAAQ,SAAUypB,GAChCguD,EAAUhuD,IACV4jB,EAAQ13C,KAAK8zB,GAEbA,aAAgB8rE,IAChBc,GAAmB5sE,EAAMguD,EAAWpqC,KAKpD,IAAImpD,GAAsC,WACtC,SAASA,EAAqBzsC,GAC1Bz2D,KAAKy2D,WAAaA,EA8CtB,OA5CAr2D,OAAOwD,eAAes/F,EAAqBriG,UAAW,UAClDyI,IAAK,WACD,IAAIsH,EAAS5Q,KAAKy2D,WAAW7gC,WAC7B,OAAOhlB,EAAS,IAAIuyF,GAAwBvyF,GAAU,MAE1D0E,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAes/F,EAAqBriG,UAAW,YAClDyI,IAAK,WAAc,OAAOojD,GAAY1sD,KAAKy2D,aAC3CnhD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAes/F,EAAqBriG,UAAW,qBAClDyI,IAAK,WACD,IAAIwvD,EAAgB94D,KAAKy2D,WACzB,OAAOqC,IACF3M,GAAa2M,IAAkBvM,GAAiBuM,KAEzDxjD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAes/F,EAAqBriG,UAAW,WAClDyI,IAAK,WAAc,OAAOgjD,GAAWtsD,KAAKy2D,aAC1CnhD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAes/F,EAAqBriG,UAAW,aAClDyI,IAAK,WACD,OAAOyjD,GAAa/sD,KAAKy2D,YAAY2sB,OAAOt2B,KAEhDx3C,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAes/F,EAAqBriG,UAAW,cAClDyI,IAAK,WAAc,OA1oV3B,SAAS85F,EAAav+F,GAClB,IAAI4O,EAAU+4C,GAAa3nD,GAI3B,YAH0BqB,IAAtBuN,EAAQwpB,YACRxpB,EAAQwpB,UAn8LhB,SAASomE,EAAkBh/E,EAAOQ,GAC9B,IAAIN,EAAQF,EAAM3B,IAAOzH,KAAK4J,GAC9B,GAAIN,GAASA,EAAMo1B,WAAY,CAG3B,IAFA,IAAI1uC,KACAsvC,EAAah2B,EAAMhgB,MAAQ,EACtBpD,EAAI,EAAGA,EAAIojB,EAAMo1B,WAAWr4C,OAAQH,GAAK,EAC9C8J,EAAOsZ,EAAMo1B,WAAWx4C,IAAMkjB,EAAMk2B,GACpCA,IAEJ,OAAOtvC,EAEX,OAAO;;;;;;;OAw7LiBo4F,CAAkB5vF,EAAQ4Q,MAAO5Q,EAAQoR,YAE1DpR,EAAQwpB,cAqoVemmE,CAAapjG,KAAKy2D,aAC5CnhD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAes/F,EAAqBriG,UAAW,kBAClDyI,IAAK,WAAc,OAtsV3B,SAASg6F,EAAmBhmF,GACxB,IAAI7J,EAAU+4C,GAAalvC,GAAS,GACpC,IAAK7J,EACD,SAOJ,IANA,IA8IwBH,EA7IpB6S,EADQ1S,EAAQ4Q,MACF3B,IACd6B,EAAQ4B,EAAMlL,KAAKxH,EAAQoR,WAC3Bs9E,KAEAh0E,EAAW5J,EAAMmC,aACZvlB,EAFgC,MAAxBojB,EAAMuJ,gBAEE3sB,EAAIgtB,EAAUhtB,IAAK,CACxC,IAAIY,EAAQokB,EAAMlL,KAAK9Z,QAwIP+E,KADIoN,EAtIGvR,GAuIhByE,WAAuCN,IAAjBoN,EAAImJ,eAAiDvW,IAAvBoN,EAAI8K,iBAlI3Drc,EAAQA,EAAMyE,MAElB27F,EAAe9/F,KAAKN,GAExB,OAAOogG,EAirVuBmB,CAAmBtjG,KAAKy2D,aAClDnhD,YAAY,EACZC,cAAc,IAEX2tF,EAhD8B,GAkDrCC,GAAyC,SAAUvtC,GAEnD,SAASutC,EAAwB1sC,GAI7B,OADQb,EAAOr0D,KAAKvB,KAAMy2D,IAAez2D,KA2K7C,OA/KAU,EAAUyiG,EAAyBvtC,GAOnCx1D,OAAOwD,eAAeu/F,EAAwBtiG,UAAW,iBACrDyI,IAAK,WACD,OAAOtJ,KAAKy2D,WAAWlkC,UAAYC,KAAKC,aAAezyB,KAAKy2D,WAAa,MAE7EnhD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu/F,EAAwBtiG,UAAW,QACrDyI,IAAK,WAAc,OAAOtJ,KAAK84D,cAAchjC,UAC7CxgB,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu/F,EAAwBtiG,UAAW,cAarDyI,IAAK,WACD,IAAImK,EAAU+4C,GAAaxsD,KAAKy2D,YAC5BpyC,EAAQ5Q,EAAQ4Q,MAChBiI,EAAQjI,EAAM3B,IAAOzH,KACrBsJ,EAAQ+H,EAAM7Y,EAAQoR,WACtBmzE,EA+JhB,SAASuL,EAAwBh/E,EAAOF,EAAOiI,GAG3C,IAFA,IAAI0rE,KACA58D,EAsCR,SAASooE,EAAqBC,EAAen3E,GASzC,IARA,IAAIo3E,EAAsBD,EAAgB,EAItCx5D,EAAe3d,EAAMo3E,GAIM,iBAAjBz5D,IAA8BpsB,GAAqBosB,IAC7DA,EAAe3d,IAAQo3E,GAE3B,OAAOA,EAAsB,EAlDVF,CAAqBj/E,EAAM85B,2BAA4B/xB,GACnE8O,EAAe7W,EAAM+5B,0BAA0B,CAGlD,IAFA,IAAIv8C,EAAQ,GACRsK,EAAeigB,EAAM8O,IACjBvd,GAAqBxR,IAIzBtK,GAASkb,GAAgBoH,EAAM+W,IAAiB9O,EAAM8O,GACtD/uB,EAAeigB,IAAQ8O,GAE3Br5B,GAASsiB,EAAM+W,GAEf,IAAIuoE,EAAgBt3F,EAAa8mB,MAAMvV,IACnC6xD,EAAek0B,EAAc,GAE7Bl0B,IAEAuoB,EAAWvoB,GAAgBk0B,EAAc,GAAK5hG,EAAQ4hG,EAAc,IAExEvoE,IAEJ,OAAO48D,EAvLkBuL,CAAwBh/E,EAAOF,EAAOiI,GACnDs3E,EAoNhB,SAASC,EAA4Bt/E,EAAOF,EAAOiI,GAO/C,IANA,IAAI0rE,KAEA8L,EAAgBv/E,EAAMmC,aACtBra,EAAeigB,EAAMw3E,GAGM,iBAAjBz3F,GAEV2rF,EADmB3rF,EAAa8mB,MAAMvV,IAAyB,IACpCyG,EAAMy/E,GACjCz3F,EAAeigB,IAAQw3E,GAE3B,OAAO9L,EAhOsB6L,CAA4Bt/E,EAAOF,EAAOiI,GAC/D,OAAOvrB,KAAai3F,EAAY4L,IAEpCtuF,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu/F,EAAwBtiG,UAAW,cACrDyI,IAAK,WACD,IAAI4oB,KACA5U,EAAUtd,KAAK84D,cACnB,GAAIx7C,EAEA,IADA,IAAIymF,EAASzmF,EAAQ4U,WACZ/wB,EAAI,EAAGA,EAAI4iG,EAAOziG,OAAQH,IAAK,CACpC,IAAI2mC,EAAOi8D,EAAO5iG,GAClB+wB,EAAW4V,EAAKjlC,MAAQilC,EAAK/lC,MAGrC,OAAOmwB,GAEX5c,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu/F,EAAwBtiG,UAAW,WACrDyI,IAAK,WACD,IAAI26C,KACA3mC,EAAUtd,KAAK84D,cACnB,GAAIx7C,EAAS,CACT,IAAI0mF,EAAW53C,GAAqB9uC,GAChCoqB,EAAiBnB,GAAkBy9D,EAASn/E,UAAWm/E,EAAS3/E,OACpE,GAAIqjB,GACA,IAAK,IAAIvmC,EAAI,EAAmCA,EAAIumC,EAAepmC,OAAQH,GAAK,EAC5E,GAAI+tC,GAAkBxH,EAAgBvmC,GAAI,CACtC,IAAIutC,EAAY9F,GAAQlB,EAAgBvmC,GACpCY,EAAQmoC,GAASxC,EAAgBvmC,GACjB,kBAATY,IAEPkiD,EAAQvV,GAAa3sC,QAOjC,CAAA,IAAIkiG,EAAW3mF,EAAQ4mF,UACvB,IAAS/iG,EAAI,EAAGA,EAAI8iG,EAAS3iG,OAAQH,IACjC8iD,EAAQggD,EAAS9iG,KAAM,GAInC,OAAO8iD,GAEX3uC,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu/F,EAAwBtiG,UAAW,UACrDyI,IAAK,WACD,IAAIiX,KACAjD,EAAUtd,KAAK84D,cACnB,GAAIx7C,EAAS,CACT,IAAI0mF,EAAW53C,GAAqB9uC,GAChCoqB,EAAiBnB,GAAkBy9D,EAASn/E,UAAWm/E,EAAS3/E,OACpE,GAAIqjB,GACA,IAAK,IAAIvmC,EAAI,EAAmCA,EAAIumC,EAAepmC,OAAQH,GAAK,EAC5E,IAAK+tC,GAAkBxH,EAAgBvmC,GAAI,CACvC,IAAI+uE,EAAYtnC,GAAQlB,EAAgBvmC,GACpCY,EAAQmoC,GAASxC,EAAgBvmC,GACvB,OAAVY,IAEAwe,EAAO2vD,GAAanuE,QAOhC,CAAA,IAAIoiG,EAAU7mF,EAAQgxB,MACtB,IAASntC,EAAI,EAAGA,EAAIgjG,EAAQ7iG,OAAQH,IAAK,CACrC,IAAIw/C,EAASwjD,EAAQ/xE,KAAKjxB,GAC1Bof,EAAOogC,GAAUwjD,EAAQC,iBAAiBzjD,KAItD,OAAOpgC,GAEXjL,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu/F,EAAwBtiG,UAAW,cACrDyI,IAAK,WAGD,IAFA,IAAI84F,EAAapiG,KAAKy2D,WAAW2rC,WAC7BiC,KACKljG,EAAI,EAAGA,EAAIihG,EAAW9gG,OAAQH,IAEnCkjG,EAAShiG,KAAKiiG,GADAlC,EAAWjhG,KAG7B,OAAOkjG,GAEX/uF,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAeu/F,EAAwBtiG,UAAW,YACrDyI,IAAK,WACD,IAAIwvD,EAAgB94D,KAAK84D,cACzB,IAAKA,EACD,SAGJ,IAFA,IAAIspC,EAAatpC,EAAcurC,SAC3BA,KACKljG,EAAI,EAAGA,EAAIihG,EAAW9gG,OAAQH,IAEnCkjG,EAAShiG,KAAKiiG,GADAlC,EAAWjhG,KAG7B,OAAOkjG,GAEX/uF,YAAY,EACZC,cAAc,IAElB4tF,EAAwBtiG,UAAUoxE,MAAQ,SAAUkS,GAEhD,OADcnkF,KAAK4iG,SAASze,GACb,IAAM,MAEzBgf,EAAwBtiG,UAAU+hG,SAAW,SAAUze,GACnD,IAAIpqC,KAEJ,OADAwqD,GAAqBvkG,KAAMmkF,EAAWpqC,GAAS,GACxCA,GAEXopD,EAAwBtiG,UAAUiiG,cAAgB,SAAU3e,GACxD,IAAIpqC,KAEJ,OADAwqD,GAAqBvkG,KAAMmkF,EAAWpqC,GAAS,GACxCA,GAEXopD,EAAwBtiG,UAAUmiG,oBAAsB,SAAUrnD,EAAWsnD,GACzEjjG,KAAKgtD,UAAUtgD,QAAQ,SAAUgvC,GACzBA,EAAS74C,OAAS84C,GAClBD,EAAS0R,SAAS61C,MAIvBE,EAhLiC,CAiL1CD,IACF,SAASqB,GAAqB3uE,EAAYuuD,EAAWpqC,EAASyqD,GACtD5uE,aAAsButE,IACtBvtE,EAAWwsE,WAAW11F,QAAQ,SAAUypB,GAChCguD,EAAUhuD,IACV4jB,EAAQ13C,KAAK8zB,GAEbA,aAAgBgtE,KACZqB,IAAeruE,EAAK2iC,eACpByrC,GAAqBpuE,EAAMguD,EAAWpqC,EAASyqD,MAgFnE,IAAIC,GAAyB,IAAI7yF,IACjC,SAAS0yF,GAAwB7tC,GAC7B,OAAIA,aAAsBjkC,KACfikC,EAAWlkC,UAAYC,KAAKC,aAC/B,IAAI0wE,GAAwB1sC,GAC5B,IAAIysC,GAAqBzsC,GAE1B,KAKX,IAAIiuC,GAAeJ,GACnB,SAASK,GAAexuE,GACpBsuE,GAAuB5yF,IAAIskB,EAAKsgC,WAAYtgC,GAQhD,IAgHWyuE,GAhHPC,GAAY9C,GAIZ+C,GAAe7C,GA6Bf8C,GAAe1H,GAAsB,KAAM,SAVzCtuF,QAASglF,GAAa9kF,SAAU,YAChCF,QAASouF,GAAahvF,MAAOwC,MAC7B5B,QAAS6sF,GAAqBztF,UAC9BY,QAASmlF,GAAS/lF,WAsCpB62F,GAAY,IAAI70F,GAAe,YAyB/B80F,GAAe,IAAI90F,GAAe,gBAsBlC+0F,GAAsB,IAAI/0F,GAAe,uBAClCy0F,GAIRtlG,EAAQslG,6BAA+BtlG,EAAQslG,gCAHnBA,GAAkC,MAAI,GAAK,QACtEA,GAA2BA,GAAoC,QAAI,GAAK,UACxEA,GAA2BA,GAAmC,OAAI,GAAK,SAuB3E,IAg4CIO,GAh4CAC,KAEIr2F,QAAS+vF,GACT3vF,SAAU2vF,GACV3wF,MAAO6oF,GAAQ9C,GAASvjF,GAAUwe,GAAcmmC,GAA0Bo9B,MAE5E3jF,QAASklE,GAAW9lE,MAAO6oF,IAAS1nF,WAyB1C,SAAS+1F,GAAqBnH,GAC1B,IAAIoH,KAMJ,OALApH,EAAO3G,SAASh+D,UAAU,WACtB,KAAO+rE,EAAMhkG,QACTgkG,EAAMx5B,KAANw5B,KAGD,SAAU39F,GAAM29F,EAAMjjG,KAAKsF,OA9B9BoH,QAAS2jF,GACTvjF,SAAUujF,GACVvkF,OAAQ,IAAIhJ,EAAYstF,OAE1B1jF,QAASimF,GAAU7lF,SAAU6lF,GAAU7mF,SACzColF,IACExkF,QAAS2xD,GAAiBpxD;;;;;;;;AA3BhC,SAASi2F,KACL,OAAO7jC,IA0B0DvzD,UAC/DY,QAASiyD,GAAiB1xD,WAzBhC,SAASk2F,KACL,OAAO7jC,IAwB0DxzD,UAE7DY,QAASi2F,GACT11F,WAzBR,SAASm2F,GAAeznB,GACpB,OAAOA,GAAU,SAyBb7vE,OAAQ,IAAIlJ,EAAO+/F,IAAY,IAAI7/F,EAAY,IAAIE,MA+BvDqgG,GAAmC,WAEnC,SAASA,EAAkBluC,IAI3B,OAFAkuC,EAAkB1pF,YAAcwF,IAAiBhb,KAAMk/F,IACvDA,EAAkB7+F,cAAgBV,GAAiB9G,QAAS,SAASsmG,EAA0B1kG,GAAK,OAAO,IAAKA,GAAKykG,GAAmBz8F,EAAO61F,MAAqBz4F,UAAW++F,GAA8B9+F,aACtMo/F,EAN2B,GA4JtC,SAASj1E,GAAc/L,EAAM4jD,EAAYp+D,GACrC,IAGI8nB,EAHAm7C,EAAQjjE,EAAIoT,QACZw4C,EAAqBpxC,EAAKuiD,KAAK6H,eAC/BvvC,EAAW7a,EAAK6a,SAEpB,GAAI7a,EAAK9T,SAAWklD,EAAoB,CAEhC9jC,EADAm7C,EAAMtqE,KACD08B,EAAS9O,cAAc08C,EAAMtqE,KAAMsqE,EAAM0C,IAGzCtwC,EAASwY,cAAc,IAEhC,IAAI6tD,EAAWv9B,GAAuB3jD,EAAM4jD,EAAYp+D,GACpD07F,GACArmE,EAAS7O,YAAYk1E,EAAU5zE,QAOnCA,EAAKuN,EAASkc,kBAAkBqa,IAFPqX,EAAM5E,uBAC3B4E,EAAM5E,sBAAsBloD,gBAAkB/gB,EAAQkc,kBAAkB6oB,WAGhF,GAAI8oC,EAAMtlC,MACN,IAAK,IAAI1mC,EAAI,EAAGA,EAAIgsE,EAAMtlC,MAAMvmC,OAAQH,IAAK,CACzC,IAAIkC,EAAKpB,EAAOkrE,EAAMtlC,MAAM1mC,GAAI,GAChCo+B,EAAS6b,aAAappB,EADmC3uB,EAAG,GAAYA,EAAG,GAAlCA,EAAG,IAIpD,OAAO2uB,EAEX,SAAS6zE,GAAuBnhF,EAAM0kD,EAAUl/D,EAAK8nB,GACjD,IAAK,IAAI7wB,EAAI,EAAGA,EAAI+I,EAAI0U,QAAQtd,OAAQH,IAAK,CACzC,IAAIoxE,EAASroE,EAAI0U,QAAQzd,GACrB2kG,EAAqBC,GAA0BrhF,EAAMxa,EAAI2a,UAAW2iD,GAAqB+K,EAAO1tE,OAAQ0tE,EAAO52B,YAC/GqqD,EAAezzB,EAAO1tE,OACtBohG,EAAevhF,EACG,cAAlB6tD,EAAO1tE,SACPmhG,EAAe,KACfC,EAAe78B,GAEnB,IAAI88B,EAAaD,EAAa1mE,SAAS+c,OAAO0pD,GAAgBh0E,EAAIugD,EAAO52B,UAAWmqD,GACpFphF,EAAK6pD,YAAYrkE,EAAI4nE,YAAc3wE,GAAK+kG,GAGhD,SAASH,GAA0BrhF,EAAMngB,EAAOo3C,GAC5C,OAAO,SAAUqrB,GAAS,OAAOD,GAAcriD,EAAMngB,EAAOo3C,EAAWqrB,IAmC3E,SAASm/B,GAA2BzhF,EAAMxa,EAAKm8D,EAAYtkE,GACvD,IAAKwkE,GAAsB7hD,EAAMxa,EAAKm8D,EAAYtkE,GAC9C,OAAO,EAEX,IAAIm1E,EAAUhtE,EAAIu8D,SAASJ,GACvB+G,EAASzI,GAAcjgD,EAAMxa,EAAI2a,WACjC0rD,EAAgBnD,EAAO9F,cACvBzkE,EAAOq0E,EAAQr0E,KACnB,OAAwB,GAAhBq0E,EAAQhuE,OACZ,KAAK,GAmBb,SAASymE,EAAoBjrD,EAAMwyD,EAAS3G,EAAeV,EAAIhtE,EAAMd,GACjE,IAAIqkG,EAAkBlvB,EAAQkvB,gBAC1BC,EAAcD,EAAkB1hF,EAAKuiD,KAAKlwC,UAAUkB,SAASmuE,EAAiBrkG,GAASA,EAC3FskG,EAA6B,MAAfA,EAAsBA,EAAYl/F,WAAa,KAC7D,IAAIo4B,EAAW7a,EAAK6a,SACP,MAATx9B,EACAw9B,EAAS6b,aAAam1B,EAAe1tE,EAAMwjG,EAAax2B,GAGxDtwC,EAASlN,gBAAgBk+C,EAAe1tE,EAAMgtE,GA3B1CF,CAAoBjrD,EAAMwyD,EAAS3G,EAAe2G,EAAQrH,GAAIhtE,EAAMd,GACpE,MACJ,KAAK,GA4Bb,SAASguE,EAAgBrrD,EAAM6rD,EAAe1tE,EAAMd,GAChD,IAAIw9B,EAAW7a,EAAK6a,SAChBx9B,EACAw9B,EAASqP,SAAS2hC,EAAe1tE,GAGjC08B,EAASsP,YAAY0hC,EAAe1tE,GAjChCktE,CAAgBrrD,EAAM6rD,EAAe1tE,EAAMd,GAC3C,MACJ,KAAK,GAkCb,SAASkuE,EAAgBvrD,EAAMwyD,EAAS3G,EAAe1tE,EAAMd,GACzD,IAAIskG,EAAc3hF,EAAKuiD,KAAKlwC,UAAUkB,SAAS34B,EAAQ60B,gBAAgBmE,MAAOv2B,GAC9E,GAAmB,MAAfskG,EAAqB,CACrBA,EAAcA,EAAYl/F,WAC1B,IAAIm/F,EAAOpvB,EAAQzzB,OACP,MAAR6iD,IACAD,GAA4BC,QAIhCD,EAAc,KAElB,IAAI9mE,EAAW7a,EAAK6a,SACD,MAAf8mE,EACA9mE,EAASiJ,SAAS+nC,EAAe1tE,EAAMwjG,GAGvC9mE,EAASiP,YAAY+hC,EAAe1tE,GAlDhCotE,CAAgBvrD,EAAMwyD,EAAS3G,EAAe1tE,EAAMd,GACpD,MACJ,KAAK,GAmDb,SAASytE,EAAmB9qD,EAAMwyD,EAAS3G,EAAe1tE,EAAMd,GAC5D,IAAIqkG,EAAkBlvB,EAAQkvB,gBAC1BC,EAAcD,EAAkB1hF,EAAKuiD,KAAKlwC,UAAUkB,SAASmuE,EAAiBrkG,GAASA,EAC3F2iB,EAAK6a,SAASgP,YAAYgiC,EAAe1tE,EAAMwjG;;;;;;;OAjDvC72B,CAJ4B,SAAZtlE,EAAIhB,OACA,GAAhBguE,EAAQhuE,MACRkkE,EAAO3rC,cACP/c,EACyBwyD,EAAS3G,EAAe1tE,EAAMd,GAGnE,OAAO,EA6FX,SAASgkE,GAAmBrhD,GAExB,IADA,IAAI6hF,EAAW7hF,EAAKxa,IAAIs8F,mBACjB9hF,EAAK9T,QAAU82D,GAAehjD,IAAO,CACxC,IAAI+hF,EAAS/hF,EAAKyiD,cAClBziD,EAAOA,EAAK9T,OAGZ,IADA,IAAI6V,EAAMggF,EAAO5hF,UAAY4hF,EAAOx9B,WAC3B9nE,EAAI,EAAGA,GAAKslB,EAAKtlB,IAED,UADjB4nE,EAAUrkD,EAAKxa,IAAIk1B,MAAMj+B,IAChB+H,OACQ,UAAhB6/D,EAAQ7/D,QACR6/D,EAAQkJ,MAAMy0B,SAAWH,KAAcx9B,EAAQkJ,MAAMy0B,UACtD5hC,GAAYpgD,EAAMvjB,GAAGypC,aAEJ,EAAhBm+B,EAAQ7/D,OAA+B/H,EAAI4nE,EAAQE,WAAaw9B,EAAO5hF,YACjD,SAArBkkD,EAAQgF,YACa,UAArBhF,EAAQgF,aAEV5sE,GAAK4nE,EAAQE,YAKzB,GAAyB,UAArBvkD,EAAKxa,IAAI4jE,UACT,IAAS3sE,EAAI,EAAGA,EAAIujB,EAAKxa,IAAIk1B,MAAM99B,OAAQH,IAAK,CAC5C,IAAI4nE,EACiB,WADjBA,EAAUrkD,EAAKxa,IAAIk1B,MAAMj+B,IAChB+H,OAA2D,UAAhB6/D,EAAQ7/D,OAC5D47D,GAAYpgD,EAAMvjB,GAAGypC,WAGzBzpC,GAAK4nE,EAAQE,YAIzB,SAAS09B,GAAoBjiF,EAAMqkD,GAC/B,IAAImb,EAAYpf,GAAYpgD,EAAMqkD,EAAQlkD,WAC1C,GAAKq/D,EAAUxlD,MAAf,CAGA,IAAIpC,EACAsqE,OAAY1gG,EAChB,GAAoB,SAAhB6iE,EAAQ7/D,MAAyC,CACjD,IAAI29F,EAAa99B,EAAQn4D,OAAOA,OAChCg2F,EAAYE,GAAgBpiF,EAAMmiF,EAAWhiF,UAAWgiF,EAAWhiF,UAAYgiF,EAAW59B,WAAYF,EAAQkJ,UAC9G31C,EAAoBsoC,GAAelgD,EAAMqkD,EAAQn4D,OAAOiU,WAAWqI,cAE9C,UAAhB67C,EAAQ7/D,QACb09F,EAAYE,GAAgBpiF,EAAM,EAAGA,EAAKxa,IAAIk1B,MAAM99B,OAAS,EAAGynE,EAAQkJ,UACxE31C,EAAoB5X,EAAKnI,WAE7B2nE,EAAUV,MAAMojB,GAGhB,IAFA,IAAIngC,EAAWsC,EAAQkJ,MAAMxL,SACzBsgC,GAAS,EACJ5lG,EAAI,EAAGA,EAAIslE,EAASnlE,OAAQH,IAAK,CACtC,IAAI+1E,EAAUzQ,EAAStlE,GACnB6lG,OAAa,EACjB,OAAQ9vB,EAAQ+vB,aACZ,KAAK,EACDD,EAAa9iB,EAAU9pE,MACvB,MACJ,KAAK,EACD4sF,EAAa9iB,EACb6iB,GAAS,EAGjBzqE,EAAkB46C,EAAQjzE,UAAY+iG,EAEtCD,GACA7iB,EAAUL,mBAGlB,SAASijB,GAAgBpiF,EAAMokD,EAAY36C,EAAU+4E,EAAUljG,GAC3D,IAAK,IAAI7C,EAAI2nE,EAAY3nE,GAAKgtB,EAAUhtB,IAAK,CACzC,IAAI4nE,EAAUrkD,EAAKxa,IAAIk1B,MAAMj+B,GACzB+mE,EAAYa,EAAQhB,eAAem/B,EAAShyF,IAIhD,GAHiB,MAAbgzD,GACAlkE,EAAO3B,KAAK8kG,GAAcziF,EAAMqkD,EAASb,IAEzB,EAAhBa,EAAQ7/D,OAA+B6/D,EAAQzrD,QAAQb,WACtDssD,EAAQzrD,QAAQb,SAAS+pF,mBAAqBU,EAASR,YACpDQ,EAASR,SAAU,CACvB,IAAIn7B,EAAc5G,GAAcjgD,EAAMvjB,GAOtC,IAJK4nE,EAAQiJ,oBAAsBk1B,EAASR,YAAcQ,EAASR,WAC/DI,GAAgBpiF,EAAMvjB,EAAI,EAAGA,EAAI4nE,EAAQE,WAAYi+B,EAAUljG,GAC/D7C,GAAK4nE,EAAQE,YAEG,SAAhBF,EAAQ7/D,MAER,IADA,IAAIygE,EAAgB4B,EAAY3B,cAAcC,eACrC11D,EAAI,EAAGA,EAAIw1D,EAAcroE,OAAQ6S,IAAK,CAC3C,IAAIssB,EAAekpC,EAAcx1D,GAC7BizF,EAAMlgC,GAAsBzmC,GAC5B2mE,GAAOA,IAAQ77B,GACfu7B,GAAgBrmE,EAAc,EAAGA,EAAav2B,IAAIk1B,MAAM99B,OAAS,EAAG4lG,EAAUljG,GAI1F,IAAI2pE,EAAiBpC,EAAY9uD,SAASmxD,gBAC1C,GAAID,EACA,IAASx5D,EAAI,EAAGA,EAAIw5D,EAAersE,OAAQ6S,IAAK,CAC5C,IAAI+zC,EAAgBylB,EAAex5D,GACnC2yF,GAAgB5+C,EAAe,EAAGA,EAAch+C,IAAIk1B,MAAM99B,OAAS,EAAG4lG,EAAUljG,KAIvF+kE,EAAQiJ,oBAAsBk1B,EAASR,YAAcQ,EAASR,WAE/DvlG,GAAK4nE,EAAQE,YAGrB,OAAOjlE,EAEX,SAASmjG,GAAcziF,EAAMqkD,EAASs+B,GAClC,GAAsB,MAAlBA,EAEA,OAAQA,GACJ,KAAK,EACD,OAAO1iC,GAAcjgD,EAAMqkD,EAAQlkD,WAAWyiD,cAClD,KAAK,EACD,OAAO,IAAIzO,GAAW8L,GAAcjgD,EAAMqkD,EAAQlkD,WAAWyiD,eACjE,KAAK,EACD,OAAO3C,GAAcjgD,EAAMqkD,EAAQlkD,WAAWpI,SAClD,KAAK,EACD,OAAOkoD,GAAcjgD,EAAMqkD,EAAQlkD,WAAW+kD,cAClD,KAAK,EACD,OAAOhF,GAAelgD,EAAMqkD,EAAQlkD,WAAWqI;;;;;;;OAwC/D,SAASo6E,GAAgB5iF,EAAM4jD,EAAYp+D,GACvC,IAAI07F,EAAWv9B,GAAuB3jD,EAAM4jD,EAAYp+D,GACnD07F,GAKL18B,GAA0BxkD,EADLxa,EAAIs/D,UAAUjlE,MACa,EAAqBqhG,EAAU,UAAM1/F;;;;;;;OA4BzF,SAASqhG,GAAmBr+F,EAAO0oE,EAAY41B,GAE3C,IADA,IAAI/gC,EAAW,IAAIlmE,MAAMinG,EAAclmG,QAC9BH,EAAI,EAAGA,EAAIqmG,EAAclmG,OAAQH,IAAK,CAC3C,IAAIwL,EAAO66F,EAAcrmG,GACzBslE,EAAStlE,IACL+H,MAAO,EACPrG,KAAM8J,EACNkjE,GAAI,KACJyD,gBAAiB3mE,EACjBy5F,gBAAiB,KACjB3iD,OAAQ,MAGhB,OAEI5+B,WAAY,EACZjU,OAAQ,KACRswB,aAAc,KACd9F,cAAe,EACf02C,aAAc,EAEdF,WAAYA,EACZ1oE,MAAOA,EACP6kE,WAAY,EACZgE,iBAAkB,EAClBC,oBAAqB,EACrBjK,kBACAC,gBAAiB,EACjBC,cACAkB,gBAAiB,EACjBF,WAAY,EAAGxC,SAAUA,EACzBiD,aAAcM,GAAiBvD,GAC/B7nD,WACAtB,QAAS,KACTtL,SAAU,KACVqB,KAAM,KACN4+D,MAAO,KACPzI,UAAW,MAuMnB,SAAStnC,GAAWxd,EAAM4jD,EAAYp+D,GAClC,IAAIqmE,EACAhxC,EAAW7a,EAAK6a,SACpBgxC,EAAgBhxC,EAAS2C,WAAWh4B,EAAImJ,KAAKw2C,QAC7C,IAAI+7C,EAAWv9B,GAAuB3jD,EAAM4jD,EAAYp+D,GAIxD,OAHI07F,GACArmE,EAAS7O,YAAYk1E,EAAUr1B,IAE1BhJ,WAAYgJ,GA0EzB,SAASk3B,GAAsB1lG,EAAOm1E,GAElC,OADwB,MAATn1E,EAAgBA,EAAMoF,WAAa,IAChC+vE,EAAQzzB;;;;;;;OAmI9B,SAASikD,GAAcvxE,GACnB,OAA8C,IAAzB,EAAbA,EAAKjtB,QAA4D,OAAtBitB,EAAK7Y,QAAQza,KAEpE,SAAS8kG,GAAa/2F,EAAQulB,EAAMyxE,GAChC,IAAInrF,EAAW0Z,EAAK7Y,SAAW6Y,EAAK7Y,QAAQb,SAC5C,GAAIA,EAAU,CACV,IAAKA,EAASmsD,mBACV,MAAM,IAAIhjE,MAAM,oEAEpB,GAAI6W,EAASmsD,oBAC2B,SAApCnsD,EAASmsD,mBAAmB1/D,MAC5B,MAAM,IAAItD,MAAM,mFAAqFuwB,EAAKtR,UAAY,KAG9H,GAAiB,MAAbsR,EAAKjtB,OAEuC,IAAzB,GADD0H,EAASA,EAAO1H,MAAQ,IAEtC,MAAM,IAAItD,MAAM,sGAAwGuwB,EAAKtR,UAAY,KAGjJ,GAAIsR,EAAK87C,MAAO,CACZ,GAAiB,SAAb97C,EAAKjtB,SACH0H,GAAyD,IAA/B,MAAfA,EAAO1H,QACpB,MAAM,IAAItD,MAAM,kFAAoFuwB,EAAKtR,UAAY,KAEzH,GAAiB,UAAbsR,EAAKjtB,OAAyC0H,EAC9C,MAAM,IAAIhL,MAAM,wEAA0EuwB,EAAKtR,UAAY,KAGnH,GAAIsR,EAAK8yC,WAAY,CACjB,IAAI4+B,EAAYj3F,EAASA,EAAOiU,UAAYjU,EAAOq4D,WAAa2+B,EAAY,EAC5E,GAAIzxE,EAAKtR,WAAagjF,GAAa1xE,EAAKtR,UAAYsR,EAAK8yC,WAAa4+B,EAClE,MAAM,IAAIjiG,MAAM,uEAAyEuwB,EAAKtR,UAAY,MAItH,SAAS0zC,GAAmB3nD,EAAQk3F,EAAct7B,EAAS/4D,GAGvD,IAAIiR,EAAO6iC,GAAW32C,EAAOq2D,KAAMr2D,EAAO2uB,SAAU3uB,EAAQk3F,EAAct7B,GAG1E,OAFAu7B,GAASrjF,EAAM9T,EAAO2L,UAAW9I,GACjCu0F,GAAgBtjF,GACTA,EAEX,SAASugD,GAAegC,EAAM/8D,EAAKuJ,GAC/B,IAAIiR,EAAO6iC,GAAW0f,EAAMA,EAAK1nC,SAAU,KAAM,KAAMr1B,GAGvD,OAFA69F,GAASrjF,EAAMjR,EAASA,GACxBu0F,GAAgBtjF,GACTA,EAEX,SAASwgD,GAAoB76C,EAAY0+C,EAASyD,EAASlsC,GACvD,IACI2nE,EADA1nE,EAAewoC,EAAQzrD,QAAQirD,sBAQnC,OAFI0/B,EAJC1nE,EAIclW,EAAW48C,KAAK3nC,gBAAgBe,eAAeC,EAAaC,GAH5DlW,EAAW48C,KAAK1nC,SAK5BgoB,GAAWl9B,EAAW48C,KAAMghC,EAAc59E,EAAY0+C,EAAQzrD,QAAQovD,kBAAmBF,GAEpG,SAASjlB,GAAW0f,EAAM1nC,EAAU3uB,EAAQu2D,EAAej9D,GACvD,IAAIk1B,EAAQ,IAAI7+B,MAAM2J,EAAIk1B,MAAM99B,QAC5BitE,EAAcrkE,EAAIg+F,YAAc,IAAI3nG,MAAM2J,EAAIg+F,aAAe,KAWjE,OATIh+F,IAAKA,EACL0G,OAAQA,EACRg2D,oBAAqB,KAAMO,cAAeA,EAC1C1zD,QAAS,KACT8I,UAAW,KAAM6iB,MAAOA,EACxByG,MAAO,GAAkBohC,KAAMA,EAAM1nC,SAAUA,EAC/C+mC,UAAW,IAAI/lE,MAAM2J,EAAIi+F,cAAe55B,YAAaA,EACrD/J,WAAY,GAIpB,SAASujC,GAASrjF,EAAMnI,EAAW9I,GAC/BiR,EAAKnI,UAAYA,EACjBmI,EAAKjR,QAAUA,EAEnB,SAASu0F,GAAgBtjF,GACrB,IAAI4jD,EACAb,GAAgB/iD,KAEhB4jD,EAAa3D,GAAcjgD,EAAK9T,OADlB8T,EAAKyiD,cAC6Bv2D,OAAOiU,WAAWyiD,eAItE,IAFA,IAAIp9D,EAAMwa,EAAKxa,IACXk1B,EAAQ1a,EAAK0a,MACRj+B,EAAI,EAAGA,EAAI+I,EAAIk1B,MAAM99B,OAAQH,IAAK,CACvC,IAAI4nE,EAAU7+D,EAAIk1B,MAAMj+B,GACxB4jE,GAASC,eAAetgD,EAAMvjB,GAC9B,IAAIinG,OAAW,EACf,OAAwB,UAAhBr/B,EAAQ7/D,OACZ,KAAK,EACD,IAAI8oB,EAAKvB,GAAc/L,EAAM4jD,EAAYS,GACrCtnC,OAAgBv7B,EACpB,GAAoB,SAAhB6iE,EAAQ7/D,MAAsC,CAC9C,IAAIm/F,EAAc3/B,GAAkBK,EAAQzrD,QAAQmkB,eACpDA,EAAgBsjC,GAASG,oBAAoBxgD,EAAMqkD,EAASs/B,EAAar2E,GAE7E6zE,GAAuBnhF,EAAM+c,EAAesnC,EAAS/2C,GACrDo2E,GACI9gC,cAAet1C,EACfyP,cAAeA,EACfmoC,cAAe,KACfntD,SAAUssD,EAAQzrD,QAAQb,SAAW+xD,GAAmB9pD,EAAMqkD,QAAW7iE,GAEzD,SAAhB6iE,EAAQ7/D,QACRk/F,EAASx+B,cAAgBsD,GAAwBxoD,EAAMqkD,EAASq/B,IAEpE,MACJ,KAAK,EACDA,EAAWlmE,GAAWxd,EAAM4jD,EAAYS,GACxC,MACJ,KAAK,IACL,KAAK,KACL,KAAK,KACL,KAAK,KACDq/B,EAAWhpE,EAAMj+B,KACkB,KAAhB4nE,EAAQ7/D,QAEvBk/F,GAAal7E,SADEglD,GAAuBxtD,EAAMqkD,KAGhD,MAEJ,KAAK,GAEDq/B,GAAal7E,SADEklD,GAAmB1tD,EAAMqkD,IAExC,MAEJ,KAAK,OACDq/B,EAAWhpE,EAAMj+B,MAGbinG,GAAal7E,SADEolD,GAAwB5tD,EAAMqkD,KAG7B,MAAhBA,EAAQ7/D,OAER6+F,GADepjC,GAAcjgD,EAAMqkD,EAAQn4D,OAAOiU,WAAW4c,cAC1C2mE,EAASl7E,SAAUk7E,EAASl7E,UAEnD,MAEJ,KAAK,GACL,KAAK,GACL,KAAK,IACDk7E,GA3iBHrmG,WAAOmE,GA4iBJ,MACJ,KAAK,SACL,KAAK,UACDkiG,EAnyBL,IAAIllB,GAoyBC,MACJ,KAAK,EACDokB,GAAgB5iF,EAAM4jD,EAAYS,GAElCq/B,OAAWliG,EAGnBk5B,EAAMj+B,GAAKinG,EAIfE,GAAyB5jF,EAAMygF,GAAWoD,iBAE1CC,GAAkB9jF,EAAM,UAAiE,UAA6B,GAE1H,SAAS8gD,GAAmB9gD,GACxB+jF,GAA2B/jF,GAC3BqgD,GAASc,iBAAiBnhD,EAAM,GAChCgkF,GAAwBhkF,EAAMygF,GAAWwD,gBACzC5jC,GAASe,eAAephD,EAAM,GAC9B4jF,GAAyB5jF,EAAMygF,GAAWwD,gBAG1CjkF,EAAKmhB,QAAS,GAElB,SAAS0/B,GAAmB7gD,GACP,EAAbA,EAAKmhB,OACLnhB,EAAKmhB,QAAS,EACdnhB,EAAKmhB,OAAS,GAGdnhB,EAAKmhB,QAAS,EAElBu+B,GAAe1/C,EAAM,EAA8B,KACnD+jF,GAA2B/jF,GAC3BqgD,GAASc,iBAAiBnhD,EAAM,GAChCgkF,GAAwBhkF,EAAMygF,GAAWyD,gBACzCJ,GAAkB9jF,EAAM,SAAiC,UAA8B,GACvF,IAAImkF,EAAWzkC,GAAe1/C,EAAM,IAAmC,KACvE6uD,GAAgC7uD,EAAM,SAAqCmkF,EAAW,QAAiC,IACvH9jC,GAASe,eAAephD,EAAM,GAC9B4jF,GAAyB5jF,EAAMygF,GAAWyD,gBAC1CJ,GAAkB9jF,EAAM,UAA+B,UAA8B,GAErF6uD,GAAgC7uD,EAAM,UADtCmkF,EAAWzkC,GAAe1/C,EAAM,IAA6C,MACM,QAA8B,IAC5F,EAAjBA,EAAKxa,IAAIhB,QACTwb,EAAKmhB,QAAS,GAElBnhB,EAAKmhB,QAAS,GACdu+B,GAAe1/C,EAAM,IAA0C,MAEnE,SAASokF,GAAmBpkF,EAAMqkD,EAASggC,EAAUj/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GACrF,OAAiB,IAAbF,EAgCR,SAASG,EAAyBxkF,EAAMqkD,EAASjf,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GACjF,OAAwB,UAAhBlgC,EAAQ7/D,OACZ,KAAK,EACD,OAjhCZ,SAASigG,EAA4BzkF,EAAMxa,EAAK4/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GAChF,IAAIG,EAAUl/F,EAAIu8D,SAASnlE,OACvB+nG,GAAU,EAqBd,OApBID,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAG4/C,KACxDu/C,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAG+/C,KACxDo/C,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAGkgD,KACxDi/C,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAGqgD,KACxD8+C,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAGwgD,KACxD2+C,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAG2gD,KACxDw+C,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAG8gD,KACxDq+C,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAGihD,KACxDk+C,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAG8+F,KACxDK,GAAU,GACVD,EAAU,GAAKjD,GAA2BzhF,EAAMxa,EAAK,EAAG++F,KACxDI,GAAU,GACPA,EA0/BQF,CAA4BzkF,EAAMqkD,EAASjf,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GAC1F,KAAK,EACD,OA5bZ,SAASK,EAAyB5kF,EAAMxa,EAAK4/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GAC7E,IAAII,GAAU,EACV5iC,EAAWv8D,EAAIu8D,SACf2iC,EAAU3iC,EAASnlE,OAqBvB,GApBI8nG,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG4/C,KACnDu/C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG+/C,KACnDo/C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAGkgD,KACnDi/C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAGqgD,KACnD8+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAGwgD,KACnD2+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG2gD,KACnDw+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG8gD,KACnDq+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAGihD,KACnDk+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG8+F,KACnDK,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG++F,KACnDI,GAAU,GACVA,EAAS,CACT,IAAItnG,EAAQmI,EAAImJ,KAAKw2C,OACjBu/C,EAAU,IACVrnG,GAAS0lG,GAAsB39C,EAAI2c,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsBx9C,EAAIwc,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsBr9C,EAAIqc,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsBl9C,EAAIkc,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsB/8C,EAAI+b,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsB58C,EAAI4b,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsBz8C,EAAIyb,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsBt8C,EAAIsb,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsBuB,EAAIviC,EAAS,KAC5C2iC,EAAU,IACVrnG,GAAS0lG,GAAsBwB,EAAIxiC,EAAS,KAChD,IAAI8J,EAAgB7L,GAAWhgD,EAAMxa,EAAI2a,WAAW0iD,WACpD7iD,EAAK6a,SAASkL,SAAS8lC,EAAexuE,GAE1C,OAAOsnG,EA2YQC,CAAyB5kF,EAAMqkD,EAASjf,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GACvF,KAAK,MACD,OAhoPZ,SAASM,EAA8B7kF,EAAMxa,EAAK4/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GAClF,IAAI91B,EAAevO,GAAelgD,EAAMxa,EAAI2a,WACxC8C,EAAYwrD,EAAajmD,SACzBm8E,GAAU,EACVh2B,OAAUntE,EACVkjG,EAAUl/F,EAAIu8D,SAASnlE,OAmD3B,OAlDI8nG,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAG4/C,KAC1Cu/C,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAG4/C,EAAIupB,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAG+/C,KAC1Co/C,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAG+/C,EAAIopB,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAGkgD,KAC1Ci/C,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAGkgD,EAAIipB,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAGqgD,KAC1C8+C,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAGqgD,EAAI8oB,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAGwgD,KAC1C2+C,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAGwgD,EAAI2oB,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAG2gD,KAC1Cw+C,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAG2gD,EAAIwoB,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAG8gD,KAC1Cq+C,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAG8gD,EAAIqoB,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAGihD,KAC1Ck+C,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAGihD,EAAIkoB,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAG8+F,KAC1CK,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAG8+F,EAAI31B,IAErD+1B,EAAU,GAAKhjC,GAAa1hD,EAAMxa,EAAK,EAAG++F,KAC1CI,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK,EAAG++F,EAAI51B,IAErDA,GACA1rD,EAAUknC,YAAYwkB,GAET,MAAZnpE,EAAIhB,OACLu7D,GAA4B//C,EAAM,IAAmCxa,EAAI2a,YACzE8C,EAAU3I,WAEE,OAAZ9U,EAAIhB,OACJye,EAAUzI,YAEPmqF,EAwkPQE,CAA8B7kF,EAAMqkD,EAASjf,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GAC5F,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA7oBZ,SAASO,EAAmC9kF,EAAMxa,EAAK4/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GACvF,IAAIxiC,EAAWv8D,EAAIu8D,SACf4iC,GAAU,EACVD,EAAU3iC,EAASnlE,OAqBvB,GApBI8nG,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG4/C,KACnDu/C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG+/C,KACnDo/C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAGkgD,KACnDi/C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAGqgD,KACnD8+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAGwgD,KACnD2+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG2gD,KACnDw+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG8gD,KACnDq+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAGihD,KACnDk+C,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG8+F,KACnDK,GAAU,GACVD,EAAU,GAAK7iC,GAAsB7hD,EAAMxa,EAAK,EAAG++F,KACnDI,GAAU,GACVA,EAAS,CACT,IAAIpuF,EAAO4pD,GAAqBngD,EAAMxa,EAAI2a,WACtC9iB,OAAQ,EACZ,OAAoB,UAAZmI,EAAIhB,OACR,KAAK,GACDnH,EAAQ,IAAIxB,MAAMkmE,EAASnlE,QACvB8nG,EAAU,IACVrnG,EAAM,GAAK+nD,GACXs/C,EAAU,IACVrnG,EAAM,GAAKkoD,GACXm/C,EAAU,IACVrnG,EAAM,GAAKqoD,GACXg/C,EAAU,IACVrnG,EAAM,GAAKwoD,GACX6+C,EAAU,IACVrnG,EAAM,GAAK2oD,GACX0+C,EAAU,IACVrnG,EAAM,GAAK8oD,GACXu+C,EAAU,IACVrnG,EAAM,GAAKipD,GACXo+C,EAAU,IACVrnG,EAAM,GAAKopD,GACXi+C,EAAU,IACVrnG,EAAM,GAAKinG,GACXI,EAAU,IACVrnG,EAAM,GAAKknG,GACf,MACJ,KAAK,GACDlnG,KACIqnG,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQinD,GAC1Bs/C,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQonD,GAC1Bm/C,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQunD,GAC1Bg/C,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQ0nD,GAC1B6+C,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQ6nD,GAC1B0+C,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQgoD,GAC1Bu+C,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQmoD,GAC1Bo+C,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQsoD,GAC1Bi+C,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQmmG,GAC1BI,EAAU,IACVrnG,EAAM0kE,EAAS,GAAG5jE,MAAQomG,GAC9B,MACJ,KAAK,IACD,IAAIvnB,EAAO53B,EACX,OAAQs/C,GACJ,KAAK,EACDrnG,EAAQ2/E,EAAKO,UAAUn4B,GACvB,MACJ,KAAK,EACD/nD,EAAQ2/E,EAAKO,UAAUh4B,GACvB,MACJ,KAAK,EACDloD,EAAQ2/E,EAAKO,UAAUh4B,EAAIG,GAC3B,MACJ,KAAK,EACDroD,EAAQ2/E,EAAKO,UAAUh4B,EAAIG,EAAIG,GAC/B,MACJ,KAAK,EACDxoD,EAAQ2/E,EAAKO,UAAUh4B,EAAIG,EAAIG,EAAIG,GACnC,MACJ,KAAK,EACD3oD,EAAQ2/E,EAAKO,UAAUh4B,EAAIG,EAAIG,EAAIG,EAAIG,GACvC,MACJ,KAAK,EACD9oD,EAAQ2/E,EAAKO,UAAUh4B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,GAC3C,MACJ,KAAK,EACDjpD,EAAQ2/E,EAAKO,UAAUh4B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,GAC/C,MACJ,KAAK,EACDppD,EAAQ2/E,EAAKO,UAAUh4B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,GACnD,MACJ,KAAK,GACDjnG,EAAQ2/E,EAAKO,UAAUh4B,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,IAKvEhuF,EAAKlZ,MAAQA,EAEjB,OAAOsnG,EA6hBQG,CAAmC9kF,EAAMqkD,EAASjf,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GACjG,QACI,KAAM,eA5CHC,CAAyBxkF,EAAMqkD,EAASjf,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GA+C3F,SAASQ,EAA0B/kF,EAAMqkD,EAAS/kE,GAC9C,OAAwB,UAAhB+kE,EAAQ7/D,OACZ,KAAK,EACD,OAxgCZ,SAASwgG,EAA6BhlF,EAAMxa,EAAKlG,GAE7C,IADA,IAAIqlG,GAAU,EACLloG,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,IAC3BglG,GAA2BzhF,EAAMxa,EAAK/I,EAAG6C,EAAO7C,MAChDkoG,GAAU,GAElB,OAAOA,EAkgCQK,CAA6BhlF,EAAMqkD,EAAS/kE,GACvD,KAAK,EACD,OAzZZ,SAAS2lG,EAA0BjlF,EAAMxa,EAAKlG,GAG1C,IAFA,IAAIyiE,EAAWv8D,EAAIu8D,SACf4iC,GAAU,EACLloG,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,IAG3BolE,GAAsB7hD,EAAMxa,EAAK/I,EAAG6C,EAAO7C,MAC3CkoG,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAItnG,EAAQ,GACZ,IAASZ,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,IAC/BY,GAAgB0lG,GAAsBzjG,EAAO7C,GAAIslE,EAAStlE,IAE9DY,EAAQmI,EAAImJ,KAAKw2C,OAAS9nD,EAC1B,IAAIwuE,EAAgB7L,GAAWhgD,EAAMxa,EAAI2a,WAAW0iD,WACpD7iD,EAAK6a,SAASkL,SAAS8lC,EAAexuE,GAE1C,OAAOsnG,EAsYQM,CAA0BjlF,EAAMqkD,EAAS/kE,GACpD,KAAK,MACD,OAtlPZ,SAAS4lG,EAA+BllF,EAAMxa,EAAKlG,GAK/C,IAJA,IAAImvE,EAAevO,GAAelgD,EAAMxa,EAAI2a,WACxC8C,EAAYwrD,EAAajmD,SACzBm8E,GAAU,EACVh2B,OAAUntE,EACL/E,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,IAC3BilE,GAAa1hD,EAAMxa,EAAK/I,EAAG6C,EAAO7C,MAClCkoG,GAAU,EACVh2B,EAAUD,GAAW1uD,EAAMyuD,EAAcjpE,EAAK/I,EAAG6C,EAAO7C,GAAIkyE,IAapE,OAVIA,GACA1rD,EAAUknC,YAAYwkB,GAET,MAAZnpE,EAAIhB,OACLu7D,GAA4B//C,EAAM,IAAmCxa,EAAI2a,YACzE8C,EAAU3I,WAEE,OAAZ9U,EAAIhB,OACJye,EAAUzI,YAEPmqF,EAikPQO,CAA+BllF,EAAMqkD,EAAS/kE,GACzD,KAAK,GACL,KAAK,GACL,KAAK,IACD,OA3iBZ,SAAS6lG,EAAoCnlF,EAAMxa,EAAKlG,GAGpD,IAFA,IAAIyiE,EAAWv8D,EAAIu8D,SACf4iC,GAAU,EACLloG,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,IAG3BolE,GAAsB7hD,EAAMxa,EAAK/I,EAAG6C,EAAO7C,MAC3CkoG,GAAU,GAGlB,GAAIA,EAAS,CACT,IAAIpuF,EAAO4pD,GAAqBngD,EAAMxa,EAAI2a,WACtC9iB,OAAQ,EACZ,OAAoB,UAAZmI,EAAIhB,OACR,KAAK,GACDnH,EAAQiC,EACR,MACJ,KAAK,GAED,IADAjC,KACSZ,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,IAC/BY,EAAM0kE,EAAStlE,GAAG0B,MAAQmB,EAAO7C,GAErC,MACJ,KAAK,IACD,IAAIugF,EAAO19E,EAAO,GACd6Q,EAAS7Q,EAAOmN,MAAM,GAC1BpP,EAAQ2/E,EAAKO,UAAUzgF,MAAMkgF,EAAMn/E,EAASsS,IAGpDoG,EAAKlZ,MAAQA,EAEjB,OAAOsnG;;;;;;;OA4gBQQ,CAAoCnlF,EAAMqkD,EAAS/kE,GAC9D,QACI,KAAM,eAzDHylG,CAA0B/kF,EAAMqkD,EAASjf,GAGxD,SAAS2+C,GAA2B/jF,GAChC,IAAIxa,EAAMwa,EAAKxa,IACf,GAAsB,EAAhBA,EAAI4jE,UAGV,IAAK,IAAI3sE,EAAI,EAAGA,EAAI+I,EAAIk1B,MAAM99B,OAAQH,IAAK,CACvC,IAAI4nE,EAAU7+D,EAAIk1B,MAAMj+B,GACxB,GAAoB,EAAhB4nE,EAAQ7/D,MAAmC,CAC3C,IAAIykE,EAAiBhJ,GAAcjgD,EAAMvjB,GAAGsb,SAASmxD,gBACrD,GAAID,EACA,IAAK,IAAIjtB,EAAM,EAAGA,EAAMitB,EAAersE,OAAQo/C,IAAO,CAClD,IAAIwH,EAAgBylB,EAAejtB,GACnCwH,EAAcriB,OAAS,GACvBghC,GAAsC3e,EAAexjC,SAIH,IAA/B,EAArBqkD,EAAQgF,cAId5sE,GAAK4nE,EAAQE,aAoCzB,SAAS6gC,GAAmBplF,EAAMqkD,EAASggC,EAAUj/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GAQrF,OAPiB,IAAbF,EASR,SAASgB,EAAyBrlF,EAAMqkD,EAASjf,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GACjF,IAAIG,EAAUrgC,EAAQtC,SAASnlE,OAC3B8nG,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAGjf,GACxCs/C,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAG9e,GACxCm/C,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAG3e,GACxCg/C,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAGxe,GACxC6+C,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAGre,GACxC0+C,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAGle,GACxCu+C,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAG/d,GACxCo+C,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAG5d,GACxCi+C,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAGigC,GACxCI,EAAU,GACV5iC,GAAsB9hD,EAAMqkD,EAAS,EAAGkgC,GA7BxCc,CAAyBrlF,EAAMqkD,EAASjf,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GA+BpF,SAASe,EAA0BtlF,EAAMqkD,EAAS/kE,GAC9C,IAAK,IAAI7C,EAAI,EAAGA,EAAI6C,EAAO1C,OAAQH,IAC/BqlE,GAAsB9hD,EAAMqkD,EAAS5nE,EAAG6C,EAAO7C,IA9B/C6oG,CAA0BtlF,EAAMqkD,EAASjf,IAGtC,EAkCX,SAASmgD,GAAoBvlF,EAAMqkD,GAE/B,GADgBjE,GAAYpgD,EAAMqkD,EAAQlkD,WAC5B6Z,MACV,MAAMmlC,GAA4CkB,GAASY,mBAAmBjhD,EAAMqkD,EAAQlkD,WAAY,SAAWkkD,EAAQkJ,MAAM/8D,GAAK,aAAc,SAAW6zD,EAAQkJ,MAAM/8D,GAAK,SAAsD,IAA9B,EAAbwP,EAAKmhB,QAG1M,SAAS4/B,GAAY/gD,GACjB,KAAiB,IAAbA,EAAKmhB,OAAT,CAMA,GAHA6iE,GAAwBhkF,EAAMygF,GAAW+E,SACzC5B,GAAyB5jF,EAAMygF,GAAW+E,SAC1C32B,GAAgC7uD,EAAM,QAClCA,EAAK6pD,YACL,IAAK,IAAIptE,EAAI,EAAGA,EAAIujB,EAAK6pD,YAAYjtE,OAAQH,IACzCujB,EAAK6pD,YAAYptE,MA32Q7B,SAASgpG,EAAoBzlF,GACzB,GAAmB,GAAbA,EAAKmhB,MAAX,CAGA,IAAI6nC,EAAiBxG,GAAsBxiD,GAC3C,GAAIgpD,EAAgB,CAChB,IAAIC,EAAiBD,EAAejxD,SAASmxD,gBACzCD,IACAnC,GAAgBmC,EAAgBA,EAAetmE,QAAQqd,IACvDqgD,GAASgB,mBAAmBrhD,MAq2QpCylF,CAAoBzlF,GAChBA,EAAK6a,SAASyC,aAQtB,SAASooE,EAAiB1lF,GAEtB,IADA,IAAI5L,EAAM4L,EAAKxa,IAAIk1B,MAAM99B,OAChBH,EAAI,EAAGA,EAAI2X,EAAK3X,IAAK,CAC1B,IAAI+I,EAAMwa,EAAKxa,IAAIk1B,MAAMj+B,GACT,EAAZ+I,EAAIhB,MACJwb,EAAK6a,SAASyC,YAAY2iC,GAAcjgD,EAAMvjB,GAAGmmE,eAEhC,EAAZp9D,EAAIhB,MACTwb,EAAK6a,SAASyC,YAAY0iC,GAAWhgD,EAAMvjB,GAAGomE,aAE7B,SAAZr9D,EAAIhB,OAAuD,UAAZgB,EAAIhB,QACxD47D,GAAYpgD,EAAMvjB,GAAGyiC,WAlBzBwmE,CAAiB1lF,GAEjB+iD,GAAgB/iD,IAChBA,EAAK6a,SAASqE,UAElBlf,EAAKmhB,OAAS,KA0BlB,SAASyiE,GAAyB5jF,EAAMuc,GACpC,IAAI/2B,EAAMwa,EAAKxa,IACf,GAAsB,SAAhBA,EAAI4jE,UAGV,IAAK,IAAI3sE,EAAI,EAAGA,EAAI+I,EAAIk1B,MAAM99B,OAAQH,IAAK,CACvC,IAAI4nE,EAAU7+D,EAAIk1B,MAAMj+B,GACJ,SAAhB4nE,EAAQ7/D,MAERmhG,GAAe1lC,GAAcjgD,EAAMvjB,GAAGsgC,cAAeR,GAEQ,IAAlC,SAArB8nC,EAAQgF,cAId5sE,GAAK4nE,EAAQE,aAIzB,SAASy/B,GAAwBhkF,EAAMuc,GACnC,IAAI/2B,EAAMwa,EAAKxa,IACf,GAAsB,SAAhBA,EAAI4jE,UAGV,IAAK,IAAI3sE,EAAI,EAAGA,EAAI+I,EAAIk1B,MAAM99B,OAAQH,IAAK,CACvC,IAAI4nE,EAAU7+D,EAAIk1B,MAAMj+B,GACxB,GAAoB,SAAhB4nE,EAAQ7/D,MAGR,IADA,IAAIygE,EAAgBhF,GAAcjgD,EAAMvjB,GAAGyoE,cAAcC,eAChD11D,EAAI,EAAGA,EAAIw1D,EAAcroE,OAAQ6S,IACtCk2F,GAAe1gC,EAAcx1D,GAAI8sB,QAGwB,IAAlC,SAArB8nC,EAAQgF,cAId5sE,GAAK4nE,EAAQE,aAIzB,SAASohC,GAAe3lF,EAAMuc,GAC1B,IAAIqpE,EAAY5lF,EAAKmhB,MACrB,OAAQ5E,GACJ,KAAKkkE,GAAWwD,eAC8B,IAAzB,IAAZ2B,KAC+C,KAA/B,GAAZA,GACD9kC,GAAmB9gD,GAEF,GAAZ4lF,GACLC,GAAyB7lF,EAAMygF,GAAWqF,+BAGlD,MACJ,KAAKrF,GAAWqF,6BAC8B,IAAzB,IAAZF,KACe,GAAZA,EACA9kC,GAAmB9gD,GAEF,GAAZ4lF,GACLC,GAAyB7lF,EAAMuc,IAGvC,MACJ,KAAKkkE,GAAWyD,eAC8B,IAAzB,IAAZ0B,KAC+C,KAA/B,GAAZA,GACD/kC,GAAmB7gD,GAEF,GAAZ4lF,GACLC,GAAyB7lF,EAAMygF,GAAWsF,+BAGlD,MACJ,KAAKtF,GAAWsF,6BAC8B,IAAzB,IAAZH,KACe,GAAZA,EACA/kC,GAAmB7gD,GAEF,GAAZ4lF,GACLC,GAAyB7lF,EAAMuc,IAGvC,MACJ,KAAKkkE,GAAW+E,QAGZzkC,GAAY/gD,GACZ,MACJ,KAAKygF,GAAWoD,gBACZP,GAAgBtjF,IAI5B,SAAS6lF,GAAyB7lF,EAAMuc,GACpCynE,GAAwBhkF,EAAMuc,GAC9BqnE,GAAyB5jF,EAAMuc,GAEnC,SAASunE,GAAkB9jF,EAAMgmF,EAAYC,EAAwBC,GACjE,GAAMlmF,EAAKxa,IAAI4jE,UAAY48B,GAAiBhmF,EAAKxa,IAAI4jE,UAAY68B,EAIjE,IADA,IAAI/C,EAAYljF,EAAKxa,IAAIk1B,MAAM99B,OACtBH,EAAI,EAAGA,EAAIymG,EAAWzmG,IAAK,CAChC,IAAI4nE,EAAUrkD,EAAKxa,IAAIk1B,MAAMj+B,GAC7B,GAAK4nE,EAAQ7/D,MAAQwhG,GAAgB3hC,EAAQ7/D,MAAQyhG,EAEjD,OADA5lC,GAASC,eAAetgD,EAAMqkD,EAAQlkD,WAC9B+lF,GACJ,KAAK,EACDjE,GAAoBjiF,EAAMqkD,GAC1B,MACJ,KAAK,EACDkhC,GAAoBvlF,EAAMqkD,GAIhCA,EAAQgF,WAAa28B,GAAiB3hC,EAAQgF,WAAa48B,IAG7DxpG,GAAK4nE,EAAQE;;;;;;;QA/HzB,SAAWk8B,GACPA,EAAWA,EAA4B,gBAAI,GAAK,kBAChDA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAA2B,eAAI,GAAK,iBAC/CA,EAAWA,EAAyC,6BAAI,GAAK,+BAC7DA,EAAWA,EAAoB,QAAI,GAAK,UAN5C,CAOGA,KAAeA,QAoIlB,IAAIvS,IAAc,EAClB,SAASiY,KACL,IAAIjY,GAAJ,CAGAA,IAAc,EACd,IAAIkY,EAAW76E,KA0CnB,SAAS86E,IACL,OACI/lC,eAAgBgmC,GAChB/lC,eAAgBgmC,GAChB1yC,mBAAoB2yC,GACpBhmC,oBAAqBimC,GACrBhmC,kBAAmBimC,GACnBhmC,iBAAkBimC,GAClBhmC,sBAAuBimC,GACvBhmC,eAAgBimC,GAChBhmC,mBAAoBimC,GACpBhmC,mBAAoBimC,GACpBhmC,YAAaimC,GACb/lC,mBAAoB,SAAUjhD,EAAMG,GAAa,OAAO,IAAI8mF,GAAcjnF,EAAMG,IAChF+gD,YAAagmC,GACb/lC,iBAAkBgmC,GAClB/lC,eAAgBgmC,IA1DSf,GAmBjC,SAASgB,IACL,OACI/mC,eAAgB,aAChBC,eAAgB+mC,GAChBzzC,mBAAoBA,GACpB2M,oBAAqBA,GACrBC,kBAAmBA,GACnBC,iBAAkBY,GAClBX,sBAAuBW,GACvBV,eAAgBU,GAChBT,mBAAoBA,GACpBC,mBAAoBA,GACpBC,YAAaA,GACbE,mBAAoB,SAAUjhD,EAAMG,GAAa,OAAO,IAAI8mF,GAAcjnF,EAAMG,IAChF+gD,YAAa,SAAUlhD,EAAMG,EAAW82B,EAAWqrB,GAC/C,OAAOtiD,EAAKxa,IAAI07D,YAAYlhD,EAAMG,EAAW82B,EAAWqrB,IAE5DnB,iBAAkB,SAAUnhD,EAAMkmF,GAAa,OAAOlmF,EAAKxa,IAAI27D,iBAA+B,IAAd+kC,EAAuCqB,GACnHC,GAAwBxnF,IAC5BohD,eAAgB,SAAUphD,EAAMkmF,GAAa,OAAOlmF,EAAKxa,IAAI47D,eAA6B,IAAd8kC,EAAuCqB,GAC/GC,GAAwBxnF,KAvCqBqnF,GACrDhnC,GAASC,eAAiB8lC,EAAS9lC,eACnCD,GAASE,eAAiB6lC,EAAS7lC,eACnCF,GAASxM,mBAAqBuyC,EAASvyC,mBACvCwM,GAASG,oBAAsB4lC,EAAS5lC,oBACxCH,GAASI,kBAAoB2lC,EAAS3lC,kBACtCJ,GAASK,iBAAmB0lC,EAAS1lC,iBACrCL,GAASM,sBAAwBylC,EAASzlC,sBAC1CN,GAASO,eAAiBwlC,EAASxlC,eACnCP,GAASQ,mBAAqBulC,EAASvlC,mBACvCR,GAASS,mBAAqBslC,EAAStlC,mBACvCT,GAASU,YAAcqlC,EAASrlC,YAChCV,GAASW,WAAaA,GACtBX,GAASY,mBAAqBmlC,EAASnlC,mBACvCZ,GAASa,YAAcklC,EAASllC,YAChCb,GAASc,iBAAmBilC,EAASjlC,iBACrCd,GAASe,eAAiBglC,EAAShlC,eACnCf,GAASgB,mBAAqBA,IA4ClC,SAASimC,GAAmBG,EAAYt2C,EAAkBC,EAAoB5rD,EAAKkoD,EAAU3+C,GAEzF,OAAOwxD,GAAemnC,GAAeD,EAAY/5C,EAD3BA,EAASxpD,SAASU,IAAIkwD,IACgC3D,EAAkBC,GAAqB5rD,EAAKuJ,GAE5H,SAASw3F,GAAoBkB,EAAYt2C,EAAkBC,EAAoB5rD,EAAKkoD,EAAU3+C,GAC1F,IAAI6rB,EAAkB8yB,EAASxpD,SAASU,IAAIkwD,IACxCyN,EAAOmlC,GAAeD,EAAY/5C,EAAU,IAAIi6C,GAAsB/sE,GAAkBu2B,EAAkBC,GAC1Gw2C,EAAkBC,GAA6BriG,GACnD,OAAOsiG,GAAqBC,GAAY3rG,OAAQmkE,GAAgB,MAAOgC,EAAMqlC,EAAiB74F,IAElG,SAAS24F,GAAeD,EAAY/5C,EAAU9yB,EAAiBu2B,EAAkBC,GAC7E,IAAI/+B,EAAYq7B,EAASxpD,SAASU,IAAI+tB,IAClCy0B,EAAesG,EAASxpD,SAASU,IAAI6lB,IAEzC,OACIijC,SAAUA,EACVxpD,SAAUujG,EAAYt2C,iBAAkBA,EACxCiZ,eAAgBhZ,EAAoB/+B,UAAWA,EAAWuI,gBAAiBA,EAAiBC,SAJjFD,EAAgBe,eAAe,KAAM,MAIgEyrB,aAAcA,GAGtI,SAASo/C,GAAwB7gF,EAAYqiF,EAAWC,EAAYl5F,GAChE,IAAI64F,EAAkBC,GAA6BI,GACnD,OAAOH,GAAqBC,GAAY3rG,OAAQy3D,GAAoB,MAAOluC,EAAYqiF,EAAWJ,EAAiB74F,IAEvH,SAAS03F,GAAyB9gF,EAAY0+C,EAAS4jC,EAAYrsE,GAQ/D,OALIqsE,EAFwBC,GAAiBtjG,IAAIy/D,EAAQzrD,QAAQovD,kBAAkB16D,SAAS9M,QAK3EqnG,GAA6BI,GAEvCH,GAAqBC,GAAY3rG,OAAQokE,GAAqB,MAAO76C,EAAY0+C,EAAS4jC,EAAYrsE,IAEjH,SAAS8qE,GAAuB36B,EAAYpN,EAAgBqN,EAAqBxmE,GAE7E,OAAOi7D,GAAkBsL,EAAYpN,EAAgBqN,EAkFzD,SAASm8B,EAAiC3iG,GACtC,IAAI7G,EASJ,SAASypG,EAAiB5iG,GACtB,IAAI6iG,GAAe,EACfC,GAAyB,EAC7B,OAA+B,IAA3BC,GAAkBr3F,MACTm3F,aAAcA,EAAcC,uBAAwBA,IAEjE9iG,EAAI7D,UAAUqG,QAAQ,SAAUypB,GAC5B,IAAI+2E,EAAWD,GAAkB3jG,IAAI6sB,EAAKjxB,OACxB,KAAbixB,EAAKjtB,OAA8CgkG,IACpDH,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,sBAGpEjjG,EAAI+gE,QAAQv+D,QAAQ,SAAUnN,GAC1B6tG,GAA2B1gG,QAAQ,SAAUwgG,EAAUhoG,GAC/CqB,EAAiBrB,GAAOe,aAAe1G,IACvCwtG,GAAe,EACfC,EAAyBA,GAA0BE,EAASC,yBAI/DJ,aAAcA,EAAcC,uBAAwBA,IA9BxDF,CAAiB5iG,GAAsC8iG,EAAyB3pG,EAAG2pG,uBAC5F,OAD+C3pG,EAAG0pG,cAgClD,SAASM,EAAuBnjG,GAC5B,IAAK,IAAI/I,EAAI,EAAGA,EAAI+I,EAAI7D,UAAU/E,OAAQH,IAAK,CAC3C,IAAI6Q,EAAW9H,EAAI7D,UAAUlF,GACzB6rG,IAIAh7F,EAAS9I,OAAS,MAEtB,IAAIgkG,EAAWD,GAAkB3jG,IAAI0I,EAAS9M,OAC1CgoG,IACAl7F,EAAS9I,OAA0B,KAAjB8I,EAAS9I,MAA8CgkG,EAAShkG,MAClF8I,EAAS7D,KAAOg6D,GAAa+kC,EAAS/+F,MACtC6D,EAASjQ,MAAQmrG,EAASnrG,OAGlC,GAAIqrG,GAA2Bx3F,KAAO,EAAG,CACrC,IAAI03F,EAAc,IAAIjxF,IAAInS,EAAI+gE,SAC9BmiC,GAA2B1gG,QAAQ,SAAUwgG,EAAUhoG,GACnD,GAAIooG,EAAY53F,IAAInP,EAAiBrB,GAAOe,YAAa,CACrD,IAAI+L,GACA9M,MAAOA,EACPgE,MAAOgkG,EAAShkG,OAAS8jG,EAAyB,KAA0B,GAC5E7+F,KAAMg6D,GAAa+kC,EAAS/+F,MAC5BpM,MAAOmrG,EAASnrG,MAChBwC,MAAO2F,EAAI7D,UAAU/E,QAEzB4I,EAAI7D,UAAUhE,KAAK2P,GACnB9H,EAAIygE,eAAezE,GAAShhE,IAAU8M,MArDtDq7F,CADAnjG,EAAMA,EAAI7K,QAAQ,WAAc,OAAO2mE,MAEhC97D,GANIA,EAtFW2iG,CAAiC3iG,IAG3D,IA0KIuiG,GAQAc,GACAC,GACAC,GApLAR,GAAoB,IAAIr7F,IACxBw7F,GAA6B,IAAIx7F,IACjCg7F,GAAmB,IAAIh7F,IAC3B,SAASy5F,GAAsB6B,GAE3B,IAAI1jG,EADJyjG,GAAkBp7F,IAAIq7F,EAAShoG,MAAOgoG,GAER,mBAAnBA,EAAShoG,QAAyBsE,EAAgBjD,EAAiB2mG,EAAShoG,SAC/C,mBAA7BsE,EAAcvD,YACrBmnG,GAA2Bv7F,IAAIq7F,EAAShoG,MAAOgoG,GAGvD,SAAS5B,GAA2BoC,EAAMC,GACtC,IACItF,EAAc3/B,GADAA,GAAkBsD,GAAkC2hC,IACtBvuE,MAAM,GAAG9hB,QAAQmkB,eACjEmrE,GAAiB/6F,IAAI67F,EAAMrF,GAE/B,SAASkD,KACL0B,GAAkBrwF,QAClBwwF,GAA2BxwF,QAC3BgwF,GAAiBhwF,QAQrB,SAAS2vF,GAA6BriG,GAClC,GAA+B,IAA3B+iG,GAAkBr3F,KAClB,OAAO1L,EAEX,IAAI0jG,EAWJ,SAASC,EAA2C3jG,GAGhD,IAFA,IAAI4jG,KACAC,EAAiB,KACZ5sG,EAAI,EAAGA,EAAI+I,EAAIk1B,MAAM99B,OAAQH,IAAK,CACvC,IAAI4nE,EAAU7+D,EAAIk1B,MAAMj+B,GACJ,EAAhB4nE,EAAQ7/D,QACR6kG,EAAiBhlC,GAEjBglC,GAAkC,KAAhBhlC,EAAQ7/D,OAC1B+jG,GAAkBv3F,IAAIqzD,EAAQ/2D,SAAS9M,SACvC4oG,EAAkCzrG,KAAK0rG,EAAelpF,WACtDkpF,EAAiB,MAGzB,OAAOD,EAzBkCD,CAA2C3jG,GACxF,GAAsD,IAAlD0jG,EAAuCtsG,OACvC,OAAO4I,EAIXA,EAAMA,EAAI7K,QAAQ,WAAc,OAAO2mE,KACvC,IAAK,IAAI7kE,EAAI,EAAGA,EAAIysG,EAAuCtsG,OAAQH,IAC/D6sG,EAAgC9jG,EAAK0jG,EAAuCzsG,IAEhF,OAAO+I,EAiBP,SAAS8jG,EAAgCrB,EAAYsB,GACjD,IAAK,IAAI9sG,EAAI8sG,EAAU,EAAG9sG,EAAIwrG,EAAWvtE,MAAM99B,OAAQH,IAAK,CACxD,IAAI4nE,EAAU4jC,EAAWvtE,MAAMj+B,GAC/B,GAAoB,EAAhB4nE,EAAQ7/D,MAER,OAEJ,GAAoB,KAAhB6/D,EAAQ7/D,MAA2C,CACnD,IAAI8I,EAAW+2D,EAAQ/2D,SACnBk7F,EAAWD,GAAkB3jG,IAAI0I,EAAS9M,OAC1CgoG,IACAnkC,EAAQ7/D,OAAyB,KAAhB6/D,EAAQ7/D,MAA8CgkG,EAAShkG,MAChF8I,EAAS7D,KAAOg6D,GAAa+kC,EAAS/+F,MACtC6D,EAASjQ,MAAQmrG,EAASnrG,UA4E9C,SAASkqG,GAAuBvnF,EAAMktD,EAAYm3B,EAAUj/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GAC5F,IAAIlgC,EAAUrkD,EAAKxa,IAAIk1B,MAAMwyC,GAE7B,OADAk3B,GAAmBpkF,EAAMqkD,EAASggC,EAAUj/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GACxD,IAAhBlgC,EAAQ7/D,MACZ27D,GAAqBngD,EAAMktD,GAAY7vE,WACvCmE,EAER,SAASgmG,GAAuBxnF,EAAMktD,EAAYm3B,EAAUj/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GAC5F,IAAIlgC,EAAUrkD,EAAKxa,IAAIk1B,MAAMwyC,GAE7B,OADAk4B,GAAmBplF,EAAMqkD,EAASggC,EAAUj/C,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAIG,EAAI69C,EAAIC,GACxD,IAAhBlgC,EAAQ7/D,MACZ27D,GAAqBngD,EAAMktD,GAAY7vE,WACvCmE,EAER,SAASslG,GAAwB9mF,GAC7B,OAAO8nF,GAAqBC,GAAYx1C,cAAesO,GAAoB,MAAO7gD,IAEtF,SAAS+mF,GAAwB/mF,GAC7B,OAAO8nF,GAAqBC,GAAYv1C,eAAgBsO,GAAoB,MAAO9gD,IAEvF,SAASgnF,GAAiBhnF,GACtB,OAAO8nF,GAAqBC,GAAY7oE,QAAS6hC,GAAa,MAAO/gD,IAazE,SAASsmF,GAAoBtmF,EAAMG,GAC/B2oF,GAAe9oF,EACf+oF,GAAoB5oF,EAExB,SAAS+mF,GAAiBlnF,EAAMG,EAAW82B,EAAWqrB,GAElD,OADAgkC,GAAoBtmF,EAAMG,GACnB2nF,GAAqBC,GAAY7mC,YAAalhD,EAAKxa,IAAI07D,YAAa,MAAOlhD,EAAMG,EAAW82B,EAAWqrB,IAElH,SAAS6kC,GAAsBnnF,EAAMkmF,GACjC,GAAiB,IAAblmF,EAAKmhB,MACL,MAAMs+B,GAAmBsoC,GAAYc,KAGzC,OADAvC,GAAoBtmF,EAAMwpF,GAAyBxpF,EAAM,IAClDA,EAAKxa,IAAI27D,iBAChB,SAASsoC,EAAuBzpF,EAAMG,EAAWkkF,GAE7C,IADA,IAAI/kG,KACKT,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCS,EAAOT,EAAK,GAAKlC,UAAUkC,GAE/B,IAAIwlE,EAAUrkD,EAAKxa,IAAIk1B,MAAMva,GAU7B,OATkB,IAAd+lF,EACAwD,GAAwB1pF,EAAMqkD,EAASggC,EAAU/kG,GAGjDqqG,GAAwB3pF,EAAMqkD,EAASggC,EAAU/kG,GAEjC,MAAhB+kE,EAAQ7/D,OACR8hG,GAAoBtmF,EAAMwpF,GAAyBxpF,EAAMG,IAErC,IAAhBkkD,EAAQ7/D,MACZ27D,GAAqBngD,EAAMqkD,EAAQlkD,WAAW9iB,WAC9CmE,GAlBiDwe,GAqB7D,SAASonF,GAAoBpnF,EAAMkmF,GAC/B,GAAiB,IAAblmF,EAAKmhB,MACL,MAAMs+B,GAAmBsoC,GAAYc,KAGzC,OADAvC,GAAoBtmF,EAAM4pF,GAA0B5pF,EAAM,IACnDA,EAAKxa,IAAI47D,eAChB,SAASyoC,EAAuB7pF,EAAMG,EAAWkkF,GAE7C,IADA,IAAI/kG,KACKT,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCS,EAAOT,EAAK,GAAKlC,UAAUkC,GAE/B,IAAIwlE,EAAUrkD,EAAKxa,IAAIk1B,MAAMva,GAU7B,OATkB,IAAd+lF,EACAwD,GAAwB1pF,EAAMqkD,EAASggC,EAAU/kG,GAGjDqqG,GAAwB3pF,EAAMqkD,EAASggC,EAAU/kG,GAEjC,EAAhB+kE,EAAQ7/D,OACR8hG,GAAoBtmF,EAAM4pF,GAA0B5pF,EAAMG,IAEtC,IAAhBkkD,EAAQ7/D,MACZ27D,GAAqBngD,EAAMqkD,EAAQlkD,WAAW9iB,WAC9CmE,GAlB+Cwe,GAqB3D,SAAS0pF,GAAwB1pF,EAAMqkD,EAASggC,EAAUyF,GAEtD,GADc1F,GAAmBtnG,WAAM,EAAQe,GAAUmiB,EAAMqkD,EAASggC,GAAWyF,IACtE,CACT,IAAIxqG,EAAsB,IAAb+kG,EAA+ByF,EAAY,GAAKA,EAC7D,GAAoB,MAAhBzlC,EAAQ7/D,MAAmC,CAE3C,IADA,IAAIulG,KACKttG,EAAI,EAAGA,EAAI4nE,EAAQtC,SAASnlE,OAAQH,IAAK,CAC9C,IAAI+1E,EAAUnO,EAAQtC,SAAStlE,GAC3BY,EAAQiC,EAAO7C,GACC,EAAhB+1E,EAAQhuE,QACRulG,GA73mBe5rG,EA63mByBq0E,EAAQ5D,gBA13mBzD,cAGX,SAASo7B,EAAoBliE,GACzB,OAAOA,EAAM54B,QAAQ4lB,GAAmB,WAEpC,IADA,IAAI73B,KACK4B,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpC5B,EAAE4B,GAAMlC,UAAUkC,GAEtB,MAAO,IAAM5B,EAAE,GAAGo0B,gBAVf24E,CAAoB7rG,EAAK+Q,QAAQ,QAAS,QA43mB7B6lB,GAA2B13B,IAGvC,IAAIorE,EAAQpE,EAAQn4D,OAChBohB,EAAK2yC,GAAcjgD,EAAMyoD,EAAMtoD,WAAWyiD,cAC9C,GAAK6F,EAAM7vD,QAAQza,KAMf,IAAK,IAAIilC,KAAQ2mE,EAEA,OADT1sG,EAAQ0sG,EAAc3mE,IAEtBpjB,EAAK6a,SAAS6b,aAAappB,EAAI8V,EAAM/lC,GAGrC2iB,EAAK6a,SAASlN,gBAAgBL,EAAI8V,QAV1CpjB,EAAK6a,SAASkL,SAASzY,EAAI,YAAcre,KAAK7M,UAAU2nG,EAAe,KAAM,KAr4mB7F,IAAmC5rG,EAs5mBnC,SAASwrG,GAAwB3pF,EAAMqkD,EAASggC,EAAU/kG,GACtD8lG,GAAmBtoG,WAAM,EAAQe,GAAUmiB,EAAMqkD,EAASggC,GAAW/kG,IAEzE,SAASkqG,GAAyBxpF,EAAMG,GACpC,IAAK,IAAI1jB,EAAI0jB,EAAW1jB,EAAIujB,EAAKxa,IAAIk1B,MAAM99B,OAAQH,IAAK,CACpD,IAAI4nE,EAAUrkD,EAAKxa,IAAIk1B,MAAMj+B,GAC7B,GAAoB,MAAhB4nE,EAAQ7/D,OAAqC6/D,EAAQtC,UAAYsC,EAAQtC,SAASnlE,OAClF,OAAOH,EAGf,OAAO,KAEX,SAASmtG,GAA0B5pF,EAAMG,GACrC,IAAK,IAAI1jB,EAAI0jB,EAAW1jB,EAAIujB,EAAKxa,IAAIk1B,MAAM99B,OAAQH,IAAK,CACpD,IAAI4nE,EAAUrkD,EAAKxa,IAAIk1B,MAAMj+B,GAC7B,GAAqB,EAAhB4nE,EAAQ7/D,OAAkC6/D,EAAQtC,UAAYsC,EAAQtC,SAASnlE,OAChF,OAAOH,EAGf,OAAO,MA5HX,SAAWsrG,GACPA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAA2B,cAAI,GAAK,gBAChDA,EAAYA,EAA4B,eAAI,GAAK,iBACjDA,EAAYA,EAAqB,QAAI,GAAK,UAC1CA,EAAYA,EAAyB,YAAI,GAAK,cALlD,CAMGA,KAAgBA,QAwHnB,IAAId,GAA+B,WAC/B,SAASA,EAAcjnF,EAAMG,GACzB7kB,KAAK0kB,KAAOA,EACZ1kB,KAAK6kB,UAAYA,EACA,MAAbA,IACA7kB,KAAK6kB,UAAYA,EAAY,GAEjC7kB,KAAK+oE,QAAUrkD,EAAKxa,IAAIk1B,MAAMva,GAG9B,IAFA,IAAIsoD,EAAQntE,KAAK+oE,QACb4lC,EAASjqF,EACNyoD,GAAiD,IAAzB,EAAdA,EAAMjkE,QACnBikE,EAAQA,EAAMv8D,OAElB,IAAKu8D,EACD,MAAQA,GAASwhC,GACbxhC,EAAQ/F,GAAaunC,GACrBA,EAASA,EAAO/9F,OAGxB5Q,KAAKmtE,MAAQA,EACbntE,KAAK2uG,OAASA,EA+GlB,OA7GAvuG,OAAOwD,eAAe+nG,EAAc9qG,UAAW,gBAC3CyI,IAAK,WAED,OAAOq7D,GAAc3kE,KAAK2uG,OAAQ3uG,KAAKmtE,MAAMtoD,WAAW4c,eAAiBzhC,KAAK0kB,MAElFpP,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+nG,EAAc9qG,UAAW,YAC3CyI,IAAK,WAAc,OAAOolE,GAAiB1uE,KAAK2uG,OAAQ3uG,KAAKmtE,QAC7D73D,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+nG,EAAc9qG,UAAW,aAC3CyI,IAAK,WAAc,OAAOtJ,KAAK4uG,aAAaryF,WAC5CjH,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+nG,EAAc9qG,UAAW,WAC3CyI,IAAK,WAAc,OAAOtJ,KAAK4uG,aAAan7F,SAC5C6B,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+nG,EAAc9qG,UAAW,kBAC3CyI,IAAK,WACD,IAAI0J,KACJ,GAAIhT,KAAKmtE,MACL,IAAK,IAAIhsE,EAAInB,KAAKmtE,MAAMtoD,UAAY,EAAG1jB,GAAKnB,KAAKmtE,MAAMtoD,UAAY7kB,KAAKmtE,MAAMlE,WAAY9nE,IAAK,CAC3F,IAAI0tG,EAAW7uG,KAAK2uG,OAAOzkG,IAAIk1B,MAAMj+B,GAChB,MAAjB0tG,EAAS3lG,OACT8J,EAAO3Q,KAAKwsG,EAAS78F,SAAS9M,OAElC/D,GAAK0tG,EAAS5lC,WAGtB,OAAOj2D,GAEXsC,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+nG,EAAc9qG,UAAW,cAC3CyI,IAAK,WACD,IAAI2+D,KACJ,GAAIjoE,KAAKmtE,MAAO,CACZ2hC,GAAkB9uG,KAAK2uG,OAAQ3uG,KAAKmtE,MAAOlF,GAC3C,IAAK,IAAI9mE,EAAInB,KAAKmtE,MAAMtoD,UAAY,EAAG1jB,GAAKnB,KAAKmtE,MAAMtoD,UAAY7kB,KAAKmtE,MAAMlE,WAAY9nE,IAAK,CAC3F,IAAI0tG,EAAW7uG,KAAK2uG,OAAOzkG,IAAIk1B,MAAMj+B,GAChB,MAAjB0tG,EAAS3lG,OACT4lG,GAAkB9uG,KAAK2uG,OAAQE,EAAU5mC,GAE7C9mE,GAAK0tG,EAAS5lC,YAGtB,OAAOhB,GAEX3yD,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+nG,EAAc9qG,UAAW,0BAC3CyI,IAAK,WACD,IAAI8jE,EA6DhB,SAAS2hC,EAAgBrqF,GACrB,KAAOA,IAAS+iD,GAAgB/iD,IAC5BA,EAAOA,EAAK9T,OAEhB,OAAI8T,EAAK9T,OACE+zD,GAAcjgD,EAAK9T,OAAQw2D,GAAa1iD,GAAMG,WAElD,KApEckqF,CAAgB/uG,KAAK4uG,cAClC,OAAOxhC,EAASA,EAAO9F,mBAAgBphE,GAE3CoP,YAAY,EACZC,cAAc,IAElBnV,OAAOwD,eAAe+nG,EAAc9qG,UAAW,cAC3CyI,IAAK,WACD,OAA4B,EAArBtJ,KAAK+oE,QAAQ7/D,MAA2Bm+D,GAAWrnE,KAAK0kB,KAAM1kB,KAAK+oE,SACtE1B,GAAWrnE,KAAK2uG,OAAQ3uG,KAAKmtE,QAErC73D,YAAY,EACZC,cAAc,IAElBo2F,EAAc9qG,UAAUqjE,SAAW,SAAUh1C,GAEzC,IADA,IAII8/E,EACAC,EALAjrG,KACKT,EAAK,EAAGA,EAAKlC,UAAUC,OAAQiC,IACpCS,EAAOT,EAAK,GAAKlC,UAAUkC,GAIN,EAArBvD,KAAK+oE,QAAQ7/D,OACb8lG,EAAahvG,KAAK0kB,KAAKxa,IACvB+kG,EAAejvG,KAAK+oE,QAAQlkD,YAG5BmqF,EAAahvG,KAAK2uG,OAAOzkG,IACzB+kG,EAAejvG,KAAKmtE,MAAMtoD,WAI9B,IAAIqqF,EAoBZ,SAASC,EAAmBxC,EAAY9nF,GAEpC,IADA,IAAIqqF,GAAmB,EACd/tG,EAAI,EAAGA,GAAK0jB,EAAW1jB,IAER,EADNwrG,EAAWvtE,MAAMj+B,GACnB+H,OACRgmG,IAGR,OAAOA,EA5BmBC,CAAmBH,EAAYC,GACjDG,GAAuB,EAW3BJ,EAAW3vG,QAVM,WACb,IAAIgE,EAEJ,QADA+rG,IAC4BF,GAChB7rG,EAAK6rB,EAAQ5sB,OAAOmB,KAAKjC,MAAM6B,EAAId,GAAU2sB,GAAUlrB,IAGxDgiE,KAIXopC,EAAsBF,IACtBhgF,EAAQ5sB,MAAM,qEACd4sB,EAAQ5sB,MAAMd,MAAM0tB,EAAS3sB,EAASyB,MAGvC2nG,EAnIuB,GAwJlC,SAASmD,GAAkBpqF,EAAMqkD,EAASd,GACtC,IAAK,IAAIonC,KAAWtmC,EAAQd,WACxBA,EAAWonC,GAAWlI,GAAcziF,EAAMqkD,EAASA,EAAQd,WAAWonC,IAG9E,SAAS7C,GAAqBvrE,EAAQt5B,EAAIhI,EAAM2D,GAC5C,IAAIgsG,EAAY/B,GACZ7jF,EAAU8jF,GACV+B,EAAe9B,GACnB,IACIF,GAAiBtsE,EACjB,IAAIh2B,EAAStD,EAAGnG,MAAM7B,EAAM2D,GAI5B,OAHAkqG,GAAe9jF,EACf+jF,GAAoB8B,EACpBhC,GAAiB+B,EACVrkG,EAEX,MAAO9I,GACH,GAnzTR,SAASqtG,EAAiBxrC,GACtB,QAASj1C,GAAgBi1C,GAkzTjBwrC,CAAiBrtG,KAAOqrG,GACxB,MAAMrrG,EAEV,MAx0TR,SAASstG,EAAsBzrC,EAAKvwD,GAOhC,OANMuwD,aAAep+D,QAGjBo+D,EAAM,IAAIp+D,MAAMo+D,EAAI78D,aAExB88D,GAAiBD,EAAKvwD,GACfuwD,EAi0TGyrC,CAAsBttG,EAAGutG,OAGvC,SAASA,KACL,OAAOlC,GAAe,IAAI7B,GAAc6B,GAAcC,IAAqB,KAE/E,IAAIpB,GAAuC,WACvC,SAASA,EAAsBx9B,GAC3B7uE,KAAK6uE,SAAWA,EAqBpB,OAnBAw9B,EAAsBxrG,UAAUw/B,eAAiB,SAAU/iB,EAASqyF,GAChE,OAAO,IAAIC,GAAe5vG,KAAK6uE,SAASxuC,eAAe/iB,EAASqyF,KAEpEtD,EAAsBxrG,UAAU22C,MAAQ,WAChCx3C,KAAK6uE,SAASr3B,OACdx3C,KAAK6uE,SAASr3B,SAGtB60D,EAAsBxrG,UAAU4lB,IAAM,WAC9BzmB,KAAK6uE,SAASpoD,KACdzmB,KAAK6uE,SAASpoD,OAGtB4lF,EAAsBxrG,UAAUgvG,kBAAoB,WAChD,OAAI7vG,KAAK6uE,SAASghC,kBACP7vG,KAAK6uE,SAASghC,oBAElB96D,QAAQj9B,QAAQ,OAEpBu0F,EAvB+B,GAyBtCuD,GAAgC,WAChC,SAASA,EAAe/gC,GACpB7uE,KAAK6uE,SAAWA,EAShB7uE,KAAK8vG,oBAAsBJ,GAC3B1vG,KAAKib,KAAOjb,KAAK6uE,SAAS5zD,KAoI9B,OAlIA20F,EAAe/uG,UAAU8kE,mBAAqB,SAAU7M,GAAiB,OAAO94D,KAAK8vG,oBAAoBh3C,IACzG82C,EAAe/uG,UAAUmhC,YAAc,SAAU7L,IAzwErD,SAAS45E,EAAyB55E,GAC9BsuE,GAAuBnlC,OAAOnpC,EAAKsgC,YAywE/Bs5C,CAAyBrL,GAAavuE,IAClCn2B,KAAK6uE,SAAS7sC,aACdhiC,KAAK6uE,SAAS7sC,YAAY7L,IAGlCy5E,EAAe/uG,UAAU+iC,QAAU,WAAc5jC,KAAK6uE,SAASjrC,WAC/DgsE,EAAe/uG,UAAU4vB,cAAgB,SAAU5tB,EAAMo6C,GACrD,IAAIjrB,EAAKhyB,KAAK6uE,SAASp+C,cAAc5tB,EAAMo6C,GACvC+yD,EAAWhwG,KAAK2lE,mBAAmB3zC,GACvC,GAAIg+E,EAAU,CACV,IAAIC,EAAU,IAAIhO,GAAuBjwE,EAAI,KAAMg+E,GACnDC,EAAQptG,KAAOA,EACf8hG,GAAesL,GAEnB,OAAOj+E,GAEX49E,EAAe/uG,UAAUk3C,cAAgB,SAAUh2C,GAC/C,IAAI4kD,EAAU3mD,KAAK6uE,SAAS92B,cAAch2C,GACtCiuG,EAAWhwG,KAAK2lE,mBAAmBhf,GAIvC,OAHIqpD,GACArL,GAAe,IAAI5C,GAAoBp7C,EAAS,KAAMqpD,IAEnDrpD,GAEXipD,EAAe/uG,UAAUqhC,WAAa,SAAUngC,GAC5C,IAAIsR,EAAOrT,KAAK6uE,SAAS3sC,WAAWngC,GAChCiuG,EAAWhwG,KAAK2lE,mBAAmBtyD,GAIvC,OAHI28F,GACArL,GAAe,IAAI5C,GAAoB1uF,EAAM,KAAM28F,IAEhD38F,GAEXu8F,EAAe/uG,UAAU6vB,YAAc,SAAU9f,EAAQ8xF,GACrD,IAAIuN,EAAUvL,GAAa9zF,GACvBs/F,EAAexL,GAAahC,GAC5BuN,GAAWC,GAAgBD,aAAmBhO,IAC9CgO,EAAQ/N,SAASgO,GAErBlwG,KAAK6uE,SAASn+C,YAAY9f,EAAQ8xF,IAEtCkN,EAAe/uG,UAAUgjC,aAAe,SAAUjzB,EAAQ8xF,EAAUD,GAChE,IAAIwN,EAAUvL,GAAa9zF,GACvBs/F,EAAexL,GAAahC,GAC5ByN,EAAazL,GAAajC,GAC1BwN,GAAWC,GAAgBD,aAAmBhO,IAC9CgO,EAAQpsE,aAAassE,EAAYD,GAErClwG,KAAK6uE,SAAShrC,aAAajzB,EAAQ8xF,EAAUD,IAEjDmN,EAAe/uG,UAAU6wB,YAAc,SAAU9gB,EAAQw/F,GACrD,IAAIH,EAAUvL,GAAa9zF,GACvBs/F,EAAexL,GAAa0L,GAC5BH,GAAWC,GAAgBD,aAAmBhO,IAC9CgO,EAAQv+E,YAAYw+E,GAExBlwG,KAAK6uE,SAASn9C,YAAY9gB,EAAQw/F,IAEtCR,EAAe/uG,UAAU46C,kBAAoB,SAAUqzB,EAAgBuhC,GACnE,IAAIr+E,EAAKhyB,KAAK6uE,SAASpzB,kBAAkBqzB,EAAgBuhC,GACrDL,EAAWN,KAIf,OAHIM,GACArL,GAAe,IAAI1C,GAAuBjwE,EAAI,KAAMg+E,IAEjDh+E,GAEX49E,EAAe/uG,UAAUu6C,aAAe,SAAUppB,EAAInvB,EAAMd,EAAOk7C,GAC/D,IAAIgzD,EAAUvL,GAAa1yE,GACvBi+E,GAAWA,aAAmBhO,KAE9BgO,EAAQ/9E,WADO+qB,EAAYA,EAAY,IAAMp6C,EAAOA,GACrBd,GAEnC/B,KAAK6uE,SAASzzB,aAAappB,EAAInvB,EAAMd,EAAOk7C,IAEhD2yD,EAAe/uG,UAAUwxB,gBAAkB,SAAUL,EAAInvB,EAAMo6C,GAC3D,IAAIgzD,EAAUvL,GAAa1yE,GACvBi+E,GAAWA,aAAmBhO,KAE9BgO,EAAQ/9E,WADO+qB,EAAYA,EAAY,IAAMp6C,EAAOA,GACrB,MAEnC7C,KAAK6uE,SAASx8C,gBAAgBL,EAAInvB,EAAMo6C,IAE5C2yD,EAAe/uG,UAAU+tC,SAAW,SAAU5c,EAAInvB,GAC9C,IAAIotG,EAAUvL,GAAa1yE,GACvBi+E,GAAWA,aAAmBhO,KAC9BgO,EAAQhsD,QAAQphD,IAAQ,GAE5B7C,KAAK6uE,SAASjgC,SAAS5c,EAAInvB,IAE/B+sG,EAAe/uG,UAAUguC,YAAc,SAAU7c,EAAInvB,GACjD,IAAIotG,EAAUvL,GAAa1yE,GACvBi+E,GAAWA,aAAmBhO,KAC9BgO,EAAQhsD,QAAQphD,IAAQ,GAE5B7C,KAAK6uE,SAAShgC,YAAY7c,EAAInvB,IAElC+sG,EAAe/uG,UAAU2nC,SAAW,SAAUxW,EAAIsc,EAAOvsC,EAAOmH,GAC5D,IAAI+mG,EAAUvL,GAAa1yE,GACvBi+E,GAAWA,aAAmBhO,KAC9BgO,EAAQ1vF,OAAO+tB,GAASvsC,GAE5B/B,KAAK6uE,SAASrmC,SAASxW,EAAIsc,EAAOvsC,EAAOmH,IAE7C0mG,EAAe/uG,UAAU2tC,YAAc,SAAUxc,EAAIsc,EAAOplC,GACxD,IAAI+mG,EAAUvL,GAAa1yE,GACvBi+E,GAAWA,aAAmBhO,KAC9BgO,EAAQ1vF,OAAO+tB,GAAS,MAE5BtuC,KAAK6uE,SAASrgC,YAAYxc,EAAIsc,EAAOplC,IAEzC0mG,EAAe/uG,UAAU0tC,YAAc,SAAUvc,EAAInvB,EAAMd,GACvD,IAAIkuG,EAAUvL,GAAa1yE,GACvBi+E,GAAWA,aAAmBhO,KAC9BgO,EAAQjY,WAAWn1F,GAAQd,GAE/B/B,KAAK6uE,SAAStgC,YAAYvc,EAAInvB,EAAMd,IAExC6tG,EAAe/uG,UAAUy7C,OAAS,SAAUz3C,EAAQ82C,EAAWyR,GAC3D,GAAsB,iBAAXvoD,EAAqB,CAC5B,IAAIorG,EAAUvL,GAAa7/F,GACvBorG,GACAA,EAAQjjD,UAAU3qD,KAAK,IAAIy/F,GAAcnmD,EAAWyR,IAG5D,OAAOptD,KAAK6uE,SAASvyB,OAAOz3C,EAAQ82C,EAAWyR,IAEnDwiD,EAAe/uG,UAAU+0B,WAAa,SAAUO,GAAQ,OAAOn2B,KAAK6uE,SAASj5C,WAAWO,IACxFy5E,EAAe/uG,UAAU6xB,YAAc,SAAUyD,GAAQ,OAAOn2B,KAAK6uE,SAASn8C,YAAYyD,IAC1Fy5E,EAAe/uG,UAAU4pC,SAAW,SAAUtU,EAAMp0B,GAAS,OAAO/B,KAAK6uE,SAASpkC,SAAStU,EAAMp0B,IAC1F6tG,EAhJwB,GAuL/BU,GAAkC,SAAU16C,GAE5C,SAAS06C,EAAiB7/B,EAAYI,EAAsB0/B,GACxD,IAAIx2F,EAGJ67C,EAAOr0D,KAAKvB,OAASA,KAIrB,OAHA+Z,EAAM02D,WAAaA,EACnB12D,EAAM82D,qBAAuBA,EAC7B92D,EAAMw2F,oBAAsBA,EACrBx2F,EAUX,OAnBArZ,EAAU4vG,EAAkB16C,GAW5B06C,EAAiBzvG,UAAUC,OAAS,SAAUuiE,GAC1CwnC,KAIA,IAAI3gG,EA7BZ,SAASsmG,EAAwBtmG,GAC7B,IAAI7D,EAAY9F,MAAM+X,KAAKpO,EAAI7D,WAC3B4kE,EAAU1qE,MAAM+X,KAAKpO,EAAI+gE,SACzBN,KACJ,IAAK,IAAIhlE,KAAOuE,EAAIygE,eAChBA,EAAehlE,GAAOuE,EAAIygE,eAAehlE,GAE7C,OACItG,QAAS6K,EAAI7K,QACbw/B,OAAQ30B,EAAI20B,OAAQx4B,UAAWA,EAAW4kE,QAASA,EAASN,eAAgBA,GAoBlE6lC,CAAwB9nC,GAAkB1oE,KAAKuwG,sBACzD,OAAOxrC,GAASI,kBAAkBnlE,KAAKywE,WAAYpN,GAAkB1yD,GAASG,KAAM9Q,KAAK6wE,qBAAsB3mE,IAE5GomG,EApB0B,CAqBnCt6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DF12D,EAAQ49F,eAAiBA,GACzB59F,EAAQs+F,eAAiBA,GACzBt+F,EAAQmxG,gBAxpHR,SAASA,KACD3W,KAAcA,GAAUl7D,WACxBk7D,GAAUl2D,WAupHlBtkC,EAAQo+F,YAAcA,GACtBp+F,EAAQ69F,YAAcA,GACtB79F,EAAQw/F,eAAiBA,GACzBx/F,EAAQ+9F,sBAAwBA,GAChC/9F,EAAQ29F,aAAeA,GACvB39F,EAAQoxG,eAlrpBR,SAASA,KACL,GAAI1gF,GACA,MAAM,IAAIpqB,MAAM,iDAEpBmqB,IAAW,GA+qpBfzwB,EAAQ2wB,UAAYA,GACpB3wB,EAAQg0F,OAASA,GACjBh0F,EAAQ20F,iBAAmBA,GAC3B30F,EAAQw0F,qBAAuBA,GAC/Bx0F,EAAQy0F,YAAcA,GACtBz0F,EAAQ00F,uBAAyBA,GACjC10F,EAAQmzF,gBAAkBA,GAC1BnzF,EAAQozF,sBAAwBA,GAChCpzF,EAAQwlG,aAAeA,GACvBxlG,EAAQulG,UAAYA,GACpBvlG,EAAQqxG,iBA13FR,SAASA,GAAiBC,GACtB,OAAOA,EAAS7pG,IAAI,SAAUirB,GAAM,OAAOA,EAAG8mC,iBA03FlDx5D,EAAQolG,aAAeA,GACvBplG,EAAQ06F,YAAcA,GACtB16F,EAAQs8F,oBAAsBA,GAC9Bt8F,EAAQuxG,qBAtwHR,SAASA,GAAqB5jG,GAC1B6uF,GAAqB7uF,GAswHzB3N,EAAQ2lG,aAAeA,GACvB3lG,EAAQ4lG,oBAAsBA,GAC9B5lG,EAAQ0lG,UAAYA,GACpB1lG,EAAQomG,kBAAoBA,GAC5BpmG,EAAQ22F,eAAiBA,GACzB32F,EAAQ62F,SAAWA,GACnB72F,EAAQg3F,kBAAoBA,GAC5Bh3F,EAAQo3F,gBAAkBA,GAC1Bp3F,EAAQ6K,KAAOA,EACf7K,EAAQgjF,aAAeA,GACvBhjF,EAAQ6vB,aAAeA,GACvB7vB,EAAQ+3B,UAAYA,GACpB/3B,EAAQiG,UAAYA,EACpBjG,EAAQwb,6BAA+BA,GACvCxb,EAAQ8b,aAAeA,GACvB9b,EAAQyb,gBAAkBA,GAC1Bzb,EAAQqY,MAAQA,GAChBrY,EAAQgc,UAAYA,GACpBhc,EAAQ+b,aAAeA,GACvB/b,EAAQgyF,UAAYA,GACpBhyF,EAAQ8xF,UAAYA,GACpB9xF,EAAQ0yF,YAAcA,GACtB1yF,EAAQ4yF,aAAeA,GACvB5yF,EAAQuyF,MAAQA,GAChBvyF,EAAQyyF,OAASA,GACjBzyF,EAAQkyF,KAAOA,GACflyF,EAAQgzF,SAAWA,GACnBhzF,EAAQwxG,wBA11pBJjuG,KAAM,mBA21pBVvD,EAAQyxG,kBAn1pBJluG,KAAM,oBAo1pBVvD,EAAQm6D,QAAUA,GAClBn6D,EAAQy6D,QAAUA,GAClBz6D,EAAQyG,iBAAmBA,EAC3BzG,EAAQ6G,eAAiBA,EACzB7G,EAAQkI,WAAaA,EACrBlI,EAAQoI,kBAAoBA,EAC5BpI,EAAQmQ,WAAaA,GACrBnQ,EAAQmR,SAAWA,GACnBnR,EAAQqR,SAAWA,GACnBrR,EAAQ2J,OAASA,EACjB3J,EAAQ0xG,QAAU/nG,EAClB3J,EAAQuY,mBAAqBA,GAC7BvY,EAAQoX,0BAA4BA,GACpCpX,EAAQ2V,cAAgBA,GACxB3V,EAAQ6Q,eAAiBA,GACzB7Q,EAAQ2F,OAASA,EACjB3F,EAAQ6F,SAAWA,EACnB7F,EAAQ8F,KAAOA,EACf9F,EAAQ+F,SAAWA,EACnB/F,EAAQgG,KAAOA,EACfhG,EAAQ03F,OAASA,GACjB13F,EAAQ2xG,YAAclX,GACtBz6F,EAAQ45D,oBAAsBA,GAC9B55D,EAAQg6D,SAAWA,GACnBh6D,EAAQo6D,UAAYA,GACpBp6D,EAAQk6D,iBAAmBA,GAC3Bl6D,EAAQi6D,aAAeA,GACvBj6D,EAAQm2F,iBAAmBA,GAC3Bn2F,EAAQ01F,SAAWA,GACnB11F,EAAQo2F,gBAAkBA,GAC1Bp2F,EAAQ+0F,6BAA+BA,GACvC/0F,EAAQw1D,iBAAmBA,GAC3Bx1D,EAAQ4xG,kBAAoBp8C,GAC5Bx1D,EAAQu1D,aAAeA,GACvBv1D,EAAQg2D,yBAA2BA,GACnCh2D,EAAQu5D,WAAaA,GACrBv5D,EAAQ02D,gBAAkBA,GAC1B12D,EAAQy2D,YAAcA,GACtBz2D,EAAQqtF,sBAAwBA,GAChCrtF,EAAQ0tF,iBAAmBA,GAC3B1tF,EAAQ4jF,UAAYA,GACpB5jF,EAAQwhG,uBAAyBA,GACjCxhG,EAAQohG,6BAA+BA,GACvCphG,EAAQsiE,YAAcA,GACtBtiE,EAAQ0iE,iBAAmBA,GAC3B1iE,EAAQuiG,gBAAkBA,GAC1BviG,EAAQ22D,QAAU2rC,GAClBtiG,EAAQ4hE,kBAAoBA,GAC5B5hE,EAAQi7D,sBAAwBA,GAChCj7D,EAAQohE,gBAAkBA,GAC1BphE,EAAQ0hE,gBAAkBA,GAC1B1hE,EAAQ+uD,aAAeA,GACvB/uD,EAAQq7B,aAAeA,GACvBr7B,EAAQylG,aAAeA,GACvBzlG,EAAQ6xG,0BAA4BnU,GACpC19F,EAAQ8xG,wBAA0B7d,GAClCj0F,EAAQ+xG,wBAA0B3vC,GAClCpiE,EAAQgyG,wBAA0B3vC,GAClCriE,EAAQiyG,cAAgBt3E,GACxB36B,EAAQkyG,oBAAsBr3E,GAC9B76B,EAAQmyG,kCAlkuBR,SAASC,GAAiCC,GACtC,OAAkC,MAA3BA,GACHA,IAA4BryG,EAAQmY,wBAAwBtO,SAikuBpE7J,EAAQsyG,SAAW1d,GACnB50F,EAAQuyG,oBAAsBlpG,EAC9BrJ,EAAQwyG,kBAAoBvrG,EAC5BjH,EAAQyyG,UAAYvhD,GACpBlxD,EAAQ0yG,aAh6E4B,EAi6EpC1yG,EAAQ2yG,iCAAmC18C,GAC3Cj2D,EAAQ4yG,0CAA4Cv1F,GACpDrd,EAAQ6yG;;;;;;;;AA1guBR,SAASC,GAA0BC,GAE/B,IAAIC,KAEAC,EAAS,IAAI3gG,IACjB,SAAS4gG,EAAsB1/E,GAC3B,IAAI+jE,EAAU0b,EAAOjpG,IAAIwpB,GACzB,IAAK+jE,EAAS,CACV,IAAI4b,EAAOJ,EAAiBv/E,GAC5By/E,EAAO1gG,IAAIihB,EAAK+jE,EAAU4b,EAAKp5E,KAAKxc,KACpCy1F,EAAWjwG,KAAKw0F,GAEpB,OAAOA,EAuBX,OArBAz6E,GAAiC1P,QAAQ,SAAU6P,GAC3CA,EAAUC,aACVg2F,EAAsBj2F,EAAUC,aAAa6c,KAAK,SAAU5c,GACxDF,EAAUE,SAAWA,IAG7B,IAAIC,EAAYH,EAAUG,UACtB6D,EAAShE,EAAUgE,SAAWhE,EAAUgE,WACxCmyF,EAAcn2F,EAAUgE,OAAOjf,OACnCob,GAAaA,EAAUhQ,QAAQ,SAAUimG,EAAUpuG,GAC/Cgc,EAAOle,KAAK,IACZmwG,EAAsBG,GAAUt5E,KAAK,SAAUiV,GAC3C/tB,EAAOmyF,EAAcnuG,GAAS+pC,EAC9B5xB,EAAU6lB,OAAO7lB,EAAUrV,QAAQsrG,GAAW,GACtB,GAApBj2F,EAAUpb,SACVib,EAAUG,eAAYxW,SAKtCyW,KACOo4B,QAAQo+C,IAAImf,GAAYj5E,KAAK,WAAc,OAAO,QAw+tB7D/5B,EAAQszG,wBAA0BloG,EAClCpL,EAAQuzG,iBAAmBx5C,GAC3B/5D,EAAQwzG,eAAiBp8E,GACzBp3B,EAAQyzG,gBAAkBt7E,GAC1Bn4B,EAAQ0zG,cAAgBngF,GACxBvzB,EAAQ2zG,QAAUprG,EAClBvI,EAAQ4zG,gBAAkBp5E,GAC1Bx6B,EAAQ6zG,WAAarsG,EACrBxH,EAAQ8zG,eAAiBxwG,EACzBtD,EAAQ+zG,cAAgB/5E,GACxBh6B,EAAQg0G,WAAal6E,GACrB95B,EAAQi0G,gBA3OR,SAASjuC,KAEL,OADAulC,KACO9lC,GAASO,kBA0OpBhmE,EAAQk0G,sBAAwB3I,GAChCvrG,EAAQm0G,uBAjPR,SAASpuC,GAAsBqoC,EAAMxqC,GAEjC,OADA2nC,KACO9lC,GAASM,sBAAsBqoC,EAAMxqC,IAgPhD5jE,EAAQo0G;;;;;;;;AAtPR,SAAStuC,GAAiB8nC,GAEtB,OADArC,KACO9lC,GAASK,iBAAiB8nC,IAqPrC5tG,EAAQq0G,uCAAyC/gC,GACjDtzE,EAAQinF,YAActkE,GACtB3iB,EAAQknF,iBAAmBvoE,GAC3B3e,EAAQmnF,iBAAmBtkE,GAC3B7iB,EAAQqnF,YAAcvkE,GACtB9iB,EAAQonF,gBAAkBllE,GAC1BliB,EAAQs0G,eA3tcR,SAAS38C,GAAc16C,GAEnBwsC,GADW7rB,GAA2B3gB,GACVA,IA0tchCjd,EAAQu0G,iBAz4aR,SAASC,GAAgBp+C,EAA8E1vD,QACtF,IAATA,IAAmBA,MAGvB,IAAIs5B,EAAkBt5B,EAAKs5B,iBAAmBc,GAC1CrJ,EAAY/wB,EAAK+wB,WAAa,KAC9B+2B,EAAezsC,GAAgBq0C,GAC/B5H,EAAatnD,MAAQkvD,IACrB5H,EAAatnD,KAAOkvD,GAExB,IAQIn5C,EAPAg4D,EAAYj5B,GAAkBhc,EAAiBt5B,EAAKuI,MADrCu/C,EAAa5tC,UAAU,GAAG,IAEzCs0D,EAAY1mB,EAAajuC,OAAS,IAClC,IACAunB,EAAc6mB,GAAkBjoD,EAAK6iD,UAAW7iD,EAAKwhC,eACrDjI,EAAWD,EAAgBe,eAAek0C,EAAWzmB,GACrDhrB,EAAWqT,GAAY,KAAMuE,IAAa,EAAG,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,MAAOtT,EAAaotC,EAAW,KAAM,KAAMl1C,EAAiBC,OAAUr5B,EAAWF,EAAK4C,UAAY,MAC7K8gB,EAAUH,GAAUuZ,EAAU,MAElC,IACQxD,EAAgBkY,OAChBlY,EAAgBkY,QACpB,IAAI/V,EAAgBksB,GAAwB4mB,EAAWzmB,EAAchrB,EAAUxD,EAAiBC,EAAUxI,GAC1Gxa,EAAYsxC,GAAoBpsB,EAAeqsB,EAAchrB,EAAUsE,EAAaphC,EAAK+nD,cAAgB,MACzG3H,GAActjB,EAAUrB,GACxBuT,GAAuBlS,GACvBA,EAASngB,MAAU,EACnBqyB,GAAuBlS,GAE3B,QACIlZ,GAAUF,GACN4V,EAAgB7Y,KAChB6Y,EAAgB7Y,MAExB,OAAOlK,GAw2aXjd,EAAQy0G,yBAA2BngC,GACnCt0E,EAAQ00G,qBAAuBn/B,GAC/Bv1E,EAAQsnF,iBAAmBr7B,GAC3BjsD,EAAQwnF,iBAAmBt7B,GAC3BlsD,EAAQyK,cAAgB8kB,GACxBvvB,EAAQunF,qBAAuB/3D,GAC/BxvB,EAAQ6sF,mBAAqB/qE,GAC7B9hB,EAAQynF,sBAAwBV,GAChC/mF,EAAQ2nF,kBAAoBtyB,GAC5Br1D,EAAQ4nF,0BAA4B73B,GACpC/vD,EAAQ0nF,oBAAsBv4B,GAC9BnvD,EAAQ20G,uBAAyB/lD,GACjC5uD,EAAQ40G,oBAAsBh0B,GAC9B5gF,EAAQ60G,WAAahrD,GACrB7pD,EAAQ80G,iBAAmB/zB,GAC3B/gF,EAAQ+0G,WAAan5E,GACrB57B,EAAQ+nF,WAAa3mD,GACrBphC,EAAQgoF,aAAevwC,GACvBz3C,EAAQyoF,cAAgBnwC,GACxBt4C,EAAQmoF,eAAiB5wC,GACzBv3C,EAAQooF,iBAAmB/vC,GAC3Br4C,EAAQqoF,cAAgBjwC,GACxBp4C,EAAQ2oF,SAAW3qE,GACnBhe,EAAQoqF,UAAYhuC,GACpBp8C,EAAQ+rF,MAAQh4E,GAChB/T,EAAQisF,mBAAqBxkC,GAC7BznD,EAAQsqF,YAAcjoD,GACtBriC,EAAQ8nF,MAAQ3jF,GAChBnE,EAAQ0pF,gBAAkBp/B,GAC1BtqD,EAAQ2pF,gBAAkBl/B,GAC1BzqD,EAAQ4pF,gBAAkBh/B,GAC1B5qD,EAAQ6pF,gBAAkB9+B,GAC1B/qD,EAAQ8pF,gBAAkB5+B,GAC1BlrD,EAAQ+pF,gBAAkB1+B,GAC1BrrD,EAAQgqF,gBAAkBx+B,GAC1BxrD,EAAQiqF,gBAAkBt+B,GAC1B3rD,EAAQkqF,gBAAkB7/B,GAC1BrqD,EAAQ0qF,WAAalI,GACrBxiF,EAAQ2qF,WAAa/H,GACrB5iF,EAAQ4qF,WAAa/H,GACrB7iF,EAAQ6qF,WAAa/H,GACrB9iF,EAAQ8qF,WAAa/H,GACrB/iF,EAAQ8oF,eAAiB7H,GACzBjhF,EAAQ+oF,eAAiB1H,GACzBrhF,EAAQgpF,eAAiBzH,GACzBvhF,EAAQipF,eAAiBzH,GACzBxhF,EAAQkpF,eAAiBzH,GACzBzhF,EAAQmpF,eAAiBzH,GACzB1hF,EAAQopF,eAAiBxH,GACzB5hF,EAAQqpF,eAAiBvH,GACzB9hF,EAAQspF,eAAiBtH,GACzBhiF,EAAQupF,eAAiBrH,GACzBliF,EAAQwpF,gBAAkBl9B,GAC1BtsD,EAAQg1G,eAAiB3nD,GACzBrtD,EAAQi1G,gBAAkB1nD,GAC1BvtD,EAAQypF,aAAe1gE,GACvB/oB,EAAQioF,uBAAyB3gC,GACjCtnD,EAAQkoF,qBAAuB3gC,GAC/BvnD,EAAQirF,cAAgB1E,GACxBvmF,EAAQkrF,WAAarqE,GACrB7gB,EAAQmrF,iBAAmB1E,GAC3BzmF,EAAQorF,oBAAsBvE,GAC9B7mF,EAAQqrF,eAAiB3E,GACzB1mF,EAAQsrF,cAAgB3E,GACxB3mF,EAAQurF,kBAAoBzE,GAC5B9mF,EAAQ0oF,YAAcnwC,GACtBv4C,EAAQuqF,iBAAmBzsC,GAC3B99C,EAAQwqF,gCAAkCvsC,GAC1Cj+C,EAAQyqF,gCAAkC/tC,GAC1C18C,EAAQ+qF,eAAiB3iC,GACzBpoD,EAAQwrF,WAAa1/B,GACrB9rD,EAAQsoF,gBAAkB1/D,GAC1B5oB,EAAQuoF,iBAAmB1/D,GAC3B7oB,EAAQwoF,eAAiBz+B,GACzB/pD,EAAQ6nF,kBAAoBnqC,GAC5B19C,EAAQ4oF,uBAAyBpwC,GACjCx4C,EAAQ6oF,qBAAuB7vC,GAC/Bh5C,EAAQyrF,gBAAkB9rC,GAC1B3/C,EAAQ0rF,kBAAoB7oC,GAC5B7iD,EAAQ2rF,mBAAqBjnC,GAC7B1kD,EAAQ4rF,kBAAoB3nC,GAC5BjkD,EAAQ6rF,qBAAuB7oC,GAC/BhjD,EAAQmqF,kBAAoB7lC,GAC5BtkD,EAAQgsF,aAAejmC,GACvB/lD,EAAQ8rF,UAAY3uE,GACpBnd,EAAQksF,iBAAmBhkC,GAC3BloD,EAAQk1G,OAASpmE,GACjB9uC,EAAQqqF,MAAQr+B,GAChBhsD,EAAQgrF,MAAQ5I,GAChBpiF,EAAQm1G,cAh2aR,SAASC,GAAan4F,GAClB,OAAOkO,GAAelO,GAAWqsC,OAg2arCtpD,EAAQmsF,MAAQnP,GAChBh9E,EAAQosF,gBAAkBnP,GAC1Bj9E,EAAQqsF,SAAW9O,GACnBv9E,EAAQssF,WAAalT,GACrBp5E,EAAQusF,SAAW9Q,GACnBz7E,EAAQwsF,WAAa/O,GACrBz9E,EAAQysF,iBAAmB9R,GAC3B36E,EAAQq1G;;;;;;;;AA/0NR,SAASC,GAAiBpuG,EAAMoF,EAAYL,EAAgBe,GACxD,IAAIjJ,EACAwxG,EAAQruG,EACO,OAAfoF,IACIipG,EAAMp0G,eAAe,oBAAsCyF,IAArB2uG,EAAMjpG,YAC3CvI,EAAKwxG,EAAMjpG,YAAYvJ,KAAKb,MAAM6B,EAAId,EAASqJ,IAGhDipG,EAAMjpG,WAAaA,GAGJ,OAAnBL,IAIAspG,EAAMtpG,eAAiBA,GAEJ,OAAnBe,IAMIuoG,EAAMvoG,oBADmBpG,IAAzB2uG,EAAMvoG,eACiBvL,KAAa8zG,EAAMvoG,eAAgBA,GAGnCA,IAszNnChN,EAAQ0sF,eAAiB3uE,GACzB/d,EAAQ2sF,iBAAmBxuE,GAC3Bne,EAAQ4sF,aAAexuE,GACvBpe,EAAQw1G,kBAAoB1lB,GAC5B9vF,EAAQy1G,kBAAoBjlB,GAC5BxwF,EAAQ01G,iBAAmBvnB,GAC3BnuF,EAAQ21G,qBAAuBvnB,GAC/BpuF,EAAQ41G,4BAA8B/mB,GACtC7uF,EAAQ61G,yBAn5KR,SAASC,KACW,IAAIxjG,IACD,IAAIA,IACvBs7E,GAAY5rF,OAAS,GAi5KzBhC,EAAQ+1G,yCAA2CjoB,GACnD9tF,EAAQg2G,qBAAuBpnB,GAC/B5uF,EAAQi2G,aAAepkB,GACvB7xF,EAAQ8sF,cAAgBr0D,GACxBz4B,EAAQ+sF,eAAiBj0D,GACzB94B,EAAQgtF,uBAAyBnzD,GACjC75B,EAAQktF,gBAAkB3zD,GAC1Bv5B,EAAQmtF,aAAel0D,GACvBj5B,EAAQitF,qBAAuB7zD,GAC/Bp5B,EAAQotF,0BAA4B1zD,GACpC15B,EAAQk2G,6BA9gqBR,SAASC,GAA4BC,GACjC,OAAO9lF,GAA8B8lF,EAAa,SA8gqBtDp2G,EAAQq2G,8BAngqBR,SAASC,GAA6BC,GAClC,OAAOjmF,GAA8BimF,EAAc,UAmgqBvDv2G,EAAQw2G,+BAx/pBR,SAASC,GAA8BC,GACnC,OAAOpmF,GAA8BomF,EAAe,WAw/pBxD12G,EAAQ22G,4BA7+pBR,SAASC,GAA2BC,GAChC,OAAOvmF,GAA8BumF,EAAY,QA6+pBrD72G,EAAQ82G,oCAl+pBR,SAASC,GAAmCC,GACxC,OAAO1mF,GAA8B0mF,EAAoB,gBAk+pB7Dh3G,EAAQi3G,aAAev6E,GACvB18B,EAAQk3G,eAAiBr6F,GACzB7c,EAAQm3G,kBAAoBh7F,GAC5Bnc,EAAQo3G,kBAAoB/6F,GAC5Brc,EAAQq3G,aAAe96F,GACvBvc,EAAQs3G,eAAiB76F,GACzBzc,EAAQu3G,aAAe56F,GACvB3c,EAAQw3G,mBAAqBrwG,EAC7BnH,EAAQy3G,iBAAmBpwG,EAC3BrH,EAAQ03G,mBA/llBR,SAASC,GAAkBngG,EAAW/U,GAClC,OAAO,IAAIyjC,GAAmB1uB,EAAW/U,IA+llB7CzC,EAAQ43G,WAt5bR,SAASC,GAAU7vE,EAAK1B,GACpB,IAAInyB,EAAUuoB,GAAYsL,GAC1B,GAAK7zB,EAAL,CAIA,IAAIgsE,EAAahsE,EAAQmpB,OACrBvY,EAAQ5Q,EAAQ4Q,MAChB8iB,EA1hJR,SAASiwE,EAAyBvyG,EAAQ4O,GAEtC,KADAA,EAAUA,GAAWuoB,GAAYn3B,IAG7B,OAAO,KAEX,IACI6iC,EAAiBnB,GADkB9yB,EAAQoR,UAAnCpR,EAAQ4Q,OAEpB,OAAOojB,GAAiBC,IAAmBC,GAAmBD,GAkhJ1C0vE,CAAyB33B,EAAYhsE,GACrD2zB,EAAc3c,GAAepG,GACjC6iB,GAAkBC,EAAeC,EAAaq4C,EAAY75C,EAAQ,EAAG0B,GACrEgc,GAAalc,EAAa,KA44b9B9nC,EAAQ+3G,YAActrD,GACtBzsD,EAAQg4G,mCAAqCza,GAC7Cv9F,EAAQi4G,4BAA8Bza,GACtCx9F,EAAQk4G,qCAAuCrlB,GAC/C7yF,EAAQm4G,qCAAuCrlB,GAC/C9yF,EAAQo4G,gCAAkCrlB,GAC1C/yF,EAAQq4G,oCAAsCnlB,GAC9ClzF,EAAQs4G,yBAA2BtT,GACnChlG,EAAQu4G,sCAAwCloG,GAChDrQ,EAAQw4G,gCAzkF4B,EA0kFpCx4G,EAAQy4G,+CAAiD32C,GACzD9hE,EAAQ04G,uCAAyCxjB,GACjDl1F,EAAQ24G,wCAA0CvjB,GAClDp1F,EAAQ44G,uDAAyDtjB,GACjEt1F,EAAQ64G,wDAA0DrjB,GAClEx1F,EAAQ84G,uCAAyCp/C,GACjD15D,EAAQ+4G,wCAA0Cv2C,GAClDxiE,EAAQg5G,8CAAgDp2C,GACxD5iE,EAAQi5G,qCAAuC3+C,GAC/Ct6D,EAAQk5G,6BAA+B1rB,GACvCxtF,EAAQm5G,mBAAqB/qD,GAC7BpuD,EAAQo5G,2BAvlbR,SAASC,KACAlrD,KACDA,IAAa,EACbC,GAAkB,eAAgBvB,IAClCuB,GAAkB,aAAcpB,IAChCoB,GAAkB,eAAgBX,IAClCW,GAAkB,mBAAoBnB,IACtCmB,GAAkB,iBAAkBb,IACpCa,GAAkB,cAAehB,IACjCgB,GAAkB,oBAAqBjB,IACvCiB,GAAkB,gBAAiBf,IACnCe,GAAkB,aAAc3B,IAChC2B,GAAkB,YAAavE,MA4kbvC7pD,EAAQs5G,gBAAkB9nD,GAC1BxxD,EAAQu5G,uBAptLR,SAASC,GAAsB5jG,EAAI7V,GAC/B,IAAI8Y,EAAW8yD,GAAQ3hE,IAAI4L,GAC3B03E,GAAwB13E,EAAIiD,GAAYA,EAASs4D,WAAYpxE,EAAQoxE,YACrExF,GAAQp5D,IAAIqD,EAAI7V,IAktLpBC,EAAQy5G,gBACRz5G,EAAQ05G,cACR15G,EAAQ25G;;;;;;;;AAhlFR,SAASvM,GAAUxjG,EAAO4+D,EAAmBqB,EAAgBF,EAAYrD,EAAaszC,GAClFhwG,GAAS,EACT,IAAI7F,EAAKwkE,GAAuBC,GAEhC,OAEIjjD,WAAY,EACZjU,OAAQ,KACRswB,aAAc,KACd9F,cAAe,EACf02C,aAAc,EAEd5oE,MAAOA,EACP0oE,YAAa,EACb7D,WAAY,EACZgE,iBAAkB,EAClBC,oBAAqB,EAAGjK,eAdyC1kE,EAAG0kE,eAcZC,gBAd0E3kE,EAAG2kE,gBAc3CC,WAdO5kE,EAAG4kE,WAcckB,eAAgBA,EAAgBF,WAAYA,EAC9JxC,YACAiD,aAAc,EACd9qD,WACAtB,SACIuyD,GAAI,KACJhtE,KAAM,KACNglC,MAAO,KAAMprB,SApBNy8F,EAAkBxwC,GAAkBwwC,GAAmB,KAqB9DxsC,kBAAmB,KACnBjrC,cAAe,KACf8mC,sBAAuB,KACvB2K,gBAAiB,KACjBD,aAAc,KACdrN,YAAaA,GAAeI,IAEhCh0D,SAAU,KACVqB,KAAM,KACN4+D,MAAO,KACPzI,UAAW,OA+iFnBlqE,EAAQ65G,KAnmTR,SAASC,GAAuBp+F,EAAU06C,EAAeuW,EAAgBttD,EAAQC,EAASJ,GACtF,OAAO,IAAI0tD,GAAkBlxD,EAAU06C,EAAeuW,EAAgBttD,EAAQC,EAASJ,IAmmT3Flf,EAAQ+5G,KAlZR,SAASC,GAAsB7mD,EAAcie,EAAqB6oC,GAC9D,OAAO,IAAIjJ,GAAiB79C,EAAcie,EAAqB6oC,IAkZnEj6G,EAAQk6G,KA9wUR,SAASC,GAAoBz1G,GACzB,OACIkR,GANyB,cAOzBqL,OAAQvc,EAAOuc,OACfF,cAAerc,EAAOqc,cACtBpF,KAAMjX,EAAOiX,OA0wUrB3b,EAAQo6G,KAznSR,SAASxzF,GAAa0rD,EAAY1oE,EAAO6+D,EAAgBkB,EAAYllE,EAAMoK,EAAMrL,EAAO8b,GACpF,IAAI6nD,KACJ,GAAI3jE,EACA,IAAK,IAAI6J,KAAQ7J,EAAO,CACpB,IAAIO,EAAKpB,EAAOa,EAAM6J,GAAO,GAC7B85D,EADgDpjE,EAAG,KAE/C6F,MAAO,EACPrG,KAAM8J,EAAM2mE,gBAHyDjwE,EAAG,GAIxEwsE,GAAI,KACJu2B,gBAAiB,KACjB3iD,OAAQ,MAIpB,IAAIk2D,KACJ,GAAI/6F,EACA,IAAK,IAAI3a,KAAY2a,EACjB+6F,EAAWt3G,MAAOmE,KAAM,EAAyBvC,SAAUA,EAAUY,OAAQ,KAAM82C,UAAW/8B,EAAQ3a,KAI9G,OAAOymE,GAAKkH,EADZ1oE,GAAS,MACsB6+D,EAAgBkB,EAAYllE,EAAMA,EAAMoK,EAAMs4D,EAAUkzC,IAqmS3Fr6G,EAAQs6G,KAhjFR,SAAS/S,GAAWj1B,EAAY1oE,EAAO4+D,EAAmBqB,EAAgBF,EAAY8F,EAAkB8qC,EAAYpzC,EAAU7nD,EAASgnD,EAAankC,EAAe8mC,GAE/J,IAAIllE,OADe,IAAfw2G,IAAyBA,MAExBj0C,IACDA,EAAcI,IAElB,IAAIxyC,EAAKq0C,GAAuBC,GAAoBC,EAAiBv0C,EAAGu0C,eAAgBE,EAAaz0C,EAAGy0C,WAAYD,EAAkBx0C,EAAGw0C,gBACrI6H,EAAK,KACLhtE,EAAO,KACPksE,IACkDc,GAAlDxsE,EAAKpB,EAAO8nE,GAAegF,GAAmB,IAAY,GAAIlsE,EAAOQ,EAAG,IAE5EojE,EAAWA,MAEX,IADA,IAAIqzC,EAAc,IAAIv5G,MAAMkmE,EAASnlE,QAC5BH,EAAI,EAAGA,EAAIslE,EAASnlE,OAAQH,IAAK,CACtC,IAAIsyB,EAAKxxB,EAAOwkE,EAAStlE,GAAI,GAAIuoE,EAAej2C,EAAG,GAAgCsmF,EAA0BtmF,EAAG,GAC5GumF,EAAK/3G,EAAO8nE,GAD4Dt2C,EAAG,IAC3B,GAAIwmF,EAAOD,EAAG,GAAIr5D,EAASq5D,EAAG,GAC9E5T,OAAkBlgG,EAClBu9C,OAASv9C,EACb,OAAuB,GAAfwjE,GACJ,KAAK,EACDjmB,EAASs2D,EACT,MACJ,KAAK,EACL,KAAK,EACD3T,EAAkB2T,EAG1BD,EAAY34G,IACN+H,MAAOwgE,EAAcmG,GAAIoqC,EAAMp3G,KAAM89C,EAAQ2yB,gBAAiB3yB,EAAQylD,gBAAiBA,EAAiB3iD,OAAQA,GAE1H7kC,EAAUA,MACV,IAAI+6F,EAAa,IAAIp5G,MAAMqe,EAAQtd,QACnC,IAASH,EAAI,EAAGA,EAAIyd,EAAQtd,OAAQH,IAAK,CACrC,IAAI+4G,EAAKj4G,EAAO2c,EAAQzd,GAAI,GAC5Bw4G,EAAWx4G,IACPqF,KAAM,EACN3B,OAHqCq1G,EAAG,GAGxBv+D,UAHwCu+D,EAAG,GAI3Dj2G,SAAU,MAIlB,IAAI4jC,GADJgyE,EAAaA,OACU9yG,IAAI,SAAU1D,GACjC,IAAImwB,EAAKvxB,EAAOoB,EAAI,GAA8BtB,EAAQyxB,EAAG,GACzDC,EAAKxxB,EAAO8nE,GAD2Bv2C,EAAG,IACI,GAClD,OAD2DC,EAAG,GAAWA,EAAG,GAC1D1xB,KAOtB,OALAwmE,EAtwPJ,SAAS4xC,EAAqB3zG,GAC1B,GAAIA,GAdyB,gBAcjBA,EAAK0O,GAAmC,CAEhD,IAAIklG,EAAmC,MAAtB5zG,EAAK6Z,eAAyB7Z,EAAK6Z,gBAAkB/gB,EAAQkc,kBAAkB6+F,MAC5F7zG,EAAK+Z,OAAOjf,QAAUlB,OAAOqM,KAAKjG,EAAKyU,MAAM3Z,OAE7CkF,EAAK0O,GADLklG,EACU,IAAMj0C,KAlBC,UA2BzB,OAHI3/D,GAxBqB,YAwBbA,EAAK0O,KACb1O,EAAO,MAEJA,GAAQ,KAuvPS2zG,CAAqB5xC,GACzC9mC,IACAv4B,GAAS,WAKT2b,WAAY,EACZjU,OAAQ,KACRswB,aAAc,KACd9F,cAAe,EACf02C,aAAc,EAEdF,WAAYA,EACZ1oE,MAVJA,GAAS,EAWL6kE,WAAY,EACZgE,iBAAkB,EAClBC,oBAAqB,EAAGjK,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,WAAYA,EAAYkB,eAAgBA,EAAgBF,WAAYA,EAC9JxC,SAAUqzC,EACVpwC,aAAcM,GAAiB8vC,GAC/Bl7F,QAAS+6F,EACTr8F,SACIuyD,GAAIA,EACJhtE,KAAMA,EACNglC,MAAOA,EACPprB,SAAU,KAEViwD,kBAAmB,KACnBjrC,cAAeA,GAAiB,KAChC8mC,sBAAuBA,EACvB2K,gBAAiB,KACjBD,aAAc,KACdrN,YAAaA,GAAeI,IAEhCh0D,SAAU,KACVqB,KAAM,KACN4+D,MAAO,KACPzI,UAAW,OA69EnBlqE,EAAQg7G,sBAAwB9yC,GAChCloE,EAAQi7G,mCAAqCvuC,GAC7C1sE,EAAQk7G,mBAt+TR,SAASC,GAAkBC,EAAYC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAC3G,OAAQnB,GACJ,KAAK,EACD,OAAOC,EAAK1wC,GAAkB2wC,GAAMC,EACxC,KAAK,EACD,OAAOF,EAAK1wC,GAAkB2wC,GAAMC,EAAK5wC,GAAkB6wC,GAAMC,EACrE,KAAK,EACD,OAAOJ,EAAK1wC,GAAkB2wC,GAAMC,EAAK5wC,GAAkB6wC,GAAMC,EAAK9wC,GAAkB+wC,GACpFC,EACR,KAAK,EACD,OAAON,EAAK1wC,GAAkB2wC,GAAMC,EAAK5wC,GAAkB6wC,GAAMC,EAAK9wC,GAAkB+wC,GACpFC,EAAKhxC,GAAkBixC,GAAMC,EACrC,KAAK,EACD,OAAOR,EAAK1wC,GAAkB2wC,GAAMC,EAAK5wC,GAAkB6wC,GAAMC,EAAK9wC,GAAkB+wC,GACpFC,EAAKhxC,GAAkBixC,GAAMC,EAAKlxC,GAAkBmxC,GAAMC,EAClE,KAAK,EACD,OAAOV,EAAK1wC,GAAkB2wC,GAAMC,EAAK5wC,GAAkB6wC,GAAMC,EAAK9wC,GAAkB+wC,GACpFC,EAAKhxC,GAAkBixC,GAAMC,EAAKlxC,GAAkBmxC,GAAMC,EAAKpxC,GAAkBqxC,GAAMC,EAC/F,KAAK,EACD,OAAOZ,EAAK1wC,GAAkB2wC,GAAMC,EAAK5wC,GAAkB6wC,GAAMC,EAAK9wC,GAAkB+wC,GACpFC,EAAKhxC,GAAkBixC,GAAMC,EAAKlxC,GAAkBmxC,GAAMC,EAAKpxC,GAAkBqxC,GACjFC,EAAKtxC,GAAkBuxC,GAAMC,EACrC,KAAK,EACD,OAAOd,EAAK1wC,GAAkB2wC,GAAMC,EAAK5wC,GAAkB6wC,GAAMC,EAAK9wC,GAAkB+wC,GACpFC,EAAKhxC,GAAkBixC,GAAMC,EAAKlxC,GAAkBmxC,GAAMC,EAAKpxC,GAAkBqxC,GACjFC,EAAKtxC,GAAkBuxC,GAAMC,EAAKxxC,GAAkByxC,GAAMC,EAClE,KAAK,EACD,OAAOhB,EAAK1wC,GAAkB2wC,GAAMC,EAAK5wC,GAAkB6wC,GAAMC,EAAK9wC,GAAkB+wC,GACpFC,EAAKhxC,GAAkBixC,GAAMC,EAAKlxC,GAAkBmxC,GAAMC,EAAKpxC,GAAkBqxC,GACjFC,EAAKtxC,GAAkBuxC,GAAMC,EAAKxxC,GAAkByxC,GAAMC,EAAK1xC,GAAkB2xC,GAAMC,EAC/F,QACI,MAAM,IAAIj2G,MAAM,8CAw8T5BtG,EAAQw8G,aA9+TR,SAASC,GAAYrB,EAAYsB,GAE7B,IADA,IAAI/wG,EAAS,GACJ9J,EAAI,EAAGA,EAAiB,EAAbu5G,EAAgBv5G,GAAQ,EACxC8J,EAASA,EAAS+wG,EAAe76G,GAAK8oE,GAAkB+xC,EAAe76G,EAAI,IAE/E,OAAO8J,EAAS+wG,EAA4B,EAAbtB,IA0+TnCp7G,EAAQ28G,KAz6TR,SAASC,GAAU71G,GAIf,IAHA,IAAIskE,KACAM,KACApsC,GAAS,EACJ19B,EAAI,EAAGA,EAAIkF,EAAU/E,OAAQH,IAAK,CACvC,IAAI6Q,EAAW3L,EAAUlF,GACrB6Q,EAAS9M,QAAUsrD,KAA+B,IAAnBx+C,EAASjQ,QACxC88B,GAAS,GAEQ,WAAjB7sB,EAAS9I,OACT+hE,EAAQ5oE,KAAK2P,EAAS9M,OAE1B8M,EAASzN,MAAQpD,EACjBwpE,EAAezE,GAASl0D,EAAS9M,QAAU8M,EAE/C,OAEI3S,QAAS,KACTsrE,eAAgBA,EAChBtkE,UAAWA,EACX4kE,QAASA,EACTpsC,OAAQA,IAq5ThBv/B,EAAQ68G,KAt7TR,SAASC,GAAiBlzG,EAAOhE,EAAOnD,EAAOoM,GAM3C,OAFApM,EAAQ2F,EAAkB3F,IAItBwC,OAAQ,EACR4J,KAJUg6D,GAAah6D,EAAMrH,EAAU5B,IAIxBgE,MAAOA,EAAOhE,MAAOA,EAAOnD,MAAOA,IA86T1DzC,EAAQ+8G,KA9oER,SAASC,GAAanzC,EAAgB5kE,GAClC,OAEIsgB,WAAY,EACZjU,OAAQ,KACRswB,aAAc,KACd9F,cAAe,EACf02C,aAAc,EAEdF,YAAa,EACb1oE,MAAO,EACP6kE,WAAY,EACZgE,iBAAkB,EAClBC,oBAAqB,EACrBjK,kBACAC,gBAAiB,EACjBC,cAAgBkB,eAAgBA,EAChCF,WAAY,EACZxC,YACAiD,aAAc,EACd9qD,WACAtB,QAAS,KACTtL,SAAU,KACVqB,KAAM,KACN4+D,MAAO,KACPzI,WAAajlE,MAAOA,KAsnE5BjF,EAAQi9G,KAlzSR,SAAS9mF,GAAU/Q,EAAMngB,GACrB,IAAI2F,EAAMwa,EAAKxa,IAAIk1B,MAAM76B,GACzB,GAAgB,EAAZ2F,EAAIhB,MAA6B,CACjC,IAAIkkE,EAASzI,GAAcjgD,EAAMxa,EAAI2a,WACrC,OAAO3a,EAAIoT,QAAQb,SAAW2wD,EAAO3wD,SAAW2wD,EAAO9F,cAEtD,GAAgB,EAAZp9D,EAAIhB,MACT,OAAOw7D,GAAWhgD,EAAMxa,EAAI2a,WAAW0iD,WAEtC,GAAgB,MAAZr9D,EAAIhB,MACT,OAAO07D,GAAelgD,EAAMxa,EAAI2a,WAAWqI,SAE/C,MAAM,IAAItnB,MAAM,gDAAkDrB,IAuyStEjF,EAAQk9G,KA5mSR,SAASn6F,GAAQnZ,EAAOnF,EAAMoK,GAE1B,OAAOu8D,IAAM,EADbxhE,GAAS,GACc,KAAM,EAAGnF,EAAMA,EAAMoK,IA2mShD7O,EAAQm9G,KAzmSR,SAAShyC,GAAYvhE,EAAO6+D,EAAgB7iE,EAAOnD,EAAOoM,GACtD,OAAOu8D,IAAM,EAAGxhE,EAAO6+D,EAAgB,EAAG7iE,EAAOnD,EAAOoM,IAymS5D7O,EAAQo9G,KAjmER,SAASC,GAAa/qC,EAAYgrC,GAC9B,OAAOrV,GAAmB,GAAwB31B,EAAY,IAAIrxE,MAAMq8G,KAimE5Et9G,EAAQu9G,KA/lER,SAASC,GAAclrC,EAAYmrC,GAI/B,IAHA,IAAItwG,EAAOrM,OAAOqM,KAAKswG,GACnBC,EAASvwG,EAAKnL,OACdkmG,EAAgB,IAAIjnG,MAAMy8G,GACrB77G,EAAI,EAAGA,EAAI67G,EAAQ77G,IAAK,CAC7B,IAAIwE,EAAM8G,EAAKtL,GAEfqmG,EADYuV,EAAYp3G,IACDA,EAE3B,OAAO4hG,GAAmB,GAAyB31B,EAAY41B,IAulEnEloG,EAAQ29G,KAvmER,SAASC,GAAYtrC,EAAYgrC,GAE7B,OAAOrV,GAAmB,IAAwB31B,EAAY,IAAIrxE,MAAMq8G,EAAW,KAsmEvFt9G,EAAQ69G,KAp0ER,SAASjW,GAASh+F,EAAOgM,EAAIuxD,GACzB,IAAIqzC,KACJ,IAAK,IAAI71G,KAAYwiE,EAEjBqzC,EAAYz3G,MAAO4B,SAAUA,EAAUgjG,YADrBxgC,EAASxiE,KAG/B,OAEI4gB,WAAY,EACZjU,OAAQ,KACRswB,aAAc,KACd9F,cAAe,EACf02C,aAAc,EAGdF,YAAa,EAAG1oE,MAAOA,EACvB6kE,WAAY,EACZgE,iBAAkB,EAClBC,oBAAqB,EACrB7I,gBAAiB,EACjBpB,kBACAC,gBAAiB,EACjBC,cACAgB,WAAY,EACZxC,YACAiD,aAAc,EACd9qD,WACAtB,QAAS,KACTtL,SAAU,KACVqB,KAAM,KACN4+D,OAAS/8D,GAAIA,EAAIwxF,SAAU/+B,GAAczyD,GAAKuxD,SAAUqzC,GACxDtwC,UAAW,OAsyEnBlqE,EAAQ89G,KAj5DR,SAASC,GAAQzrC,EAAYzI,EAAgBm0C,GAEzC,IADA,IAAI72C,EAAW,IAAIlmE,MAAM+8G,EAAWh8G,OAAS,GACpCH,EAAI,EAAGA,EAAIm8G,EAAWh8G,OAAQH,IACnCslE,EAAStlE,EAAI,IACT+H,MAAO,EACPrG,KAAM,KACNgtE,GAAI,KACJyD,gBAAiB,KACjB8yB,gBAAiB,KACjB3iD,OAAQ65D,EAAWn8G,IAG3B,OAEI0jB,WAAY,EACZjU,OAAQ,KACRswB,aAAc,KACd9F,cAAe,EACf02C,aAAc,EAEdF,WAAYA,EACZ1oE,MAAO,EACP6kE,WAAY,EACZgE,iBAAkB,EAClBC,oBAAqB,EACrBjK,kBACAC,gBAAiB,EACjBC,cAAgBkB,eAAgBA,EAChCF,WAAY,EAAGxC,SAAUA,EACzBiD,aAAc,EACd9qD,WACAtB,QAAS,KACTtL,SAAU,KACVqB,MAAQw2C,OAAQyzD,EAAW,IAC3BrrC,MAAO,KACPzI,UAAW,OA+2DnBlqE,EAAQi+G,KA7yUR,SAASC,GAAY94F,EAAM+4F,EAASp3C,EAAYtkE,GAC5C,GAAI44B,GAAaI,UAAUh5B,GAAQ,CAC/BA,EAAQ44B,GAAaG,OAAO/4B,GAC5B,IAAI27G,EAAmBh5F,EAAKxa,IAAIk1B,MAAMq+E,GAASriF,aAAeirC,EAC1Dt7C,EAAW4P,GAAaG,OAAOpW,EAAK4hD,UAAUo3C,IAClDh5F,EAAK4hD,UAAUo3C,GAAoB,IAAI/iF,GAAa5P,GAExD,OAAOhpB,GAuyUXzC,EAAQq+G,KA/wDR,SAASnxC,GAAQtjE,EAAOk2B,EAAOymC,EAAkBC,GAY7C,IAVA,IAAI83C,EAAmB,EACnBC,EAAsB,EACtBC,EAAgB,EAChBC,EAAoB,EACpBC,EAAqB,EACrBC,EAAgB,KAChBC,EAAsB,KACtBC,GAAmC,EACnCC,GAAoC,EACpCx1C,EAAqB,KAChBznE,EAAI,EAAGA,EAAIi+B,EAAM99B,OAAQH,IAAK,CACnC,IAAIg1B,EAAOiJ,EAAMj+B,GAQjB,GAPAg1B,EAAKtR,UAAY1jB,EACjBg1B,EAAKvlB,OAASqtG,EACd9nF,EAAKiF,aAAewiF,EACpBznF,EAAK27C,YAAc+rC,EACnB1nF,EAAK+K,aAAeg9E,EACpBJ,GAAiB3nF,EAAKjtB,MACtB80G,GAAsB7nF,EAAK6xC,gBACvB7xC,EAAK7Y,QAAS,CACd,IAAI6vD,EAAQh3C,EAAK7Y,QACjB6vD,EAAM+F,gBACF+qC,EAAgBA,EAAc3gG,QAAQ41D,gBAAkB9yE,OAAOU,OAAO,MAC1EqsE,EAAM8F,aAAe9F,EAAM+F,gBAE3BirC,GAAmC,EACnCC,GAAoC,EAChCjoF,EAAK7Y,QAAQb,WACbuhG,GAAsB7nF,EAAK7Y,QAAQb,SAAS+pF,oBASpD,GANAmB,GAAasW,EAAe9nF,EAAMiJ,EAAM99B,QACxCs8G,GAAoBznF,EAAKswC,SAASnlE,OAClCu8G,GAAuB1nF,EAAKvX,QAAQtd,QAC/B48G,GAAqC,EAAb/nF,EAAKjtB,QAC9B0/D,EAAqBzyC,GAER,MAAbA,EAAKjtB,MAAiC,CACjCi1G,IACDA,GAAmC,EAEnCF,EAAc3gG,QAAQ41D,gBAClB9yE,OAAOU,OAAOm9G,EAAc3gG,QAAQ41D,iBACxC+qC,EAAc3gG,QAAQ21D,aAAegrC,EAAc3gG,QAAQ41D,iBAE/D,IACInuD,EAAuD,IAA3B,MAAboR,EAAKjtB,OAD6C,IAAhC,KAAbitB,EAAKjtB,QAEJ6b,EACrBk5F,EAAc3gG,QAAQ41D,gBAAgBhN,GAAS/vC,EAAKnkB,SAAS9M,QAAUixB,GAGlEioF,IACDA,GAAoC,EAEpCH,EAAc3gG,QAAQ21D,aAClB7yE,OAAOU,OAAOm9G,EAAc3gG,QAAQ41D,kBAE5C+qC,EAAc3gG,QAAQ21D,aAAa/M,GAAS/vC,EAAKnkB,SAAS9M,QAAUixB,GAEpEpR,IACAk5F,EAAc3gG,QAAQovD,kBAAoBv2C,GAclD,GAXI8nF,GACAA,EAAclwC,YAAc53C,EAAKjtB,MACjC+0G,EAAclsC,kBAAoB57C,EAAKjtB,MACvC+0G,EAAcjsC,qBAAuB77C,EAAK6xC,gBACtC7xC,EAAK7Y,SAAW6Y,EAAK7Y,QAAQb,WAC7BwhG,EAAcjsC,qBAAuB77C,EAAK7Y,QAAQb,SAAS+pF,qBAI/DuX,GAAqB5nF,EAAKjtB,MAE1BitB,EAAK8yC,WAAa,EAClBg1C,EAAgB9nF,EACXuxE,GAAcvxE,KACf+nF,EAAsB/nF,QAS1B,KAAO8nF,GAAiB98G,IAAM88G,EAAcp5F,UAAYo5F,EAAch1C,YAAY,CAC9E,IAAIo1C,EAAYJ,EAAcrtG,OAC1BytG,IACAA,EAAUtwC,YAAckwC,EAAclwC,WACtCswC,EAAUrsC,qBAAuBisC,EAAcjsC,qBAK/CksC,GAHJD,EAAgBI,IAEK3W,GAAcuW,GACTA,EAAc/8E,aAGd+8E,GAQtC,OAEI5+G,QAAS,KACTyuE,UAAWgwC,EACXQ,cAAeP,EACfvX,mBAAoBwX,EAAoB90G,MAAOA,EAC/Ck2B,MAAOA,EACPymC,iBAAkBA,GAAoBG,GACtCF,eAAgBA,GAAkBE,GAAMJ,YAX1B,SAAUlhD,EAAMG,EAAW82B,EAAWqrB,GACpD,OAAO5nC,EAAMva,GAAWvH,QAAQsoD,YAAYlhD,EAAMi3B,EAAWqrB,IAW7DmhC,aAAcyV,EACd1V,YAAa2V,EAAqBj1C,mBAAoBA,IA2pD9DxoE,OAAOwD,eAAetE,EAAS,cAAgByC,OAAO","sourcesContent":["/**\n * @license Angular v8.0.0-beta.6+46.sha-3e5c1bc.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'inject': inject,\n        'ɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, Object) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        componentResourceResolutionQueue.clear();\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    function resolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    function resolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    function resolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function setComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 19;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, and QUERIES are indices 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var VIEWS = 6;\n    var NATIVE = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * The TView's hooks arrays are arranged in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`. For `OnChanges`\n     * hooks, the `directiveIndex` will be *negative*, signaling {@link callHooks} that the\n     * `hookFunction` must be passed the the appropriate {@link SimpleChanges} object.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (onChanges) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, onChanges);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(directiveIndex, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView` such that\n     * they're added in alternating pairs of directiveIndex and hookFunction,\n     * i.e.: `[directiveIndexA, hookFunctionA, directiveIndexB, hookFunctionB, ...]`\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * Has the side effect of updating the RunInit flag in `lView` to be `0`, so that\n     * this isn't run a second time.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param lView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhase) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhase);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if ((currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase &&\n            initPhase !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr, initPhase) {\n        var initHooksCount = 0;\n        for (var i = 0; i < arr.length; i += 2) {\n            var isInitHook = arr[i] < 0;\n            var directiveIndex = isInitHook ? -arr[i] : arr[i];\n            var directive = currentView[directiveIndex];\n            var hook = arr[i + 1];\n            if (isInitHook) {\n                initHooksCount++;\n                var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n                // The init phase state must be always checked here as it may have been recursively updated\n                if (indexWithintInitPhase < initHooksCount &&\n                    (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                    currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                    hook.call(directive);\n                }\n            }\n            else {\n                hook.call(directive);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf$1(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf$1(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return sanitizeResourceUrl;\n        }\n        return sanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     */\n    function sanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual$1(a, b) {\n        var isListLikeIterableA = isListLikeIterable$1(a);\n        var isListLikeIterableB = isListLikeIterable$1(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual$1(a, b, devModeEqual$1);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable$1(obj) {\n        if (!isJsObject$1(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual$1(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike$1(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject$1(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual$1(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        lView.debug = new LViewDebug(lView);\n    }\n    function attachLContainerDebug(lContainer) {\n        lContainer.debug = new LContainerDebug(lContainer);\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return null;\n                            currentView = currentView[PARENT];\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.next;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n        ];\n        allocateDirectiveIntoContext(context, null);\n        return context;\n    }\n    function allocateDirectiveIntoContext(context, directiveRef) {\n        // this is a new directive which we have not seen yet.\n        context[2 /* DirectiveRegistryPosition */].push(directiveRef, -1, false, null);\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 9 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[4 /* InitialClassValuesPosition */] =\n            [null, null];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */] =\n            [null, null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directiveRef the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, startingIndex, directiveRef) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[2 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directiveRef) == -1) {\n            // this is a new directive which we have not seen yet.\n            allocateDirectiveIntoContext(context, directiveRef);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = startingIndex; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial style data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStyles(element, context, renderer) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * Runs through the initial class data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialClasses(element, context, renderer) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[2 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[5 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            detectedIndex = directiveRefs.length;\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            allocateDirectiveIntoContext(context, directiveRef);\n            directiveRefs[detectedIndex + 1 /* SinglePropValuesIndexOffset */] =\n                nextOffsetInsertionIndex;\n            directiveRefs[detectedIndex + 3 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit incase a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value incase it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values incase earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, true, directiveRef, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveRef, forceOverride) {\n        updateSingleStylingValue(context, offset, input, false, directiveRef, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveRef, forceOverride) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[0 /* ElementPosition */];\n            var multiStartIndex = getMultiStylesStartIndex(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!valueExists(valueToApply, isClassBased)) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directiveRef) {\n        var directiveIndex;\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = getDirectiveRegistryValuesIndexOf(dirs, directiveRef);\n        if (index === -1) {\n            // if the directive was not allocated then this means that styling is\n            // being applied in a dynamic way AFTER the element was already instantiated\n            index = dirs.length;\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n            dirs.push(null, null, null, null);\n            dirs[index + 0 /* DirectiveValueOffset */] = directiveRef;\n            dirs[index + 2 /* DirtyFlagOffset */] = false;\n            dirs[index + 1 /* SinglePropValuesIndexOffset */] = -1;\n            var classesStartIndex = getMultiClassesStartIndex(context) || 9 /* SingleStylesStartPosition */;\n            registerMultiMapEntry(context, directiveIndex, true, context.length);\n            registerMultiMapEntry(context, directiveIndex, false, classesStartIndex);\n        }\n        else {\n            directiveIndex = index > 0 ? index / 4 /* Size */ : 0;\n        }\n        return directiveIndex;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* InitialClassesStringPosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* InitialClassesStringPosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* InitialClassesStringPosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 2 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* InitialClassesStringPosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces incase they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, unwrapRNode(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n            renderInitialStyles(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function listener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n     * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n     * in the component's renderer. Normally all host listeners are evaluated with the\n     * parent component's renderer, but, in the case of animation @triggers, they need\n     * to be evaluated with the sub component's renderer (because that's where the\n     * animation triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `listener`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     */\n    function componentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     */\n    function elementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name, namespace) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element_1, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element_1.setAttributeNS(namespace, name, strValue) :\n                        element_1.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n     * Mapping between attributes names that don't correspond to their element property names.\n     */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        if (directive) {\n            // this will ALWAYS happen first before the bindings are applied so that the ordering\n            // of directives is correct (otherwise if a follow-up directive contains static styling,\n            // which is applied through elementHostAttrs, then it may end up being listed in the\n            // context directive array before a former one (because the former one didn't contain\n            // any static styling values))\n            allocateDirectiveIntoContext(tNode.stylingTemplate, directive);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () { return initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive); });\n        }\n        else {\n            // this will make sure that the root directive (the template) will always be\n            // run FIRST before all the other styling properties are populated into the\n            // context...\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive);\n        }\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        var lView = getLView();\n        var native = getNativeByTNode(tNode, lView);\n        var i = setUpAttributes(native, attrs);\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, i, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive, forceOverride) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive, forceOverride);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     * @param forceOverride Whether or not this value will be applied regardless of where it is being\n     *        set within the directive priority structure.\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, directive, forceOverride);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element. This instruction is also called for host bindings that write to\n     * `[style]` and `[class]` (the directive param helps the instruction code determine where the\n     * binding values come from).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (!directive) {\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n        }\n        updateStylingMap(stylingContext, classes, styles, directive);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, renderStringify(value)) :\n                element_2.textContent = renderStringify(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            // If we hit Select-Only, Classes or Styles, we're done anyway. None of those are valid inputs.\n            if (attrName === 3 /* SelectOnly */ || attrName === 1 /* Classes */ ||\n                attrName === 2 /* Styles */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            [],\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] = createLContainer(lView[adjustedIndex], lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Reporting a TContainer node queries is a 2-step process as we need to:\n     * - check if the container node itself is matching (query might match a <ng-template> node);\n     * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n     * container.\n     *\n     * Those 2 operations need to happen in the specific order (match the container node itself, then\n     * prepare space for nodes from views).\n     */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttachedToChangeDetector(hostView) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                }\n                componentChild.next = null;\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            namespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function () {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef(definition) && isComponentDef(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        NgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            if (source === void 0) { source = null; }\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.6+46.sha-3e5c1bc.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable$1(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable$1(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike$1(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject$1(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject$1(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual$1(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text$$1 = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text$$1.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text$$1, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text$$1, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    function findLastNode(node) {\n        while (node.next) {\n            node = node.next;\n        }\n        if (node.child) {\n            return findLastNode(node.child);\n        }\n        return node;\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = previousOrParentTNode;\n        if (lastCreatedNode.child) {\n            lastCreatedNode = findLastNode(lastCreatedNode.child);\n        }\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.hasOwnProperty('decorators') && clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue$1(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$1(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$1(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$1(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     */\n    function staticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = viewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function viewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n    * Loads current View Query and moves the pointer/index to the next View Query in LView.\n    */\n    function loadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return load(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function contentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function staticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = contentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    function loadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf$1,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵcomponentHostSyntheticListener': componentHostSyntheticListener,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵviewQuery': viewQuery,\n        'ɵstaticViewQuery': staticViewQuery,\n        'ɵstaticContentQuery': staticContentQuery,\n        'ɵloadViewQuery': loadViewQuery,\n        'ɵcontentQuery': contentQuery,\n        'ɵloadContentQuery': loadContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵresolveWindow': resolveWindow,\n        'ɵresolveDocument': resolveDocument,\n        'ɵresolveBody': resolveBody,\n        'ɵsetComponentScope': setComponentScope,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl,\n        'ɵsanitizeUrlOrResourceUrl': sanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$2(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$2(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$2(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$2(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$2(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$2(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$2(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$2(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$2(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$2(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().ownPropMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = defineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(inject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationInitStatus, [{\n            type: Injectable\n        }], function () { return [{\n            type: undefined,\n            decorators: [{\n                    type: Inject,\n                    args: [APP_INITIALIZER]\n                }, {\n                    type: Optional\n                }]\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = defineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n    /*@__PURE__*/ setClassMetadata(Console, [{\n            type: Injectable\n        }], null, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = moduleDef.declarations.reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = defineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /*@__PURE__*/ setClassMetadata(Compiler, [{\n            type: Injectable\n        }], null, null);\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = defineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(inject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /*@__PURE__*/ setClassMetadata(Testability, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }]; }, null);\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = defineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    /*@__PURE__*/ setClassMetadata(TestabilityRegistry, [{\n            type: Injectable\n        }], function () { return []; }, null);\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = defineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(inject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(PlatformRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: Injector\n        }]; }, null);\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = defineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(inject(NgZone), inject(Console), inject(Injector), inject(ErrorHandler), inject(ComponentFactoryResolver), inject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationRef, [{\n            type: Injectable\n        }], function () { return [{\n            type: NgZone\n        }, {\n            type: Console\n        }, {\n            type: Injector\n        }, {\n            type: ErrorHandler\n        }, {\n            type: ComponentFactoryResolver\n        }, {\n            type: ApplicationInitStatus\n        }]; }, null);\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = defineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(inject(Compiler), inject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    /*@__PURE__*/ setClassMetadata(SystemJsNgModuleLoader, [{\n            type: Injectable\n        }], function () { return [{\n            type: Compiler\n        }, {\n            type: SystemJsNgModuleLoaderConfig,\n            decorators: [{\n                    type: Optional\n                }]\n        }]; }, null);\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                return __assign({}, properties, hostProperties);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = defineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = defineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(inject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS, imports: [] });\n        return ApplicationModule;\n    }());\n    /*@__PURE__*/ setClassMetadata(ApplicationModule, [{\n            type: NgModule,\n            args: [{ providers: APPLICATION_MODULE_PROVIDERS }]\n        }], function () { return [{\n            type: ApplicationRef\n        }]; }, null);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual$1;\n    exports.ɵisListLikeIterable = isListLikeIterable$1;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf$1;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵsetComponentScope = setComponentScope;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵviewQuery = viewQuery;\n    exports.ɵstaticViewQuery = staticViewQuery;\n    exports.ɵstaticContentQuery = staticContentQuery;\n    exports.ɵloadViewQuery = loadViewQuery;\n    exports.ɵcontentQuery = contentQuery;\n    exports.ɵloadContentQuery = loadContentQuery;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵcomponentHostSyntheticListener = componentHostSyntheticListener;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵresolveWindow = resolveWindow;\n    exports.ɵresolveDocument = resolveDocument;\n    exports.ɵresolveBody = resolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵdefaultStyleSanitizer = defaultStyleSanitizer;\n    exports.ɵsanitizeScript = sanitizeScript;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵsanitizeUrlOrResourceUrl = sanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}