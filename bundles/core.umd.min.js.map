{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","ΔdefineInjectable","opts","providedIn","undefined","defineInjectable","ΔdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","Default","injectRootLimpMode","get","Δinject","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","angularCoreDiEnv","ΔgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","USE_VALUE","provide","String","useValue","isUseClassProvider","useClass","isUseValueProvider","isUseFactoryProvider","useFactory","isUseExistingProvider","useExisting","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","provider","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","InjectionToken","_desc","__NG_ELEMENT_ID__","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","Injector","parent","StaticInjector","NULL","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","USE_VALUE$2","NG_TOKEN_PATH","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","Map","set","useNew","recursivelyProcessProviders","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","catchInjectorError","tokens","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_this","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ViewEncapsulation","Set","componentNeedsResolution","old","response","EMPTY_OBJ","EMPTY_ARRAY$1","renderStringify","defaultScheduler","requestAnimationFrame","setTimeout","ΔresolveWindow","element","ownerDocument","defaultView","ΔresolveDocument","ΔresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","throwError","_renderCompCount","ΔdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ΔsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ΔdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ΔsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ΔdefineBase","baseDefinition","ΔdefineDirective","ΔdefinePipe","pipeDef","pure","throwNotFound","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","TYPE","ACTIVE_INDEX","NATIVE","VIEWS","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","elementDepthCount","NodeInjectorFactory","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","registerPreOrderHooks","directiveIndex","directiveDef","tView","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ΔenableBindings","ΔdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","ΔrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","getSelectedIndex","_currentNamespace","ΔnamespaceSVG","ΔnamespaceMathML","ΔnamespaceHTML","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","sanitizer","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","destroy","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrName","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrsLength","accumulatedClasses","trim","accumulatedStyles","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ΔgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","ELEMENT_MARKER","COMMENT_MARKER","toDebug","debug","assertDefined","actual","toHtml","includeChildren","node","isTextNode","nodeType","Node","TEXT_NODE","outerHTML","textContent","split","innerHTML","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","dirty","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","rawValue","componentLViewDebug","html","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","bindingIndex","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","throwMultipleComponentError","tagName","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateStylingMap","classesInput","stylesInput","ignoreAllClassUpdates","isMultiValueCacheHit","ignoreAllStyleUpdates","readCachedMapValue","classesPlayerBuilder","ClassAndStylePlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","classNames","applyAllClasses","playerBuildersAreDirty","classesPlayerBuilderIndex","hasPlayerBuilderChanged","setPlayerBuilder","stylesPlayerBuilderIndex","multiStylesStartIndex","getMultiStylesStartIndex","multiClassesStartIndex","getMultiClassesStartIndex","multiClassesEndIndex","totalNewEntries","patchStylingMapIntoContext","setContextPlayersDirty","playerBuilderIndex","ctxStart","ctxEnd","cacheValue","entryIsClassBased","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","updateClassProp","offset","input","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","currFlag","currDirective","playerBuilder","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","newValue","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","match","toLowerCase","registerMultiMapEntry","count","staticStyles","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","current","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElement","createElementNS","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","lastBindingIndex","CLEAN_PROMISE","initializeTNodeInputs","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","setInputsForProperty","applyOnCreateInstructions","fns","ΔallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","markDirty","getLContainer","embeddedView","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","e_1","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","head","head_1","head_1_1","e_1_1","return","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","views","detachView","removeIndex","viewToDetach","removeView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","appendChild","childEl","childTNode","e_2","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","e_2_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","removeChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","Δcontainer","containerInternal","addTContainerToQueries","Δtemplate","tContainerNode","ΔcontainerRefreshStart","ΔcontainerRefreshEnd","nextIndex","addNode","comment","createComment","Δreference","getContextLView","Δload","ΔdirectiveInject","ΔinjectAttribute","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","item","removeAttribute","childNode","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","warn","sanitizeSrcset","srcset","tagSet","tags","_b","_c","merge","sets","sets_1","sets_1_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","traverseContent","startElement","chars","nodeValue","endElement","checkClobberedElement","nodeName","elAttr","lower","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","ΔsanitizeHtml","getSanitizer","sanitize","HTML","ΔsanitizeStyle","unsafeStyle","STYLE","ΔsanitizeUrl","unsafeUrl","URL","ΔsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ΔsanitizeScript","unsafeScript","SCRIPT","getUrlSanitizer","tag","ΔsanitizeUrlOrResourceUrl","ΔdefaultStyleSanitizer","ΔelementStyling","classBindingNames","styleBindingNames","initElementStyling","ΔelementHostStyling","directiveStylingIndex","getActiveDirectiveStylingIndex","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","entries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ΔelementStyleProp","styleIndex","valueToAdd","resolveStylePropValue","ΔelementHostStyleProp","hostElementIndex","ΔelementClassProp","classIndex","booleanOrNull","ΔelementHostClassProp","ΔelementStylingMap","classes","classInputVal","forceClassesAsString","styleInputVal","forceStylesAsString","ΔelementHostStylingMap","ΔelementStylingApply","elementStylingApplyInternal","ΔelementHostStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","getActiveDirectiveId","getActiveDirectiveSuperClassDepth","ΔelementStart","initialStylesIndex","initialClassesIndex","getElementDepthCount","increaseElementDepthCount","inputData","currentQueries","clone","ΔelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","Δelement","ΔelementAttribute","strValue","ΔelementHostAttrs","ΔelementContainerStart","ΔelementContainerEnd","ΔembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","ΔembeddedViewEnd","viewHost","ΔgetCurrentView","isPromise","isObservable","subscribe","Δlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ΔcomponentHostSyntheticListener","loadRendererFn","lCleanupIndex","wrapListener","cleanupFn","listen","propsLength","subscription","idx","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","preventDefault","returnValue","ΔnextContext","ΔprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","Δprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","Δbind","ΔelementProperty","nativeOnly","elementPropertyInternal","ΔcomponentHostSyntheticProperty","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","dataValue","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","bindingMetadata","ΔinterpolationV","Δinterpolation1","v0","Δinterpolation2","i0","v1","Δinterpolation3","i1","v2","Δinterpolation4","i2","v3","Δinterpolation5","i3","v4","Δinterpolation6","i4","v5","Δinterpolation7","i5","v6","Δinterpolation8","i6","v7","Δselect","Δtext","textNative","ΔtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ΔNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ΔInheritDefinitionFeature","superType","getSuperType","_loop_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","features_1","features_1_1","superPrototype","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$2","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multiRecord_1","hasOnDestroy","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ΔProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","noop","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","pop","EMPTY_CONTEXT","getComponentViewDefinitionFactory","componentFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","componentRef","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","pos","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","Δi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","cursor","Δi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","list","shift","Δi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","Δi18n","Δi18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","Δi18nExp","expression","Δi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","ΔpureFunction0","slotOffset","pureFn","thisArg","ΔpureFunction1","exp","ΔpureFunction2","ΔpureFunction3","ΔpureFunction4","ΔpureFunction5","exp5","ΔpureFunction6","exp6","ΔpureFunction7","exp7","ΔpureFunction8","exp8","ΔpureFunctionV","exps","Δpipe","pipeName","getPipeDef$1","pipeInstance","ΔpipeBind1","unwrapValue$1","isPure","transform","ΔpipeBind2","ΔpipeBind3","ΔpipeBind4","ΔpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","flatten","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","_static","storeCleanupWithContext","ΔqueryRefresh","queryListImpl","ΔstaticViewQuery","ΔviewQuery","ΔloadViewQuery","ΔcontentQuery","contentQuery","tViewContentQueries","ΔstaticContentQuery","ΔloadContentQuery","ΔtemplateRefExtractor","angularCoreEnv","NgModuleFactoryLoader","assertSameOrNotExisting","incoming","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","EMPTY_ARRAY$4","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","typeArgumentCount","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","usesInheritance","part","viewQueries","isQueryAnn","queriesMeta","field","annotations_1","ann","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","isBoundToModule__PRE_R3__","cf","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","classList","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","getDebugNode__PRE_R3__","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","ViewAction","ApplicationModule","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_r","ɵangular_packages_core_core_o","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_s","ɵangular_packages_core_core_f","ɵangular_packages_core_core_m","ɵangular_packages_core_core_n","ɵangular_packages_core_core_l","ɵangular_packages_core_core_k","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_j","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bf","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_bo","ɵangular_packages_core_core_bn","ɵangular_packages_core_core_g","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bk","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_bp","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","ɵisBoundToModule__POST_R3__","isBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-beta.11+63.sha-3e46985.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function ΔdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ΔdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ΔdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ΔdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function Δinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use Δinject instead.\n     * @publicApi\n     */\n    var inject = Δinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(Δinject(type, flags));\n            }\n            else {\n                args.push(Δinject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ΔdefineInjectable': ΔdefineInjectable,\n        'ΔdefineInjector': ΔdefineInjector,\n        'Δinject': Δinject,\n        'ΔgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0 = getClosureSafeProperty;\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ0 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$1 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 });\n    var EMPTY_ARRAY = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return Δinject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = ΔdefineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ΔdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return Δinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                return catchInjectorError(e, token, 'StaticInjectorError', this.source);\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE$2 in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE$2 in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj, 'StaticInjectorError'));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.template) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n            stylingMap: 0,\n            stylingMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     */\n    function renderStringify(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     *\n     * @publicApi\n     */\n    function ΔresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @publicApi\n     */\n    function ΔresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @publicApi\n     */\n    function ΔresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @publicApi\n     */\n    function ΔdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    /**\n     * @publicApi\n     */\n    function ΔsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @publicApi\n     */\n    function ΔdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @publicApi\n     */\n    function ΔsetNgModuleScope(type, scope) {\n        var ngModuleDef = getNgModuleDef(type, true);\n        ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$1;\n        ngModuleDef.imports = scope.imports || EMPTY_ARRAY$1;\n        ngModuleDef.exports = scope.exports || EMPTY_ARRAY$1;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ΔdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @publicApi\n     */\n    function ΔdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ΔdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ΔdefineDirective = ΔdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @publicApi\n     */\n    function ΔdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    var VIEWS = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ΔdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ΔenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @publicApi\n     */\n    function ΔenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ΔdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ΔenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @publicApi\n     */\n    function ΔdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @publicApi\n     */\n    function ΔrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        ngDevMode &&\n            assertGreaterThan(_selectedIndex, -1, 'select() should be called prior to retrieving the selected index');\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @publicApi\n     */\n    function ΔnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @publicApi\n     */\n    function ΔnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @publicApi\n     */\n    function ΔnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStylingMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                /// attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + renderStringify(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + renderStringify(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + renderStringify(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @publicApi\n     */\n    function ΔgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @publicApi\n     */\n    function ΔgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ΔgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = toDebug(readLViewValue(rawValue));\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer[VIEWS].map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        var index = findNextInsertionIndex(buffer, priority);\n        buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(void 0, __spread(args));\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi styling (`[style]` and `[class]`) values to the context.\n     *\n     * This function will iterate over the provided `classesInput` and `stylesInput` map\n     * values and insert/update or remove them from the context at exactly the right\n     * spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && ngDevMode.stylingMap++;\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        classesInput = classesInput || null;\n        stylesInput = stylesInput || null;\n        var ignoreAllClassUpdates = isMultiValueCacheHit(context, true, directiveIndex, classesInput);\n        var ignoreAllStyleUpdates = isMultiValueCacheHit(context, false, directiveIndex, stylesInput);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        classesInput =\n            classesInput === NO_CHANGE ? readCachedMapValue(context, true, directiveIndex) : classesInput;\n        stylesInput =\n            stylesInput === NO_CHANGE ? readCachedMapValue(context, false, directiveIndex) : stylesInput;\n        var element = context[0 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput['value'] : stylesInput;\n        var classNames = EMPTY_ARRAY$1;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY$1;\n            }\n        }\n        var multiStylesStartIndex = getMultiStylesStartIndex(context);\n        var multiClassesStartIndex = getMultiClassesStartIndex(context);\n        var multiClassesEndIndex = context.length;\n        if (!ignoreAllStyleUpdates) {\n            var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY$1;\n            var styles = stylesValue || EMPTY_OBJ;\n            var totalNewEntries = patchStylingMapIntoContext(context, directiveIndex, stylesPlayerBuilderIndex, multiStylesStartIndex, multiClassesStartIndex, styleProps, styles, stylesInput, false);\n            if (totalNewEntries) {\n                multiClassesStartIndex += totalNewEntries * 4 /* Size */;\n                multiClassesEndIndex += totalNewEntries * 4 /* Size */;\n            }\n        }\n        if (!ignoreAllClassUpdates) {\n            var classes = (classesValue || EMPTY_OBJ);\n            patchStylingMapIntoContext(context, directiveIndex, classesPlayerBuilderIndex, multiClassesStartIndex, multiClassesEndIndex, classNames, applyAllClasses || classes, classesInput, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && ngDevMode.stylingMapCacheMiss++;\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be\n     * compared to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        setActiveHostElement(currentElementIndex);\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                        instruction(2 /* Update */, hostCtx, currentElementIndex);\n                        // Each directive gets a uniqueId value that is the same for both\n                        // create and update calls when the hostBindings function is called. The\n                        // directive uniqueId is not set anywhere--it is just incremented between\n                        // each hostBindings call and is useful for helping instruction code\n                        // uniquely determine which directive is currently active when executed.\n                        incrementActiveDirectiveId();\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n        setActiveHostElement(null);\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                ΔnamespaceHTML();\n                // Reset the selected index so we can assert that `select` was called later\n                ngDevMode && setSelectedIndex(-1);\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                if (templateFn) {\n                    ΔnamespaceHTML();\n                    // Reset the selected index so we can assert that `select` was called later\n                    ngDevMode && setSelectedIndex(-1);\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @param viewQuery View query that should be saved on TView\n     * @param schemas Schemas that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData = createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery, schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + renderStringify(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        setActiveHostElement(elementIndex);\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                // Each directive gets a uniqueId value that is the same for both\n                // create and update calls when the hostBindings function is called. The\n                // directive uniqueId is not set anywhere--it is just incremented between\n                // each hostBindings call and is useful for helping instruction code\n                // uniquely determine which directive is currently active when executed.\n                incrementActiveDirectiveId();\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n        setActiveHostElement(null);\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n            [],\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container = current;\n                for (var i = 0; i < container[VIEWS].length; i++) {\n                    var dynamicViewData = container[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            ΔnamespaceHTML();\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            // Reset the selected index so we can assert that `select` was called later\n            ngDevMode && setSelectedIndex(-1);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputAliases mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @publicApi\n     */\n    function ΔallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    if (nodeOrContainer[VIEWS].length) {\n                        currentView = nodeOrContainer[VIEWS][0];\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var views = lViewOrLContainer[VIEWS];\n                if (views.length > 0)\n                    next = views[0];\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var views = lContainer[VIEWS];\n        ngDevMode && assertDefined(views, 'Container must have views');\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        addRemoveViewFromContainer(viewToDetach, false);\n        if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n            !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[PARENT] = null;\n        viewToDetach[NEXT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~128 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex);\n        destroyLView(view);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var views = lContainer[VIEWS];\n            var index = views.indexOf(lView);\n            return getBeforeNodeForView(index, views, lContainer[NATIVE]);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @publicApi\n     */\n    function Δcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @publicApi\n     */\n    function Δtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @publicApi\n     */\n    function ΔcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @publicApi\n     */\n    function ΔcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            queries.addNode(tContainerNode);\n            var lContainer = lView[tContainerNode.index];\n            lContainer[QUERIES] = queries.container();\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @publicApi\n     */\n    function Δreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @publicApi\n     */\n    function Δload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ΔdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @publicApi\n     */\n    function ΔinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ΔsanitizeResourceUrl;\n        }\n        return ΔsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ΔsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ΔdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image';\n        }\n        return ΔsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - elementStyling\n     * - elementStylingMap\n     * - elementStyleProp\n     * - elementClassProp\n     * - elementStylingApply\n     *\n     * Host bindings level styling instructions:\n     * - elementHostStyling\n     * - elementHostStylingMap\n     * - elementHostStyleProp\n     * - elementHostClassProp\n     * - elementHostStylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * @publicApi\n     */\n    function ΔelementStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        // calling the function below ensures that the template's binding values\n        // are applied as the first set of bindings into the context. If any other\n        // styling bindings are set on the same element (by directives and/or\n        // components) then they will be applied at the end of the `elementEnd`\n        // instruction (because directives are created first before styling is\n        // executed for a new element).\n        initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n    }\n    /**\n     * Allocates style and class binding properties on the host element during creation mode\n     * within the host bindings function of a directive or component.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class host bindings on the host element of a directive or\n     * component. Note that this is only used for binding values (see `elementHostAttrs`\n     * to learn how to assign static styling values to the host element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementHostClassProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementHostStyleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the provided `directive` and\n     *        will not be used if the same property is assigned in another directive or\n     *        on the element directly.\n     *\n     * @publicApi\n     */\n    function ΔelementHostStyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        // despite the binding being applied in a queue (below), the allocation\n        // of the directive into the context happens right away. The reason for\n        // this is to retain the ordering of the directives (which is important\n        // for the prioritization of bindings).\n        allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n        var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n        fns.push(function () {\n            initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n            registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n        });\n    }\n    function initElementStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStylingMap` or any static styles that are\n     * present from when the element was created with `elementStyling`).\n     *\n     * Note that the styling element is updated as part of `elementStylingApply`.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStyling`.\n     * @param value New value to write (falsy to remove). Note that if a directive also\n     *        attempts to write to the same binding value (via `elementHostStyleProp`)\n     *        then it will only be able to do so if the binding value assigned via\n     *        `elementStyleProp` is falsy (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @publicApi\n     */\n    function ΔelementStyleProp(index, styleIndex, value, suffix, forceOverride) {\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n    }\n    /**\n     * Update a host style binding value on the host element within a component/directive.\n     *\n     * If the style value is falsy then it will be removed from the host element\n     * (or assigned a different value depending if there are any styles placed\n     * on the same element with `elementHostStylingMap` or any static styles that\n     * are present from when the element was patched with `elementHostStyling`).\n     *\n     * Note that the styling applied to the host element once\n     * `elementHostStylingApply` is called.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementHostStyling`.\n     * @param value New value to write (falsy to remove). The value may or may not\n     *        be applied to the element depending on the template/component/directive\n     *        prioritization (see `interfaces/styling.ts`)\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * @publicApi\n     */\n    function ΔelementHostStyleProp(styleIndex, value, suffix, forceOverride) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementStyling` within the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStyling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * @publicApi\n     */\n    function ΔelementClassProp(index, classIndex, value, forceOverride) {\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n    }\n    /**\n     * Update a class host binding for a directive's/component's host element within\n     * the host bindings function.\n     *\n     * This instruction is meant to handle the `@HostBinding('class.foo')` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `elementHostStyling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementHostStlying` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the stylings priority structure.\n     *\n     * @publicApi\n     */\n    function ΔelementHostClassProp(classIndex, value, forceOverride) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style and/or class bindings using object literals on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles/classes are applied to the element they will then be updated with\n     * respect to any styles/classes set with `elementStyleProp` or `elementClassProp`. If any\n     * styles or classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `elementStylingApply` is called.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @publicApi\n     */\n    function ΔelementStylingMap(index, classes, styles) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        // inputs are only evaluated from a template binding into a directive, therefore,\n        // there should not be a situation where a directive host bindings function\n        // evaluates the inputs (this should only happen in the template function)\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n            classes = NO_CHANGE;\n        }\n        if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n            var initialStyles = getInitialClassNameValue(stylingContext);\n            var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n            setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n            styles = NO_CHANGE;\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    /**\n     * Update style and/or class host bindings using object literals on an element within the host\n     * bindings function for a directive/component.\n     *\n     * This instruction is meant to apply styling via the `@HostBinding('style')` and\n     * `@HostBinding('class')` bindings for a component's or directive's host element.\n     * When styles/classes are applied to the host element they will then be updated\n     * with respect to any styles/classes set with `elementHostStyleProp` or\n     * `elementHostClassProp`. If any styles or classes are set to falsy then they\n     * will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until\n     * `elementHostStylingApply` is called.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * @publicApi\n     */\n    function ΔelementHostStylingMap(classes, styles) {\n        var directiveStylingIndex = getActiveDirectiveStylingIndex();\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(hostElementIndex + HEADER_OFFSET, lView);\n        var args = [stylingContext, classes, styles, directiveStylingIndex];\n        enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStylingMap, args);\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `elementStylingMap`, `elementStyleProp`\n     * or `elementClassProp` instructions have been run and will only apply styling to\n     * the element if any styling bindings have been updated.\n     *\n     * @param index Index of the element's with which styling is associated.\n     *\n     * @publicApi\n     */\n    function ΔelementStylingApply(index) {\n        elementStylingApplyInternal(DEFAULT_TEMPLATE_DIRECTIVE_INDEX, index);\n    }\n    /**\n     * Apply all style and class host binding values to the element.\n     *\n     * This instruction is meant to be run after `elementHostStylingMap`,\n     * `elementHostStyleProp` or `elementHostClassProp` instructions have\n     * been run and will only apply styling to the host element if any\n     * styling bindings have been updated.\n     *\n     * @publicApi\n     */\n    function ΔelementHostStylingApply() {\n        elementStylingApplyInternal(getActiveDirectiveStylingIndex(), getSelectedIndex());\n    }\n    function elementStylingApplyInternal(directiveStylingIndex, index) {\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @publicApi\n     */\n    function ΔelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        if (attrs) {\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @publicApi\n     */\n    function ΔelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @publicApi\n     */\n    function Δelement(index, name, attrs, localRefs) {\n        ΔelementStart(index, name, attrs, localRefs);\n        ΔelementEnd();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @publicApi\n     */\n    function ΔelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @publicApi\n     */\n    function ΔelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @publicApi\n     */\n    function ΔelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @publicApi\n     */\n    function ΔelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @publicApi\n     */\n    function ΔembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @publicApi\n     */\n    function ΔembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @publicApi\n     */\n    function ΔgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @publicApi\n     */\n    function Δlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @publicApi\n    */\n    function ΔcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : {};\n            var target = resolved.target || native;\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // The first argument of `listen` function in Procedural Renderer is:\n                // - either a target name (as a string) in case of global target (window, document, body)\n                // - or element reference (in all other cases)\n                listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                lCleanup.push(listenerFn);\n            }\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            try {\n                var result = listenerFn(e);\n                if (wrapWithPreventDefault && result === false) {\n                    e.preventDefault();\n                    // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                    e.returnValue = false;\n                }\n                return result;\n            }\n            catch (error) {\n                handleError(lView, error);\n            }\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @publicApi\n     */\n    function ΔnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @publicApi\n     */\n    function ΔprojectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ?\n                    matchingProjectionSelectorIndex(componentChild, selectors, textSelectors) :\n                    0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n      *\n     * @publicApi\n    */\n    function Δprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @publicApi\n     */\n    function Δbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @publicApi\n    */\n    function ΔelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @publicApi\n     */\n    function ΔcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 3) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 2]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Stores debugging data for this property binding on first template pass.\n     * This enables features like DebugElement.properties.\n     */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n     * Creates an error that should be thrown when encountering an unknown property on an element.\n     * @param propName Name of the invalid property.\n     * @param tNode Node on which we encountered the error.\n     */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @publicApi\n     */\n    function ΔinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @publicApi\n     */\n    function Δinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @publicApi\n     */\n    function Δinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an index of an item to act on and flushes lifecycle hooks up to this point\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @publicApi\n     */\n    function Δselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        setSelectedIndex(index);\n        var lView = getLView();\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @publicApi\n     */\n    function Δtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @publicApi\n     */\n    function ΔtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + renderStringify(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    function ΔNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @publicApi\n     */\n    function ΔInheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        // because inheritance is unknown during compile time, the runtime code\n                        // needs to be informed of the super-class depth so that instruction code\n                        // can distinguish one host bindings function from another. The reason why\n                        // relying on the directive uniqueId exclusively is not enough is because the\n                        // uniqueId value and the directive instance stay the same between hostBindings\n                        // calls throughout the directive inheritance chain. This means that without\n                        // a super-class depth value, there is no way to know whether a parent or\n                        // sub-class host bindings function is currently being executed.\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            // The reason why we increment first and then decrement is so that parent\n                            // hostBindings calls have a higher id value compared to sub-class hostBindings\n                            // calls (this way the leaf directive is always at a super-class depth of 0).\n                            adjustActiveDirectiveSuperClassDepthPosition(1);\n                            try {\n                                superHostBindings_1(rf, ctx, elementIndex);\n                            }\n                            finally {\n                                adjustActiveDirectiveSuperClassDepthPosition(-1);\n                            }\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                var prevViewQuery_1 = definition.viewQuery;\n                var superViewQuery_1 = superDef.viewQuery;\n                if (superViewQuery_1) {\n                    if (prevViewQuery_1) {\n                        definition.viewQuery = function (rf, ctx) {\n                            superViewQuery_1(rf, ctx);\n                            prevViewQuery_1(rf, ctx);\n                        };\n                    }\n                    else {\n                        definition.viewQuery = superViewQuery_1;\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (rf, ctx, directiveIndex) {\n                            superContentQueries_1(rf, ctx, directiveIndex);\n                            prevContentQueries_1(rf, ctx, directiveIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ΔNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            _loop_1();\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$1 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$1 === undefined) {\n            NULL_INJECTOR$1 = new NullInjector();\n        }\n        return NULL_INJECTOR$1;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (def instanceof Array ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$2;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return Δinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE$2 in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ΔdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ΔdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @publicApi\n     */\n    function ΔProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-beta.11+63.sha-3e46985.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ΔdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$3 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(Δinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @publicApi\n     */\n    function Δi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicApi\n     */\n    function Δi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @publicApi\n     */\n    function Δi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ΔelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ΔelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ΔtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = Δload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @publicApi\n     */\n    function Δi18n(index, message, subTemplateIndex) {\n        Δi18nStart(index, message, subTemplateIndex);\n        Δi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @publicApi\n     */\n    function Δi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ΔelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @publicApi\n     */\n    function Δi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @publicApi\n     */\n    function Δi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        // We determine whether a class has its own metadata by taking the metadata from the parent\n        // constructor and checking whether it's the same as the subclass metadata below. We can't use\n        // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n        // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n        var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n        var parentConstructor = parentPrototype && parentPrototype.constructor;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined &&\n                (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined &&\n                (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @publicApi\n     */\n    function ΔpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @publicApi\n     */\n    function Δpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @publicApi\n     */\n    function ΔpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @publicApi\n     */\n    function ΔpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @publicApi\n     */\n    function ΔpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @publicApi\n     */\n    function ΔpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ?\n            ΔpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @publicApi\n     */\n    function ΔpipeBindV(index, slotOffset, values) {\n        var pipeInstance = Δload(index);\n        return unwrapValue$1(isPure(index) ? ΔpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            add(this.shallow, tNode);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    predicate, descend, read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var lView = getLView();\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = false;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @publicApi\n     */\n    function ΔqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @publicApi\n     */\n    function ΔstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var queryList = ΔviewQuery(predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticViewQueries) {\n            tView.staticViewQueries = true;\n        }\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @publicApi\n     */\n    function ΔviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var viewQuery = query(predicate, descend, read);\n        store(index - HEADER_OFFSET, viewQuery);\n        setCurrentQueryIndex(index + 1);\n        return viewQuery;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @publicApi\n     */\n    function ΔloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return Δload(index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @publicApi\n     */\n    function ΔcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var contentQuery = query(predicate, descend, read);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @publicApi\n     */\n    function ΔstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var queryList = ΔcontentQuery(directiveIndex, predicate, descend, read);\n        var tView = getLView()[TVIEW];\n        queryList._static = true;\n        if (!tView.staticContentQueries) {\n            tView.staticContentQueries = true;\n        }\n    }\n    /**\n     *\n     * @publicApi\n     */\n    function ΔloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @publicApi\n     */\n    function ΔtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ΔdefineBase': ΔdefineBase,\n        'ΔdefineComponent': ΔdefineComponent,\n        'ΔdefineDirective': ΔdefineDirective,\n        'ΔdefineInjectable': ΔdefineInjectable,\n        'ΔdefineInjector': ΔdefineInjector,\n        'ΔdefineNgModule': ΔdefineNgModule,\n        'ΔdefinePipe': ΔdefinePipe,\n        'ΔdirectiveInject': ΔdirectiveInject,\n        'ΔgetFactoryOf': ΔgetFactoryOf,\n        'ΔgetInheritedFactory': ΔgetInheritedFactory,\n        'Δinject': Δinject,\n        'ΔinjectAttribute': ΔinjectAttribute,\n        'ΔtemplateRefExtractor': ΔtemplateRefExtractor,\n        'ΔNgOnChangesFeature': ΔNgOnChangesFeature,\n        'ΔProvidersFeature': ΔProvidersFeature,\n        'ΔInheritDefinitionFeature': ΔInheritDefinitionFeature,\n        'ΔelementAttribute': ΔelementAttribute,\n        'Δbind': Δbind,\n        'Δcontainer': Δcontainer,\n        'ΔnextContext': ΔnextContext,\n        'ΔcontainerRefreshStart': ΔcontainerRefreshStart,\n        'ΔcontainerRefreshEnd': ΔcontainerRefreshEnd,\n        'ΔnamespaceHTML': ΔnamespaceHTML,\n        'ΔnamespaceMathML': ΔnamespaceMathML,\n        'ΔnamespaceSVG': ΔnamespaceSVG,\n        'ΔenableBindings': ΔenableBindings,\n        'ΔdisableBindings': ΔdisableBindings,\n        'ΔallocHostVars': ΔallocHostVars,\n        'ΔelementStart': ΔelementStart,\n        'ΔelementEnd': ΔelementEnd,\n        'Δelement': Δelement,\n        'ΔelementContainerStart': ΔelementContainerStart,\n        'ΔelementContainerEnd': ΔelementContainerEnd,\n        'ΔpureFunction0': ΔpureFunction0,\n        'ΔpureFunction1': ΔpureFunction1,\n        'ΔpureFunction2': ΔpureFunction2,\n        'ΔpureFunction3': ΔpureFunction3,\n        'ΔpureFunction4': ΔpureFunction4,\n        'ΔpureFunction5': ΔpureFunction5,\n        'ΔpureFunction6': ΔpureFunction6,\n        'ΔpureFunction7': ΔpureFunction7,\n        'ΔpureFunction8': ΔpureFunction8,\n        'ΔpureFunctionV': ΔpureFunctionV,\n        'ΔgetCurrentView': ΔgetCurrentView,\n        'ΔrestoreView': ΔrestoreView,\n        'Δinterpolation1': Δinterpolation1,\n        'Δinterpolation2': Δinterpolation2,\n        'Δinterpolation3': Δinterpolation3,\n        'Δinterpolation4': Δinterpolation4,\n        'Δinterpolation5': Δinterpolation5,\n        'Δinterpolation6': Δinterpolation6,\n        'Δinterpolation7': Δinterpolation7,\n        'Δinterpolation8': Δinterpolation8,\n        'ΔinterpolationV': ΔinterpolationV,\n        'Δlistener': Δlistener,\n        'Δload': Δload,\n        'Δprojection': Δprojection,\n        'ΔelementProperty': ΔelementProperty,\n        'ΔcomponentHostSyntheticProperty': ΔcomponentHostSyntheticProperty,\n        'ΔcomponentHostSyntheticListener': ΔcomponentHostSyntheticListener,\n        'ΔpipeBind1': ΔpipeBind1,\n        'ΔpipeBind2': ΔpipeBind2,\n        'ΔpipeBind3': ΔpipeBind3,\n        'ΔpipeBind4': ΔpipeBind4,\n        'ΔpipeBindV': ΔpipeBindV,\n        'ΔprojectionDef': ΔprojectionDef,\n        'Δpipe': Δpipe,\n        'ΔqueryRefresh': ΔqueryRefresh,\n        'ΔviewQuery': ΔviewQuery,\n        'ΔstaticViewQuery': ΔstaticViewQuery,\n        'ΔstaticContentQuery': ΔstaticContentQuery,\n        'ΔloadViewQuery': ΔloadViewQuery,\n        'ΔcontentQuery': ΔcontentQuery,\n        'ΔloadContentQuery': ΔloadContentQuery,\n        'Δreference': Δreference,\n        'ΔelementHostAttrs': ΔelementHostAttrs,\n        'ΔelementStyling': ΔelementStyling,\n        'ΔelementStylingMap': ΔelementStylingMap,\n        'ΔelementStyleProp': ΔelementStyleProp,\n        'ΔelementStylingApply': ΔelementStylingApply,\n        'ΔelementClassProp': ΔelementClassProp,\n        'ΔelementHostStyling': ΔelementHostStyling,\n        'ΔelementHostStylingMap': ΔelementHostStylingMap,\n        'ΔelementHostStyleProp': ΔelementHostStyleProp,\n        'ΔelementHostStylingApply': ΔelementHostStylingApply,\n        'ΔelementHostClassProp': ΔelementHostClassProp,\n        'Δselect': Δselect,\n        'Δtemplate': Δtemplate,\n        'Δtext': Δtext,\n        'ΔtextBinding': ΔtextBinding,\n        'ΔembeddedViewStart': ΔembeddedViewStart,\n        'ΔembeddedViewEnd': ΔembeddedViewEnd,\n        'Δi18n': Δi18n,\n        'Δi18nAttributes': Δi18nAttributes,\n        'Δi18nExp': Δi18nExp,\n        'Δi18nStart': Δi18nStart,\n        'Δi18nEnd': Δi18nEnd,\n        'Δi18nApply': Δi18nApply,\n        'Δi18nPostprocess': Δi18nPostprocess,\n        'ΔresolveWindow': ΔresolveWindow,\n        'ΔresolveDocument': ΔresolveDocument,\n        'ΔresolveBody': ΔresolveBody,\n        'ΔsetComponentScope': ΔsetComponentScope,\n        'ΔsetNgModuleScope': ΔsetNgModuleScope,\n        'ΔsanitizeHtml': ΔsanitizeHtml,\n        'ΔsanitizeStyle': ΔsanitizeStyle,\n        'ΔdefaultStyleSanitizer': ΔdefaultStyleSanitizer,\n        'ΔsanitizeResourceUrl': ΔsanitizeResourceUrl,\n        'ΔsanitizeScript': ΔsanitizeScript,\n        'ΔsanitizeUrl': ΔsanitizeUrl,\n        'ΔsanitizeUrlOrResourceUrl': ΔsanitizeUrlOrResourceUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$4 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$4);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$4, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$4, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten$1(ngModule.schemas) : null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$4,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$4).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten$1(imports.map(computeCombinedExports), resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + renderStringify(type) + \"' declared by the module '\" + renderStringify(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + renderStringify(type) + \" from \" + renderStringify(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(renderStringify).sort();\n                errors.push(\"Type \" + renderStringify(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + renderStringify(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + renderStringify(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + renderStringify(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(renderStringify(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$4);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.template.ngPrivateData = undefined;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + renderStringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + renderStringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + renderStringify(type) + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', renderStringify(type), templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan =\n                        compiler.createParseSourceSpan('Directive', renderStringify(type), sourceMapUrl);\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + renderStringify(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + renderStringify(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        typeArgumentCount: 0,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the `Input` and `Output` decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0] || name;\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = ΔdefineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = Promise.resolve(0);\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__PRE_R3__;\n    function isBoundToModule__PRE_R3__(cf) {\n        return cf instanceof ComponentFactoryBoundToModule;\n    }\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = 0; i < lContainer[VIEWS].length; i++) {\n            var childView = lContainer[VIEWS][i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = '';\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value += renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings)\n                properties[propertyName] = metadataParts[1] + value + metadataParts[2];\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_r = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_o = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_p = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _localeFactory;\n    exports.ɵangular_packages_core_core_s = zoneSchedulerFactory;\n    exports.ɵangular_packages_core_core_f = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_m = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_n = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_l = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_k = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_a = NullInjector;\n    exports.ɵangular_packages_core_core_b = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_c = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_d = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_e = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_j = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = SCHEDULER;\n    exports.ɵangular_packages_core_core_bc = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bd = getLView;\n    exports.ɵangular_packages_core_core_be = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_bf = nextContextImpl;\n    exports.ɵangular_packages_core_core_bj = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bo = getRootContext;\n    exports.ɵangular_packages_core_core_bn = loadInternal;\n    exports.ɵangular_packages_core_core_g = createElementRef;\n    exports.ɵangular_packages_core_core_h = createTemplateRef;\n    exports.ɵangular_packages_core_core_i = createViewRef;\n    exports.ɵangular_packages_core_core_bh = getUrlSanitizer;\n    exports.ɵangular_packages_core_core_bk = makeParamDecorator;\n    exports.ɵangular_packages_core_core_bl = makePropDecorator;\n    exports.ɵangular_packages_core_core_bp = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ΔdefineInjectable = ΔdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ΔdefineInjector = ΔdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR;\n    exports.Injector = Injector;\n    exports.Δinject = Δinject;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ΔdefineBase = ΔdefineBase;\n    exports.ΔdefineComponent = ΔdefineComponent;\n    exports.ΔdefineDirective = ΔdefineDirective;\n    exports.ΔdefinePipe = ΔdefinePipe;\n    exports.ΔdefineNgModule = ΔdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ΔdirectiveInject = ΔdirectiveInject;\n    exports.ΔinjectAttribute = ΔinjectAttribute;\n    exports.ΔgetFactoryOf = ΔgetFactoryOf;\n    exports.ΔgetInheritedFactory = ΔgetInheritedFactory;\n    exports.ΔsetComponentScope = ΔsetComponentScope;\n    exports.ΔsetNgModuleScope = ΔsetNgModuleScope;\n    exports.ΔtemplateRefExtractor = ΔtemplateRefExtractor;\n    exports.ΔProvidersFeature = ΔProvidersFeature;\n    exports.ΔInheritDefinitionFeature = ΔInheritDefinitionFeature;\n    exports.ΔNgOnChangesFeature = ΔNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.Δcontainer = Δcontainer;\n    exports.ΔnextContext = ΔnextContext;\n    exports.ΔelementStart = ΔelementStart;\n    exports.ΔnamespaceHTML = ΔnamespaceHTML;\n    exports.ΔnamespaceMathML = ΔnamespaceMathML;\n    exports.ΔnamespaceSVG = ΔnamespaceSVG;\n    exports.Δelement = Δelement;\n    exports.Δlistener = Δlistener;\n    exports.Δtext = Δtext;\n    exports.ΔembeddedViewStart = ΔembeddedViewStart;\n    exports.Δprojection = Δprojection;\n    exports.Δbind = Δbind;\n    exports.Δinterpolation1 = Δinterpolation1;\n    exports.Δinterpolation2 = Δinterpolation2;\n    exports.Δinterpolation3 = Δinterpolation3;\n    exports.Δinterpolation4 = Δinterpolation4;\n    exports.Δinterpolation5 = Δinterpolation5;\n    exports.Δinterpolation6 = Δinterpolation6;\n    exports.Δinterpolation7 = Δinterpolation7;\n    exports.Δinterpolation8 = Δinterpolation8;\n    exports.ΔinterpolationV = ΔinterpolationV;\n    exports.ΔpipeBind1 = ΔpipeBind1;\n    exports.ΔpipeBind2 = ΔpipeBind2;\n    exports.ΔpipeBind3 = ΔpipeBind3;\n    exports.ΔpipeBind4 = ΔpipeBind4;\n    exports.ΔpipeBindV = ΔpipeBindV;\n    exports.ΔpureFunction0 = ΔpureFunction0;\n    exports.ΔpureFunction1 = ΔpureFunction1;\n    exports.ΔpureFunction2 = ΔpureFunction2;\n    exports.ΔpureFunction3 = ΔpureFunction3;\n    exports.ΔpureFunction4 = ΔpureFunction4;\n    exports.ΔpureFunction5 = ΔpureFunction5;\n    exports.ΔpureFunction6 = ΔpureFunction6;\n    exports.ΔpureFunction7 = ΔpureFunction7;\n    exports.ΔpureFunction8 = ΔpureFunction8;\n    exports.ΔpureFunctionV = ΔpureFunctionV;\n    exports.ΔgetCurrentView = ΔgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ΔrestoreView = ΔrestoreView;\n    exports.ΔcontainerRefreshStart = ΔcontainerRefreshStart;\n    exports.ΔcontainerRefreshEnd = ΔcontainerRefreshEnd;\n    exports.ΔqueryRefresh = ΔqueryRefresh;\n    exports.ΔviewQuery = ΔviewQuery;\n    exports.ΔstaticViewQuery = ΔstaticViewQuery;\n    exports.ΔstaticContentQuery = ΔstaticContentQuery;\n    exports.ΔloadViewQuery = ΔloadViewQuery;\n    exports.ΔcontentQuery = ΔcontentQuery;\n    exports.ΔloadContentQuery = ΔloadContentQuery;\n    exports.ΔelementEnd = ΔelementEnd;\n    exports.ΔelementProperty = ΔelementProperty;\n    exports.ΔcomponentHostSyntheticProperty = ΔcomponentHostSyntheticProperty;\n    exports.ΔcomponentHostSyntheticListener = ΔcomponentHostSyntheticListener;\n    exports.ΔprojectionDef = ΔprojectionDef;\n    exports.Δreference = Δreference;\n    exports.ΔenableBindings = ΔenableBindings;\n    exports.ΔdisableBindings = ΔdisableBindings;\n    exports.ΔallocHostVars = ΔallocHostVars;\n    exports.ΔelementAttribute = ΔelementAttribute;\n    exports.ΔelementContainerStart = ΔelementContainerStart;\n    exports.ΔelementContainerEnd = ΔelementContainerEnd;\n    exports.ΔelementStyling = ΔelementStyling;\n    exports.ΔelementStylingMap = ΔelementStylingMap;\n    exports.ΔelementStyleProp = ΔelementStyleProp;\n    exports.ΔelementStylingApply = ΔelementStylingApply;\n    exports.ΔelementClassProp = ΔelementClassProp;\n    exports.ΔelementHostAttrs = ΔelementHostAttrs;\n    exports.ΔelementHostStyling = ΔelementHostStyling;\n    exports.ΔelementHostStylingMap = ΔelementHostStylingMap;\n    exports.ΔelementHostStyleProp = ΔelementHostStyleProp;\n    exports.ΔelementHostClassProp = ΔelementHostClassProp;\n    exports.ΔelementHostStylingApply = ΔelementHostStylingApply;\n    exports.Δselect = Δselect;\n    exports.ΔtextBinding = ΔtextBinding;\n    exports.Δtemplate = Δtemplate;\n    exports.ΔembeddedViewEnd = ΔembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.Δload = Δload;\n    exports.Δpipe = Δpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.Δi18n = Δi18n;\n    exports.Δi18nAttributes = Δi18nAttributes;\n    exports.Δi18nExp = Δi18nExp;\n    exports.Δi18nStart = Δi18nStart;\n    exports.Δi18nEnd = Δi18nEnd;\n    exports.Δi18nApply = Δi18nApply;\n    exports.Δi18nPostprocess = Δi18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ΔresolveWindow = ΔresolveWindow;\n    exports.ΔresolveDocument = ΔresolveDocument;\n    exports.ΔresolveBody = ΔresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ΔsanitizeHtml = ΔsanitizeHtml;\n    exports.ΔsanitizeStyle = ΔsanitizeStyle;\n    exports.ΔdefaultStyleSanitizer = ΔdefaultStyleSanitizer;\n    exports.ΔsanitizeScript = ΔsanitizeScript;\n    exports.ΔsanitizeUrl = ΔsanitizeUrl;\n    exports.ΔsanitizeResourceUrl = ΔsanitizeResourceUrl;\n    exports.ΔsanitizeUrlOrResourceUrl = ΔsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$3;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}