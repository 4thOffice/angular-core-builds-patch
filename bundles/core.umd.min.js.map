{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__values","o","m","Symbol","iterator","next","value","done","__read","r","e","ar","push","error","__spread","concat","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","defineProperty","ngMetadataName","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","meta","unshift","InjectFlags","Inject","token","Optional","Self","SkipSelf","Host","Attribute","attributeName","getClosureSafeProperty","objWithPropertyToExtract","key","Error","fillProperties","source","ɵɵdefineInjectable","opts","providedIn","undefined","defineInjectable","ɵɵdefineInjector","options","providers","imports","getInjectableDef","type","NG_INJECTABLE_DEF","getInjectorDef","NG_INJECTOR_DEF","ngInjectableDef","ngInjectorDef","stringify","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","fn","R3ResolvedDependencyType","_global","getGlobal","__globalThis","globalThis","__window","window","__self","WorkerGlobalScope","__global","getCompilerFacade","globalNg","ɵcompilerFacade","_injectImplementation","InjectionToken","_desc","__NG_ELEMENT_ID__","INJECTOR","THROW_IF_NOT_FOUND","NEW_LINE","SOURCE","USE_VALUE","provide","String","useValue","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","ɵɵinject","flags","Default","injectInjectorOnly","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","NullInjector","angularCoreDiEnv","ɵɵgetFactoryOf","getFactoryOf","typeAny","def","Type","Function","isType","v","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","INHERITED_CLASS_WITH_DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","_ownParameters","parentCtor","isDelegateCtor","typeStr","test","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","keys","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","getReflect","reflectDependencies","convertDependencies","deps","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","compileInjectable","srcMeta","hasAProvider","isUseClassProvider","isUseFactoryProvider","isUseValueProvider","isUseExistingProvider","compilerMeta","typeArgumentCount","ctorDeps","userDeps","useClass","useFactory","useExisting","USE_VALUE$1","Injectable","SWITCH_COMPILE_INJECTABLE","SWITCH_COMPILE_INJECTABLE__POST_R3__","throwMultipleComponentError","tNode","tagName","throwMixedMultiProviderError","APP_ROOT","NOT_YET","CIRCULAR","EMPTY_ARRAY","NULL_INJECTOR","getNullInjector","createInjector","defType","parent","additionalProviders","R3Injector","_this","records","Map","injectorDefTypes","Set","onDestroy","_destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","provider","processProvider","set","makeRecord","isRootInjector","has","enumerable","configurable","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","record","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","catchInjectorError","injectorErrorName","tokenPath","message","formatError","text","obj","charAt","substr","context","parts","JSON","replace","tokens","defOrWrappedDef","parents","ngModule","defName","isDuplicate","add","imported","pop","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","multi","existing","multiRecord_1","throwCyclicDependencyError","hasOnDestroy","getUndecoratedInjectableFactory","paramLength","inheritedInjectableDef","getInheritedInjectableDef","console","warn","isExistingProvider","isFactoryProvider","classRef_1","throwInvalidProviderError","ngModuleDetail","hasDeps","input","INJECTOR_IMPL__POST_R3__","INJECTOR_IMPL","Injector","NULL","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","constructResolvingPath","findFirstClosedCycle","slice","reverse","k","injectionError","constructResolvingMessage","originalError","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","multiProvider","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProvider","some","metadata","_createDependency","paramMetadata","ChangeDetectionStrategy","ChangeDetectorStatus","Query","UNDEFINED","ReflectiveInjector","resolve","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","resolvedProvider","_normalizeProviders","invalidProviderError","from","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","_getByReflectiveDependency","instantiationError","originalException","originalStack","first","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","ANALYZE_FOR_ENTRY_COMPONENTS","ContentChildren","selector","data","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","resolveComponentResources","resourceResolver","componentResolved","urlMap","cachedResourceResolve","url","promise","resp","then","unwrapResponse","componentResourceResolutionQueue","component","promises","templateUrl","template","styleUrls","styles","styleOffset","styleUrl","style","splice","fullyResolved","Promise","all","componentDefResolved","componentDefPendingResolution","delete","clearResolutionOfComponentResourcesQueue","ɵChangeDetectorStatus","ViewEncapsulation","componentNeedsResolution","old","response","noSideEffects","EMPTY_OBJ","EMPTY_ARRAY$1","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","_renderCompCount","ɵɵdefineComponent","componentDefinition","typePrototype","declaredInputs","providersResolver","consts","vars","ngContentSelectors","hostBindings","contentQueries","inputs","outputs","exportAs","onChanges","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","_","setInput","schemas","tView","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","extractDirectiveDef","extractPipeDef","ɵɵsetComponentScope","getComponentDef","getDirectiveDef","getPipeDef","ɵɵdefineNgModule","bootstrap","declarations","transitiveCompileScopes","ɵɵsetNgModuleScope","scope","getNgModuleDef","secondary","newLookup","minifiedKey","publicName","declaredName","ɵɵdefineBase","baseDefinition","ɵɵdefineDirective","ɵɵdefinePipe","pipeDef","pure","getBaseDef","throwNotFound","renderStringify","stringifyForError","defaultScheduler","requestAnimationFrame","setTimeout","ɵɵresolveWindow","element","ownerDocument","defaultView","ɵɵresolveDocument","ɵɵresolveBody","body","INTERPOLATION_DELIMITER","isPropMetadataString","str","maybeUnwrapFn","HOST","TVIEW","FLAGS","PARENT","NEXT","QUERIES","T_HOST","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR$1","RENDERER_FACTORY","RENDERER","SANITIZER","CHILD_HEAD","CHILD_TAIL","CONTENT_QUERIES","DECLARATION_VIEW","PREORDER_HOOK_FLAGS","HEADER_OFFSET","throwError","TYPE","ACTIVE_INDEX","NATIVE","CONTAINER_HEADER_OFFSET","MONKEY_PATCH_KEY_NAME","unwrapRNode","isLView","isLContainer","isStylingContext","getNativeByIndex","lView","getNativeByTNode","hostView","getTNode","view","loadInternal","getComponentViewByIndex","nodeIndex","slotValue","isComponent","isComponentDef","isRootView","readPatchedData","readPatchedLView","viewAttachedToContainer","resetPreOrderHookFlags","registerPreOrderHooks","directiveIndex","directiveDef","initialPreOrderHooksLength","initialPreOrderCheckHooksLength","preOrderHooks","preOrderCheckHooks","registerPostOrderHooks","firstTemplatePass","directiveStart","end","directiveEnd","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executePreOrderHooks","currentView","checkNoChangesMode","currentNodeIndex","executeHooks","firstPassHooks","checkHooks","initPhaseState","hooksToCall","callHooks","arr","initPhase","nodeIndexLimit","lastNodeIndexFound","callHook","isInitHook","hook","directive","elementDepthCount","stylingContext","setCachedStylingContext","bindingsEnabled","currentDirectiveDef","setCurrentDirectiveDef","ɵɵenableBindings","ɵɵdisableBindings","getLView","previousOrParentTNode","isParent","MIN_DIRECTIVE_ID","activeDirectiveId","activeDirectiveSuperClassDepthPosition","activeDirectiveSuperClassHeight","setActiveHostElement","elementIndex","_selectedIndex","setSelectedIndex","getActiveDirectiveId","incrementActiveDirectiveId","adjustActiveDirectiveSuperClassDepthPosition","delta","Math","max","getActiveDirectiveSuperClassHeight","getActiveDirectiveSuperClassDepth","ɵɵrestoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","bindingRootIndex","getBindingRoot","setBindingRoot","currentQueryIndex","getCurrentQueryIndex","setCurrentQueryIndex","enterView","newView","hostTNode","oldView","bindingStartIndex","leaveView","getSelectedIndex","_currentNamespace","ɵɵnamespaceSVG","ɵɵnamespaceMathML","ɵɵnamespaceHTML","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","removeChild","firstChild","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","attributes","attrName","item","removeAttribute","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","sanitizeSrcset","srcset","split","trim","tagSet","tags","e_1","_b","_c","e_1_1","return","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","ARIA_ATTRS","VALID_ATTRS","SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","current","traverseContent","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","parentNode","nodeName","toLowerCase","elAttr","lower","encodeEntities","node","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","c","ɵɵsanitizeHtml","getSanitizer","sanitize","HTML","document","ɵɵsanitizeStyle","unsafeStyle","STYLE","ɵɵsanitizeUrl","unsafeUrl","URL","ɵɵsanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","ɵɵsanitizeScript","unsafeScript","SCRIPT","ɵɵsanitizeUrlOrResourceUrl","tag","getUrlSanitizer","ɵɵdefaultStyleSanitizer","RendererStyleFlags3","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","NodeInjectorFactory","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","getLContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","createLContext","attachPatchData","rElement","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","CorePlayerHandler","_players","flushPlayers","player","state","play","queuePlayer","DEFAULT_TEMPLATE_DIRECTIVE_INDEX","ANIMATION_PROP_PREFIX","createEmptyStylingContext","wrappedElement","initialStyles","initialClasses","allocateOrUpdateDirectiveIntoContext","singlePropValuesIndex","styleSanitizer","directiveRegistry","limit","propValuesStartPosition","getStylingContextFromLView","viewData","storageIndex","wrapper","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","hasClassInput","hasStyleInput","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","allocPlayerContext","setUpAttributes","attrs","isProc","namespaceURI","attrVal","setAttribute","setAttributeNS","setProperty","attrsStylingIndexOf","startIndex","val","isNameOnlyAttributeMarker","marker","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getLViewParent","findComponentView","rootTNode","getRootContext","viewOrComponent","getRootView","componentOrLView","includeViewProviders","setIncludeViewProviders","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","NodeInjector","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","previousInjectImplementation","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","previousIncludeViewProviders","injectorView","isFirstHostTNode","_tNode","_lView","ɵɵgetInheritedFactory","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","_findOriginalError","_findContext","errorLogger","getErrorLogger","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","ELEMENT_MARKER","COMMENT_MARKER","_stylingMode","runtimeIsNewStylingInUse","NO_CHANGE","enqueueHostInstruction","priority","instructionFn","instructionFnArgs","buffer","findNextInsertionIndex","BoundPlayerFactory","initializeStaticContext","stylingStartIndex","patchContextWithStaticAttrs","attrsStylingStartIndex","attr","patchInitialStylingValue","initialStyling","directiveOwnerIndex","allowValueChange","addOrUpdateStaticStyle","renderInitialClasses","setClass","renderInitialStyles","setStyle","getMatchingBindingIndex","bindingName","start","getProp","updateClassMap","classesInput","updateStylingMap","updateStyleMap","stylesInput","entryIsClassBased","isMultiValueCacheHit","newValue","readCachedMapValue","propNames","playerBuilder","ClassAndStylePlayerBuilder","rawValue","playerBuilderPosition","playerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","setPlayerBuilder","applyAll","getMultiClassesStartIndex","getMultiStylesStartIndex","patchStylingMapIntoContext","ctxStart","ctxEnd","cacheValue","dirty","cacheIndex","cachedValues","ownershipValuesStartIndex","existingCachedValueCount","valuesEntryShapeChange","totalUniqueValues","totalNewAllocatedSlots","applyAllProps","ctxIndex","totalRemainingProperties","currentProp","normalizedProp","mapProp","hyphenate","currentValue","getValue","currentDirectiveIndex","getDirectiveIndexFromEntry","currentFlag","getPointers","hasValueChanged","setValue","setPlayerBuilderIndex","hasInitialValueChanged","setDirty","getStyleSanitizer","propertiesLoop","isInsideOwnershipArea","distantCtxDirectiveIndex","distantCtxPlayerBuilderIndex","getPlayerBuilderIndex","distantCtxValue","distantCtxFlag","swapMultiContextEntries","insertNewMultiProperty","prepareInitialFlag","ctxValue","ctxFlag","updateCachedMapValue","startPosition","endPosition","totalValues","dirtyFutureValues","nextStartPosition","totalStylingEntries","classCache","diffInStartPosition","setContextDirty","setContextPlayersDirty","updateClassProp","offset","forceOverride","updateSingleStylingValue","updateStyleProp","isClassBased","singleIndex","getSinglePropIndexValue","currValue","currFlag","currDirective","value_1","currPlayerIndex","newIndex","setSanitizeFlag","sanitizeYes","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","store","DashCase","removeStyle","removeProperty","className","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","tmpDirectiveIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","initialIndex","getInitialStylingValuesIndexOf","initialValue","a","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","keyValues","singlePropOffsetRegistryIndex","offsets","dirs","currentDirectiveOwner","newDirectiveOwner","getInitialClassNameValue","initialClassValues","registerMultiMapEntry","count","staticStyles","getBindingNameFromIndex","updateContextDirectiveIndex","getConfig","getProp$1","getGuardMask","getValuesCount","getValue$1","getDefaultValue","allowStylingFlush","lockContext","setConfig","isContextLocked","currentStyleIndex","currentClassIndex","stylesBitMask","classesBitMask","deferredBindingQueue","DEFAULT_BINDING_VALUE","DEFAULT_SIZE_VALUE","DEFAULT_MASK_VALUE","DEFAULT_BINDING_INDEX_VALUE","BIT_MASK_APPLY_ALL","updateBindingData","counterIndex","bindingIndex","deferRegistration","deferBindingRegistration","flushDeferredBindings","registerBinding","countId","bindingValue","found","valuesCount","allocateNewContextEntry","addBindingIntoContext","lastValueIndex","applyStyling","bindingData","bitMask","applyStylingFn","forceApplyDefaultValues","processAllEntries","guardMask","isFinalValue","valueToApply","setStyle$1","setClass$1","classList","TStylingContextDebug","entries","defaultValue","bindingsStartPosition","sources","NodeStylingDebug","_data","_contextDebug","debug","contextEntries","finalValues","_mapValues","sourceValues","finalValue","toDebug","assertDefined","actual","toHtml","includeChildren","isTextNode","textContent","readLViewValue","LViewDebug","_raw_lView","__raw__flags__","creationMode","firstViewPass","checkAlways","attached","destroyed","isRoot","indexWithinInitPhase","toDebugNodes","debugNodes","tNodeCursor","componentLViewDebug","classes","newStyles","newClasses","nodes","cleanup","rendererFactory","childHead","childTail","declarationView","queries","tHost","childViews","__other__","LContainerDebug","_raw_lContainer","I18NDebugItem","__raw_opCode","I18nMutateOpCodesDebug","__raw_opCodes","__lView","results","opCode","commentValue","code","I18nUpdateOpCodesDebug","icus","checkBit","skipCodes","tIcuIndex","tIcu","sanitizeFn","attrValue","NG_TEMPLATE_SELECTOR","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeAttrs","nameOnlyMarkerIdx","getNameOnlyMarkerIndex","skipToNextSelector","isPositive","selectorAttrValue","readClassValueFromTNode","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","compareAgainstClassName","isInlineTemplate","bindingsMode","maybeAttrName","matchTemplateAttribute","isNodeMatchingSelectorList","matchingProjectionSelectorIndex","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","isSelectorInSelectorList","list","selectorListLoop","currentSelectorInList","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","setHostBindings","selectedIndex","expandoInstructions","expandoStartIndex","currentElementIndex","instruction","providerCount","staticContentQueries","refreshChildComponents","viewAttachedToChangeDetector","syncViewWithBlueprint","componentView","componentTView","checkView","directiveDefIdx","elementCreate","overriddenRenderer","rendererToUse","namespace","getNamespace","createElementNS","createLView","tHostNode","createNodeAtIndex","createTNode","assignTViewNodeToLView","tParentNode","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","executeTemplate","getRenderFlags","renderComponentOrTemplate","templateFn","normalExecutionPath","creationModeIsActive","begin","rf","prevSelectedIndex","setNodeStylingTemplate","attrsStartIndex","stylingAttrsStartIndex","executeContentQueries","isContentQueryHost","createDirectivesAndLocals","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","invokeHostBindingsInCreationMode","saveResolvedLocalsInData","localIndex","getOrCreateTView","createTView","viewIndex","initialViewLength","createViewBlueprint","viewQueryStartIndex","staticViewQueries","pipeRegistry","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","tParent","propertyMetadataStartIndex","propertyMetadataEndIndex","initialInputs","tViews","projectionNext","projection","onElementCreationFns","generatePropertyAliases","direction","propStore","isInput","defs","propertyAliasMap","internalName","ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","elementPropertyInternal","nativeOnly","loadRendererFn","inputData","dataValue","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","childComponentLView","savePropertyDebugData","lastBindingIndex","bindingMetadata","previousExpandoLength","directiveCount","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","i_1","minifiedInputName","privateName","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","lViewOrLContainer","markViewDirty","parent_2","scheduleTick","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChangesInternal","detectChangesInRootView","hostTView","executeViewQueryFn","storeBindingMetadata","prefix","suffix","CLEAN_PROMISE","getCleanup","getTViewCleanup","loadComponentRenderer","errorHandler","applyOnCreateInstructions","fns","ɵɵallocHostVars","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","getLContainer","embeddedView","container","getContainerRenderParent","tViewNode","nativeParentNode","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","firstView","lContainer","head","head_1","head_1_1","nativeInsertBefore","nativeRemoveNode","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","indexInContainer","containerLength","detachView","removeIndex","viewToDetach","removeView","detachedView","destroyLView","destroyViewTree","rootView","cleanUpView","getParentState","executeOnDestroys","removeListeners","tCleanup","lCleanup","idxOrTargetGetter","useCaptureOrSubIdx","removeEventListener","unsubscribe","insertBefore","nativeAppendOrInsertBefore","nativeAppendChild","childEl","childTNode","getRenderParent","getHighestElementOrICUContainer","getHostNative","ShadowDom","Native","anchorNode","getNativeAnchorNode","parentTNode","getBeforeNodeForView","childEl_1","childEl_1_1","containerNative","viewTNode","rNode","isHostElement","nativeParent","nativeRemoveChild","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","getStylesContext","getContext","getClassesContext","getActiveDirectiveStylingIndex","ɵɵstyling","classBindingNames","styleBindingNames","directiveStylingIndex","getActiveDirectiveStylingIndex$1","stylingInit","updateLastDirectiveIndex","initStyling","registerHostDirective","updateContextWithBindings","findOrPatchDirectiveIntoRegistry","staticModeOnly","hyphenateEntries","newEntries","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","cachedClassMapValues","cachedStyleMapValues","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","name_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","newStylesSpaceAllocationSize","newClassesSpaceAllocationSize","cachedStyleMapIndex","i_7","cachedClassMapIndex","i_8","ɵɵstyleProp","styleIndex","valueToAdd","resolveStylePropValue","getStylingContext","styleProp","updateStyleBinding","ɵɵclassProp","classIndex","booleanOrNull","classProp","updateClassBinding","ɵɵstyleMap","styleInputVal","forceStylesAsString","ɵɵclassMap","classInputVal","forceClassesAsString","ɵɵstylingApply","runtimeAllowOldStyling","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","allowFlush","flushQueue","isContextDirty","flushPlayerBuilders","multiStartIndex","directiveIndex_1","playersStartIndex","playerInsertionIndex","oldPlayer","stylingApply","getRenderer","getNativeFromLView","applyClasses","isFirstPass","applyStyles","getCachedStylingContext","ɵɵelementStart","initialStylesIndex","initialClassesIndex","lastAttrIndex","getElementDepthCount","increaseElementDepthCount","registerInitialStylingIntoContext","classesContext","stylesContext","currentQueries","addNode","clone","ɵɵelementEnd","decreaseElementDepthCount","getInitialStyleStringValue","initialStyleValues","styleString","ɵɵelement","ɵɵelementAttribute","strValue","ɵɵelementHostAttrs","hostElementIndex","_symbolIterator","getSymbolIterator","Symbol_1","getOwnPropertyNames","looseIdentical","isNaN","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","isJsObject","updateBinding","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","ɵɵproperty","bindReconciledValue","ɵɵbind","ɵɵelementProperty","ɵɵcomponentHostSyntheticProperty","ɵɵattribute","ɵɵinterpolationV","ɵɵinterpolation1","v0","ɵɵinterpolation2","i0","v1","ɵɵinterpolation3","i1","v2","ɵɵinterpolation4","i2","v3","ɵɵinterpolation5","i3","v4","ɵɵinterpolation6","i4","v5","ɵɵinterpolation7","i5","v6","ɵɵinterpolation8","i6","v7","ɵɵpropertyInterpolate","ɵɵpropertyInterpolate1","interpolatedValue","ɵɵpropertyInterpolate2","ɵɵpropertyInterpolate3","ɵɵpropertyInterpolate4","ɵɵpropertyInterpolate5","ɵɵpropertyInterpolate6","ɵɵpropertyInterpolate7","ɵɵpropertyInterpolate8","ɵɵpropertyInterpolateV","ɵɵattributeInterpolate1","ɵɵattributeInterpolate2","ɵɵattributeInterpolate3","ɵɵattributeInterpolate4","ɵɵattributeInterpolate5","ɵɵattributeInterpolate6","ɵɵattributeInterpolate7","ɵɵattributeInterpolate8","ɵɵattributeInterpolateV","markDirty","ɵɵcontainer","containerInternal","addTContainerToQueries","ɵɵtemplate","tContainerNode","ɵɵcontainerRefreshStart","ɵɵcontainerRefreshEnd","nextIndex","insertNodeBeforeViews","comment","createComment","ɵɵreference","getContextLView","ɵɵload","ɵɵdirectiveInject","ɵɵinjectAttribute","attrNameToInject","injectAttributeImpl","attrsLength","accumulatedClasses","accumulatedStyles","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵembeddedViewStart","viewBlockId","containerTNode","scanForView","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","ɵɵembeddedViewEnd","viewHost","ɵɵgetCurrentView","isPromise","isObservable","subscribe","ɵɵlistener","eventName","listenerFn","useCapture","eventTargetResolver","listenerInternal","ɵɵcomponentHostSyntheticListener","processOutputs","lCleanupIndex","existingListener","hasDirectives","findExistingListener","tNodeIdx","cleanupEventName","listenerIdxInLCleanup","__ngNextListenerFn__","wrapListener","cleanupFn","listen","propsLength","subscription","idx","executeListenerWithErrorHandling","wrapWithPreventDefault","wrapListenerIn_markDirtyAndPreventDefault","nextListenerFn","preventDefault","returnValue","ɵɵnextContext","level","nextContextImpl","walkUpViews","nestingLevel","ɵɵprojectionDef","componentNode","projectionHeads","tails","componentChild","bucketIndex","ɵɵprojection","selectorIndex","appendProjectedNodes","projectedView","nodeToProject","ɵɵselect","ɵɵtext","textNative","ɵɵtextBinding","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","getComponent","loadLContextFromNode","getComponentAtNodeIndex","getContext$1","getViewComponent","loadLContext","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","isBrowserEvents","listener","getListeners","listeners","firstParam","secondParam","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","SimpleChange","previousValue","firstChange","isFirstChange","ɵɵNgOnChangesFeature","NgOnChangesFeatureImpl","ngInherit","definition","ngOnChanges","ngOnChangesSetInput","wrapOnChanges","wrapOnChangesHook_inPreviousChangesStorage","simpleChangesStore","getSimpleChangesStore","setSimpleChangesStore","SIMPLE_CHANGES_STORE","previousChange","ɵɵInheritDefinitionFeature","superType","getSuperType","superDef","baseDef","writeableDef","maybeUnwrapEmpty","baseViewQuery","baseContentQueries","baseHostBindings","inheritHostBindings","inheritViewQuery","inheritContentQueries","superHostBindings","superViewQuery","superContentQueries","features_1","features_1_1","superPrototype","prevViewQuery","ctx","prevContentQueries","prevHostBindings","resolveProvider","lInjectablesBlueprint","providerFactory","beginIndex","isClassProvider","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","multiResolve","factories","componentCount","multiProviders","ɵɵProvidersFeature","viewProviders","processProvidersFn","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","nativeNode","componentHost","currentProjectedNode","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","detectChanges","checkNoChanges","checkNoChangesInternal","attachToViewContainerRef","vcRef","detachFromAppRef","renderDetachView","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_hostLContainer","_injectorIndex","createEmbeddedView","createEmbeddedViewAndNode","viewRef","hostContainer","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","SWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Version","Renderer2","SWITCH_RENDERER2_FACTORY","SWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","VERSION","full","major","minor","patch","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_records","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","find","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","createViewRef","componentIndex","hostComponentView","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","SWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","ViewContainerRef_","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","viewAmount","templateRef","adjustedIdx","_adjustIndex","createComponent","componentFactory","ngModuleRef","contextInjector","parentInjector","componentRef","insert","move","shift","commentNode","nativeNextSibling","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","err","_addDebugContext","logError","viewDestroyedError","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView$1","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","elDef","elData","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","disposables","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","delegate","selectorOrNode","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","setElementProperty","propertyName","propertyValue","setElementAttribute","attributeValue","ns","setBindingDebugInfo","setElementClass","isAdd","setElementStyle","styleName","styleValue","invokeElementMethod","methodName","setText","animate","moduleType","bootstrapComponents","NgModuleRef_","_moduleType","_bootstrapComponents","_destroyListeners","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","outputIndex","directChildFlags","childMatchedQueries","query","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","output","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","changes","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","array","nonMinified","ROOT_CONTEXT","SCHEDULER","isBoundToModule","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","isIsolated","tElementNode","rootLView","oldLView","nodesforSlot","ComponentRef$1","_rootLView","destroyCbs","addAllToArray","items","flatten","dst","ngI18nClosureMode","goog","getMsg","MARKER","ICU_BLOCK_REGEXP","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","ROOT_TEMPLATE_ID","PP_MULTI_VALUE_PLACEHOLDERS_REGEXP","PP_PLACEHOLDERS_REGEXP","PP_ICU_VARS_REGEXP","PP_ICUS_REGEXP","PP_CLOSE_TEMPLATE_REGEXP","PP_TEMPLATE_ID_REGEXP","extractParts","pattern","prevPos","braceStack","braces","lastIndex","exec","pos","block","parseICUBlock","substring_1","cases","icuType","mainBinding","binding","parseInt","blocks","assertGreaterThan","expected","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","min","i18nVarsCount","parentIndexStack","ɵɵi18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","phIndex","icuNodeIndex","icuStart","hasBinding","textNodeIndex","allocExpando","numSlotsToAlloc","update","appendI18nNode","previousTNode","cursor","ɵɵi18nPostprocess","replacements","matches_1","templateIdsStack_1","phs","tmpl","placeholders_1","placeholder","templateId","isCloseTemplateTag","currentTemplateId","placeholders","_idx","ɵɵi18nEnd","i18nEndFirstPass","rootIndex","tI18n","lastCreatedNode","visitedNodes","readCreateOpCodes","removeNode","createDynamicNodeAtIndex","currentTNode","textRNode","destinationNodeIndex","elementNodeIndex","commentNodeIndex","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","removedPhRNode","ɵɵi18n","ɵɵi18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","ɵɵi18nExp","expression","ɵɵi18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","icuTNode","removeCodes","removeOpCode","activeIndex","caseIndex","getCaseIndex","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","opCodes","parseNodes","currentNode","nestedIcusToCreate","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","ngDevMode","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","TRANSLATIONS","LOCALIZE_PH_REGEXP","ɵɵi18nLocalize","assertSameOrNotExisting","incoming","registerNgModuleType","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","_r3Injector","NgModuleFactory$1","moduleRef","ɵɵpureFunction0","slotOffset","pureFn","thisArg","ɵɵpureFunction1","exp","ɵɵpureFunction2","ɵɵpureFunction3","ɵɵpureFunction4","ɵɵpureFunction5","exp5","ɵɵpureFunction6","exp6","ɵɵpureFunction7","exp7","ɵɵpureFunction8","exp8","ɵɵpureFunctionV","exps","ɵɵpipe","pipeName","getPipeDef$1","pipeInstance","ɵɵpipeBind1","unwrapValue$1","isPure","transform","ɵɵpipeBind2","ɵɵpipeBind3","ɵɵpipeBind4","ɵɵpipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","completeFn","sink","Subscription","Subject","QueryList","_results","filter","reduce","init","toArray","reset","resultsTree","last","notifyOnChanges","LQueries_","shallow","deep","track","queryList","predicate","descend","read","createLQuery","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","removeView$1","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","insertBeforeContainer","addMatch","matchingValue","insertBeforeViewMatches","createPredicate","_valuesTree","createQueryListInLView","isStatic","_static","storeCleanupWithContext","ɵɵqueryRefresh","queryListImpl","ɵɵstaticViewQuery","viewQueryInternal","ɵɵviewQuery","ɵɵloadViewQuery","ɵɵcontentQuery","contentQueryInternal","contentQuery","tViewContentQueries","ɵɵstaticContentQuery","ɵɵloadContentQuery","ɵɵtemplateRefExtractor","angularCoreEnv","EMPTY_ARRAY$3","moduleQueue","flushingModuleQueue","flushModuleScopingQueueAsMuchAsPossible","every","isResolvedDeclaration","setScopeOnDeclaredComponents","declaration","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","expandModuleWithProviders","emitInline","compileInjector","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","compilation","dir","pipe","processNgModuleFn","isNgModule","scopes","exported","declared","importedType","importedScope","entry","exportedType","exportedScope","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","typeSourceSpan","createParseSourceSpan","preserveWhitespaces","interpolation","usesInheritance","addBaseDefToUndecoratedParents","hasSelectorScope","compileDirective","sourceMapUrl","facade","extendsDirectlyFromObject","extractQueriesMetadata","isContentQuery","lifecycle","usesOnChanges","part","viewQueries","objPrototype","extractBaseDefMetadata","compileBase","hasHostDecorators","_loop_1","field","ann","metadataName","bindingPropertyName","isQueryAnn","queriesMeta","_loop_2","annotations_1","isInputAnn","convertToR3QueryMetadata","splitByComma","piece","static","compilePipe","typeName","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","Input","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","catch","ApplicationInitStatus_Factory","APP_ID","APP_ID_RANDOM_PROVIDER","_appIdRandomProviderFactory","_randomChar","fromCharCode","random","trace","events","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","Console_Factory","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync__POST_R3__","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync__POST_R3__","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","Compiler_Factory","COMPILER_OPTIONS","CompilerFactory","wtfEnabled","detectWTF","wtf","noopScope","arg0","arg1","wtfCreateScope","createScope","wtfLeave","leave","leaveScope","wtfStartTimeRange","startTimeRange","rangeType","beginTimeRange","wtfEndTimeRange","endTimeRange","range","scheduleMicroTask","Zone","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","Testability_Factory","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","TestabilityRegistry_Factory","_NoopGetTestability","compileNgModuleFactory","compileNgModuleFactory__POST_R3__","moduleFactory","isComponentResourceResolutionQueueEmpty","compilerProviders","_mergeArrays","resourceLoader","ResourceLoader","isBoundToModule__POST_R3__","cf","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","desc","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","bootstrapModuleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","exceptionHandler","_callAndReportToErrorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","ApplicationRef","ngDoBootstrap","PlatformRef_Factory","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","componentOrFactory","compRef","_unloadComponent","_loadComponent","_tickScope","_d","_e","_f","attachView","ApplicationRef_Factory","NgModuleFactoryLoader","getModuleFactory__POST_R3__","getRegisteredNgModuleType","noModuleError","getModuleFactory","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadAndCompile","exportName","System","import","checkNotEmpty","loadFactory","factoryClassSuffix","SystemJsNgModuleLoader_Factory","modulePath","ViewRef$1","EmbeddedViewRef","DebugEventListener","DebugNode__PRE_R3__","_debugContext","DebugElement__PRE_R3__","addChild","providerTokens","childNodes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","collectPropertyBindings","getFirstBindingIndex","metadataIndex","currentBindingIndex","metadataParts","hostProperties","collectHostPropertyBindings","hostPropIndex","collectClassNames","debugElement","eAttrs","lContext","eClasses","eStyles","getPropertyValue","children","getDebugNode__POST_R3__","_queryAllR3","elementsOnly","_queryNodeChildrenR3","rootNativeNode","_addQueryMatchR3","_queryNodeChildrenInContainerR3","nextLView","childView","debugNode","getDebugNode","_nativeNodeToDebugNode","indexDebugNode","MissingTranslationStrategy","DebugNode","DebugElement","platformCore","LOCALE_ID","TRANSLATIONS$1","TRANSLATIONS_FORMAT","ViewAction","APPLICATION_MODULE_PROVIDERS","zoneSchedulerFactory","queue","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","ApplicationModule","ApplicationModule_Factory","parentEl","listenToElementOutputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","checkAndUpdateElementValue","securityContext","renderValue","unit","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵsetCurrentInjector","ɵgetInjectableDef","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵclearResolutionOfComponentResourcesQueue","ɵresolveComponentResources","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetDirectives","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","ɵi18nConfigureLocalize","i18nConfigureLocalize","translations","ɵsetClassMetadata","setClassMetadata","clazz","parentPrototype","parentConstructor","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵflushModuleScopingQueueAsMuchAsPossible","ɵtransitiveScopesFor","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵNG_ELEMENT_ID","ɵNG_COMPONENT_DEF","ɵNG_DIRECTIVE_DEF","ɵNG_PIPE_DEF","ɵNG_MODULE_DEF","ɵNG_BASE_DEF","ɵNG_INJECTABLE_DEF","ɵNG_INJECTOR_DEF","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","ɵisBoundToModule__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","ɵgetModuleFactory__POST_R3__","ɵregisterNgModuleType","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵcreateInjector","ɵINJECTOR_IMPL__POST_R3__","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","ns_1","resolveRendererType2","isFilled","None","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v8.0.0-rc.0+311.sha-2cdbe9b.with-local-changes\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        /** Check self and check parent injector if needed */\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't ascend to ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * @deprecated in v8, delete after v10. This API should be used only be generated code, and that\n     * code should now use ɵɵdefineInjectable instead.\n     * @publicApi\n     */\n    var defineInjectable = ɵɵdefineInjectable;\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function ɵɵdefineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` in a way which is immune to accidentally reading inherited\n     * value.\n     *\n     * @param type A type which may have its own (non-inherited) `ngInjectableDef`.\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectableDef` for `type` or read the `ngInjectableDef` from one of its ancestors.\n     *\n     * @param type A type which may have `ngInjectableDef`, via inheritance.\n     *\n     * @deprecated Will be removed in v10, where an error will occur in the scenario if we find the\n     * `ngInjectableDef` on an ancestor only.\n     */\n    function getInheritedInjectableDef(type) {\n        if (type && type[NG_INJECTABLE_DEF]) {\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            // ngDevMode &&\n            console.warn(\"DEPRECATED: DI is instantiating a token \\\"\" + type.name + \"\\\" that inherits its @Injectable decorator but does not provide one itself.\\n\" +\n                (\"This will become an error in v10. Please add @Injectable() to the \\\"\" + type.name + \"\\\" class.\"));\n            return type[NG_INJECTABLE_DEF];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getGlobal() {\n        var __globalThis = typeof globalThis !== 'undefined' && globalThis;\n        var __window = typeof window !== 'undefined' && window;\n        var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n            self instanceof WorkerGlobalScope && self;\n        var __global = typeof global !== 'undefined' && global;\n        // Always use __globalThis if available, which is the spec-defined global variable across all\n        // environments, then fallback to __global first, because in Node tests both __global and\n        // __window may be defined and _global should be __global in that case.\n        return __globalThis || __global || __window || __self;\n    }\n    var _global = getGlobal();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global['ng'];\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            this.ngInjectableDef = undefined;\n            if (typeof options == 'number') {\n                // This is a special hack to assign __NG_ELEMENT_ID__ to this instance.\n                // __NG_ELEMENT_ID__ is Used by Ivy to determine bloom filter id.\n                // We are using it to assign `-1` which is used to identify `Injector`.\n                this.__NG_ELEMENT_ID__ = options;\n            }\n            else if (options !== undefined) {\n                this.ngInjectableDef = ɵɵdefineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR = new InjectionToken('INJECTOR', -1 // `-1` is used by Ivy DI system as special value to recognize it as `Injector`.\n    );\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var SOURCE = '__source';\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function ɵɵinject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects a token from the currently active injector.\n     *\n     * Must be used in the context of a factory function such as one defined for an\n     * `InjectionToken`. Throws an error if not called from such a context.\n     *\n     * Within such a factory function, using this function to request injection of a dependency\n     * is faster and more type-safe than providing an additional array of dependencies\n     * (as has been common with `useFactory` providers).\n     *\n     * @param token The injection token for the dependency to be injected.\n     * @param flags Optional flags that control how injection is executed.\n     * The flags correspond to injection strategies that can be specified with\n     * parameter decorators `@Host`, `@Self`, `@SkipSef`, and `@Optional`.\n     * @returns True if injection is successful, null otherwise.\n     *\n     * @usageNotes\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     * @publicApi\n     */\n    var inject = ɵɵinject;\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = resolveForwardRef(types[i]);\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional' || meta === Optional) {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf' || meta === SkipSelf) {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self' || meta === Self) {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject || meta === Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(ɵɵinject(type, flags));\n            }\n            else {\n                args.push(ɵɵinject(arg));\n            }\n        }\n        return args;\n    }\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (notFoundValue === THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                var error = new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n                error.name = 'NullInjectorError';\n                throw error;\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    function catchInjectorError(e, token, injectorErrorName, source) {\n        var tokenPath = e[NG_TEMP_TOKEN_PATH];\n        if (token[SOURCE]) {\n            tokenPath.unshift(token[SOURCE]);\n        }\n        e.message = formatError('\\n' + e.message, tokenPath, injectorErrorName, source);\n        e[NG_TOKEN_PATH] = tokenPath;\n        e[NG_TEMP_TOKEN_PATH] = null;\n        throw e;\n    }\n    function formatError(text, obj, injectorErrorName, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"\" + injectorErrorName + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreDiEnv = {\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵgetFactoryOf': getFactoryOf,\n    };\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var INHERITED_CLASS_WITH_DELEGATE_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(\\)\\s*{\\s+super\\(\\.\\.\\.arguments\\)/;\n    /**\n     * Determine whether a stringified type is a class which delegates its constructor\n     * to its parent.\n     *\n     * This is not trivial since compiled code can actually contain a constructor function\n     * even if the original source code did not. For instance, when the child class contains\n     * an initialized instance property.\n     */\n    function isDelegateCtor(typeStr) {\n        return DELEGATE_CTOR.test(typeStr) || INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr) ||\n            (INHERITED_CLASS.test(typeStr) && !INHERITED_CLASS_WITH_CTOR.test(typeStr));\n    }\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (isDelegateCtor(typeStr)) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.ownPropMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            return this._ownPropMetadata(typeOrFunc, getParentCtor(typeOrFunc)) || {};\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined,\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreDiEnv, \"ng:///\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$1 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    function throwCyclicDependencyError(token) {\n        throw new Error(\"Cannot instantiate cyclic dependency! \" + token);\n    }\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n    function throwMixedMultiProviderError() {\n        throw new Error(\"Cannot mix multi providers and regular providers\");\n    }\n    function throwInvalidProviderError(ngModuleType, providers, provider) {\n        var ngModuleDetail = '';\n        if (ngModuleType && providers) {\n            var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n            ngModuleDetail =\n                \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n        }\n        throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR = {};\n    var EMPTY_ARRAY = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR === undefined) {\n            NULL_INJECTOR = new NullInjector();\n        }\n        return NULL_INJECTOR;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders, name) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent, name);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent, source) {\n            var _this = this;\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            this._destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n            // Source name, used for debugging\n            this.source = source || (typeof def === 'object' ? null : stringify(def));\n        }\n        Object.defineProperty(R3Injector.prototype, \"destroyed\", {\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this._destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, flags & exports.InjectFlags.Optional ? null : notFoundValue);\n            }\n            catch (e) {\n                if (e.name === 'NullInjectorError') {\n                    var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n                    path.unshift(stringify(token));\n                    if (previousInjector) {\n                        // We still have a parent injector, keep throwing\n                        throw e;\n                    }\n                    else {\n                        // Format & throw the final error message when we don't have any previous injector\n                        return catchInjectorError(e, token, 'R3InjectorError', this.source);\n                    }\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.toString = function () {\n            var tokens = [], records = this.records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"R3Injector[\" + tokens.join(', ') + \"]\";\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this._destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n            if (parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    // TODO(FW-1307): Re-add ngDevMode when closure can handle it\n                    parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throwMixedMultiProviderError();\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throwMixedMultiProviderError();\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR) {\n                throwCyclicDependencyError(stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        // Most tokens will have an ngInjectableDef directly on them, which specifies a factory directly.\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef !== null) {\n            return injectableDef.factory;\n        }\n        // If the token is an NgModule, it's also injectable but the factory is on its ngInjectorDef.\n        var injectorDef = getInjectorDef(token);\n        if (injectorDef !== null) {\n            return injectorDef.factory;\n        }\n        // InjectionTokens should have an ngInjectableDef and thus should be handled above.\n        // If it's missing that, it's an error.\n        if (token instanceof InjectionToken) {\n            throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n        }\n        // Undecorated types can sometimes be created if they have no constructor arguments.\n        if (token instanceof Function) {\n            return getUndecoratedInjectableFactory(token);\n        }\n        // There was no way to resolve a factory for this token.\n        throw new Error('unreachable');\n    }\n    function getUndecoratedInjectableFactory(token) {\n        // If the token has parameters then it has dependencies that we cannot resolve implicitly.\n        var paramLength = token.length;\n        if (paramLength > 0) {\n            var args = new Array(paramLength).fill('?');\n            throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n        }\n        // The constructor function appears to have no parameters.\n        // This might be because it inherits from a super-class. In which case, use an ngInjectableDef\n        // from an ancestor if there is one.\n        // Otherwise this really is a simple class with no dependencies, so return a factory that\n        // just instantiates the zero-arg constructor.\n        var inheritedInjectableDef = getInheritedInjectableDef(token);\n        if (inheritedInjectableDef !== null) {\n            return inheritedInjectableDef.factory;\n        }\n        else {\n            return function () { return new token(); };\n        }\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return ɵɵinject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    throwInvalidProviderError(ngModuleType, providers, provider);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value !== null && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function isClassProvider(value) {\n        return !!value.useClass;\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return value !== null && typeof value === 'object' &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    function INJECTOR_IMPL__POST_R3__(providers, parent, name) {\n        return createInjector({ name: name }, parent, providers, name);\n    }\n    var INJECTOR_IMPL = INJECTOR_IMPL__POST_R3__;\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return INJECTOR_IMPL(options, parent, '');\n            }\n            else {\n                return INJECTOR_IMPL(options.providers, options.parent, options.name || '');\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'any',\n            factory: function () { return ɵɵinject(INJECTOR); },\n        });\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Injector.__NG_ELEMENT_ID__ = -1;\n        return Injector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI token that you can use to create a virtual [provider](guide/glossary#provider)\n     * that will populate the `entryComponents` field of components and NgModules\n     * based on its `useValue` property value.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) are added to the `entryComponents` property.\n     *\n     * @usageNotes\n     *\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on a router configuration that refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         * This strategy applies to all child directives and cannot be overridden.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `renderComponent` is a synchronous process\n     * // and `MyComponent`'s `@Component.templateUrl` needs to be resolved asynchronously.\n     *\n     * // Calling `resolveComponentResources()` will resolve `@Component.templateUrl` into\n     * // `@Component.template`, which allows `renderComponent` to proceed in a synchronous manner.\n     *\n     * // Use browser's `fetch()` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into `template` strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible for returning a `Promise` to the\n     * contents of the resolved URL. Browser's `fetch()` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var componentResolved = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component, type) {\n            var promises = [];\n            if (component.templateUrl) {\n                promises.push(cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                }));\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                promises.push(cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                }));\n            });\n            var fullyResolved = Promise.all(promises).then(function () { return componentDefResolved(type); });\n            componentResolved.push(fullyResolved);\n        });\n        clearResolutionOfComponentResourcesQueue();\n        return Promise.all(componentResolved).then(function () { return undefined; });\n    }\n    var componentResourceResolutionQueue = new Map();\n    // Track when existing ngComponentDef for a Type is waiting on resources.\n    var componentDefPendingResolution = new Set();\n    function maybeQueueResolutionOfComponentResources(type, metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.set(type, metadata);\n            componentDefPendingResolution.add(type);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return !!((component.templateUrl && !component.hasOwnProperty('template')) ||\n            component.styleUrls && component.styleUrls.length);\n    }\n    function clearResolutionOfComponentResourcesQueue() {\n        var old = componentResourceResolutionQueue;\n        componentResourceResolutionQueue = new Map();\n        return old;\n    }\n    function isComponentResourceResolutionQueueEmpty() {\n        return componentResourceResolutionQueue.size === 0;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n    function componentDefResolved(type) {\n        componentDefPendingResolution.delete(type);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererAppendChild: 0,\n            rendererInsertBefore: 0,\n            rendererCreateComment: 0,\n            styleMap: 0,\n            styleMapCacheMiss: 0,\n            classMap: 0,\n            classMapCacheMiss: 0,\n            stylingProp: 0,\n            stylingPropCacheMiss: 0,\n            stylingApply: 0,\n            stylingApplyCacheMiss: 0,\n        };\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        _global['ngDevMode'] = newCounters;\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * then we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     *\n     * NOTE: changes to the `ngDevMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY$1 = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        // These property accesses can be ignored because ngDevMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_OBJ);\n        // tslint:disable-next-line:no-toplevel-property-access\n        Object.freeze(EMPTY_ARRAY$1);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    // TODO(misko): This is wrong. The NG_ELEMENT_ID should never be minified.\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @codeGenApi\n     */\n    function ɵɵdefineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            ngContentSelectors: componentDefinition.ngContentSelectors,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onChanges: null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY$1,\n            _: null,\n            setInput: null,\n            schemas: componentDefinition.schemas || null,\n            tView: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n            // Add ngInjectableDef so components are reachable through the module injector by default\n            // (unless it has already been set by the @Injectable decorator). This is mostly to\n            // support injecting components in tests. In real application code, components should\n            // be retrieved through the node injector, so this isn't a problem.\n            if (!type.hasOwnProperty(NG_INJECTABLE_DEF)) {\n                type[NG_INJECTABLE_DEF] =\n                    ɵɵdefineInjectable({ factory: componentDefinition.factory });\n            }\n        });\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵsetComponentScope(type, directives, pipes) {\n        var def = type.ngComponentDef;\n        def.directiveDefs = function () { return directives.map(extractDirectiveDef); };\n        def.pipeDefs = function () { return pipes.map(extractPipeDef); };\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵdefineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY$1,\n            declarations: def.declarations || EMPTY_ARRAY$1,\n            imports: def.imports || EMPTY_ARRAY$1,\n            exports: def.exports || EMPTY_ARRAY$1,\n            transitiveCompileScopes: null,\n            schemas: def.schemas || null,\n            id: def.id || null,\n        };\n        return res;\n    }\n    /**\n     * Adds the module metadata that is necessary to compute the module's transitive scope to an\n     * existing module definition.\n     *\n     * Scope metadata of modules is not used in production builds, so calls to this function can be\n     * marked pure to tree-shake it from the bundle, allowing for all referenced declarations\n     * to become eligible for tree-shaking as well.\n     *\n     * @codeGenApi\n     */\n    function ɵɵsetNgModuleScope(type, scope) {\n        return noSideEffects(function () {\n            var ngModuleDef = getNgModuleDef(type, true);\n            ngModuleDef.declarations = scope.declarations || EMPTY_ARRAY$1;\n            ngModuleDef.imports = scope.imports || EMPTY_ARRAY$1;\n            ngModuleDef.exports = scope.exports || EMPTY_ARRAY$1;\n        });\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```ts\n     * class ShouldBeInherited {\n     *   static ngBaseDef = ɵɵdefineBase({\n     *      ...\n     *   })\n     * }\n     * ```\n     *\n     * @param baseDefinition The base definition parameters\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n            viewQuery: baseDefinition.viewQuery || null,\n            contentQueries: baseDefinition.contentQueries || null,\n            hostBindings: baseDefinition.hostBindings || null\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```ts\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = ɵɵdefineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     *\n     * @codeGenApi\n     */\n    var ɵɵdefineDirective = ɵɵdefineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     *\n     * @codeGenApi\n     */\n    function ɵɵdefinePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getBaseDef(type) {\n        return type[NG_BASE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    /**\n     * Used for stringify render output in Ivy.\n     * Important! This function is very performance-sensitive and we should\n     * be extra careful not to introduce megamorphic reads in it.\n     */\n    function renderStringify(value) {\n        if (typeof value === 'function')\n            return value.name || value;\n        if (typeof value === 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Used to stringify a value so that it can be displayed in an error message.\n     * Important! This function contains a megamorphic read and should only be\n     * used for error messages.\n     */\n    function stringifyForError(value) {\n        if (typeof value === 'object' && value != null && typeof value.type === 'function') {\n            return value.type.name || value.type;\n        }\n        return renderStringify(value);\n    }\n    var defaultScheduler = (function () {\n        return (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n            setTimeout // everything else\n        ).bind(_global);\n    })();\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveWindow(element) {\n        return { name: 'window', target: element.ownerDocument.defaultView };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveDocument(element) {\n        return { name: 'document', target: element.ownerDocument };\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵresolveBody(element) {\n        return { name: 'body', target: element.ownerDocument.body };\n    }\n    /**\n     * The special delimiter we use to separate property names, prefixes, and suffixes\n     * in property binding metadata. See storeBindingMetadata().\n     *\n     * We intentionally use the Unicode \"REPLACEMENT CHARACTER\" (U+FFFD) as a delimiter\n     * because it is a very uncommon character that is unlikely to be part of a user's\n     * property names or interpolation strings. If it is in fact used in a property\n     * binding, DebugElement.properties will not return the correct value for that\n     * binding. However, there should be no runtime effect for real applications.\n     *\n     * This character is typically rendered as a question mark inside of a diamond.\n     * See https://en.wikipedia.org/wiki/Specials_(Unicode_block)\n     *\n     */\n    var INTERPOLATION_DELIMITER = \"\\uFFFD\";\n    /**\n     * Determines whether or not the given string is a property metadata string.\n     * See storeBindingMetadata().\n     */\n    function isPropMetadataString(str) {\n        return str.indexOf(INTERPOLATION_DELIMITER) >= 0;\n    }\n    /**\n     * Unwrap a value which might be behind a closure (for forward declaration reasons).\n     */\n    function maybeUnwrapFn(value) {\n        if (value instanceof Function) {\n            return value();\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var HOST = 0;\n    var TVIEW = 1;\n    var FLAGS = 2;\n    var PARENT = 3;\n    var NEXT = 4;\n    var QUERIES = 5;\n    var T_HOST = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR$1 = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var CHILD_HEAD = 14;\n    var CHILD_TAIL = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    var PREORDER_HOOK_FLAGS = 18;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 20;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotSame(actual, expected, msg) {\n        if (actual === expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        // If we're in a worker, `Node` will not be defined.\n        assertEqual((typeof Node !== 'undefined' && node instanceof Node) ||\n            (typeof node === 'object' && node.constructor.name === 'WebWorkerRenderNode'), true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Special location which allows easy identification of type. If we have an array which was\n     * retrieved from the `LView` and that array has `true` at `TYPE` location, we know it is\n     * `LContainer`.\n     */\n    var TYPE = 1;\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 2;\n    // PARENT, NEXT, QUERIES and T_HOST are indices 3, 4, 5 and 6.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 7;\n    /**\n     * Size of LContainer's header. Represents the index after which all views in the\n     * container will be inserted. We need to keep a record of current views so we know\n     * which views are already in the DOM (and don't need to be re-added) and so we can\n     * remove views from the DOM when they are no longer required.\n     */\n    var CONTAINER_HEADER_OFFSET = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * For efficiency reasons we often put several different data types (`RNode`, `LView`, `LContainer`,\n     * `StylingContext`) in same location in `LView`. This is because we don't want to pre-allocate\n     * space for it because the storage is sparse. This file contains utilities for dealing with such\n     * data types.\n     *\n     * How do we know what is stored at a given location in `LView`.\n     * - `Array.isArray(value) === false` => `RNode` (The normal storage value)\n     * - `Array.isArray(value) === true` => then the `value[0]` represents the wrapped value.\n     *   - `typeof value[TYPE] === 'object'` => `LView`\n     *      - This happens when we have a component at a given location\n     *   - `typeof value[TYPE] === 'number'` => `StylingContext`\n     *      - This happens when we have style/class binding at a given location.\n     *   - `typeof value[TYPE] === true` => `LContainer`\n     *      - This happens when we have `LContainer` binding at a given location.\n     *\n     *\n     * NOTE: it is assumed that `Array.isArray` and `typeof` operations are very efficient.\n     */\n    /**\n     * Returns `RNode`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function unwrapRNode(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * True if `value` is `LView`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLView(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'object';\n    }\n    /**\n     * True if `value` is `LContainer`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isLContainer(value) {\n        return Array.isArray(value) && value[TYPE] === true;\n    }\n    /**\n     * True if `value` is `StylingContext`.\n     * @param value wrapped value of `RNode`, `LView`, `LContainer`, `StylingContext`\n     */\n    function isStylingContext(value) {\n        return Array.isArray(value) && typeof value[TYPE] === 'number';\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return unwrapRNode(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return unwrapRNode(hostView[tNode.index]);\n    }\n    /**\n     * A helper function that returns `true` if a given `TNode` has any matching directives.\n     */\n    function hasDirectives(tNode) {\n        return tNode.directiveEnd > tNode.directiveStart;\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        var lView = isLView(slotValue) ? slotValue : slotValue[HOST];\n        return lView;\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 512 /* IsRoot */) !== 0;\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    /**\n     * Returns a boolean for whether the view is attached to the change detection tree.\n     *\n     * Note: This determines whether a view should be checked, not whether it's inserted\n     * into a container. For that, you'll want `viewAttachedToContainer` below.\n     */\n    function viewAttachedToChangeDetector(view) {\n        return (view[FLAGS] & 128 /* Attached */) === 128 /* Attached */;\n    }\n    /** Returns a boolean for whether the view is attached to a container. */\n    function viewAttachedToContainer(view) {\n        return isLContainer(view[PARENT]);\n    }\n    /**\n     * Resets the pre-order hook flags of the view.\n     * @param lView the LView on which the flags are reset\n     */\n    function resetPreOrderHookFlags(lView) {\n        lView[PREORDER_HOOK_FLAGS] = 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertLContainerOrUndefined(value) {\n        value && assertEqual(isLContainer(value), true, 'Expecting LContainer or undefined or null');\n    }\n    function assertLContainer(value) {\n        assertDefined(value, 'LContainer must be defined');\n        assertEqual(isLContainer(value), true, 'Expecting LContainer');\n    }\n    function assertLViewOrUndefined(value) {\n        value && assertEqual(isLView(value), true, 'Expecting LView or undefined or null');\n    }\n    function assertLView(value) {\n        assertDefined(value, 'LView must be defined');\n        assertEqual(isLView(value), true, 'Expecting LView');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds all directive lifecycle hooks from the given `DirectiveDef` to the given `TView`.\n     *\n     * Must be run *only* on the first template pass.\n     *\n     * Sets up the pre-order hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * @param directiveIndex The index of the directive in LView\n     * @param directiveDef The definition containing the hooks to setup in tView\n     * @param tView The current TView\n     * @param nodeIndex The index of the node to which the directive is attached\n     * @param initialPreOrderHooksLength the number of pre-order hooks already registered before the\n     * current process, used to know if the node index has to be added to the array. If it is -1,\n     * the node index is never added.\n     * @param initialPreOrderCheckHooksLength same as previous for pre-order check hooks\n     */\n    function registerPreOrderHooks(directiveIndex, directiveDef, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        var onChanges = directiveDef.onChanges, onInit = directiveDef.onInit, doCheck = directiveDef.doCheck;\n        if (initialPreOrderHooksLength >= 0 &&\n            (!tView.preOrderHooks || initialPreOrderHooksLength === tView.preOrderHooks.length) &&\n            (onChanges || onInit || doCheck)) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(nodeIndex);\n        }\n        if (initialPreOrderCheckHooksLength >= 0 &&\n            (!tView.preOrderCheckHooks ||\n                initialPreOrderCheckHooksLength === tView.preOrderCheckHooks.length) &&\n            (onChanges || doCheck)) {\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(nodeIndex);\n        }\n        if (onChanges) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, onChanges);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, onChanges);\n        }\n        if (onInit) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(-directiveIndex, onInit);\n        }\n        if (doCheck) {\n            (tView.preOrderHooks || (tView.preOrderHooks = [])).push(directiveIndex, doCheck);\n            (tView.preOrderCheckHooks || (tView.preOrderCheckHooks = [])).push(directiveIndex, doCheck);\n        }\n    }\n    /**\n     *\n     * Loops through the directives on the provided `tNode` and queues hooks to be\n     * run that are not initialization hooks.\n     *\n     * Should be executed during `elementEnd()` and similar to\n     * preserve hook execution order. Content, view, and destroy hooks for projected\n     * components and directives must be called *before* their hosts.\n     *\n     * Sets up the content, view, and destroy hooks on the provided `tView`,\n     * see {@link HookData} for details about the data structure.\n     *\n     * NOTE: This does not set up `onChanges`, `onInit` or `doCheck`, those are set up\n     * separately at `elementStart`.\n     *\n     * @param tView The current TView\n     * @param tNode The TNode whose directives are to be searched for hooks to queue\n     */\n    function registerPostOrderHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var directiveDef = tView.data[i];\n                if (directiveDef.afterContentInit) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(-i, directiveDef.afterContentInit);\n                }\n                if (directiveDef.afterContentChecked) {\n                    (tView.contentHooks || (tView.contentHooks = [])).push(i, directiveDef.afterContentChecked);\n                    (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, directiveDef.afterContentChecked);\n                }\n                if (directiveDef.afterViewInit) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(-i, directiveDef.afterViewInit);\n                }\n                if (directiveDef.afterViewChecked) {\n                    (tView.viewHooks || (tView.viewHooks = [])).push(i, directiveDef.afterViewChecked);\n                    (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, directiveDef.afterViewChecked);\n                }\n                if (directiveDef.onDestroy != null) {\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(i, directiveDef.onDestroy);\n                }\n            }\n        }\n    }\n    /**\n     * Executing hooks requires complex logic as we need to deal with 2 constraints.\n     *\n     * 1. Init hooks (ngOnInit, ngAfterContentInit, ngAfterViewInit) must all be executed once and only\n     * once, across many change detection cycles. This must be true even if some hooks throw, or if\n     * some recursively trigger a change detection cycle.\n     * To solve that, it is required to track the state of the execution of these init hooks.\n     * This is done by storing and maintaining flags in the view: the {@link InitPhaseState},\n     * and the index within that phase. They can be seen as a cursor in the following structure:\n     * [[onInit1, onInit2], [afterContentInit1], [afterViewInit1, afterViewInit2, afterViewInit3]]\n     * They are are stored as flags in LView[FLAGS].\n     *\n     * 2. Pre-order hooks can be executed in batches, because of the select instruction.\n     * To be able to pause and resume their execution, we also need some state about the hook's array\n     * that is being processed:\n     * - the index of the next hook to be executed\n     * - the number of init hooks already found in the processed part of the  array\n     * They are are stored as flags in LView[PREORDER_HOOK_FLAGS].\n     */\n    /**\n     * Executes necessary hooks at the start of executing a template.\n     *\n     * Executes hooks that are to be run during the initialization of a directive such\n     * as `onChanges`, `onInit`, and `doCheck`.\n     *\n     * @param lView The current view\n     * @param tView Static data for the view containing the hooks to be executed\n     * @param checkNoChangesMode Whether or not we're in checkNoChanges mode.\n     * @param @param currentNodeIndex 2 cases depending the the value:\n     * - undefined: execute hooks only from the saved index until the end of the array (pre-order case,\n     * when flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executePreOrderHooks(currentView, tView, checkNoChangesMode, currentNodeIndex) {\n        if (!checkNoChangesMode) {\n            executeHooks(currentView, tView.preOrderHooks, tView.preOrderCheckHooks, checkNoChangesMode, 0 /* OnInitHooksToBeRun */, currentNodeIndex !== undefined ? currentNodeIndex : null);\n        }\n    }\n    /**\n     * Executes hooks against the given `LView` based off of whether or not\n     * This is the first pass.\n     *\n     * @param currentView The view instance data to run the hooks against\n     * @param firstPassHooks An array of hooks to run if we're in the first view pass\n     * @param checkHooks An Array of hooks to run if we're not in the first view pass.\n     * @param checkNoChangesMode Whether or not we're in no changes mode.\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function executeHooks(currentView, firstPassHooks, checkHooks, checkNoChangesMode, initPhaseState, currentNodeIndex) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState ?\n            firstPassHooks :\n            checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall, initPhaseState, currentNodeIndex);\n        }\n        // The init phase state must be always checked here as it may have been recursively updated\n        if (currentNodeIndex == null &&\n            (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhaseState &&\n            initPhaseState !== 3 /* InitPhaseCompleted */) {\n            currentView[FLAGS] &= 1023 /* IndexWithinInitPhaseReset */;\n            currentView[FLAGS] += 1 /* InitPhaseStateIncrementer */;\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     * @param initPhaseState the current state of the init phase\n     * @param currentNodeIndex 3 cases depending the the value:\n     * - undefined: all hooks from the array should be executed (post-order case)\n     * - null: execute hooks only from the saved index until the end of the array (pre-order case, when\n     * flushing the remaining hooks)\n     * - number: execute hooks only from the saved index until that node index exclusive (pre-order\n     * case, when executing select(number))\n     */\n    function callHooks(currentView, arr, initPhase, currentNodeIndex) {\n        var startIndex = currentNodeIndex !== undefined ?\n            (currentView[PREORDER_HOOK_FLAGS] & 65535 /* IndexOfTheNextPreOrderHookMaskMask */) :\n            0;\n        var nodeIndexLimit = currentNodeIndex != null ? currentNodeIndex : -1;\n        var lastNodeIndexFound = 0;\n        for (var i = startIndex; i < arr.length; i++) {\n            var hook = arr[i + 1];\n            if (typeof hook === 'number') {\n                lastNodeIndexFound = arr[i];\n                if (currentNodeIndex != null && lastNodeIndexFound >= currentNodeIndex) {\n                    break;\n                }\n            }\n            else {\n                var isInitHook = arr[i] < 0;\n                if (isInitHook)\n                    currentView[PREORDER_HOOK_FLAGS] += 65536 /* NumberOfInitHooksCalledIncrementer */;\n                if (lastNodeIndexFound < nodeIndexLimit || nodeIndexLimit == -1) {\n                    callHook(currentView, initPhase, arr, i);\n                    currentView[PREORDER_HOOK_FLAGS] =\n                        (currentView[PREORDER_HOOK_FLAGS] & 4294901760 /* NumberOfInitHooksCalledMask */) + i +\n                            2;\n                }\n                i++;\n            }\n        }\n    }\n    /**\n     * Execute one hook against the current `LView`.\n     *\n     * @param currentView The current view\n     * @param initPhaseState the current state of the init phase\n     * @param arr The array in which the hooks are found\n     * @param i The current index within the hook data array\n     */\n    function callHook(currentView, initPhase, arr, i) {\n        var isInitHook = arr[i] < 0;\n        var hook = arr[i + 1];\n        var directiveIndex = isInitHook ? -arr[i] : arr[i];\n        var directive = currentView[directiveIndex];\n        if (isInitHook) {\n            var indexWithintInitPhase = currentView[FLAGS] >> 10 /* IndexWithinInitPhaseShift */;\n            // The init phase state must be always checked here as it may have been recursively\n            // updated\n            if (indexWithintInitPhase <\n                (currentView[PREORDER_HOOK_FLAGS] >> 16 /* NumberOfInitHooksCalledShift */) &&\n                (currentView[FLAGS] & 3 /* InitPhaseStateMask */) === initPhase) {\n                currentView[FLAGS] += 1024 /* IndexWithinInitPhaseIncrementer */;\n                hook.call(directive);\n            }\n        }\n        else {\n            hook.call(directive);\n        }\n    }\n\n    var stylingContext = null;\n    /**\n     * Gets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     */\n    function getCachedStylingContext() {\n        return stylingContext;\n    }\n    /**\n     * Sets the most recent styling context value.\n     *\n     * Note that only one styling context is stored at a given time.\n     *\n     * @param context The styling context value that will be stored\n     */\n    function setCachedStylingContext(context) {\n        stylingContext = context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵenableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- ɵɵdisableBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- ɵɵenableBindings() -->\n     * </div>\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵdisableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Used as the starting directive id value.\n     *\n     * All subsequent directives are incremented from this value onwards.\n     * The reason why this value is `1` instead of `0` is because the `0`\n     * value is reserved for the template.\n     */\n    var MIN_DIRECTIVE_ID = 1;\n    var activeDirectiveId = MIN_DIRECTIVE_ID;\n    /**\n     * Position depth (with respect from leaf to root) in a directive sub-class inheritance chain.\n     */\n    var activeDirectiveSuperClassDepthPosition = 0;\n    /**\n     * Total count of how many directives are a part of an inheritance chain.\n     *\n     * When directives are sub-classed (extended) from one to another, Angular\n     * needs to keep track of exactly how many were encountered so it can accurately\n     * generate the next directive id (once the next directive id is visited).\n     * Normally the next directive id just a single incremented value from the\n     * previous one, however, if the previous directive is a part of an inheritance\n     * chain (a series of sub-classed directives) then the incremented value must\n     * also take into account the total amount of sub-classed values.\n     *\n     * Note that this value resets back to zero once the next directive is\n     * visited (when `incrementActiveDirectiveId` or `setActiveHostElement`\n     * is called).\n     */\n    var activeDirectiveSuperClassHeight = 0;\n    /**\n     * Sets the active directive host element and resets the directive id value\n     * (when the provided elementIndex value has changed).\n     *\n     * @param elementIndex the element index value for the host element where\n     *                     the directive/component instance lives\n     */\n    function setActiveHostElement(elementIndex) {\n        if (elementIndex === void 0) { elementIndex = null; }\n        if (_selectedIndex !== elementIndex) {\n            setSelectedIndex(elementIndex == null ? -1 : elementIndex);\n            activeDirectiveId = elementIndex == null ? 0 : MIN_DIRECTIVE_ID;\n            activeDirectiveSuperClassDepthPosition = 0;\n            activeDirectiveSuperClassHeight = 0;\n        }\n    }\n    /**\n     * Returns the current id value of the current directive.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (id == 1)\n     * dirTwo->hostBindings() (id == 2)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function getActiveDirectiveId() {\n        return activeDirectiveId;\n    }\n    /**\n     * Increments the current directive id value.\n     *\n     * For example we have an element that has two directives on it:\n     * <div dir-one dir-two></div>\n     *\n     * dirOne->hostBindings() (index = 1)\n     * // increment\n     * dirTwo->hostBindings() (index = 2)\n     *\n     * Depending on whether or not a previous directive had any inherited\n     * directives present, that value will be incremented in addition\n     * to the id jumping up by one.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     *\n     * Note that directive id values are specific to an element (this means that\n     * the same id value could be present on another element with a completely\n     * different set of directives).\n     */\n    function incrementActiveDirectiveId() {\n        activeDirectiveId += 1 + activeDirectiveSuperClassHeight;\n        // because we are dealing with a new directive this\n        // means we have exited out of the inheritance chain\n        activeDirectiveSuperClassDepthPosition = 0;\n        activeDirectiveSuperClassHeight = 0;\n    }\n    /**\n     * Set the current super class (reverse inheritance) position depth for a directive.\n     *\n     * For example we have two directives: Child and Other (but Child is a sub-class of Parent)\n     * <div child-dir other-dir></div>\n     *\n     * // increment\n     * parentInstance->hostBindings() (depth = 1)\n     * // decrement\n     * childInstance->hostBindings() (depth = 0)\n     * otherInstance->hostBindings() (depth = 0 b/c it's a different directive)\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function adjustActiveDirectiveSuperClassDepthPosition(delta) {\n        activeDirectiveSuperClassDepthPosition += delta;\n        // we keep track of the height value so that when the next directive is visited\n        // then Angular knows to generate a new directive id value which has taken into\n        // account how many sub-class directives were a part of the previous directive.\n        activeDirectiveSuperClassHeight =\n            Math.max(activeDirectiveSuperClassHeight, activeDirectiveSuperClassDepthPosition);\n    }\n    /**\n     * Returns he current depth of the super/sub class inheritance chain.\n     *\n     * This will return how many inherited directive/component classes\n     * exist in the current chain.\n     *\n     * ```typescript\n     * @Directive({ selector: '[super-dir]' })\n     * class SuperDir {}\n     *\n     * @Directive({ selector: '[sub-dir]' })\n     * class SubDir extends SuperDir {}\n     *\n     * // if `<div sub-dir>` is used then the super class height is `1`\n     * // if `<div super-dir>` is used then the super class height is `0`\n     * ```\n     */\n    function getActiveDirectiveSuperClassHeight() {\n        return activeDirectiveSuperClassHeight;\n    }\n    /**\n     * Returns the current super class (reverse inheritance) depth for a directive.\n     *\n     * This is designed to help instruction code distinguish different hostBindings\n     * calls from each other when a directive has extended from another directive.\n     * Normally using the directive id value is enough, but with the case\n     * of parent/sub-class directive inheritance more information is required.\n     *\n     * Note that this is only active when `hostBinding` functions are being processed.\n     */\n    function getActiveDirectiveSuperClassDepth() {\n        return activeDirectiveSuperClassDepthPosition;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     *\n     * @codeGenApi\n     */\n    function ɵɵrestoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        ngDevMode && assertLViewOrUndefined(view);\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 4 /* CreationMode */) === 4 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Current index of a View or Content Query which needs to be processed next.\n     * We iterate over the list of Queries and increment current query index at every step.\n     */\n    var currentQueryIndex = 0;\n    function getCurrentQueryIndex() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueryIndex;\n    }\n    function setCurrentQueryIndex(value) {\n        currentQueryIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        ngDevMode && assertLViewOrUndefined(newView);\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        else {\n            try {\n                resetPreOrderHookFlags(lView);\n                executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode, 2 /* AfterViewInitHooksToBeRun */, undefined);\n            }\n            finally {\n                // Views are clean and in update mode after being checked, so these bits are cleared\n                lView[FLAGS] &= ~(64 /* Dirty */ | 8 /* FirstLViewPass */);\n                lView[BINDING_INDEX] = tView.bindingStartIndex;\n            }\n        }\n        setCachedStylingContext(null);\n        enterView(newView, null);\n    }\n    var _selectedIndex = -1;\n    /**\n     * Gets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function getSelectedIndex() {\n        return _selectedIndex;\n    }\n    /**\n     * Sets the most recent index passed to {@link select}\n     *\n     * Used with {@link property} instruction (and more in the future) to identify the index in the\n     * current `LView` to act on.\n     */\n    function setSelectedIndex(index) {\n        _selectedIndex = index;\n        // remove the styling context from the cache\n        // because we are now on a different element\n        setCachedStylingContext(null);\n    }\n    var _currentNamespace = null;\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/2000/svg'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    /**\n     * Sets the namespace used to create elements to `'http://www.w3.org/1998/MathML/'` in global state.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    /**\n     * Sets the namespace used to create elements no `null`, which forces element creation to use\n     * `createElement` rather than `createElementNS`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵnamespaceHTML() {\n        _currentNamespace = null;\n    }\n    function getNamespace() {\n        return _currentNamespace;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either an allowed protocol (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var e_2, _a;\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // Accessibility attributes as per WAI-ARIA 1.1 (W3C Working Draft 14 December 2018)\n    var ARIA_ATTRS = tagSet('aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,' +\n        'aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,' +\n        'aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,' +\n        'aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,' +\n        'aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,' +\n        'aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,' +\n        'aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS, ARIA_ATTRS);\n    // Elements whose content should not be traversed/preserved, if the elements themselves are invalid.\n    //\n    // Typically, `<invalid>Some content</invalid>` would traverse (and in this case preserve)\n    // `Some content`, but strip `invalid-element` opening/closing tags. For some elements, though, we\n    // don't want to preserve the content, if the elements themselves are going to be removed.\n    var SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS = tagSet('script,style,template');\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var traverseContent = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    traverseContent = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (traverseContent && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Sanitizes an opening element tag (if valid) and returns whether the element's contents should\n         * be traversed. Element content must always be traversed (even if the element itself is not\n         * valid/safe), unless the element is one of `SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS`.\n         *\n         * @param element The element to sanitize.\n         * @return True if the element's contents should be traversed.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return !SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, renderStringify(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(renderStringify(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(renderStringify(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * Detects which sanitizer to use for URL property, based on tag name and prop name.\n     *\n     * The rules are based on the RESOURCE_URL context config from\n     * `packages/compiler/src/schema/dom_security_schema.ts`.\n     * If tag and prop names don't match Resource URL schema, use URL sanitizer.\n     */\n    function getUrlSanitizer(tag, prop) {\n        if ((prop === 'src' && (tag === 'embed' || tag === 'frame' || tag === 'iframe' ||\n            tag === 'media' || tag === 'script')) ||\n            (prop === 'href' && (tag === 'base' || tag === 'link'))) {\n            return ɵɵsanitizeResourceUrl;\n        }\n        return ɵɵsanitizeUrl;\n    }\n    /**\n     * Sanitizes URL, selecting sanitizer function based on tag and property names.\n     *\n     * This function is used in case we can't define security context at compile time, when only prop\n     * name is available. This happens when we generate host bindings for Directives/Components. The\n     * host element is unknown at compile time, so we defer calculation of specific sanitizer to\n     * runtime.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @param tag target element tag name.\n     * @param prop name of the property that contains the value.\n     * @returns `url` string which is safe to bind.\n     *\n     * @publicApi\n     */\n    function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl, tag, prop) {\n        return getUrlSanitizer(tag, prop)(unsafeUrl);\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     *\n     * @publicApi\n     */\n    var ɵɵdefaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'list-style' || prop === 'list-style-image' ||\n                prop === 'clip-path';\n        }\n        return ɵɵsanitizeStyle(value);\n    };\n    function validateAgainstEventProperties(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            throw new Error(msg);\n        }\n    }\n    function validateAgainstEventAttributes(name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            throw new Error(msg);\n        }\n    }\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj !== null && typeof obj == 'object' &&\n            Object.getPrototypeOf(obj) == NodeInjectorFactory.prototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = unwrapRNode(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = unwrapRNode(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY$1;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                result[tNode.localNames[i]] = lView[localIndex];\n                localIndex++;\n            }\n            return result;\n        }\n        return null;\n    }\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The default directive styling index value for template-based bindings.\n     *\n     * All host-level bindings (e.g. `hostStyleProp` and `hostStyleMap`) are\n     * assigned a directive styling index value based on the current directive\n     * uniqueId and the directive super-class inheritance depth. But for template\n     * bindings they always have the same directive styling index value.\n     */\n    var DEFAULT_TEMPLATE_DIRECTIVE_INDEX = 0;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(wrappedElement, sanitizer, initialStyles, initialClasses) {\n        var context = [\n            wrappedElement || null,\n            0,\n            [],\n            initialStyles || [null, null],\n            initialClasses || [null, null],\n            [0, 0],\n            [0],\n            [0],\n            null,\n            null,\n        ];\n        // whenever a context is created there is always a `null` directive\n        // that is registered (which is a placeholder for the \"template\").\n        allocateOrUpdateDirectiveIntoContext(context, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        return context;\n    }\n    /**\n     * Allocates (registers) a directive into the directive registry within the provided styling\n     * context.\n     *\n     * For each and every `[style]`, `[style.prop]`, `[class]`, `[class.name]` binding\n     * (as well as static style and class attributes) a directive, component or template\n     * is marked as the owner. When an owner is determined (this happens when the template\n     * is first passed over) the directive owner is allocated into the styling context. When\n     * this happens, each owner gets its own index value. This then ensures that once any\n     * style and/or class binding are assigned into the context then they are marked to\n     * that directive's index value.\n     *\n     * @param context the target StylingContext\n     * @param directiveRef the directive that will be allocated into the context\n     * @returns the index where the directive was inserted into\n     */\n    function allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropValuesIndex, styleSanitizer) {\n        if (singlePropValuesIndex === void 0) { singlePropValuesIndex = -1; }\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        // we preemptively make space into the directives array and then\n        // assign values slot-by-slot to ensure that if the directive ordering\n        // changes then it will still function\n        var limit = index + 2 /* Size */;\n        for (var i = directiveRegistry.length; i < limit; i += 2 /* Size */) {\n            // -1 is used to signal that the directive has been allocated, but\n            // no actual style or class bindings have been registered yet...\n            directiveRegistry.push(-1, null);\n        }\n        var propValuesStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        if (singlePropValuesIndex >= 0 && directiveRegistry[propValuesStartPosition] === -1) {\n            directiveRegistry[propValuesStartPosition] = singlePropValuesIndex;\n            directiveRegistry[index + 1 /* StyleSanitizerOffset */] =\n                styleSanitizer || null;\n        }\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        // the HEADER values contain arrays which also need\n        // to be copied over into the new context\n        for (var i = 0; i < 10 /* SingleStylesStartPosition */; i++) {\n            var value = templateStyleContext[i];\n            if (Array.isArray(value)) {\n                context[i] = value.slice();\n            }\n        }\n        context[0 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[1 /* MasterFlagPosition */] |= 16 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `styling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContextFromLView(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function hasClassInput(tNode) {\n        return (tNode.flags & 8 /* hasClassInput */) !== 0;\n    }\n    function hasStyleInput(tNode) {\n        return (tNode.flags & 16 /* hasStyleInput */) !== 0;\n    }\n    function forceClassesAsString(classes) {\n        if (classes && typeof classes !== 'string') {\n            classes = Object.keys(classes).join(' ');\n        }\n        return classes || '';\n    }\n    function forceStylesAsString(styles) {\n        var str = '';\n        if (styles) {\n            var props = Object.keys(styles);\n            for (var i = 0; i < props.length; i++) {\n                var prop = props[i];\n                str += (i ? ';' : '') + (prop + \":\" + styles[prop]);\n            }\n        }\n        return str;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContextFromLView(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[9 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[9 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    /**\n     * Assigns all attribute values to the provided element via the inferred renderer.\n     *\n     * This function accepts two forms of attribute entries:\n     *\n     * default: (key, value):\n     *  attrs = [key1, value1, key2, value2]\n     *\n     * namespaced: (NAMESPACE_MARKER, uri, name, value)\n     *  attrs = [NAMESPACE_MARKER, uri, name, value, NAMESPACE_MARKER, uri, name, value]\n     *\n     * The `attrs` array can contain a mix of both the default and namespaced entries.\n     * The \"default\" values are set without a marker, but if the function comes across\n     * a marker value then it will attempt to set a namespaced value. If the marker is\n     * not of a namespaced value then the function will quit and return the index value\n     * where it stopped during the iteration of the attrs array.\n     *\n     * See [AttributeMarker] to understand what the namespace marker value is.\n     *\n     * Note that this instruction does not support assigning style and class values to\n     * an element. See `elementStart` and `elementHostAttrs` to learn how styling values\n     * are applied to an element.\n     *\n     * @param native The element that the attributes will be assigned to\n     * @param attrs The attribute array of values that will be assigned to the element\n     * @returns the index value that was last accessed in the attributes array\n     */\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var value = attrs[i];\n            if (typeof value === 'number') {\n                // only namespaces are supported. Other value types (such as style/class\n                // entries) are not supported in this function.\n                if (value !== 0 /* NamespaceURI */) {\n                    break;\n                }\n                // we just landed on the marker value ... therefore\n                // we should skip to the next entry\n                i++;\n                var namespaceURI = attrs[i++];\n                var attrName = attrs[i++];\n                var attrVal = attrs[i++];\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProc ?\n                    renderer.setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n            }\n            else {\n                // attrName is string;\n                var attrName = value;\n                var attrVal = attrs[++i];\n                // Standard attributes\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (isAnimationProp(attrName)) {\n                    if (isProc) {\n                        renderer.setProperty(native, attrName, attrVal);\n                    }\n                }\n                else {\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                }\n                i++;\n            }\n        }\n        // another piece of code may iterate over the same attributes array. Therefore\n        // it may be helpful to return the exact spot where the attributes array exited\n        // whether by running into an unsupported marker or if all the static values were\n        // iterated over.\n        return i;\n    }\n    function attrsStylingIndexOf(attrs, startIndex) {\n        for (var i = startIndex; i < attrs.length; i++) {\n            var val = attrs[i];\n            if (val === 1 /* Classes */ || val === 2 /* Styles */) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Test whether the given value is a marker that indicates that the following\n     * attribute values in a `TAttributes` array are only the names of attributes,\n     * and not name-value pairs.\n     * @param marker The attribute marker to test.\n     * @returns true if the marker is a \"name-only\" marker (e.g. `Bindings` or `Template`).\n     */\n    function isNameOnlyAttributeMarker(marker) {\n        return marker === 3 /* Bindings */ || marker === 4 /* Template */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /// Parent Injector Utils ///////////////////////////////////////////////////////////////\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Gets the parent LView of the passed LView, if the PARENT is an LContainer, will get the parent of\n     * that LContainer, which is an LView\n     * @param lView the lView whose parent to get\n     */\n    function getLViewParent(lView) {\n        ngDevMode && assertLView(lView);\n        var parent = lView[PARENT];\n        return isLContainer(parent) ? parent[PARENT] : parent;\n    }\n    /**\n     * Retrieve the root view from any component or `LView` by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrLView any component or `LView`\n     */\n    function getRootView(componentOrLView) {\n        ngDevMode && assertDefined(componentOrLView, 'component');\n        var lView = isLView(componentOrLView) ? componentOrLView : readPatchedLView(componentOrLView);\n        while (lView && !(lView[FLAGS] & 512 /* IsRoot */)) {\n            lView = getLViewParent(lView);\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[T_HOST];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[T_HOST];\n        }\n        ngDevMode && assertLView(lView);\n        return lView;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated. It does this by walking the parent views until it\n     * gets to the root view, then getting the context off of that.\n     *\n     * @param viewOrComponent the `LView` or component to get the root context for.\n     */\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[T_HOST];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[T_HOST] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            var attrsLength = attrs.length;\n            var i = 0;\n            while (i < attrsLength) {\n                var value = attrs[i];\n                // If we hit a `Bindings` or `Template` marker then we are done.\n                if (isNameOnlyAttributeMarker(value))\n                    break;\n                // Skip namespaced attributes\n                if (value === 0 /* NamespaceURI */) {\n                    // we skip the next two values\n                    // as namespaced attributes looks like\n                    // [..., AttributeMarker.NamespaceURI, 'http://someuri.com/test', 'test:exist',\n                    // 'existValue', ...]\n                    i = i + 2;\n                }\n                else if (typeof value === 'number') {\n                    // Skip to the first value of the marked attribute.\n                    i++;\n                    if (value === 1 /* Classes */ && attrNameToInject === 'class') {\n                        var accumulatedClasses = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedClasses += ' ' + attrs[i++];\n                        }\n                        return accumulatedClasses.trim();\n                    }\n                    else if (value === 2 /* Styles */ && attrNameToInject === 'style') {\n                        var accumulatedStyles = '';\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            accumulatedStyles += attrs[i++] + \": \" + attrs[i++] + \"; \";\n                        }\n                        return accumulatedStyles.trim();\n                    }\n                    else {\n                        while (i < attrsLength && typeof attrs[i] === 'string') {\n                            i++;\n                        }\n                    }\n                }\n                else if (value === attrNameToInject) {\n                    return attrs[i + 1];\n                }\n                else {\n                    i = i + 2;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * This function patches `token` with `__NG_ELEMENT_ID__` which contains the id for the bloom\n     * filter. Negative values are reserved for special objects.\n     *   - `-1` is reserved for injecting `Injector` (implemented by `NodeInjector`)\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringifyForError(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                if (bloomHash === -1) {\n                    // `-1` is a special value used to identify `Injector` types.\n                    return new NodeInjector(tNode, lView);\n                }\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[T_HOST] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR$1];\n            // switch to `injectInjectorOnly` implementation for module injector, since module injector\n            // should not have access to Component/Directive DI scope (that may happen through\n            // `directiveInject` implementation)\n            var previousInjectImplementation = setInjectImplementation(undefined);\n            try {\n                if (moduleInjector) {\n                    return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n                else {\n                    return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n                }\n            }\n            finally {\n                setInjectImplementation(previousInjectImplementation);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringifyForError(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringifyForError(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     *   When the returned value is negative then it represents special values such as `Injector`.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        // Negative token IDs are used for special objects such as `Injector`\n        return (typeof tokenId === 'number' && tokenId > 0) ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    /**\n     * @codeGenApi\n     */\n    function ɵɵgetInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = ɵɵgetFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    var _stylingMode = 0;\n    function runtimeIsNewStylingInUse() {\n        return _stylingMode > 0 /* UseOld */;\n    }\n    function runtimeAllowOldStyling() {\n        return _stylingMode < 2 /* UseNew */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachDebugObject(obj, debug) {\n        Object.defineProperty(obj, 'debug', { value: debug, enumerable: false });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /*\n     * This file contains the logic to defer all hostBindings-related styling code to run\n     * at a later point, instead of immediately (as is the case with how template-level\n     * styling instructions are run).\n     *\n     * Certain styling instructions, present within directives, components and sub-classed\n     * directives, are evaluated at different points (depending on priority) and will therefore\n     * not be applied to the styling context of an element immediately. They are instead\n     * designed to be applied just before styling is applied to an element.\n     *\n     * (The priority for when certain host-related styling operations are executed is discussed\n     * more within `interfaces/styling.ts`.)\n     */\n    function registerHostDirective(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (!buffer) {\n            buffer = context[8 /* HostInstructionsQueue */] = [DEFAULT_TEMPLATE_DIRECTIVE_INDEX];\n        }\n        buffer[0 /* LastRegisteredDirectiveIndexPosition */] = directiveIndex;\n    }\n    /**\n     * Queues a styling instruction to be run just before `renderStyling()` is executed.\n     */\n    function enqueueHostInstruction(context, priority, instructionFn, instructionFnArgs) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        // Buffer may be null if host element is a template node. In this case, just ignore the style.\n        if (buffer != null) {\n            var index = findNextInsertionIndex(buffer, priority);\n            buffer.splice(index, 0, priority, instructionFn, instructionFnArgs);\n        }\n    }\n    /**\n     * Figures out where exactly to to insert the next host instruction queue entry.\n     */\n    function findNextInsertionIndex(buffer, priority) {\n        for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n            var p = buffer[i + 0 /* DirectiveIndexOffset */];\n            if (p > priority) {\n                return i;\n            }\n        }\n        return buffer.length;\n    }\n    /**\n     * Iterates through the host instructions queue (if present within the provided\n     * context) and executes each queued instruction entry.\n     */\n    function flushQueue(context) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            for (var i = 1 /* ValuesStartPosition */; i < buffer.length; i += 3 /* Size */) {\n                var fn = buffer[i + 1 /* InstructionFnOffset */];\n                var args = buffer[i + 2 /* ParamsOffset */];\n                fn.apply(this, args);\n            }\n            buffer.length = 1 /* ValuesStartPosition */;\n        }\n    }\n    /**\n     * Determines whether or not to allow the host instructions queue to be flushed or not.\n     *\n     * Because the hostBindings function code is unaware of the presence of other host bindings\n     * (as well as the template function) then styling is evaluated multiple times per element.\n     * To prevent style and class values from being applied to the element multiple times, a\n     * flush is only allowed when the last directive (the directive that was registered into\n     * the styling context) attempts to render its styling.\n     */\n    function allowFlush(context, directiveIndex) {\n        var buffer = context[8 /* HostInstructionsQueue */];\n        if (buffer) {\n            return buffer[0 /* LastRegisteredDirectiveIndexPosition */] ===\n                directiveIndex;\n        }\n        return true;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * It also includes code that will allow style binding code to operate within host\n     * bindings for components/directives.\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `render3/interfaces/styling.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs, stylingStartIndex, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var context = createEmptyStylingContext();\n        patchContextWithStaticAttrs(context, attrs, stylingStartIndex, directiveIndex);\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param attrsStylingStartIndex what index to start iterating within the\n     *              provided `attrs` array to start reading style and class values\n     */\n    function patchContextWithStaticAttrs(context, attrs, attrsStylingStartIndex, directiveIndex) {\n        // this means the context has already been set and instantiated\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex);\n        var initialClasses = null;\n        var initialStyles = null;\n        var mode = -1;\n        for (var i = attrsStylingStartIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                initialClasses = initialClasses || context[4 /* InitialClassValuesPosition */];\n                patchInitialStylingValue(initialClasses, attr, true, directiveIndex);\n            }\n            else if (mode == 2 /* Styles */) {\n                initialStyles = initialStyles || context[3 /* InitialStyleValuesPosition */];\n                patchInitialStylingValue(initialStyles, attr, attrs[++i], directiveIndex);\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is\n     * present (allocated) then the code below will set the new value depending on the\n     * following cases:\n     *\n     *  1) if the existing value is falsy (this happens because a `[class.prop]` or\n     *     `[style.prop]` binding was set, but there wasn't a matching static style\n     *     or class present on the context)\n     *  2) if the value was set already by the template, component or directive, but the\n     *     new value is set on a higher level (i.e. a sub component which extends a parent\n     *     component sets its value after the parent has already set the same one)\n     *  3) if the same directive provides a new set of styling values to set\n     *\n     * @param initialStyling the initial styling array where the new styling entry will be added to\n     * @param prop the property value of the new entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the new entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     */\n    function patchInitialStylingValue(initialStyling, prop, value, directiveOwnerIndex) {\n        for (var i = 2 /* KeyValueStartPosition */; i < initialStyling.length; i += 3 /* Size */) {\n            var key = initialStyling[i + 0 /* PropOffset */];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                var existingOwner = initialStyling[i + 2 /* DirectiveOwnerOffset */];\n                if (allowValueChange(existingValue, value, existingOwner, directiveOwnerIndex)) {\n                    addOrUpdateStaticStyle(i, initialStyling, prop, value, directiveOwnerIndex);\n                }\n                return;\n            }\n        }\n        // We did not find existing key, add a new one.\n        addOrUpdateStaticStyle(null, initialStyling, prop, value, directiveOwnerIndex);\n    }\n    /**\n     * Runs through the initial class values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the classes were applied up until\n     */\n    function renderInitialClasses(element, context, renderer, startIndex) {\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialClasses.length) {\n            var value = initialClasses[i + 1 /* ValueOffset */];\n            if (value) {\n                setClass(element, initialClasses[i + 0 /* PropOffset */], true, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Runs through the initial styles values present in the provided\n     * context and renders them via the provided renderer on the element.\n     *\n     * @param element the element the styling will be applied to\n     * @param context the source styling context which contains the initial class values\n     * @param renderer the renderer instance that will be used to apply the class\n     * @returns the index that the styles were applied up until\n     */\n    function renderInitialStyles(element, context, renderer, startIndex) {\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        var i = startIndex || 2 /* KeyValueStartPosition */;\n        while (i < initialStyles.length) {\n            var value = initialStyles[i + 1 /* ValueOffset */];\n            if (value) {\n                setStyle(element, initialStyles[i + 0 /* PropOffset */], value, renderer, null);\n            }\n            i += 3 /* Size */;\n        }\n        return i;\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveIndex, classBindingNames, styleBindingNames, styleSanitizer) {\n        if (context[1 /* MasterFlagPosition */] & 16 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var isNewDirective = findOrPatchDirectiveIntoRegistry(context, directiveIndex, false, styleSanitizer);\n        if (!isNewDirective) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        if (styleBindingNames) {\n            styleBindingNames = hyphenateEntries(styleBindingNames);\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[5 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var cachedClassMapValues = context[6 /* CachedMultiClasses */];\n        var cachedStyleMapValues = context[7 /* CachedMultiStyles */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 10 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `styleProp`\n        // and the `classProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[4 /* InitialClassValuesPosition */];\n        var initialStyles = context[3 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added in case a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = addOrUpdateStaticStyle(null, initialValuesToLookup, propName, entryIsClassBased ? false : null, directiveIndex) +\n                    1 /* ValueOffset */;\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // the map-based values also need to know how many entries got inserted\n        cachedClassMapValues[0 /* EntriesCountPosition */] +=\n            filteredClassBindingNames.length;\n        cachedStyleMapValues[0 /* EntriesCountPosition */] +=\n            filteredStyleBindingNames.length;\n        var newStylesSpaceAllocationSize = filteredStyleBindingNames.length * 4 /* Size */;\n        var newClassesSpaceAllocationSize = filteredClassBindingNames.length * 4 /* Size */;\n        // update the multi styles cache with a reference for the directive that was just inserted\n        var directiveMultiStylesStartIndex = multiStylesStartIndex + totalCurrentStyleBindings * 4 /* Size */;\n        var cachedStyleMapIndex = cachedStyleMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, false, directiveMultiStylesStartIndex, filteredStyleBindingNames.length);\n        for (var i_7 = 1 /* ValuesStartPosition */; i_7 < cachedStyleMapIndex; i_7 += 4 /* Size */) {\n            // multi values start after all the single values (which is also where classes are) in the\n            // context therefore the new class allocation size should be taken into account\n            cachedStyleMapValues[i_7 + 1 /* PositionStartOffset */] +=\n                newClassesSpaceAllocationSize + newStylesSpaceAllocationSize;\n        }\n        // update the multi classes cache with a reference for the directive that was just inserted\n        var directiveMultiClassesStartIndex = multiClassesStartIndex + totalCurrentClassBindings * 4 /* Size */;\n        var cachedClassMapIndex = cachedClassMapValues.length;\n        registerMultiMapEntry(context, directiveIndex, true, directiveMultiClassesStartIndex, filteredClassBindingNames.length);\n        for (var i_8 = 1 /* ValuesStartPosition */; i_8 < cachedClassMapIndex; i_8 += 4 /* Size */) {\n            // the reason why both the styles + classes space is allocated to the existing offsets is\n            // because the styles show up before the classes in the context and any new inserted\n            // styles will offset any existing class entries in the context (even if there are no\n            // new class entries added) also the reason why it's *2 is because both single + multi\n            // entries for each new style have been added in the context before the multi class values\n            // actually start\n            cachedClassMapValues[i_8 + 1 /* PositionStartOffset */] +=\n                (newStylesSpaceAllocationSize * 2) + newClassesSpaceAllocationSize;\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex);\n        setFlag(context, 1 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveIndex, staticModeOnly, styleSanitizer) {\n        var directiveRegistry = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        var singlePropStartPosition = index + 0 /* SinglePropValuesIndexOffset */;\n        // this means that the directive has already been registered into the registry\n        if (index < directiveRegistry.length &&\n            directiveRegistry[singlePropStartPosition] >= 0)\n            return false;\n        var singlePropsStartIndex = staticModeOnly ? -1 : context[5 /* SinglePropOffsetPositions */].length;\n        allocateOrUpdateDirectiveIntoContext(context, directiveIndex, singlePropsStartIndex, styleSanitizer);\n        return true;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Registers the provided multi class values to the context.\n     *\n     * This function will iterate over the provided `classesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngClass` and `[class]`\n     * both update the `foo` className value at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateClassMap(context, classesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, classesInput, true, directiveIndex);\n    }\n    /**\n     * Registers the provided multi style values to the context.\n     *\n     * This function will iterate over the provided `stylesInput` values and\n     * insert/update or remove them from the context at exactly the right spot.\n     *\n     * This function also takes in a directive which implies that the styling values will\n     * be evaluated for that directive with respect to any other styling that already exists\n     * on the context. When there are styles that conflict (e.g. say `ngStyle` and `[style]`\n     * both update the `width` property at the same time) then the styling algorithm code below\n     * will decide which one wins based on the directive styling prioritization mechanism. (This\n     * mechanism is better explained in render3/interfaces/styling.ts#directives).\n     *\n     * This function will not render any styling values on screen, but is rather designed to\n     * prepare the context for that. `renderStyling` must be called afterwards to render any\n     * styling data that was set in this function (note that `updateClassProp` and\n     * `updateStyleProp` are designed to be run after this function is run).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStyleMap(context, stylesInput, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateStylingMap(context, stylesInput, false, directiveIndex);\n    }\n    function updateStylingMap(context, input, entryIsClassBased, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMap++ : ngDevMode.styleMap++);\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        if (isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, input))\n            return;\n        input =\n            input === NO_CHANGE ? readCachedMapValue(context, entryIsClassBased, directiveIndex) : input;\n        var element = context[0 /* ElementPosition */];\n        var playerBuilder = input instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(input, element, entryIsClassBased ? 1 /* Class */ : 2 /* Style */) :\n            null;\n        var rawValue = playerBuilder ? input.value : input;\n        // the position is always the same, but whether the player builder gets set\n        // at all (depending if its set) will be reflected in the index value below...\n        var playerBuilderPosition = entryIsClassBased ? 1 /* ClassMapPlayerBuilderPosition */ :\n            3 /* StyleMapPlayerBuilderPosition */;\n        var playerBuilderIndex = playerBuilder ? playerBuilderPosition : 0;\n        var playerBuildersAreDirty = false;\n        if (hasPlayerBuilderChanged(context, playerBuilder, playerBuilderPosition)) {\n            setPlayerBuilder(context, playerBuilder, playerBuilderPosition);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        var startIndex;\n        var endIndex;\n        var propNames;\n        var applyAll = false;\n        if (entryIsClassBased) {\n            if (typeof rawValue == 'string') {\n                propNames = rawValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a className string implies that all those classes are added\n                applyAll = true;\n            }\n            else {\n                propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$1;\n            }\n            startIndex = getMultiClassesStartIndex(context);\n            endIndex = context.length;\n        }\n        else {\n            startIndex = getMultiStylesStartIndex(context);\n            endIndex = getMultiClassesStartIndex(context);\n            propNames = rawValue ? Object.keys(rawValue) : EMPTY_ARRAY$1;\n        }\n        var values = (rawValue || EMPTY_OBJ);\n        patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, startIndex, endIndex, propNames, applyAll || values, input, entryIsClassBased);\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n        ngDevMode && (entryIsClassBased ? ngDevMode.classMapCacheMiss++ : ngDevMode.styleMapCacheMiss++);\n    }\n    /**\n     * Applies the given multi styling (styles or classes) values to the context.\n     *\n     * The styling algorithm code that applies multi-level styling (things like `[style]` and `[class]`\n     * values) resides here.\n     *\n     * Because this function understands that multiple directives may all write to the `[style]` and\n     * `[class]` bindings (through host bindings), it relies of each directive applying its binding\n     * value in order. This means that a directive like `classADirective` will always fire before\n     * `classBDirective` and therefore its styling values (classes and styles) will always be evaluated\n     * in the same order. Because of this consistent ordering, the first directive has a higher priority\n     * than the second one. It is with this prioritzation mechanism that the styling algorithm knows how\n     * to merge and apply redudant styling properties.\n     *\n     * The function itself applies the key/value entries (or an array of keys) to\n     * the context in the following steps.\n     *\n     * STEP 1:\n     *    First check to see what properties are already set and in use by another directive in the\n     *    context (e.g. `ngClass` set the `width` value and `[style.width]=\"w\"` in a directive is\n     *    attempting to set it as well).\n     *\n     * STEP 2:\n     *    All remaining properties (that were not set prior to this directive) are now updated in\n     *    the context. Any new properties are inserted exactly at their spot in the context and any\n     *    previously set properties are shifted to exactly where the cursor sits while iterating over\n     *    the context. The end result is a balanced context that includes the exact ordering of the\n     *    styling properties/values for the provided input from the directive.\n     *\n     * STEP 3:\n     *    Any unmatched properties in the context that belong to the directive are set to null\n     *\n     * Once the updating phase is done, then the algorithm will decide whether or not to flag the\n     * follow-up directives (the directives that will pass in their styling values) depending on if\n     * the \"shape\" of the multi-value map has changed (either if any keys are removed or added or\n     * if there are any new `null` values). If any follow-up directives are flagged as dirty then the\n     * algorithm will run again for them. Otherwise if the shape did not change then any follow-up\n     * directives will not run (so long as their binding values stay the same).\n     *\n     * @returns the total amount of new slots that were allocated into the context due to new styling\n     *          properties that were detected.\n     */\n    function patchStylingMapIntoContext(context, directiveIndex, playerBuilderIndex, ctxStart, ctxEnd, props, values, cacheValue, entryIsClassBased) {\n        var dirty = false;\n        var cacheIndex = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // the cachedValues array is the registry of all multi style values (map values). Each\n        // value is stored (cached) each time is updated.\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        // this is the index in which this directive has ownership access to write to this\n        // value (anything before is owned by a previous directive that is more important)\n        var ownershipValuesStartIndex = cachedValues[cacheIndex + 1 /* PositionStartOffset */];\n        var existingCachedValue = cachedValues[cacheIndex + 2 /* ValueOffset */];\n        var existingCachedValueCount = cachedValues[cacheIndex + 3 /* ValueCountOffset */];\n        var existingCachedValueIsDirty = cachedValues[cacheIndex + 0 /* DirtyFlagOffset */] === 1;\n        // A shape change means the provided map value has either removed or added new properties\n        // compared to what were in the last time. If a shape change occurs then it means that all\n        // follow-up multi-styling entries are obsolete and will be examined again when CD runs\n        // them. If a shape change has not occurred then there is no reason to check any other\n        // directive values if their identity has not changed. If a previous directive set this\n        // value as dirty (because its own shape changed) then this means that the object has been\n        // offset to a different area in the context. Because its value has been offset then it\n        // can't write to a region that it wrote to before (which may have been apart of another\n        // directive) and therefore its shape changes too.\n        var valuesEntryShapeChange = existingCachedValueIsDirty || ((!existingCachedValue && cacheValue) ? true : false);\n        var totalUniqueValues = 0;\n        var totalNewAllocatedSlots = 0;\n        // this is a trick to avoid building {key:value} map where all the values\n        // are `true` (this happens when a className string is provided instead of a\n        // map as an input value to this styling algorithm)\n        var applyAllProps = values === true;\n        // STEP 1:\n        // loop through the earlier directives and figure out if any properties here will be placed\n        // in their area (this happens when the value is null because the earlier directive erased it).\n        var ctxIndex = ctxStart;\n        var totalRemainingProperties = props.length;\n        while (ctxIndex < ownershipValuesStartIndex) {\n            var currentProp = getProp(context, ctxIndex);\n            if (totalRemainingProperties) {\n                for (var i = 0; i < props.length; i++) {\n                    var mapProp = props[i];\n                    var normalizedProp = mapProp ? (entryIsClassBased ? mapProp : hyphenate(mapProp)) : null;\n                    if (normalizedProp && currentProp === normalizedProp) {\n                        var currentValue = getValue(context, ctxIndex);\n                        var currentDirectiveIndex = getDirectiveIndexFromEntry(context, ctxIndex);\n                        var value = applyAllProps ? true : values[normalizedProp];\n                        var currentFlag = getPointers(context, ctxIndex);\n                        if (hasValueChanged(currentFlag, currentValue, value) &&\n                            allowValueChange(currentValue, value, currentDirectiveIndex, directiveIndex)) {\n                            setValue(context, ctxIndex, value);\n                            setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            if (hasInitialValueChanged(context, currentFlag, value)) {\n                                setDirty(context, ctxIndex, true);\n                                dirty = true;\n                            }\n                        }\n                        props[i] = null;\n                        totalRemainingProperties--;\n                        break;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // STEP 2:\n        // apply the left over properties to the context in the correct order.\n        if (totalRemainingProperties) {\n            var sanitizer = entryIsClassBased ? null : getStyleSanitizer(context, directiveIndex);\n            propertiesLoop: for (var i = 0; i < props.length; i++) {\n                var mapProp = props[i];\n                if (!mapProp) {\n                    // this is an early exit in case a value was already encountered above in the\n                    // previous loop (which means that the property was applied or rejected)\n                    continue;\n                }\n                var value = applyAllProps ? true : values[mapProp];\n                var normalizedProp = entryIsClassBased ? mapProp : hyphenate(mapProp);\n                var isInsideOwnershipArea = ctxIndex >= ownershipValuesStartIndex;\n                for (var j = ctxIndex; j < ctxEnd; j += 4 /* Size */) {\n                    var distantCtxProp = getProp(context, j);\n                    if (distantCtxProp === normalizedProp) {\n                        var distantCtxDirectiveIndex = getDirectiveIndexFromEntry(context, j);\n                        var distantCtxPlayerBuilderIndex = getPlayerBuilderIndex(context, j);\n                        var distantCtxValue = getValue(context, j);\n                        var distantCtxFlag = getPointers(context, j);\n                        if (allowValueChange(distantCtxValue, value, distantCtxDirectiveIndex, directiveIndex)) {\n                            // even if the entry isn't updated (by value or directiveIndex) then\n                            // it should still be moved over to the correct spot in the array so\n                            // the iteration loop is tighter.\n                            if (isInsideOwnershipArea) {\n                                swapMultiContextEntries(context, ctxIndex, j);\n                                totalUniqueValues++;\n                            }\n                            if (hasValueChanged(distantCtxFlag, distantCtxValue, value)) {\n                                if (value === null || value === undefined && value !== distantCtxValue) {\n                                    valuesEntryShapeChange = true;\n                                }\n                                setValue(context, ctxIndex, value);\n                                // SKIP IF INITIAL CHECK\n                                // If the former `value` is `null` then it means that an initial value\n                                // could be being rendered on screen. If that is the case then there is\n                                // no point in updating the value in case it matches. In other words if the\n                                // new value is the exact same as the previously rendered value (which\n                                // happens to be the initial value) then do nothing.\n                                if (distantCtxValue !== null ||\n                                    hasInitialValueChanged(context, distantCtxFlag, value)) {\n                                    setDirty(context, ctxIndex, true);\n                                    dirty = true;\n                                }\n                            }\n                            if (distantCtxDirectiveIndex !== directiveIndex ||\n                                playerBuilderIndex !== distantCtxPlayerBuilderIndex) {\n                                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                            }\n                        }\n                        ctxIndex += 4 /* Size */;\n                        continue propertiesLoop;\n                    }\n                }\n                // fallback case ... value not found at all in the context\n                if (value != null) {\n                    valuesEntryShapeChange = true;\n                    totalUniqueValues++;\n                    var flag = prepareInitialFlag(context, normalizedProp, entryIsClassBased, sanitizer) |\n                        1 /* Dirty */;\n                    var insertionIndex = isInsideOwnershipArea ?\n                        ctxIndex :\n                        (ownershipValuesStartIndex + totalNewAllocatedSlots * 4 /* Size */);\n                    insertNewMultiProperty(context, insertionIndex, entryIsClassBased, normalizedProp, flag, value, directiveIndex, playerBuilderIndex);\n                    totalNewAllocatedSlots++;\n                    ctxEnd += 4 /* Size */;\n                    ctxIndex += 4 /* Size */;\n                    dirty = true;\n                }\n            }\n        }\n        // STEP 3:\n        // Remove (nullify) any existing entries in the context that were not apart of the\n        // map input value that was passed into this algorithm for this directive.\n        while (ctxIndex < ctxEnd) {\n            valuesEntryShapeChange = true; // some values are missing\n            var ctxValue = getValue(context, ctxIndex);\n            var ctxFlag = getPointers(context, ctxIndex);\n            var ctxDirective = getDirectiveIndexFromEntry(context, ctxIndex);\n            if (ctxValue != null) {\n                valuesEntryShapeChange = true;\n            }\n            if (hasValueChanged(ctxFlag, ctxValue, null)) {\n                setValue(context, ctxIndex, null);\n                // only if the initial value is falsy then\n                if (hasInitialValueChanged(context, ctxFlag, ctxValue)) {\n                    setDirty(context, ctxIndex, true);\n                    dirty = true;\n                }\n                setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // Because the object shape has changed, this means that all follow-up directives will need to\n        // reapply their values into the object. For this to happen, the cached array needs to be updated\n        // with dirty flags so that follow-up calls to `updateStylingMap` will reapply their styling code.\n        // the reapplication of styling code within the context will reshape it and update the offset\n        // values (also follow-up directives can write new values in case earlier directives set anything\n        // to null due to removals or falsy values).\n        valuesEntryShapeChange = valuesEntryShapeChange || existingCachedValueCount !== totalUniqueValues;\n        updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, ownershipValuesStartIndex, ctxEnd, totalUniqueValues, valuesEntryShapeChange);\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        return totalNewAllocatedSlots;\n    }\n    /**\n     * Sets and resolves a single class value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateClassProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, true, directiveIndex, forceOverride);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param forceOverride whether or not to skip all directive prioritization\n     *    and just apply the value regardless.\n     */\n    function updateStyleProp(context, offset, input, directiveIndex, forceOverride) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        updateSingleStylingValue(context, offset, input, false, directiveIndex, forceOverride);\n    }\n    function updateSingleStylingValue(context, offset, input, isClassBased, directiveIndex, forceOverride) {\n        ngDevMode && assertValidDirectiveIndex(context, directiveIndex);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        ngDevMode && ngDevMode.stylingProp++;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            (forceOverride || allowValueChange(currValue, value, currDirective, directiveIndex))) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[0 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n            ngDevMode && ngDevMode.stylingPropCacheMiss++;\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveIndex) {\n        if (directiveIndex === void 0) { directiveIndex = 0; }\n        var totalPlayersQueued = 0;\n        ngDevMode && ngDevMode.stylingApply++;\n        // this prevents multiple attempts to render style/class values on\n        // the same element...\n        if (allowFlush(context, directiveIndex)) {\n            // all styling instructions present within any hostBindings functions\n            // do not update the context immediately when called. They are instead\n            // queued up and applied to the context right at this point. Why? This\n            // is because Angular evaluates component/directive and directive\n            // sub-class code at different points and it's important that the\n            // styling values are applied to the context in the right order\n            // (see `interfaces/styling.ts` for more information).\n            flushQueue(context);\n            if (isContextDirty(context)) {\n                ngDevMode && ngDevMode.stylingApplyCacheMiss++;\n                // this is here to prevent things like <ng-container [style] [class]>...</ng-container>\n                // or if there are any host style or class bindings present in a directive set on\n                // a container node\n                var native = context[0 /* ElementPosition */];\n                var flushPlayerBuilders = context[1 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n                var multiStartIndex = getMultiStylesStartIndex(context);\n                for (var i = 10 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                    // there is no point in rendering styles that have not changed on screen\n                    if (isDirty(context, i)) {\n                        var flag = getPointers(context, i);\n                        var directiveIndex_1 = getDirectiveIndexFromEntry(context, i);\n                        var prop = getProp(context, i);\n                        var value = getValue(context, i);\n                        var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex_1) : null;\n                        var playerBuilder = getPlayerBuilder(context, i);\n                        var isClassBased = flag & 2 /* Class */ ? true : false;\n                        var isInSingleRegion = i < multiStartIndex;\n                        var valueToApply = value;\n                        // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                        // this check implies that a single value was removed and we\n                        // should now defer to a multi value and use that (if set).\n                        if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                            // single values ALWAYS have a reference to a multi index\n                            var multiIndex = getMultiOrSingleIndex(flag);\n                            valueToApply = getValue(context, multiIndex);\n                        }\n                        // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                        // the initial value will always be a string or null,\n                        // therefore we can safely adopt it in case there's nothing else\n                        // note that this should always be a falsy check since `false` is used\n                        // for both class and style comparisons (styles can't be false and false\n                        // classes are turned off and should therefore defer to their initial values)\n                        // Note that we ignore class-based deferals because otherwise a class can never\n                        // be removed in the case that it exists as true in the initial classes list...\n                        if (!valueExists(valueToApply, isClassBased)) {\n                            valueToApply = getInitialValue(context, flag);\n                        }\n                        // if the first render is true then we do not want to start applying falsy\n                        // values to the DOM element's styling. Otherwise then we know there has\n                        // been a change and even if it's falsy then it's removing something that\n                        // was truthy before.\n                        var doApplyValue = renderer && (isFirstRender ? valueToApply : true);\n                        if (doApplyValue) {\n                            if (isClassBased) {\n                                setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                            }\n                            else {\n                                setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                            }\n                        }\n                        setDirty(context, i, false);\n                    }\n                }\n                if (flushPlayerBuilders) {\n                    var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                    var playerContext = getPlayerContext(context);\n                    var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                    for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                        var builder = playerContext[i];\n                        var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                        var oldPlayer = playerContext[playerInsertionIndex];\n                        if (builder) {\n                            var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                            if (player !== undefined) {\n                                if (player != null) {\n                                    var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                    wasQueued && totalPlayersQueued++;\n                                }\n                                if (oldPlayer) {\n                                    oldPlayer.destroy();\n                                }\n                            }\n                        }\n                        else if (oldPlayer) {\n                            // the player builder has been removed ... therefore we should delete the associated\n                            // player\n                            oldPlayer.destroy();\n                        }\n                    }\n                    setContextPlayersDirty(context, false);\n                }\n                setContextDirty(context, false);\n            }\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     *\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    }\n    /**\n     * Adds/removes the provided className value to the provided element.\n     *\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n            // DOMTokenList will throw if we try to add or remove an empty string.\n        }\n        else if (className !== '') {\n            if (add) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native['classList'].add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native['classList'].remove(className);\n            }\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 10 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[4 /* InitialClassValuesPosition */] :\n            context[3 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 10 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiClassesStartIndex(context) {\n        var classCache = context[6 /* CachedMultiClasses */];\n        return classCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function getMultiStylesStartIndex(context) {\n        var stylesCache = context[7 /* CachedMultiStyles */];\n        return stylesCache[1 /* ValuesStartPosition */ +\n            1 /* PositionStartOffset */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[9 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[9 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[9 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 1 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 1 /* MasterFlagPosition */);\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 1 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[1 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[1 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        if (indexA === indexB)\n            return;\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var tmpDirectiveIndex = getDirectiveIndexFromEntry(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = getDirectiveIndexFromEntry(context, indexB);\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, tmpDirectiveIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[4 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasInitialValueChanged(context, flag, newValue) {\n        var initialValue = getInitialValue(context, flag);\n        return !initialValue || hasValueChanged(flag, initialValue, newValue);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 2 /* KeyValueStartPosition */; i < keyValues.length; i += 3 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[2 /* DirectiveRegistryPosition */][(directiveIndex * 2 /* Size */) +\n            0 /* SinglePropValuesIndexOffset */];\n        var offsets = context[5 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 2 /* Size */ +\n            1 /* StyleSanitizerOffset */] ||\n            dirs[1 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced in case an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // this decides what to do if and when there is a collision.\n        if (currentValue != null) {\n            if (newValue != null) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value in case it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * Returns the className string of all the initial classes for the element.\n     *\n     * This function is designed to populate and cache all the static class\n     * values into a className string. The caching mechanism works by placing\n     * the completed className string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the className string (e.g. `on active red`)\n     */\n    function getInitialClassNameValue(context) {\n        var initialClassValues = context[4 /* InitialClassValuesPosition */];\n        var className = initialClassValues[1 /* CachedStringValuePosition */];\n        if (className === null) {\n            className = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialClassValues.length; i += 3 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            initialClassValues[1 /* CachedStringValuePosition */] = className;\n        }\n        return className;\n    }\n    /**\n     * Returns the style string of all the initial styles for the element.\n     *\n     * This function is designed to populate and cache all the static style\n     * values into a style string. The caching mechanism works by placing\n     * the completed style string into the initial values array into a\n     * dedicated slot. This will prevent the function from having to populate\n     * the string each time an element is created or matched.\n     *\n     * @returns the style string (e.g. `width:100px;height:200px`)\n     */\n    function getInitialStyleStringValue(context) {\n        var initialStyleValues = context[3 /* InitialStyleValuesPosition */];\n        var styleString = initialStyleValues[1 /* CachedStringValuePosition */];\n        if (styleString === null) {\n            styleString = '';\n            for (var i = 2 /* KeyValueStartPosition */; i < initialStyleValues.length; i += 3 /* Size */) {\n                var value = initialStyleValues[i + 1];\n                if (value !== null) {\n                    styleString += (styleString.length ? ';' : '') + (initialStyleValues[i] + \":\" + value);\n                }\n            }\n            initialStyleValues[1 /* CachedStringValuePosition */] = styleString;\n        }\n        return styleString;\n    }\n    /**\n     * Returns the current cached mutli-value for a given directiveIndex within the provided context.\n     */\n    function readCachedMapValue(context, entryIsClassBased, directiveIndex) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        return values[index + 2 /* ValueOffset */] || null;\n    }\n    /**\n     * Determines whether the provided multi styling value should be updated or not.\n     *\n     * Because `[style]` and `[class]` bindings rely on an identity change to occur before\n     * applying new values, the styling algorithm may not update an existing entry into\n     * the context if a previous directive's entry changed shape.\n     *\n     * This function will decide whether or not a value should be applied (if there is a\n     * cache miss) to the context based on the following rules:\n     *\n     * - If there is an identity change between the existing value and new value\n     * - If there is no existing value cached (first write)\n     * - If a previous directive flagged the existing cached value as dirty\n     */\n    function isMultiValueCacheHit(context, entryIsClassBased, directiveIndex, newValue) {\n        var indexOfCachedValues = entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */;\n        var cachedValues = context[indexOfCachedValues];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        if (cachedValues[index + 0 /* DirtyFlagOffset */])\n            return false;\n        return newValue === NO_CHANGE ||\n            readCachedMapValue(context, entryIsClassBased, directiveIndex) === newValue;\n    }\n    /**\n     * Updates the cached status of a multi-styling value in the context.\n     *\n     * The cached map array (which exists in the context) contains a manifest of\n     * each multi-styling entry (`[style]` and `[class]` entries) for the template\n     * as well as all directives.\n     *\n     * This function will update the cached status of the provided multi-style\n     * entry within the cache.\n     *\n     * When called, this function will update the following information:\n     * - The actual cached value (the raw value that was passed into `[style]` or `[class]`)\n     * - The total amount of unique styling entries that this value has written into the context\n     * - The exact position of where the multi styling entries start in the context for this binding\n     * - The dirty flag will be set to true\n     *\n     * If the `dirtyFutureValues` param is provided then it will update all future entries (binding\n     * entries that exist as apart of other directives) to be dirty as well. This will force the\n     * styling algorithm to reapply those values once change detection checks them (which will in\n     * turn cause the styling context to update itself and the correct styling values will be\n     * rendered on screen).\n     */\n    function updateCachedMapValue(context, directiveIndex, entryIsClassBased, cacheValue, startPosition, endPosition, totalValues, dirtyFutureValues) {\n        var values = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        var index = 1 /* ValuesStartPosition */ +\n            directiveIndex * 4 /* Size */;\n        // in the event that this is true we assume that future values are dirty and therefore\n        // will be checked again in the next CD cycle\n        if (dirtyFutureValues) {\n            var nextStartPosition = startPosition + totalValues * 4 /* Size */;\n            for (var i = index + 4 /* Size */; i < values.length; i += 4 /* Size */) {\n                values[i + 1 /* PositionStartOffset */] = nextStartPosition;\n                values[i + 0 /* DirtyFlagOffset */] = 1;\n            }\n        }\n        values[index + 0 /* DirtyFlagOffset */] = 0;\n        values[index + 1 /* PositionStartOffset */] = startPosition;\n        values[index + 2 /* ValueOffset */] = cacheValue;\n        values[index + 3 /* ValueCountOffset */] = totalValues;\n        // the code below counts the total amount of styling values that exist in\n        // the context up until this directive. This value will be later used to\n        // update the cached value map's total counter value.\n        var totalStylingEntries = totalValues;\n        for (var i = 1 /* ValuesStartPosition */; i < index; i += 4 /* Size */) {\n            totalStylingEntries += values[i + 3 /* ValueCountOffset */];\n        }\n        // because style values come before class values in the context this means\n        // that if any new values were inserted then the cache values array for\n        // classes is out of sync. The code below will update the offsets to point\n        // to their new values.\n        if (!entryIsClassBased) {\n            var classCache = context[6 /* CachedMultiClasses */];\n            var classesStartPosition = classCache[1 /* ValuesStartPosition */ +\n                1 /* PositionStartOffset */];\n            var diffInStartPosition = endPosition - classesStartPosition;\n            for (var i = 1 /* ValuesStartPosition */; i < classCache.length; i += 4 /* Size */) {\n                classCache[i + 1 /* PositionStartOffset */] += diffInStartPosition;\n            }\n        }\n        values[0 /* EntriesCountPosition */] = totalStylingEntries;\n    }\n    function hyphenateEntries(entries) {\n        var newEntries = [];\n        for (var i = 0; i < entries.length; i++) {\n            newEntries.push(hyphenate(entries[i]));\n        }\n        return newEntries;\n    }\n    function hyphenate(value) {\n        return value.replace(/[a-z][A-Z]/g, function (match) { return match.charAt(0) + \"-\" + match.charAt(1).toLowerCase(); });\n    }\n    function registerMultiMapEntry(context, directiveIndex, entryIsClassBased, startPosition, count) {\n        if (count === void 0) { count = 0; }\n        var cachedValues = context[entryIsClassBased ? 6 /* CachedMultiClasses */ : 7 /* CachedMultiStyles */];\n        if (directiveIndex > 0) {\n            var limit = 1 /* ValuesStartPosition */ +\n                (directiveIndex * 4 /* Size */);\n            while (cachedValues.length < limit) {\n                // this means that ONLY directive class styling (like ngClass) was used\n                // therefore the root directive will still need to be filled in as well\n                // as any other directive spaces in case they only used static values\n                cachedValues.push(0, startPosition, null, 0);\n            }\n        }\n        cachedValues.push(0, startPosition, null, count);\n    }\n    /**\n     * Inserts or updates an existing entry in the provided `staticStyles` collection.\n     *\n     * @param index the index representing an existing styling entry in the collection:\n     *  if provided (numeric): then it will update the existing entry at the given position\n     *  if null: then it will insert a new entry within the collection\n     * @param staticStyles a collection of style or class entries where the value will\n     *  be inserted or patched\n     * @param prop the property value of the entry (e.g. `width` (styles) or `foo` (classes))\n     * @param value the styling value of the entry (e.g. `absolute` (styles) or `true` (classes))\n     * @param directiveOwnerIndex the directive owner index value of the styling source responsible\n     *        for these styles (see `interfaces/styling.ts#directives` for more info)\n     * @returns the index of the updated or new entry within the collection\n     */\n    function addOrUpdateStaticStyle(index, staticStyles, prop, value, directiveOwnerIndex) {\n        if (index === null) {\n            index = staticStyles.length;\n            staticStyles.push(null, null, null);\n            staticStyles[index + 0 /* PropOffset */] = prop;\n        }\n        staticStyles[index + 1 /* ValueOffset */] = value;\n        staticStyles[index + 2 /* DirectiveOwnerOffset */] = directiveOwnerIndex;\n        return index;\n    }\n    function assertValidDirectiveIndex(context, directiveIndex) {\n        var dirs = context[2 /* DirectiveRegistryPosition */];\n        var index = directiveIndex * 2 /* Size */;\n        if (index >= dirs.length ||\n            dirs[index + 0 /* SinglePropValuesIndexOffset */] === -1) {\n            throw new Error('The provided directive is not registered with the styling context');\n        }\n    }\n\n    /**\n     * Creates a new instance of the `TStylingContext`.\n     */\n    function allocStylingContext$1() {\n        return [0 /* Initial */, 0];\n    }\n    /**\n     * Temporary function that allows for a string-based property name to be\n     * obtained from an index-based property identifier.\n     *\n     * This function will be removed once the new styling refactor code (which\n     * lives inside of `render3/styling_next/`) replaces the existing styling\n     * implementation.\n     */\n    function getBindingNameFromIndex(stylingContext, offset, directiveIndex, isClassBased) {\n        var singleIndex = getSinglePropIndexValue(stylingContext, directiveIndex, offset, isClassBased);\n        return getProp(stylingContext, singleIndex);\n    }\n    function updateContextDirectiveIndex(context, index) {\n        context[1 /* MaxDirectiveIndexPosition */] = index;\n    }\n    function getConfig(context) {\n        return context[0 /* ConfigPosition */];\n    }\n    function setConfig(context, value) {\n        context[0 /* ConfigPosition */] = value;\n    }\n    function getProp$1(context, index) {\n        return context[index + 2 /* PropOffset */];\n    }\n    function getGuardMask(context, index) {\n        return context[index + 0 /* MaskOffset */];\n    }\n    function getValuesCount(context, index) {\n        return context[index + 1 /* ValuesCountOffset */];\n    }\n    function getValue$1(context, index, offset) {\n        return context[index + 3 /* BindingsStartOffset */ + offset];\n    }\n    function getDefaultValue(context, index) {\n        var valuesCount = getValuesCount(context, index);\n        return context[index + 3 /* BindingsStartOffset */ + valuesCount - 1];\n    }\n    /**\n     * Temporary function which determines whether or not a context is\n     * allowed to be flushed based on the provided directive index.\n     */\n    function allowStylingFlush(context, index) {\n        return index === context[1 /* MaxDirectiveIndexPosition */];\n    }\n    function lockContext(context) {\n        setConfig(context, getConfig(context) | 1 /* Locked */);\n    }\n    function isContextLocked(context) {\n        return (getConfig(context) & 1 /* Locked */) > 0;\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains the core logic for styling in Angular.\n     *\n     * All styling bindings (i.e. `[style]`, `[style.prop]`, `[class]` and `[class.name]`)\n     * will have their values be applied through the logic in this file.\n     *\n     * When a binding is encountered (e.g. `<div [style.width]=\"w\">`) then\n     * the binding data will be populated into a `TStylingContext` data-structure.\n     * There is only one `TStylingContext` per `TNode` and each element instance\n     * will update its style/class binding values in concert with the styling\n     * context.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     */\n    // the values below are global to all styling code below. Each value\n    // will either increment or mutate each time a styling instruction is\n    // executed. Do not modify the values below.\n    var currentStyleIndex = 0;\n    var currentClassIndex = 0;\n    var stylesBitMask = 0;\n    var classesBitMask = 0;\n    var deferredBindingQueue = [];\n    var DEFAULT_BINDING_VALUE = null;\n    var DEFAULT_SIZE_VALUE = 1;\n    var DEFAULT_MASK_VALUE = 0;\n    var DEFAULT_BINDING_INDEX_VALUE = -1;\n    var BIT_MASK_APPLY_ALL = -1;\n    /**\n     * Visits a class-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a class-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time its called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateClassBinding(context, data, prop, bindingIndex, value, deferRegistration) {\n        var index = currentClassIndex++;\n        if (updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration)) {\n            classesBitMask |= 1 << index;\n        }\n    }\n    /**\n     * Visits a style-based binding and updates the new value (if changed).\n     *\n     * This function is called each time a style-based styling instruction\n     * is executed. It's important that it's always called (even if the value\n     * has not changed) so that the inner counter index value is incremented.\n     * This way, each instruction is always guaranteed to get the same counter\n     * state each time its called (which then allows the `TStylingContext`\n     * and the bit mask values to be in sync).\n     */\n    function updateStyleBinding(context, data, prop, bindingIndex, value, deferRegistration) {\n        var index = currentStyleIndex++;\n        if (updateBindingData(context, data, index, prop, bindingIndex, value, deferRegistration)) {\n            stylesBitMask |= 1 << index;\n        }\n    }\n    function updateBindingData(context, data, counterIndex, prop, bindingIndex, value, deferRegistration) {\n        if (!isContextLocked(context)) {\n            if (deferRegistration) {\n                deferBindingRegistration(context, counterIndex, prop, bindingIndex);\n            }\n            else {\n                deferredBindingQueue.length && flushDeferredBindings();\n                // this will only happen during the first update pass of the\n                // context. The reason why we can't use `tNode.firstTemplatePass`\n                // here is because its not guaranteed to be true when the first\n                // update pass is executed (remember that all styling instructions\n                // are run in the update phase, and, as a result, are no more\n                // styling instructions that are run in the creation phase).\n                registerBinding(context, counterIndex, prop, bindingIndex);\n            }\n        }\n        if (data[bindingIndex] !== value) {\n            data[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Schedules a binding registration to be run at a later point.\n     *\n     * The reasoning for this feature is to ensure that styling\n     * bindings are registered in the correct order for when\n     * directives/components have a super/sub class inheritance\n     * chains. Each directive's styling bindings must be\n     * registered into the context in reverse order. Therefore all\n     * bindings will be buffered in reverse order and then applied\n     * after the inheritance chain exits.\n     */\n    function deferBindingRegistration(context, counterIndex, prop, bindingIndex) {\n        deferredBindingQueue.splice(0, 0, context, counterIndex, prop, bindingIndex);\n    }\n    /**\n     * Flushes the collection of deferred bindings and causes each entry\n     * to be registered into the context.\n     */\n    function flushDeferredBindings() {\n        var i = 0;\n        while (i < deferredBindingQueue.length) {\n            var context = deferredBindingQueue[i++];\n            var count = deferredBindingQueue[i++];\n            var prop = deferredBindingQueue[i++];\n            var bindingIndex = deferredBindingQueue[i++];\n            registerBinding(context, count, prop, bindingIndex);\n        }\n        deferredBindingQueue.length = 0;\n    }\n    /**\n     * Registers the provided binding (prop + bindingIndex) into the context.\n     *\n     * This function is shared between bindings that are assigned immediately\n     * (via `updateBindingData`) and at a deferred stage. When called, it will\n     * figure out exactly where to place the binding data in the context.\n     *\n     * It is needed because it will either update or insert a styling property\n     * into the context at the correct spot.\n     *\n     * When called, one of two things will happen:\n     *\n     * 1) If the property already exists in the context then it will just add\n     *    the provided `bindingValue` to the end of the binding sources region\n     *    for that particular property.\n     *\n     *    - If the binding value is a number then it will be added as a new\n     *      binding index source next to the other binding sources for the property.\n     *\n     *    - Otherwise, if the binding value is a string/boolean/null type then it will\n     *      replace the default value for the property if the default value is `null`.\n     *\n     * 2) If the property does not exist then it will be inserted into the context.\n     *    The styling context relies on all properties being stored in alphabetical\n     *    order, so it knows exactly where to store it.\n     *\n     *    When inserted, a default `null` value is created for the property which exists\n     *    as the default value for the binding. If the bindingValue property is inserted\n     *    and it is either a string, number or null value then that will replace the default\n     *    value.\n     */\n    function registerBinding(context, countId, prop, bindingValue) {\n        var i = 2 /* ValuesStartPosition */;\n        var found = false;\n        while (i < context.length) {\n            var valuesCount = getValuesCount(context, i);\n            var p = getProp$1(context, i);\n            found = prop <= p;\n            if (found) {\n                // all style/class bindings are sorted by property name\n                if (prop < p) {\n                    allocateNewContextEntry(context, i, prop);\n                }\n                addBindingIntoContext(context, i, bindingValue, countId);\n                break;\n            }\n            i += 3 /* BindingsStartOffset */ + valuesCount;\n        }\n        if (!found) {\n            allocateNewContextEntry(context, context.length, prop);\n            addBindingIntoContext(context, i, bindingValue, countId);\n        }\n    }\n    function allocateNewContextEntry(context, index, prop) {\n        context.splice(index, 0, DEFAULT_MASK_VALUE, DEFAULT_SIZE_VALUE, prop, DEFAULT_BINDING_VALUE);\n    }\n    /**\n     * Inserts a new binding value into a styling property tuple in the `TStylingContext`.\n     *\n     * A bindingValue is inserted into a context during the first update pass\n     * of a template or host bindings function. When this occurs, two things\n     * happen:\n     *\n     * - If the bindingValue value is a number then it is treated as a bindingIndex\n     *   value (a index in the `LView`) and it will be inserted next to the other\n     *   binding index entries.\n     *\n     * - Otherwise the binding value will update the default value for the property\n     *   and this will only happen if the default value is `null`.\n     */\n    function addBindingIntoContext(context, index, bindingValue, countId) {\n        var valuesCount = getValuesCount(context, index);\n        // -1 is used because we want the last value that's in the list (not the next slot)\n        var lastValueIndex = index + 3 /* BindingsStartOffset */ + valuesCount - 1;\n        if (typeof bindingValue === 'number') {\n            context.splice(lastValueIndex, 0, bindingValue);\n            context[index + 1 /* ValuesCountOffset */]++;\n            context[index + 0 /* MaskOffset */] |= 1 << countId;\n        }\n        else if (typeof bindingValue === 'string' && context[lastValueIndex] == null) {\n            context[lastValueIndex] = bindingValue;\n        }\n    }\n    /**\n     * Applies all class entries in the provided context to the provided element.\n     */\n    function applyClasses(renderer, data, context, element, directiveIndex) {\n        if (allowStylingFlush(context, directiveIndex)) {\n            var isFirstPass = isContextLocked(context);\n            isFirstPass && lockContext(context);\n            applyStyling(context, renderer, element, data, classesBitMask, setClass$1, isFirstPass);\n            currentClassIndex = 0;\n            classesBitMask = 0;\n        }\n    }\n    /**\n     * Applies all style entries in the provided context to the provided element.\n     */\n    function applyStyles(renderer, data, context, element, directiveIndex) {\n        if (allowStylingFlush(context, directiveIndex)) {\n            var isFirstPass = isContextLocked(context);\n            isFirstPass && lockContext(context);\n            applyStyling(context, renderer, element, data, stylesBitMask, setStyle$1, isFirstPass);\n            currentStyleIndex = 0;\n            stylesBitMask = 0;\n        }\n    }\n    /**\n     * Runs through the provided styling context and applies each value to\n     * the provided element (via the renderer) if one or more values are present.\n     *\n     * Note that this function is not designed to be called in isolation (use\n     * `applyClasses` and `applyStyles` to actually apply styling values).\n     */\n    function applyStyling(context, renderer, element, bindingData, bitMask, applyStylingFn, forceApplyDefaultValues) {\n        deferredBindingQueue.length && flushDeferredBindings();\n        if (bitMask) {\n            var processAllEntries = bitMask === BIT_MASK_APPLY_ALL;\n            var i = 2 /* ValuesStartPosition */;\n            while (i < context.length) {\n                var valuesCount = getValuesCount(context, i);\n                var guardMask = getGuardMask(context, i);\n                // the guard mask value is non-zero if and when\n                // there are binding values present for the property.\n                // If there are ONLY static values (i.e. `style=\"prop:val\")\n                // then the guard value will stay as zero.\n                var processEntry = processAllEntries || (guardMask ? (bitMask & guardMask) : forceApplyDefaultValues);\n                if (processEntry) {\n                    var prop = getProp$1(context, i);\n                    var limit = valuesCount - 1;\n                    for (var j = 0; j <= limit; j++) {\n                        var isFinalValue = j === limit;\n                        var bindingValue = getValue$1(context, i, j);\n                        var bindingIndex = isFinalValue ? DEFAULT_BINDING_INDEX_VALUE : bindingValue;\n                        var valueToApply = isFinalValue ? bindingValue : bindingData[bindingIndex];\n                        if (isValueDefined(valueToApply) || isFinalValue) {\n                            applyStylingFn(renderer, element, prop, valueToApply, bindingIndex);\n                            break;\n                        }\n                    }\n                }\n                i += 3 /* BindingsStartOffset */ + valuesCount;\n            }\n        }\n    }\n    function isValueDefined(value) {\n        // the reason why null is compared against is because\n        // a CSS class value that is set to `false` must be\n        // respected (otherwise it would be treated as falsy).\n        // Empty string values are because developers usually\n        // set a value to an empty string to remove it.\n        return value != null && value !== '';\n    }\n    /**\n     * Assigns a style value to a style property for the given element.\n     */\n    var setStyle$1 = function (renderer, native, prop, value) {\n        if (value) {\n            // opacity, z-index and flexbox all have number values\n            // and these need to be converted into strings so that\n            // they can be assigned properly.\n            value = value.toString();\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native.style.setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            renderer && isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native.style.removeProperty(prop);\n        }\n    };\n    /**\n     * Adds/removes the provided className value to the provided element.\n     */\n    var setClass$1 = function (renderer, native, className, value) {\n        if (className !== '') {\n            if (value) {\n                ngDevMode && ngDevMode.rendererAddClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                    native.classList.add(className);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererRemoveClass++;\n                renderer && isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                    native.classList.remove(className);\n            }\n        }\n    };\n\n    /**\n     * Instantiates and attaches an instance of `TStylingContextDebug` to the provided context.\n     */\n    function attachStylingDebugObject(context) {\n        var debug = new TStylingContextDebug(context);\n        attachDebugObject(context, debug);\n        return debug;\n    }\n    /**\n     * A human-readable debug summary of the styling data present within `TStylingContext`.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var TStylingContextDebug = /** @class */ (function () {\n        function TStylingContextDebug(context) {\n            this.context = context;\n        }\n        Object.defineProperty(TStylingContextDebug.prototype, \"isLocked\", {\n            get: function () { return isContextLocked(this.context); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(TStylingContextDebug.prototype, \"entries\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context.\n             *\n             * See `TStylingTupleSummary`.\n             */\n            get: function () {\n                var context = this.context;\n                var entries = {};\n                var start = 2 /* ValuesStartPosition */;\n                var i = start;\n                while (i < context.length) {\n                    var prop = getProp$1(context, i);\n                    var guardMask = getGuardMask(context, i);\n                    var valuesCount = getValuesCount(context, i);\n                    var defaultValue = getDefaultValue(context, i);\n                    var bindingsStartPosition = i + 3 /* BindingsStartOffset */;\n                    var sources = [];\n                    for (var j = 0; j < valuesCount; j++) {\n                        sources.push(context[bindingsStartPosition + j]);\n                    }\n                    entries[prop] = { prop: prop, guardMask: guardMask, valuesCount: valuesCount, defaultValue: defaultValue, sources: sources };\n                    i += 3 /* BindingsStartOffset */ + valuesCount;\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TStylingContextDebug;\n    }());\n    /**\n     * A human-readable debug summary of the styling data present for a `DebugNode` instance.\n     *\n     * This class is designed to be used within testing code or when an\n     * application has `ngDevMode` activated.\n     */\n    var NodeStylingDebug = /** @class */ (function () {\n        function NodeStylingDebug(context, _data) {\n            this.context = context;\n            this._data = _data;\n            this._contextDebug = this.context.debug;\n        }\n        Object.defineProperty(NodeStylingDebug.prototype, \"summary\", {\n            /**\n             * Returns a detailed summary of each styling entry in the context and\n             * what their runtime representation is.\n             *\n             * See `StylingSummary`.\n             */\n            get: function () {\n                var _this = this;\n                var contextEntries = this._contextDebug.entries;\n                var finalValues = {};\n                this._mapValues(function (prop, value, bindingIndex) {\n                    finalValues[prop] = { value: value, bindingIndex: bindingIndex };\n                });\n                var entries = {};\n                var values = this.values;\n                var props = Object.keys(values);\n                for (var i = 0; i < props.length; i++) {\n                    var prop = props[i];\n                    var contextEntry = contextEntries[prop];\n                    var sourceValues = contextEntry.sources.map(function (v) {\n                        var value;\n                        var bindingIndex;\n                        if (typeof v === 'number') {\n                            value = _this._data[v];\n                            bindingIndex = v;\n                        }\n                        else {\n                            value = v;\n                            bindingIndex = null;\n                        }\n                        return { bindingIndex: bindingIndex, value: value };\n                    });\n                    var finalValue = finalValues[prop];\n                    var bindingIndex = finalValue.bindingIndex;\n                    bindingIndex = bindingIndex === DEFAULT_BINDING_INDEX_VALUE ? null : bindingIndex;\n                    entries[prop] = { prop: prop, value: finalValue.value, bindingIndex: bindingIndex, sourceValues: sourceValues };\n                }\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NodeStylingDebug.prototype, \"values\", {\n            /**\n             * Returns a key/value map of all the styles/classes that were last applied to the element.\n             */\n            get: function () {\n                var entries = {};\n                this._mapValues(function (prop, value) { entries[prop] = value; });\n                return entries;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NodeStylingDebug.prototype._mapValues = function (fn) {\n            // there is no need to store/track an element instance. The\n            // element is only used when the styling algorithm attempts to\n            // style the value (and we mock out the stylingApplyFn anyway).\n            var mockElement = {};\n            var mapFn = function (renderer, element, prop, value, bindingIndex) {\n                fn(prop, value, bindingIndex);\n            };\n            applyStyling(this.context, null, mockElement, this._data, BIT_MASK_APPLY_ALL, mapFn);\n        };\n        return NodeStylingDebug;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /*\n     * This file contains conditionally attached classes which provide human readable (debug) level\n     * information for `LView`, `LContainer` and other internal data structures. These data structures\n     * are stored internally as array which makes it very difficult during debugging to reason about the\n     * current state of the system.\n     *\n     * Patching the array with extra property does change the array's hidden class' but it does not\n     * change the cost of access, therefore this patching should not have significant if any impact in\n     * `ngDevMode` mode. (see: https://jsperf.com/array-vs-monkey-patch-array)\n     *\n     * So instead of seeing:\n     * ```\n     * Array(30) [Object, 659, null, …]\n     * ```\n     *\n     * You get to see:\n     * ```\n     * LViewDebug {\n     *   views: [...],\n     *   flags: {attached: true, ...}\n     *   nodes: [\n     *     {html: '<div id=\"123\">', ..., nodes: [\n     *       {html: '<span>', ..., nodes: null}\n     *     ]}\n     *   ]\n     * }\n     * ```\n     */\n    function attachLViewDebug(lView) {\n        attachDebugObject(lView, new LViewDebug(lView));\n    }\n    function attachLContainerDebug(lContainer) {\n        attachDebugObject(lContainer, new LContainerDebug(lContainer));\n    }\n    function toDebug(obj) {\n        if (obj) {\n            var debug = obj.debug;\n            assertDefined(debug, 'Object does not have a debug representation.');\n            return debug;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Use this method to unwrap a native element in `LView` and convert it into HTML for easier\n     * reading.\n     *\n     * @param value possibly wrapped native DOM node.\n     * @param includeChildren If `true` then the serialized HTML form will include child elements (same\n     * as `outerHTML`). If `false` then the serialized HTML form will only contain the element itself\n     * (will not serialize child elements).\n     */\n    function toHtml(value, includeChildren) {\n        if (includeChildren === void 0) { includeChildren = false; }\n        var node = unwrapRNode(value);\n        if (node) {\n            var isTextNode = node.nodeType === Node.TEXT_NODE;\n            var outerHTML = (isTextNode ? node.textContent : node.outerHTML) || '';\n            if (includeChildren || isTextNode) {\n                return outerHTML;\n            }\n            else {\n                var innerHTML = node.innerHTML;\n                return outerHTML.split(innerHTML)[0] || null;\n            }\n        }\n        else {\n            return null;\n        }\n    }\n    var LViewDebug = /** @class */ (function () {\n        function LViewDebug(_raw_lView) {\n            this._raw_lView = _raw_lView;\n        }\n        Object.defineProperty(LViewDebug.prototype, \"flags\", {\n            /**\n             * Flags associated with the `LView` unpacked into a more readable state.\n             */\n            get: function () {\n                var flags = this._raw_lView[FLAGS];\n                return {\n                    __raw__flags__: flags,\n                    initPhaseState: flags & 3 /* InitPhaseStateMask */,\n                    creationMode: !!(flags & 4 /* CreationMode */),\n                    firstViewPass: !!(flags & 8 /* FirstLViewPass */),\n                    checkAlways: !!(flags & 16 /* CheckAlways */),\n                    dirty: !!(flags & 64 /* Dirty */),\n                    attached: !!(flags & 128 /* Attached */),\n                    destroyed: !!(flags & 256 /* Destroyed */),\n                    isRoot: !!(flags & 512 /* IsRoot */),\n                    indexWithinInitPhase: flags >> 10 /* IndexWithinInitPhaseShift */,\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lView[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"host\", {\n            get: function () { return toHtml(this._raw_lView[HOST], true); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"context\", {\n            get: function () { return this._raw_lView[CONTEXT]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"nodes\", {\n            /**\n             * The tree of nodes associated with the current `LView`. The nodes have been normalized into a\n             * tree structure with relevant details pulled out for readability.\n             */\n            get: function () {\n                var lView = this._raw_lView;\n                var tNode = lView[TVIEW].firstChild;\n                return toDebugNodes(tNode, lView);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"__other__\", {\n            /**\n             * Additional information which is hidden behind a property. The extra level of indirection is\n             * done so that the debug view would not be cluttered with properties which are only rarely\n             * relevant to the developer.\n             */\n            get: function () {\n                return {\n                    tView: this._raw_lView[TVIEW],\n                    cleanup: this._raw_lView[CLEANUP],\n                    injector: this._raw_lView[INJECTOR$1],\n                    rendererFactory: this._raw_lView[RENDERER_FACTORY],\n                    renderer: this._raw_lView[RENDERER],\n                    sanitizer: this._raw_lView[SANITIZER],\n                    childHead: toDebug(this._raw_lView[CHILD_HEAD]),\n                    next: toDebug(this._raw_lView[NEXT]),\n                    childTail: toDebug(this._raw_lView[CHILD_TAIL]),\n                    declarationView: toDebug(this._raw_lView[DECLARATION_VIEW]),\n                    contentQueries: this._raw_lView[CONTENT_QUERIES],\n                    queries: this._raw_lView[QUERIES],\n                    tHost: this._raw_lView[T_HOST],\n                    bindingIndex: this._raw_lView[BINDING_INDEX],\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LViewDebug.prototype, \"childViews\", {\n            /**\n             * Normalized view of child views (and containers) attached at this location.\n             */\n            get: function () {\n                var childViews = [];\n                var child = this.__other__.childHead;\n                while (child) {\n                    childViews.push(child);\n                    child = child.__other__.next;\n                }\n                return childViews;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LViewDebug;\n    }());\n    /**\n     * Turns a flat list of nodes into a tree by walking the associated `TNode` tree.\n     *\n     * @param tNode\n     * @param lView\n     */\n    function toDebugNodes(tNode, lView) {\n        if (tNode) {\n            var debugNodes = [];\n            var tNodeCursor = tNode;\n            while (tNodeCursor) {\n                var rawValue = lView[tNode.index];\n                var native = unwrapRNode(rawValue);\n                var componentLViewDebug = isStylingContext(rawValue) ? null : toDebug(readLViewValue(rawValue));\n                var styles = null;\n                var classes = null;\n                if (runtimeIsNewStylingInUse()) {\n                    styles = tNode.newStyles ? new NodeStylingDebug(tNode.newStyles, lView) : null;\n                    classes = tNode.newClasses ? new NodeStylingDebug(tNode.newClasses, lView) : null;\n                }\n                debugNodes.push({\n                    html: toHtml(native),\n                    native: native, styles: styles, classes: classes,\n                    nodes: toDebugNodes(tNode.child, lView),\n                    component: componentLViewDebug,\n                });\n                tNodeCursor = tNodeCursor.next;\n            }\n            return debugNodes;\n        }\n        else {\n            return null;\n        }\n    }\n    var LContainerDebug = /** @class */ (function () {\n        function LContainerDebug(_raw_lContainer) {\n            this._raw_lContainer = _raw_lContainer;\n        }\n        Object.defineProperty(LContainerDebug.prototype, \"activeIndex\", {\n            get: function () { return this._raw_lContainer[ACTIVE_INDEX]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"views\", {\n            get: function () {\n                return this._raw_lContainer.slice(CONTAINER_HEADER_OFFSET)\n                    .map(toDebug);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"parent\", {\n            get: function () { return toDebug(this._raw_lContainer[PARENT]); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"queries\", {\n            get: function () { return this._raw_lContainer[QUERIES]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"host\", {\n            get: function () { return this._raw_lContainer[HOST]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"native\", {\n            get: function () { return this._raw_lContainer[NATIVE]; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LContainerDebug.prototype, \"__other__\", {\n            get: function () {\n                return {\n                    next: toDebug(this._raw_lContainer[NEXT]),\n                };\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LContainerDebug;\n    }());\n    /**\n     * Return an `LView` value if found.\n     *\n     * @param value `LView` if any\n     */\n    function readLViewValue(value) {\n        while (Array.isArray(value)) {\n            // This check is not quite right, as it does not take into account `StylingContext`\n            // This is why it is in debug, not in util.ts\n            if (value.length >= HEADER_OFFSET - 1)\n                return value;\n            value = value[HOST];\n        }\n        return null;\n    }\n    var I18NDebugItem = /** @class */ (function () {\n        function I18NDebugItem(__raw_opCode, _lView, nodeIndex, type) {\n            this.__raw_opCode = __raw_opCode;\n            this._lView = _lView;\n            this.nodeIndex = nodeIndex;\n            this.type = type;\n        }\n        Object.defineProperty(I18NDebugItem.prototype, \"tNode\", {\n            get: function () { return getTNode(this.nodeIndex, this._lView); },\n            enumerable: true,\n            configurable: true\n        });\n        return I18NDebugItem;\n    }());\n    /**\n     * Turns a list of \"Create\" & \"Update\" OpCodes into a human-readable list of operations for\n     * debugging purposes.\n     * @param mutateOpCodes mutation opCodes to read\n     * @param updateOpCodes update opCodes to read\n     * @param icus list of ICU expressions\n     * @param lView The view the opCodes are acting on\n     */\n    function attachI18nOpCodesDebug(mutateOpCodes, updateOpCodes, icus, lView) {\n        attachDebugObject(mutateOpCodes, new I18nMutateOpCodesDebug(mutateOpCodes, lView));\n        attachDebugObject(updateOpCodes, new I18nUpdateOpCodesDebug(updateOpCodes, icus, lView));\n        if (icus) {\n            icus.forEach(function (icu) {\n                icu.create.forEach(function (icuCase) { attachDebugObject(icuCase, new I18nMutateOpCodesDebug(icuCase, lView)); });\n                icu.update.forEach(function (icuCase) {\n                    attachDebugObject(icuCase, new I18nUpdateOpCodesDebug(icuCase, icus, lView));\n                });\n            });\n        }\n    }\n    var I18nMutateOpCodesDebug = /** @class */ (function () {\n        function I18nMutateOpCodesDebug(__raw_opCodes, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nMutateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    var opCode = __raw_opCodes[i];\n                    var result = void 0;\n                    if (typeof opCode === 'string') {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Create Text Node',\n                            nodeIndex: __raw_opCodes[++i],\n                            text: opCode,\n                        };\n                    }\n                    if (typeof opCode === 'number') {\n                        switch (opCode & 7 /* MASK_OPCODE */) {\n                            case 1 /* AppendChild */:\n                                var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                                result = new I18NDebugItem(opCode, __lView, destinationNodeIndex, 'AppendChild');\n                                break;\n                            case 0 /* Select */:\n                                var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, nodeIndex, 'Select');\n                                break;\n                            case 5 /* ElementEnd */:\n                                var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'ElementEnd');\n                                break;\n                            case 4 /* Attr */:\n                                elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                                result = new I18NDebugItem(opCode, __lView, elementIndex, 'Attr');\n                                result['attrName'] = __raw_opCodes[++i];\n                                result['attrValue'] = __raw_opCodes[++i];\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        switch (opCode) {\n                            case COMMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'COMMENT_MARKER',\n                                    commentValue: __raw_opCodes[++i],\n                                    nodeIndex: __raw_opCodes[++i],\n                                };\n                                break;\n                            case ELEMENT_MARKER:\n                                result = {\n                                    __raw_opCode: opCode,\n                                    type: 'ELEMENT_MARKER',\n                                };\n                                break;\n                        }\n                    }\n                    if (!result) {\n                        result = {\n                            __raw_opCode: opCode,\n                            type: 'Unknown Op Code',\n                            code: opCode,\n                        };\n                    }\n                    results.push(result);\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nMutateOpCodesDebug;\n    }());\n    var I18nUpdateOpCodesDebug = /** @class */ (function () {\n        function I18nUpdateOpCodesDebug(__raw_opCodes, icus, __lView) {\n            this.__raw_opCodes = __raw_opCodes;\n            this.icus = icus;\n            this.__lView = __lView;\n        }\n        Object.defineProperty(I18nUpdateOpCodesDebug.prototype, \"operations\", {\n            /**\n             * A list of operation information about how the OpCodes will act on the view.\n             */\n            get: function () {\n                var _a = this, __lView = _a.__lView, __raw_opCodes = _a.__raw_opCodes, icus = _a.icus;\n                var results = [];\n                for (var i = 0; i < __raw_opCodes.length; i++) {\n                    // bit code to check if we should apply the next update\n                    var checkBit = __raw_opCodes[i];\n                    // Number of opCodes to skip until next set of update codes\n                    var skipCodes = __raw_opCodes[++i];\n                    var value = '';\n                    for (var j = i + 1; j <= (i + skipCodes); j++) {\n                        var opCode = __raw_opCodes[j];\n                        if (typeof opCode === 'string') {\n                            value += opCode;\n                        }\n                        else if (typeof opCode == 'number') {\n                            if (opCode < 0) {\n                                // It's a binding index whose value is negative\n                                // We cannot know the value of the binding so we only show the index\n                                value += \"\\uFFFD\" + (-opCode - 1) + \"\\uFFFD\";\n                            }\n                            else {\n                                var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                                var tIcuIndex = void 0;\n                                var tIcu = void 0;\n                                switch (opCode & 3 /* MASK_OPCODE */) {\n                                    case 1 /* Attr */:\n                                        var attrName = __raw_opCodes[++j];\n                                        var sanitizeFn = __raw_opCodes[++j];\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Attr',\n                                            attrValue: value, attrName: attrName, sanitizeFn: sanitizeFn,\n                                        });\n                                        break;\n                                    case 0 /* Text */:\n                                        results.push({\n                                            __raw_opCode: opCode,\n                                            checkBit: checkBit,\n                                            type: 'Text', nodeIndex: nodeIndex,\n                                            text: value,\n                                        });\n                                        break;\n                                    case 2 /* IcuSwitch */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        var result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuSwitch');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['mainBinding'] = value;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                    case 3 /* IcuUpdate */:\n                                        tIcuIndex = __raw_opCodes[++j];\n                                        tIcu = icus[tIcuIndex];\n                                        result = new I18NDebugItem(opCode, __lView, nodeIndex, 'IcuUpdate');\n                                        result['tIcuIndex'] = tIcuIndex;\n                                        result['checkBit'] = checkBit;\n                                        result['tIcu'] = tIcu;\n                                        results.push(result);\n                                        break;\n                                }\n                            }\n                        }\n                    }\n                    i += skipCodes;\n                }\n                return results;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return I18nUpdateOpCodesDebug;\n    }());\n\n    // Note: This hack is necessary so we don't erroneously get a circular dependency\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be performed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode:\n     * - in the \"directive matching\" mode we do _not_ take TContainer's tagName into account if it is\n     * different from NG_TEMPLATE_SELECTOR (value different from NG_TEMPLATE_SELECTOR indicates that a\n     * tag name was extracted from * syntax so we would match the same directive twice);\n     * - in the \"projection\" mode, we use a tag name potentially extracted from the * syntax processing\n     * (applicable to TNodeType.Container only).\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        var tagNameToCompare = tNode.type === 0 /* Container */ && !isProjectionMode ?\n            NG_TEMPLATE_SELECTOR :\n            tNode.tagName;\n        return currentSelector === tagNameToCompare;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data of the node to match\n     * @param selector The selector to try matching against the node.\n     * @param isProjectionMode if `true` we are matching for content projection, otherwise we are doing\n     * directive matching.\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs || [];\n        // Find the index of first attribute that has no value, only a name.\n        var nameOnlyMarkerIdx = getNameOnlyMarkerIndex(nodeAttrs);\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                // special case for matching against classes when a tNode has been instantiated with\n                // class and style values as separate attribute values (e.g. ['title', CLASS, 'foo'])\n                if ((mode & 8 /* CLASS */) && tNode.stylingTemplate) {\n                    if (!isCssClassMatching(readClassValueFromTNode(tNode), selectorAttrValue)) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                    continue;\n                }\n                var isInlineTemplate = tNode.type == 0 /* Container */ && tNode.tagName !== NG_TEMPLATE_SELECTOR;\n                var attrName = (mode & 8 /* CLASS */) ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs, isInlineTemplate, isProjectionMode);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    if (attrIndexInNode > nameOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(nodeAttrs[attrIndexInNode], 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    var compareAgainstClassName = mode & 8 /* CLASS */ ? nodeAttrValue : null;\n                    if (compareAgainstClassName &&\n                        !isCssClassMatching(compareAgainstClassName, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    function readClassValueFromTNode(tNode) {\n        // comparing against CSS class values is complex because the compiler doesn't place them as\n        // regular attributes when an element is created. Instead, the classes (and styles for\n        // that matter) are placed in a special styling context that is used for resolving all\n        // class/style values across static attributes, [style]/[class] and [style.prop]/[class.name]\n        // bindings. Therefore if and when the styling context exists then the class values are to be\n        // extracted by the context helper code below...\n        return tNode.stylingTemplate ? getInitialClassNameValue(tNode.stylingTemplate) : '';\n    }\n    /**\n     * Examines the attribute's definition array for a node to find the index of the\n     * attribute that matches the given `name`.\n     *\n     * NOTE: This will not match namespaced attributes.\n     *\n     * Attribute matching depends upon `isInlineTemplate` and `isProjectionMode`.\n     * The following table summarizes which types of attributes we attempt to match:\n     *\n     * =========================================================================================\n     * Modes                   | Normal Attributes | Bindings Attributes | Template Attributes\n     * =========================================================================================\n     * Inline + Projection     | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Inline + Directive      | NO                | NO                  | YES\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Projection | YES               | YES                 | NO\n     * -----------------------------------------------------------------------------------------\n     * Non-inline + Directive  | YES               | YES                 | NO\n     * =========================================================================================\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     * @param isInlineTemplate true if the node being matched is an inline template (e.g. `*ngFor`)\n     * rather than a manually expanded template node (e.g `<ng-template>`).\n     * @param isProjectionMode true if we are matching against content projection otherwise we are\n     * matching against directives.\n     */\n    function findAttrIndexInNode(name, attrs, isInlineTemplate, isProjectionMode) {\n        if (attrs === null)\n            return -1;\n        var i = 0;\n        if (isProjectionMode || !isInlineTemplate) {\n            var bindingsMode = false;\n            while (i < attrs.length) {\n                var maybeAttrName = attrs[i];\n                if (maybeAttrName === name) {\n                    return i;\n                }\n                else if (maybeAttrName === 3 /* Bindings */) {\n                    bindingsMode = true;\n                }\n                else if (maybeAttrName === 1 /* Classes */) {\n                    var value = attrs[++i];\n                    // We should skip classes here because we have a separate mechanism for\n                    // matching classes in projection mode.\n                    while (typeof value === 'string') {\n                        value = attrs[++i];\n                    }\n                    continue;\n                }\n                else if (maybeAttrName === 4 /* Template */) {\n                    // We do not care about Template attributes in this scenario.\n                    break;\n                }\n                else if (maybeAttrName === 0 /* NamespaceURI */) {\n                    // Skip the whole namespaced attribute and value. This is by design.\n                    i += 4;\n                    continue;\n                }\n                // In binding mode there are only names, rather than name-value pairs.\n                i += bindingsMode ? 1 : 2;\n            }\n            // We did not match the attribute\n            return -1;\n        }\n        else {\n            return matchTemplateAttribute(attrs, name);\n        }\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(5 /* ProjectAs */);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching projection selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the parsed ngProjectAs selector from the node's attributes.\n     * If present, it will check whether the ngProjectAs selector matches any of the projection\n     * selectors.\n     */\n    function matchingProjectionSelectorIndex(tNode, selectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // If we ran into an `ngProjectAs` attribute, we should match its parsed selector\n            // to the list of selectors, otherwise we fall back to matching against the node.\n            if (ngProjectAsAttrVal === null ?\n                isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true) :\n                isSelectorInSelectorList(ngProjectAsAttrVal, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n    function getNameOnlyMarkerIndex(nodeAttrs) {\n        for (var i = 0; i < nodeAttrs.length; i++) {\n            var nodeAttr = nodeAttrs[i];\n            if (isNameOnlyAttributeMarker(nodeAttr)) {\n                return i;\n            }\n        }\n        return nodeAttrs.length;\n    }\n    function matchTemplateAttribute(attrs, name) {\n        var i = attrs.indexOf(4 /* Template */);\n        if (i > -1) {\n            i++;\n            while (i < attrs.length) {\n                if (attrs[i] === name)\n                    return i;\n                i++;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Checks whether a selector is inside a CssSelectorList\n     * @param selector Selector to be checked.\n     * @param list List in which to look for the selector.\n     */\n    function isSelectorInSelectorList(selector, list) {\n        selectorListLoop: for (var i = 0; i < list.length; i++) {\n            var currentSelectorInList = list[i];\n            if (selector.length !== currentSelectorInList.length) {\n                continue;\n            }\n            for (var j = 0; j < selector.length; j++) {\n                if (selector[j] !== currentSelectorInList[j]) {\n                    continue selectorListLoop;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = (function () { return Promise.resolve(null); })();\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        var creationMode = isCreationMode(lView);\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        // Resetting the bindingIndex of the current LView as the next steps may trigger change detection.\n        lView[BINDING_INDEX] = tView.bindingStartIndex;\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!creationMode) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executePreOrderHooks(lView, tView, checkNoChangesMode, undefined);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView, lView);\n            resetPreOrderHookFlags(lView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode, 1 /* AfterContentInitHooksToBeRun */, undefined);\n            setHostBindings(tView, lView);\n        }\n        // We resolve content queries specifically marked as `static` in creation mode. Dynamic\n        // content queries are resolved during change detection (i.e. update mode), after embedded\n        // views are refreshed (see block above).\n        if (creationMode && tView.staticContentQueries) {\n            refreshContentQueries(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        var selectedIndex = getSelectedIndex();\n        try {\n            if (tView.expandoInstructions) {\n                var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n                setBindingRoot(bindingRootIndex);\n                var currentDirectiveIndex = -1;\n                var currentElementIndex = -1;\n                for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                    var instruction = tView.expandoInstructions[i];\n                    if (typeof instruction === 'number') {\n                        if (instruction <= 0) {\n                            // Negative numbers mean that we are starting new EXPANDO block and need to update\n                            // the current element and directive index.\n                            currentElementIndex = -instruction;\n                            setActiveHostElement(currentElementIndex);\n                            // Injector block and providers are taken into account.\n                            var providerCount = tView.expandoInstructions[++i];\n                            bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                            currentDirectiveIndex = bindingRootIndex;\n                        }\n                        else {\n                            // This is either the injector size (so the binding root can skip over directives\n                            // and get to the first set of host bindings on this node) or the host var count\n                            // (to get to the next set of host bindings on this node).\n                            bindingRootIndex += instruction;\n                        }\n                        setBindingRoot(bindingRootIndex);\n                    }\n                    else {\n                        // If it's not a number, it's a host binding function that needs to be executed.\n                        if (instruction !== null) {\n                            viewData[BINDING_INDEX] = bindingRootIndex;\n                            var hostCtx = unwrapRNode(viewData[currentDirectiveIndex]);\n                            instruction(2 /* Update */, hostCtx, currentElementIndex);\n                            // Each directive gets a uniqueId value that is the same for both\n                            // create and update calls when the hostBindings function is called. The\n                            // directive uniqueId is not set anywhere--it is just incremented between\n                            // each hostBindings call and is useful for helping instruction code\n                            // uniquely determine which directive is currently active when executed.\n                            incrementActiveDirectiveId();\n                        }\n                        currentDirectiveIndex++;\n                    }\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView, lView) {\n        if (tView.contentQueries != null) {\n            setCurrentQueryIndex(0);\n            for (var i = 0; i < tView.contentQueries.length; i++) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                ngDevMode &&\n                    assertDefined(directiveDef.contentQueries, 'contentQueries function should be defined');\n                directiveDef.contentQueries(2 /* Update */, lView[directiveDefIdx], directiveDefIdx);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        var namespace = getNamespace();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, namespace);\n        }\n        else {\n            if (namespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(namespace, name);\n            }\n        }\n        return native;\n    }\n    function createLView(parentLView, tView, context, flags, host, tHostNode, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[HOST] = host;\n        lView[FLAGS] = flags | 4 /* CreationMode */ | 128 /* Attached */ | 8 /* FirstLViewPass */;\n        resetPreOrderHookFlags(lView);\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR$1] = injector || parentLView && parentLView[INJECTOR$1] || null;\n        lView[T_HOST] = tHostNode;\n        ngDevMode && attachLViewDebug(lView);\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var parent_1 = isParent ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n            // Parents cannot cross component boundaries because components will be used in multiple places,\n            // so it's only set if the view is the same.\n            var parentInSameView = parent_1 && parent_1 !== lView[T_HOST];\n            var tParentNode = parentInSameView ? parent_1 : null;\n            tNode = tView.data[adjustedIndex] = createTNode(tParentNode, type, adjustedIndex, name, attrs);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function assignTViewNodeToLView(tView, tParentNode, index, lView) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        var tNode = tView.node;\n        if (tNode == null) {\n            ngDevMode && tParentNode &&\n                assertNodeOfPossibleTypes(tParentNode, 3 /* Element */, 0 /* Container */);\n            tView.node = tNode = createTNode(tParentNode, //\n            2 /* View */, index, null, null);\n        }\n        return lView[T_HOST] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view, numSlotsToAlloc) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            for (var i = 0; i < numSlotsToAlloc; i++) {\n                tView.blueprint.push(null);\n                tView.data.push(null);\n                view.push(null);\n            }\n            // We should only increment the expando start index if there aren't already directives\n            // and injectors saved in the \"expando\" section\n            if (!tView.expandoInstructions) {\n                tView.expandoStartIndex += numSlotsToAlloc;\n            }\n            else {\n                // Since we're adding the dynamic nodes into the expando section, we need to let the host\n                // bindings know that they should skip x slots\n                tView.expandoInstructions.push(numSlotsToAlloc);\n            }\n        }\n    }\n    //////////////////////////\n    //// Render\n    //////////////////////////\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 16 /* CheckAlways */, null, null);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        assignTViewNodeToLView(tView, null, -1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        var oldView;\n        if (viewToRender[FLAGS] & 512 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[T_HOST]);\n                resetPreOrderHookFlags(viewToRender);\n                executeTemplate(tView.template, getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        var creationModeIsActive = isCreationMode(hostView);\n        try {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (creationModeIsActive) {\n                // creation mode pass\n                templateFn && executeTemplate(templateFn, 1 /* Create */, context);\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~4 /* CreationMode */;\n            }\n            // update mode pass\n            resetPreOrderHookFlags(hostView);\n            templateFn && executeTemplate(templateFn, 2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && !creationModeIsActive && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    function executeTemplate(templateFn, rf, context) {\n        ɵɵnamespaceHTML();\n        var prevSelectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(null);\n            templateFn(rf, context);\n        }\n        finally {\n            setSelectedIndex(prevSelectedIndex);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Appropriately sets `stylingTemplate` on a TNode\n     *\n     * Does not apply styles to DOM nodes\n     *\n     * @param tNode The node whose `stylingTemplate` to set\n     * @param attrs The attribute array source to set the attributes from\n     * @param attrsStartIndex Optional start index to start processing the `attrs` from\n     */\n    function setNodeStylingTemplate(tView, tNode, attrs, attrsStartIndex) {\n        if (tView.firstTemplatePass && !tNode.stylingTemplate) {\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, attrsStartIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                tNode.stylingTemplate = initializeStaticContext(attrs, stylingAttrsStartIndex);\n            }\n        }\n    }\n    function executeContentQueries(tView, tNode, lView) {\n        if (isContentQueryHost(tNode)) {\n            var start = tNode.directiveStart;\n            var end = tNode.directiveEnd;\n            for (var directiveIndex = start; directiveIndex < end; directiveIndex++) {\n                var def = tView.data[directiveIndex];\n                if (def.contentQueries) {\n                    def.contentQueries(1 /* Create */, lView[directiveIndex], directiveIndex);\n                }\n            }\n        }\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, lView, findDirectiveMatches(tView, lView, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, lView, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, lView, previousOrParentTNode);\n        saveResolvedLocalsInData(lView, previousOrParentTNode, localRefExtractor);\n        setActiveHostElement(null);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param def ComponentDef\n     * @returns TView\n     */\n    function getOrCreateTView(def) {\n        return def.tView || (def.tView = createTView(-1, def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery, def.schemas));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     * @param viewQuery View queries for this view\n     * @param schemas Schemas for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery, schemas) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice().fill(null, bindingStartIndex),\n            bindingStartIndex: bindingStartIndex,\n            viewQueryStartIndex: initialViewLength,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            staticViewQueries: false,\n            staticContentQueries: false,\n            preOrderHooks: null,\n            preOrderCheckHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n            schemas: schemas,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringifyForError(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(tParent, type, adjustedIndex, tagName, attrs) {\n        ngDevMode && ngDevMode.tNode++;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            propertyMetadataStartIndex: -1,\n            propertyMetadataEndIndex: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: null,\n            next: null,\n            projectionNext: null,\n            child: null,\n            parent: tParent,\n            stylingTemplate: null,\n            projection: null,\n            onElementCreationFns: null,\n            // TODO (matsko): rename this to `styles` once the old styling impl is gone\n            newStyles: null,\n            // TODO (matsko): rename this to `classes` once the old styling impl is gone\n            newClasses: null,\n        };\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNode\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, publicName, internalName) :\n                            (propStore[publicName] = [i, publicName, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n    * Mapping between attributes names that don't correspond to their element property names.\n    */\n    var ATTR_TO_PROP = {\n        'class': 'className',\n        'for': 'htmlFor',\n        'formaction': 'formAction',\n        'innerHtml': 'innerHTML',\n        'readonly': 'readOnly',\n        'tabindex': 'tabIndex',\n    };\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    /**\n                     * dataValue is an array containing runtime input or output names for the directives:\n                     * i+0: directive instance index\n                     * i+1: publicName\n                     * i+2: privateName\n                     *\n                     * e.g. [0, 'change', 'change-minified']\n                     * we want to set the reflected property with the privateName: dataValue[i+2]\n                     */\n                    for (var i = 0; i < dataValue.length; i += 3) {\n                        setNgReflectProperty(lView, element, tNode.type, dataValue[i + 2], value);\n                    }\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            propName = ATTR_TO_PROP[propName] || propName;\n            if (ngDevMode) {\n                validateAgainstEventProperties(propName);\n                validateAgainstUnknownProperties(lView, element, propName, tNode);\n                ngDevMode.rendererSetProperty++;\n            }\n            savePropertyDebugData(tNode, lView, propName, lView[TVIEW].data, nativeOnly);\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value, tNode.tagName || '', propName) : value;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // If the node is a container and the property didn't\n            // match any of the inputs or schemas we should throw.\n            if (ngDevMode && !matchingSchemas(lView, tNode.tagName)) {\n                throw createUnknownPropertyError(propName, tNode);\n            }\n        }\n    }\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        ngDevMode && assertLView(lView);\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 16 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 64 /* Dirty */;\n        }\n    }\n    function setNgReflectProperty(lView, element, type, attrName, value) {\n        var _a;\n        var renderer = lView[RENDERER];\n        attrName = normalizeDebugBindingName(attrName);\n        var debugValue = normalizeDebugBindingValue(value);\n        if (type === 3 /* Element */) {\n            if (value == null) {\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, attrName) :\n                    element.removeAttribute(attrName);\n            }\n            else {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n        }\n        else {\n            var textContent = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n            if (isProceduralRenderer(renderer)) {\n                renderer.setValue(element, textContent);\n            }\n            else {\n                element.textContent = textContent;\n            }\n        }\n    }\n    function validateAgainstUnknownProperties(hostView, element, propName, tNode) {\n        // If the tag matches any of the schemas we shouldn't throw.\n        if (matchingSchemas(hostView, tNode.tagName)) {\n            return;\n        }\n        // If prop is not a known property of the HTML element...\n        if (!(propName in element) &&\n            // and we are in a browser context... (web worker nodes should be skipped)\n            typeof Node === 'function' && element instanceof Node &&\n            // and isn't a synthetic animation property...\n            propName[0] !== ANIMATION_PROP_PREFIX) {\n            // ... it is probably a user error and we should throw.\n            throw createUnknownPropertyError(propName, tNode);\n        }\n    }\n    function matchingSchemas(hostView, tagName) {\n        var schemas = hostView[TVIEW].schemas;\n        if (schemas !== null) {\n            for (var i = 0; i < schemas.length; i++) {\n                var schema = schemas[i];\n                if (schema === NO_ERRORS_SCHEMA ||\n                    schema === CUSTOM_ELEMENTS_SCHEMA && tagName && tagName.indexOf('-') > -1) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n    * Stores debugging data for this property binding on first template pass.\n    * This enables features like DebugElement.properties.\n    */\n    function savePropertyDebugData(tNode, lView, propName, tData, nativeOnly) {\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        // Bind/interpolation functions save binding metadata in the last binding index,\n        // but leave the property name blank. If the interpolation delimiter is at the 0\n        // index, we know that this is our first pass and the property name still needs to\n        // be set.\n        var bindingMetadata = tData[lastBindingIndex];\n        if (bindingMetadata[0] == INTERPOLATION_DELIMITER) {\n            tData[lastBindingIndex] = propName + bindingMetadata;\n            // We don't want to store indices for host bindings because they are stored in a\n            // different part of LView (the expando section).\n            if (!nativeOnly) {\n                if (tNode.propertyMetadataStartIndex == -1) {\n                    tNode.propertyMetadataStartIndex = lastBindingIndex;\n                }\n                tNode.propertyMetadataEndIndex = lastBindingIndex + 1;\n            }\n        }\n    }\n    /**\n    * Creates an error that should be thrown when encountering an unknown property on an element.\n    * @param propName Name of the invalid property.\n    * @param tNode Node on which we encountered the error.\n    */\n    function createUnknownPropertyError(propName, tNode) {\n        return new Error(\"Template error: Can't bind to '\" + propName + \"' since it isn't a known property of '\" + tNode.tagName + \"'.\");\n    }\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            var initialPreOrderHooksLength = (tView.preOrderHooks && tView.preOrderHooks.length) || 0;\n            var initialPreOrderCheckHooksLength = (tView.preOrderCheckHooks && tView.preOrderCheckHooks.length) || 0;\n            var nodeIndex = tNode.index - HEADER_OFFSET;\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                registerPreOrderHooks(directiveDefIdx, def, tView, nodeIndex, initialPreOrderHooksLength, initialPreOrderCheckHooksLength);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!tView.firstTemplatePass && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = tView.firstTemplatePass;\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        var selectedIndex = getSelectedIndex();\n        try {\n            setActiveHostElement(elementIndex);\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                var directive = viewData[i];\n                if (def.hostBindings) {\n                    invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass);\n                    // Each directive gets a uniqueId value that is the same for both\n                    // create and update calls when the hostBindings function is called. The\n                    // directive uniqueId is not set anywhere--it is just incremented between\n                    // each hostBindings call and is useful for helping instruction code\n                    // uniquely determine which directive is currently active when executed.\n                    incrementActiveDirectiveId();\n                }\n                else if (firstTemplatePass) {\n                    expando.push(null);\n                }\n            }\n        }\n        finally {\n            setActiveHostElement(selectedIndex);\n        }\n    }\n    function invokeHostBindingsInCreationMode(def, expando, directive, tNode, firstTemplatePass) {\n        var previousExpandoLength = expando.length;\n        setCurrentDirectiveDef(def);\n        var elementIndex = tNode.index - HEADER_OFFSET;\n        def.hostBindings(1 /* Create */, directive, elementIndex);\n        setCurrentDirectiveDef(null);\n        // `hostBindings` function may or may not contain `allocHostVars` call\n        // (e.g. it may not if it only contains host listeners), so we need to check whether\n        // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n        // expando block, to make sure we execute it for DI cycle\n        if (previousExpandoLength === expando.length && firstTemplatePass) {\n            expando.push(def.hostBindings);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def, previousOrParentTNode);\n        }\n        if (viewData[TVIEW].firstTemplatePass && def.contentQueries) {\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        var tView = getLView()[TVIEW];\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs) {\n                for (var i = 0; i < def.exportAs.length; i++) {\n                    exportsMap[def.exportAs[i]] = index;\n                }\n            }\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, createLView(lView, tView, null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, lView[previousOrParentTNode.index], previousOrParentTNode, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[T_HOST] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        lView[previousOrParentTNode.index] = componentView;\n        if (lView[TVIEW].firstTemplatePass) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param def The directive def that contains the list of inputs\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, def, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, def.inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            var setInput = def.setInput;\n            for (var i = 0; i < initialInputs.length;) {\n                var publicName = initialInputs[i++];\n                var privateName = initialInputs[i++];\n                var value = initialInputs[i++];\n                if (setInput) {\n                    def.setInput(instance, value, publicName, privateName);\n                }\n                else {\n                    instance[privateName] = value;\n                }\n                if (ngDevMode) {\n                    var lView = getLView();\n                    var nativeElement = getNativeByTNode(tNode, lView);\n                    setNgReflectProperty(lView, nativeElement, tNode.type, privateName, value);\n                }\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        // Ensure that we don't create sparse arrays\n        for (var i_1 = initialInputData.length; i_1 <= directiveIndex; i_1++) {\n            initialInputData.push(null);\n        }\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            else if (attrName === 5 /* ProjectAs */) {\n                // Skip over the `ngProjectAs` value.\n                i += 2;\n                continue;\n            }\n            // If we hit any other attribute markers, we're done anyway. None of those are valid inputs.\n            if (typeof attrName === 'number')\n                break;\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(attrName, minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, currentView, native, tNode, isForViewContainerRef) {\n        ngDevMode && assertDomNode(native);\n        ngDevMode && assertLView(currentView);\n        var lContainer = [\n            hostNative,\n            true,\n            isForViewContainerRef ? -1 : 0,\n            currentView,\n            null,\n            null,\n            tNode,\n            native,\n        ];\n        ngDevMode && attachLContainerDebug(lContainer);\n        return lContainer;\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = lView[CHILD_HEAD]; current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current[ACTIVE_INDEX] === -1 && isLContainer(current)) {\n                for (var i = CONTAINER_HEADER_OFFSET; i < current.length; i++) {\n                    var dynamicViewData = current[i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only components in creation mode, attached CheckAlways\n        // components or attached, dirty OnPush components should be checked\n        if ((viewAttachedToChangeDetector(hostView) || isCreationMode(lView)) &&\n            hostView[FLAGS] & (16 /* CheckAlways */ | 64 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param lViewOrLContainer The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, lViewOrLContainer) {\n        // TODO(benlesh/misko): This implementation is incorrect, because it always adds the LContainer to\n        // the end of the queue, which means if the developer retrieves the LContainers from RNodes out of\n        // order, the change detection will run out of order, as the act of retrieving the the LContainer\n        // from the RNode is what adds it to the queue.\n        if (lView[CHILD_HEAD]) {\n            lView[CHILD_TAIL][NEXT] = lViewOrLContainer;\n        }\n        else {\n            lView[CHILD_HEAD] = lViewOrLContainer;\n        }\n        lView[CHILD_TAIL] = lViewOrLContainer;\n        return lViewOrLContainer;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /**\n     * Marks current view and all ancestors dirty.\n     *\n     * Returns the root view because it is found as a byproduct of marking the view tree\n     * dirty, and can be used by methods that consume markViewDirty() to easily schedule\n     * change detection. Otherwise, such methods would need to traverse up the view tree\n     * an additional time to get the root view and schedule a tick on it.\n     *\n     * @param lView The starting LView to mark dirty\n     * @returns the root LView\n     */\n    function markViewDirty(lView) {\n        while (lView) {\n            lView[FLAGS] |= 64 /* Dirty */;\n            var parent_2 = getLViewParent(lView);\n            // Stop traversing up as soon as you find a root view that wasn't attached to any container\n            if (isRootView(lView) && !parent_2) {\n                return lView;\n            }\n            // continue otherwise\n            lView = parent_2;\n        }\n        return null;\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        try {\n            if (isCreationMode(view)) {\n                checkView(view, context); // creation mode pass\n            }\n            checkView(view, context); // update mode pass\n        }\n        catch (error) {\n            handleError(view, error);\n            throw error;\n        }\n        finally {\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    function checkNoChangesInternal(view, context) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInternal(view, context);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[T_HOST]);\n        var templateFn = hostTView.template;\n        var creationMode = isCreationMode(hostView);\n        try {\n            resetPreOrderHookFlags(hostView);\n            creationMode && executeViewQueryFn(1 /* Create */, hostTView, component);\n            executeTemplate(templateFn, getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            // Only check view queries again in creation mode if there are static view queries\n            if (!creationMode || hostTView.staticViewQueries) {\n                executeViewQueryFn(2 /* Update */, hostTView, component);\n            }\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function executeViewQueryFn(flags, tView, component) {\n        var viewQuery = tView.viewQuery;\n        if (viewQuery) {\n            setCurrentQueryIndex(tView.viewQueryStartIndex);\n            viewQuery(flags, component);\n        }\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates binding metadata for a particular binding and stores it in\n     * TView.data. These are generated in order to support DebugElement.properties.\n     *\n     * Each binding / interpolation will have one (including attribute bindings)\n     * because at the time of binding, we don't know to which instruction the binding\n     * belongs. It is always stored in TView.data at the index of the last binding\n     * value in LView (e.g. for interpolation8, it would be stored at the index of\n     * the 8th value).\n     *\n     * @param lView The LView that contains the current binding index.\n     * @param prefix The static prefix string\n     * @param suffix The static suffix string\n     *\n     * @returns Newly created binding metadata string for this binding or null\n     */\n    function storeBindingMetadata(lView, prefix, suffix) {\n        if (prefix === void 0) { prefix = ''; }\n        if (suffix === void 0) { suffix = ''; }\n        var tData = lView[TVIEW].data;\n        var lastBindingIndex = lView[BINDING_INDEX] - 1;\n        var value = INTERPOLATION_DELIMITER + prefix + INTERPOLATION_DELIMITER + suffix;\n        return tData[lastBindingIndex] == null ? (tData[lastBindingIndex] = value) : null;\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * There are cases where the sub component's renderer needs to be included\n     * instead of the current renderer (see the componentSyntheticHost* instructions).\n     */\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    /** Handles an error thrown in an LView. */\n    function handleError(lView, error) {\n        var injector = lView[INJECTOR$1];\n        var errorHandler = injector ? injector.get(ErrorHandler, null) : null;\n        errorHandler && errorHandler.handleError(error);\n    }\n    /**\n     * Set the inputs of directives at the current node to corresponding value.\n     *\n     * @param lView the `LView` which contains the directives.\n     * @param inputs mapping between the public \"input\" name and privately-known,\n     * possibly minified, property names to write to.\n     * @param value Value to set.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        var tView = lView[TVIEW];\n        for (var i = 0; i < inputs.length;) {\n            var index = inputs[i++];\n            var publicName = inputs[i++];\n            var privateName = inputs[i++];\n            var instance = lView[index];\n            ngDevMode && assertDataInRange(lView, index);\n            var def = tView.data[index];\n            var setInput = def.setInput;\n            if (setInput) {\n                def.setInput(instance, value, publicName, privateName);\n            }\n            else {\n                instance[privateName] = value;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function applyOnCreateInstructions(tNode) {\n        // there may be some instructions that need to run in a specific\n        // order because the CREATE block in a directive runs before the\n        // CREATE block in a template. To work around this instructions\n        // can get access to the function array below and defer any code\n        // to run after the element is created.\n        var fns;\n        if (fns = tNode.onElementCreationFns) {\n            for (var i = 0; i < fns.length; i++) {\n                fns[i]();\n            }\n            tNode.onElementCreationFns = null;\n        }\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[T_HOST];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[T_HOST];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     *\n     * @codeGenApi\n     */\n    function ɵɵallocHostVars(count) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (!tView.firstTemplatePass)\n            return;\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n     */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /**\n     * On the first template pass, we need to reserve space for host binding values\n     * after directives are matched (so all directives are saved, then bindings).\n     * Because we are updating the blueprint, we only need to do this once.\n     */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getLContainer(tNode, embeddedView) {\n        ngDevMode && assertLView(embeddedView);\n        var container = embeddedView[PARENT];\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // The parent isn't an LContainer if the embedded view hasn't been attached yet.\n            return isLContainer(container) ? container : null;\n        }\n        else {\n            ngDevMode && assertLContainer(container);\n            // This is a inline view node (e.g. embeddedViewStart)\n            return container;\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? nativeParentNode(view[RENDERER], container[NATIVE]) : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var e_1, _a;\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), tNode, beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], tNode, beforeNode);\n                    var firstView = nodeOrContainer[CONTAINER_HEADER_OFFSET];\n                    if (firstView) {\n                        currentView = firstView;\n                        nextTNode = currentView[TVIEW].node;\n                        // When the walker enters a container, then the beforeNode has to become the local native\n                        // comment node.\n                        beforeNode = nodeOrContainer[NATIVE];\n                    }\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], tNode, beforeNode);\n                var firstView = lContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView) {\n                    currentView = firstView;\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[T_HOST];\n                var head = componentHost.projection[tNode.projection];\n                if (Array.isArray(head)) {\n                    try {\n                        for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                            var nativeNode = head_1_1.value;\n                            executeNodeAction(action, renderer, renderParent, nativeNode, tNode, beforeNode);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    // Must store both the TNode and the view because this projection node could be nested\n                    // deeply inside embedded views, and we need to get back down to this particular nested\n                    // view.\n                    projectionNodeStack[++projectionNodeIndex] = tNode;\n                    projectionNodeStack[++projectionNodeIndex] = currentView;\n                    if (head) {\n                        currentView = componentView[PARENT];\n                        nextTNode = currentView[TVIEW].data[head.index];\n                    }\n                }\n            }\n            else {\n                // Otherwise, this is a View\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.projectionNext === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                if (tNode.flags & 2 /* isProjected */) {\n                    nextTNode = tNode.projectionNext;\n                }\n                else if (tNode.type === 4 /* ElementContainer */) {\n                    nextTNode = tNode.child || tNode.next;\n                }\n                else {\n                    nextTNode = tNode.next;\n                }\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[T_HOST];\n                    if (tNode === null || tNode === rootTNode)\n                        return;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = getLViewParent(currentView);\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */) {\n                        /**\n                         * If current lView doesn't have next pointer, we try to find it by going up parents\n                         * chain until:\n                         * - we find an lView with a next pointer\n                         * - or find a tNode with a parent that has a next pointer\n                         * - or find a lContainer\n                         * - or reach root TNode (in which case we exit, since we traversed all nodes)\n                         */\n                        while (!currentView[NEXT] && currentView[PARENT] &&\n                            !(tNode.parent && tNode.parent.next)) {\n                            if (tNode === rootTNode)\n                                return;\n                            currentView = currentView[PARENT];\n                            if (isLContainer(currentView)) {\n                                tNode = currentView[T_HOST];\n                                currentView = currentView[PARENT];\n                                beforeNode = currentView[tNode.index][NATIVE];\n                                break;\n                            }\n                            tNode = currentView[T_HOST];\n                        }\n                        if (currentView[NEXT]) {\n                            currentView = currentView[NEXT];\n                            nextTNode = currentView[T_HOST];\n                        }\n                        else {\n                            nextTNode = tNode.type === 4 /* ElementContainer */ && tNode.child || tNode.next;\n                        }\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, tNode, beforeNode) {\n        if (action === 0 /* Insert */) {\n            nativeInsertBefore(renderer, parent, node, beforeNode || null);\n        }\n        else if (action === 1 /* Detach */) {\n            nativeRemoveNode(renderer, node, isComponent(tNode));\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(renderStringify(value)) :\n            renderer.createTextNode(renderStringify(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Detach a `LView` from the DOM by detaching its nodes.\n     *\n     * @param lView the `LView` to be detached.\n     */\n    function renderDetachView(lView) {\n        walkTNodeTree(lView, 1 /* Detach */, lView[RENDERER], null);\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        var lViewOrLContainer = rootView[CHILD_HEAD];\n        if (!lViewOrLContainer) {\n            return cleanUpView(rootView);\n        }\n        while (lViewOrLContainer) {\n            var next = null;\n            if (isLView(lViewOrLContainer)) {\n                // If LView, traverse down to child.\n                next = lViewOrLContainer[CHILD_HEAD];\n            }\n            else {\n                ngDevMode && assertLContainer(lViewOrLContainer);\n                // If container, traverse down to its first LView.\n                var firstView = lViewOrLContainer[CONTAINER_HEADER_OFFSET];\n                if (firstView)\n                    next = firstView;\n            }\n            if (!next) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (lViewOrLContainer && !lViewOrLContainer[NEXT] && lViewOrLContainer !== rootView) {\n                    cleanUpView(lViewOrLContainer);\n                    lViewOrLContainer = getParentState(lViewOrLContainer, rootView);\n                }\n                cleanUpView(lViewOrLContainer || rootView);\n                next = lViewOrLContainer && lViewOrLContainer[NEXT];\n            }\n            lViewOrLContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param index Which index in the container to insert the child view into\n     */\n    function insertView(lView, lContainer, index) {\n        ngDevMode && assertLView(lView);\n        ngDevMode && assertLContainer(lContainer);\n        var indexInContainer = CONTAINER_HEADER_OFFSET + index;\n        var containerLength = lContainer.length;\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            lContainer[indexInContainer - 1][NEXT] = lView;\n        }\n        if (index < containerLength - CONTAINER_HEADER_OFFSET) {\n            lView[NEXT] = lContainer[indexInContainer];\n            lContainer.splice(CONTAINER_HEADER_OFFSET + index, 0, lView);\n        }\n        else {\n            lContainer.push(lView);\n            lView[NEXT] = null;\n        }\n        lView[PARENT] = lContainer;\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 128 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex) {\n        if (lContainer.length <= CONTAINER_HEADER_OFFSET)\n            return;\n        var indexInContainer = CONTAINER_HEADER_OFFSET + removeIndex;\n        var viewToDetach = lContainer[indexInContainer];\n        if (viewToDetach) {\n            if (removeIndex > 0) {\n                lContainer[indexInContainer - 1][NEXT] = viewToDetach[NEXT];\n            }\n            lContainer.splice(CONTAINER_HEADER_OFFSET + removeIndex, 1);\n            addRemoveViewFromContainer(viewToDetach, false);\n            if ((viewToDetach[FLAGS] & 128 /* Attached */) &&\n                !(viewToDetach[FLAGS] & 256 /* Destroyed */) && viewToDetach[QUERIES]) {\n                viewToDetach[QUERIES].removeView();\n            }\n            viewToDetach[PARENT] = null;\n            viewToDetach[NEXT] = null;\n            // Unsets the attached flag\n            viewToDetach[FLAGS] &= ~128 /* Attached */;\n        }\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, removeIndex) {\n        var detachedView = detachView(lContainer, removeIndex);\n        detachedView && destroyLView(detachedView);\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        if (!(view[FLAGS] & 256 /* Destroyed */)) {\n            var renderer = view[RENDERER];\n            if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n                walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n            }\n            destroyViewTree(view);\n        }\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param lViewOrLContainer The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(lViewOrLContainer, rootView) {\n        var tNode;\n        if (isLView(lViewOrLContainer) && (tNode = lViewOrLContainer[T_HOST]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, lViewOrLContainer);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return lViewOrLContainer[PARENT] === rootView ? null : lViewOrLContainer[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(view) {\n        if (isLView(view) && !(view[FLAGS] & 256 /* Destroyed */)) {\n            // Usually the Attached flag is removed when the view is detached from its parent, however\n            // if it's a root view, the flag won't be unset hence why we're also removing on destroy.\n            view[FLAGS] &= ~128 /* Attached */;\n            // Mark the LView as destroyed *before* executing the onDestroy hooks. An onDestroy hook\n            // runs arbitrary user code, which could include its own `viewRef.destroy()` (or similar). If\n            // We don't flag the view as destroyed before the hooks, this could lead to an infinite loop.\n            // This also aligns with the ViewEngine behavior. It also means that the onDestroy hook is\n            // really more of an \"afterDestroy\" hook if you think about it.\n            view[FLAGS] |= 256 /* Destroyed */;\n            executeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[T_HOST];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n            // For embedded views still attached to a container: remove query result from this view.\n            if (viewAttachedToContainer(view) && view[QUERIES]) {\n                view[QUERIES].removeView();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a native DOM listener\n                    var idxOrTargetGetter = tCleanup[i + 1];\n                    var target = typeof idxOrTargetGetter === 'function' ?\n                        idxOrTargetGetter(lView) :\n                        unwrapRNode(lView[idxOrTargetGetter]);\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // native DOM listener registered with Renderer3\n                        target.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            for (var i = 0; i < destroyHooks.length; i += 2) {\n                var context = view[destroyHooks[i]];\n                // Only call the destroy hook if the context has been requested.\n                if (!(context instanceof NodeInjectorFactory)) {\n                    destroyHooks[i + 1].call(context);\n                }\n            }\n        }\n    }\n    /**\n     * Returns a native element if a node can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is made for projection but has not been inserted\n     *   into destination.\n     */\n    function getRenderParent(tNode, currentView) {\n        // Nodes of the top-most view can be inserted eagerly.\n        if (isRootView(currentView)) {\n            return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n        }\n        // Skip over element and ICU containers as those are represented by a comment node and\n        // can't be used as a render parent.\n        var parent = getHighestElementOrICUContainer(tNode).parent;\n        // If the parent is null, then we are inserting across views: either into an embedded view or a\n        // component view.\n        if (parent == null) {\n            var hostTNode = currentView[T_HOST];\n            if (hostTNode.type === 2 /* View */) {\n                // We are inserting a root element of an embedded view We might delay insertion of children\n                // for a given view if it is disconnected. This might happen for 2 main reasons:\n                // - view is not inserted into any container(view was created but not inserted yet)\n                // - view is inserted into a container but the container itself is not inserted into the DOM\n                // (container might be part of projection or child of a view that is not inserted yet).\n                // In other words we can insert children of a given view if this view was inserted into a\n                // container and the container itself has its render parent determined.\n                return getContainerRenderParent(hostTNode, currentView);\n            }\n            else {\n                // We are inserting a root element of the component view into the component host element and\n                // it should always be eager.\n                return getHostNative(currentView);\n            }\n        }\n        else {\n            ngDevMode && assertNodeType(parent, 3 /* Element */);\n            if (parent.flags & 1 /* isComponent */) {\n                var tData = currentView[TVIEW].data;\n                var tNode_1 = tData[parent.index];\n                var encapsulation = tData[tNode_1.directiveStart].encapsulation;\n                // We've got a parent which is an element in the current view. We just need to verify if the\n                // parent element is not a component. Component's content nodes are not inserted immediately\n                // because they will be projected, and so doing insert at this point would be wasteful.\n                // Since the projection would then move it to its final destination. Note that we can't\n                // make this assumption when using the Shadow DOM, because the native projection placeholders\n                // (<content> or <slot>) have to be in place as elements are being inserted.\n                if (encapsulation !== exports.ViewEncapsulation.ShadowDom &&\n                    encapsulation !== exports.ViewEncapsulation.Native) {\n                    return null;\n                }\n            }\n            return getNativeByTNode(parent, currentView);\n        }\n    }\n    /**\n     * Gets the native host element for a given view. Will return null if the current view does not have\n     * a host element.\n     */\n    function getHostNative(currentView) {\n        ngDevMode && assertLView(currentView);\n        var hostTNode = currentView[T_HOST];\n        return hostTNode && hostTNode.type === 3 /* Element */ ?\n            getNativeByTNode(hostTNode, getLViewParent(currentView)) :\n            null;\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        ngDevMode && ngDevMode.rendererInsertBefore++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    function nativeAppendChild(renderer, parent, child) {\n        ngDevMode && ngDevMode.rendererAppendChild++;\n        if (isProceduralRenderer(renderer)) {\n            renderer.appendChild(parent, child);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    }\n    function nativeAppendOrInsertBefore(renderer, parent, child, beforeNode) {\n        if (beforeNode) {\n            nativeInsertBefore(renderer, parent, child, beforeNode);\n        }\n        else {\n            nativeAppendChild(renderer, parent, child);\n        }\n    }\n    /** Removes a node from the DOM given its native parent. */\n    function nativeRemoveChild(renderer, parent, child, isHostElement) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.removeChild(parent, child, isHostElement);\n        }\n        else {\n            parent.removeChild(child);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Finds a native \"anchor\" node for cases where we can't append a native child directly\n     * (`appendChild`) and need to use a reference (anchor) node for the `insertBefore` operation.\n     * @param parentTNode\n     * @param lView\n     */\n    function getNativeAnchorNode(parentTNode, lView) {\n        if (parentTNode.type === 2 /* View */) {\n            var lContainer = getLContainer(parentTNode, lView);\n            var index = lContainer.indexOf(lView, CONTAINER_HEADER_OFFSET) - CONTAINER_HEADER_OFFSET;\n            return getBeforeNodeForView(index, lContainer);\n        }\n        else if (parentTNode.type === 4 /* ElementContainer */ ||\n            parentTNode.type === 5 /* IcuContainer */) {\n            return getNativeByTNode(parentTNode, lView);\n        }\n        return null;\n    }\n    /**\n     * Appends the `child` native node (or a collection of nodes) to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The native child (or children) that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        var e_2, _a;\n        var renderParent = getRenderParent(childTNode, currentView);\n        if (renderParent != null) {\n            var renderer = currentView[RENDERER];\n            var parentTNode = childTNode.parent || currentView[T_HOST];\n            var anchorNode = getNativeAnchorNode(parentTNode, currentView);\n            if (Array.isArray(childEl)) {\n                try {\n                    for (var childEl_1 = __values(childEl), childEl_1_1 = childEl_1.next(); !childEl_1_1.done; childEl_1_1 = childEl_1.next()) {\n                        var nativeNode = childEl_1_1.value;\n                        nativeAppendOrInsertBefore(renderer, renderParent, nativeNode, anchorNode);\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (childEl_1_1 && !childEl_1_1.done && (_a = childEl_1.return)) _a.call(childEl_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            else {\n                nativeAppendOrInsertBefore(renderer, renderParent, childEl, anchorNode);\n            }\n        }\n    }\n    /**\n     * Gets the top-level element or an ICU container if those containers are nested.\n     *\n     * @param tNode The starting TNode for which we should skip element and ICU containers\n     * @returns The TNode of the highest level ICU container or element container\n     */\n    function getHighestElementOrICUContainer(tNode) {\n        while (tNode.parent != null && (tNode.parent.type === 4 /* ElementContainer */ ||\n            tNode.parent.type === 5 /* IcuContainer */)) {\n            tNode = tNode.parent;\n        }\n        return tNode;\n    }\n    function getBeforeNodeForView(index, lContainer) {\n        var containerNative = lContainer[NATIVE];\n        if (index + 1 < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            var view = lContainer[CONTAINER_HEADER_OFFSET + index + 1];\n            var viewTNode = view[T_HOST];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes a native node itself using a given renderer. To remove the node we are looking up its\n     * parent from the native tree as not all platforms / browsers support the equivalent of\n     * node.remove().\n     *\n     * @param renderer A renderer to be used\n     * @param rNode The native node that should be removed\n     * @param isHostElement A flag indicating if a node to be removed is a host of a component.\n     */\n    function nativeRemoveNode(renderer, rNode, isHostElement) {\n        var nativeParent = nativeParentNode(renderer, rNode);\n        if (nativeParent) {\n            nativeRemoveChild(renderer, nativeParent, rNode, isHostElement);\n        }\n    }\n    /**\n     * Appends nodes to a target projection place. Nodes to insert were previously re-distribution and\n     * stored on a component host level.\n     * @param lView A LView where nodes are inserted (target VLview)\n     * @param tProjectionNode A projection node where previously re-distribution should be appended\n     * (target insertion place)\n     * @param selectorIndex A bucket from where nodes to project should be taken\n     * @param componentView A where projectable nodes were initially created (source view)\n     */\n    function appendProjectedNodes(lView, tProjectionNode, selectorIndex, componentView) {\n        var projectedView = componentView[PARENT];\n        var componentNode = componentView[T_HOST];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        if (Array.isArray(nodeToProject)) {\n            appendChild(nodeToProject, tProjectionNode, lView);\n        }\n        else {\n            while (nodeToProject) {\n                if (nodeToProject.type === 1 /* Projection */) {\n                    appendProjectedNodes(lView, tProjectionNode, nodeToProject.projection, findComponentView(projectedView));\n                }\n                else {\n                    // This flag must be set now or we won't know that this node is projected\n                    // if the nodes are inserted into a container later.\n                    nodeToProject.flags |= 2 /* isProjected */;\n                    appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n                }\n                nodeToProject = nodeToProject.projectionNext;\n            }\n        }\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            for (var i = CONTAINER_HEADER_OFFSET; i < nodeOrContainer.length; i++) {\n                addRemoveViewFromContainer(nodeOrContainer[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * This file contains the core logic for how styling instructions are processed in Angular.\n     *\n     * To learn more about the algorithm see `TStylingContext`.\n     */\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * This function is executed during the creation block of an element.\n     * Because the existing styling implementation issues a call to the\n     * `styling()` instruction, this instruction will also get run. The\n     * central idea here is that the directive index values are bound\n     * into the context. The directive index is temporary and is only\n     * required until the `select(n)` instruction is fully functional.\n     */\n    function stylingInit() {\n        var lView = getLView();\n        var index = getSelectedIndex();\n        var tNode = getTNode(index, lView);\n        updateLastDirectiveIndex(tNode, getActiveDirectiveStylingIndex());\n    }\n    /**\n     * Mirror implementation of the `styleProp()` instruction (found in `instructions/styling.ts`).\n     */\n    function styleProp(prop, value, suffix) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var tNode = getTNode(index, lView);\n        var tContext = getStylesContext(tNode);\n        var defer = getActiveDirectiveSuperClassHeight() > 0;\n        updateStyleBinding(tContext, lView, prop, bindingIndex, value, defer);\n    }\n    /**\n     * Mirror implementation of the `classProp()` instruction (found in `instructions/styling.ts`).\n     */\n    function classProp(className, value) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        var tNode = getTNode(index, lView);\n        var tContext = getClassesContext(tNode);\n        var defer = getActiveDirectiveSuperClassHeight() > 0;\n        updateClassBinding(tContext, lView, className, bindingIndex, value, defer);\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The new styling refactor ensures that styling flushing is called\n     * automatically when a template function exits or a follow-up element\n     * is visited (i.e. when `select(n)` is called). Because the `select(n)`\n     * instruction is not fully implemented yet (it doesn't actually execute\n     * host binding instruction code at the right time), this means that a\n     * styling apply function is still needed.\n     *\n     * This function is a mirror implementation of the `stylingApply()`\n     * instruction (found in `instructions/styling.ts`).\n     */\n    function stylingApply() {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var renderer = getRenderer(tNode, lView);\n        var native = getNativeFromLView(index, lView);\n        var directiveIndex = getActiveDirectiveStylingIndex();\n        applyClasses(renderer, lView, getClassesContext(tNode), native, directiveIndex);\n        applyStyles(renderer, lView, getStylesContext(tNode), native, directiveIndex);\n    }\n    function getStylesContext(tNode) {\n        return getContext(tNode, false);\n    }\n    function getClassesContext(tNode) {\n        return getContext(tNode, true);\n    }\n    /**\n     * Returns/instantiates a styling context from/to a `tNode` instance.\n     */\n    function getContext(tNode, isClassBased) {\n        var context = isClassBased ? tNode.newClasses : tNode.newStyles;\n        if (!context) {\n            context = allocStylingContext$1();\n            if (ngDevMode) {\n                attachStylingDebugObject(context);\n            }\n            if (isClassBased) {\n                tNode.newClasses = context;\n            }\n            else {\n                tNode.newStyles = context;\n            }\n        }\n        return context;\n    }\n    /**\n     * Temporary function to bridge styling functionality between this new\n     * refactor (which is here inside of `styling_next/`) and the old\n     * implementation (which lives inside of `styling/`).\n     *\n     * The purpose of this function is to traverse through the LView data\n     * for a specific element index and return the native node. Because the\n     * current implementation relies on there being a styling context array,\n     * the code below will need to loop through these array values until it\n     * gets a native element node.\n     *\n     * Note that this code is temporary and will disappear once the new\n     * styling refactor lands in its entirety.\n     */\n    function getNativeFromLView(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper[0 /* ElementPosition */];\n        }\n        else {\n            return slotValue;\n        }\n    }\n    function getRenderer(tNode, lView) {\n        return tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n    }\n    /**\n     * Searches and assigns provided all static style/class entries (found in the `attrs` value)\n     * and registers them in their respective styling contexts.\n     */\n    function registerInitialStylingIntoContext(tNode, attrs, startIndex) {\n        var classesContext;\n        var stylesContext;\n        var mode = -1;\n        for (var i = startIndex; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode == 1 /* Classes */) {\n                classesContext = classesContext || getClassesContext(tNode);\n                registerBinding(classesContext, -1, attr, true);\n            }\n            else if (mode == 2 /* Styles */) {\n                stylesContext = stylesContext || getStylesContext(tNode);\n                registerBinding(stylesContext, -1, attr, attrs[++i]);\n            }\n        }\n    }\n    /**\n     * Mirror implementation of the same function found in `instructions/styling.ts`.\n     */\n    function getActiveDirectiveStylingIndex() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    /**\n     * Temporary function that will update the max directive index value in\n     * both the classes and styles contexts present on the provided `tNode`.\n     *\n     * This code is only used because the `select(n)` code functionality is not\n     * yet 100% functional. The `select(n)` instruction cannot yet evaluate host\n     * bindings function code in sync with the associated template function code.\n     * For this reason the styling algorithm needs to track the last directive index\n     * value so that it knows exactly when to render styling to the element since\n     * `stylingApply()` is called multiple times per CD (`stylingApply` will be\n     * removed once `select(n)` is fixed).\n     */\n    function updateLastDirectiveIndex(tNode, directiveIndex) {\n        updateContextDirectiveIndex(getClassesContext(tNode), directiveIndex);\n        updateContextDirectiveIndex(getStylesContext(tNode), directiveIndex);\n    }\n\n    /*\n     * The contents of this file include the instructions for all styling-related\n     * operations in Angular.\n     *\n     * The instructions present in this file are:\n     *\n     * Template level styling instructions:\n     * - styling\n     * - styleMap\n     * - classMap\n     * - styleProp\n     * - classProp\n     * - stylingApply\n     */\n    /**\n     * Allocates style and class binding properties on the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note that this is only used\n     * for binding values (see `elementStart` to learn how to assign static styling\n     * values to an element).\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `classProp` instruction refers to the class name by index in\n     *        this array (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `styleProp` instruction refers to the class name by index in\n     *        this array (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        style values that are applied to the element (during rendering).\n     *\n     * Note that this will allocate the provided style/class bindings to the host element if\n     * this function is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyling(classBindingNames, styleBindingNames, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            // this is temporary hack to get the existing styling instructions to\n            // play ball with the new refactored implementation.\n            // TODO (matsko): remove this once the old implementation is not needed.\n            if (runtimeIsNewStylingInUse()) {\n                stylingInit();\n            }\n            // despite the binding being applied in a queue (below), the allocation\n            // of the directive into the context happens right away. The reason for\n            // this is to retain the ordering of the directives (which is important\n            // for the prioritization of bindings).\n            allocateOrUpdateDirectiveIntoContext(tNode.stylingTemplate, directiveStylingIndex);\n            var fns = tNode.onElementCreationFns = tNode.onElementCreationFns || [];\n            fns.push(function () {\n                initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex);\n                registerHostDirective(tNode.stylingTemplate, directiveStylingIndex);\n            });\n        }\n        else {\n            // calling the function below ensures that the template's binding values\n            // are applied as the first set of bindings into the context. If any other\n            // styling bindings are set on the same element (by directives and/or\n            // components) then they will be applied at the end of the `elementEnd`\n            // instruction (because directives are created first before styling is\n            // executed for a new element).\n            initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, DEFAULT_TEMPLATE_DIRECTIVE_INDEX);\n        }\n    }\n    function initStyling(tNode, classBindingNames, styleBindingNames, styleSanitizer, directiveStylingIndex) {\n        updateContextWithBindings(tNode.stylingTemplate, directiveStylingIndex, classBindingNames, styleBindingNames, styleSanitizer);\n    }\n    /**\n     * Update a style binding on an element with the provided value.\n     *\n     * If the style value is falsy then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `styleMap` or any static styles that are\n     * present from when the element was created with `styling`).\n     *\n     * Note that the styling element is updated as part of `stylingApply`.\n     *\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `styling`.\n     * @param value New value to write (falsy to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param forceOverride Whether or not to update the styling value immediately\n     *        (despite the other bindings possibly having priority)\n     *\n     * Note that this will apply the provided style value to the host element if this function is called\n     * within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleProp(styleIndex, value, suffix, forceOverride) {\n        var index = getSelectedIndex();\n        var valueToAdd = resolveStylePropValue(value, suffix);\n        var stylingContext = getStylingContext(index, getLView());\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styleIndex, valueToAdd, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleProp, args);\n        }\n        else {\n            updateStyleProp(stylingContext, styleIndex, valueToAdd, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            var prop = getBindingNameFromIndex(stylingContext, styleIndex, directiveStylingIndex, false);\n            // the reason why we cast the value as `boolean` is\n            // because the new styling refactor does not yet support\n            // sanitization or animation players.\n            styleProp(prop, value, suffix);\n        }\n    }\n    function resolveStylePropValue(value, suffix) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = renderStringify(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        return valueToAdd;\n    }\n    /**\n     * Update a class binding on an element with the provided value.\n     *\n     * This instruction is meant to handle the `[class.foo]=\"exp\"` case and,\n     * therefore, the class binding itself must already be allocated using\n     * `styling` within the creation block.\n     *\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `styling` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param forceOverride Whether or not this value will be applied regardless\n     *        of where it is being set within the styling priority structure.\n     *\n     * Note that this will apply the provided class value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassProp(classIndex, value, forceOverride) {\n        var index = getSelectedIndex();\n        var input = (value instanceof BoundPlayerFactory) ?\n            value :\n            booleanOrNull(value);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        var stylingContext = getStylingContext(index, getLView());\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classIndex, input, directiveStylingIndex, forceOverride];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassProp, args);\n        }\n        else {\n            updateClassProp(stylingContext, classIndex, input, DEFAULT_TEMPLATE_DIRECTIVE_INDEX, forceOverride);\n        }\n        if (runtimeIsNewStylingInUse()) {\n            var prop = getBindingNameFromIndex(stylingContext, classIndex, directiveStylingIndex, true);\n            // the reason why we cast the value as `boolean` is\n            // because the new styling refactor does not yet support\n            // sanitization or animation players.\n            classProp(prop, input);\n        }\n    }\n    function booleanOrNull(value) {\n        if (typeof value === 'boolean')\n            return value;\n        return value ? true : null;\n    }\n    /**\n     * Update style bindings using an object literal on an element.\n     *\n     * This instruction is meant to apply styling via the `[style]=\"exp\"` template bindings.\n     * When styles are applied to the element they will then be updated with respect to\n     * any styles/classes set via `styleProp`. If any styles are set to falsy\n     * then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     *\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     *\n     * Note that this will apply the provided styleMap value to the host element if this function\n     * is called within a host binding.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstyleMap(styles) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, styles, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateStyleMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasStyleInput(tNode) && styles !== NO_CHANGE) {\n                var initialStyles = getInitialClassNameValue(stylingContext);\n                var styleInputVal = (initialStyles.length ? (initialStyles + ' ') : '') + forceStylesAsString(styles);\n                setInputsForProperty(lView, tNode.inputs['style'], styleInputVal);\n                styles = NO_CHANGE;\n            }\n            updateStyleMap(stylingContext, styles);\n        }\n    }\n    /**\n     * Update class bindings using an object literal or class-string on an element.\n     *\n     * This instruction is meant to apply styling via the `[class]=\"exp\"` template bindings.\n     * When classes are applied to the element they will then be updated with\n     * respect to any styles/classes set via `classProp`. If any\n     * classes are set to falsy then they will be removed from the element.\n     *\n     * Note that the styling instruction will not be applied until `stylingApply` is called.\n     * Note that this will the provided classMap value to the host element if this function is called\n     * within a host binding.\n     *\n     * @param classes A key/value map or string of CSS classes that will be added to the\n     *        given element. Any missing classes (that have already been applied to the element\n     *        beforehand) will be removed (unset) from the element's list of CSS classes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵclassMap(classes) {\n        var index = getSelectedIndex();\n        var lView = getLView();\n        var stylingContext = getStylingContext(index, lView);\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n        if (directiveStylingIndex) {\n            var args = [stylingContext, classes, directiveStylingIndex];\n            enqueueHostInstruction(stylingContext, directiveStylingIndex, updateClassMap, args);\n        }\n        else {\n            var tNode = getTNode(index, lView);\n            // inputs are only evaluated from a template binding into a directive, therefore,\n            // there should not be a situation where a directive host bindings function\n            // evaluates the inputs (this should only happen in the template function)\n            if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n                var initialClasses = getInitialClassNameValue(stylingContext);\n                var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + forceClassesAsString(classes);\n                setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n                classes = NO_CHANGE;\n            }\n            updateClassMap(stylingContext, classes);\n        }\n    }\n    /**\n     * Apply all style and class binding values to the element.\n     *\n     * This instruction is meant to be run after `styleMap`, `classMap`,\n     * `styleProp` or `classProp` instructions have been run and will\n     * only apply styling to the element if any styling bindings have been updated.\n     *\n     * @codeGenApi\n     */\n    function ɵɵstylingApply() {\n        var index = getSelectedIndex();\n        var directiveStylingIndex = getActiveDirectiveStylingIndex$1() || DEFAULT_TEMPLATE_DIRECTIVE_INDEX;\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        // if a non-element value is being processed then we can't render values\n        // on the element at all therefore by setting the renderer to null then\n        // the styling apply code knows not to actually apply the values...\n        var renderer = tNode.type === 3 /* Element */ ? lView[RENDERER] : null;\n        var isFirstRender = (lView[FLAGS] & 8 /* FirstLViewPass */) !== 0;\n        var stylingContext = getStylingContext(index, lView);\n        if (runtimeAllowOldStyling()) {\n            var totalPlayersQueued = renderStyling(stylingContext, renderer, lView, isFirstRender, null, null, directiveStylingIndex);\n            if (totalPlayersQueued > 0) {\n                var rootContext = getRootContext(lView);\n                scheduleTick(rootContext, 2 /* FlushPlayers */);\n            }\n        }\n        // because select(n) may not run between every instruction, the cached styling\n        // context may not get cleared between elements. The reason for this is because\n        // styling bindings (like `[style]` and `[class]`) are not recognized as property\n        // bindings by default so a select(n) instruction is not generated. To ensure the\n        // context is loaded correctly for the next element the cache below is pre-emptively\n        // cleared because there is no code in Angular that applies more styling code after a\n        // styling flush has occurred. Note that this will be fixed once FW-1254 lands.\n        setCachedStylingContext(null);\n        if (runtimeIsNewStylingInUse()) {\n            stylingApply();\n        }\n    }\n    function getActiveDirectiveStylingIndex$1() {\n        // whenever a directive's hostBindings function is called a uniqueId value\n        // is assigned. Normally this is enough to help distinguish one directive\n        // from another for the styling context, but there are situations where a\n        // sub-class directive could inherit and assign styling in concert with a\n        // parent directive. To help the styling code distinguish between a parent\n        // sub-classed directive the inheritance depth is taken into account as well.\n        return getActiveDirectiveId() + getActiveDirectiveSuperClassDepth();\n    }\n    function getStylingContext(index, lView) {\n        var context = getCachedStylingContext();\n        if (!context) {\n            context = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            setCachedStylingContext(context);\n        }\n        else if (ngDevMode) {\n            var actualContext = getStylingContextFromLView(index + HEADER_OFFSET, lView);\n            assertEqual(context, actualContext, 'The cached styling context is invalid');\n        }\n        return context;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        var renderer = lView[RENDERER];\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        var initialStylesIndex = 0;\n        var initialClassesIndex = 0;\n        var lastAttrIndex = -1;\n        if (attrs) {\n            lastAttrIndex = setUpAttributes(native, attrs);\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the styling\n            // template is first allocated (which happens when the very first style/class binding\n            // value is evaluated). When the template is allocated (when it turns into a context)\n            // then the styling template is locked and cannot be further extended (it can only be\n            // instantiated into a context per element)\n            setNodeStylingTemplate(tView, tNode, attrs, lastAttrIndex);\n            if (tNode.stylingTemplate) {\n                // the initial style/class values are rendered immediately after having been\n                // initialized into the context so the element styling is ready when directives\n                // are initialized (since they may read style/class values in their constructor)\n                initialStylesIndex = renderInitialStyles(native, tNode.stylingTemplate, renderer);\n                initialClassesIndex = renderInitialClasses(native, tNode.stylingTemplate, renderer);\n            }\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n            if (inputData && inputData.hasOwnProperty('style')) {\n                tNode.flags |= 16 /* hasStyleInput */;\n            }\n        }\n        // we render the styling again below in case any directives have set any `style` and/or\n        // `class` host attribute values...\n        if (tNode.stylingTemplate) {\n            renderInitialClasses(native, tNode.stylingTemplate, renderer, initialClassesIndex);\n            renderInitialStyles(native, tNode.stylingTemplate, renderer, initialStylesIndex);\n        }\n        if (runtimeIsNewStylingInUse() && lastAttrIndex >= 0) {\n            registerInitialStylingIntoContext(tNode, attrs, lastAttrIndex);\n        }\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        registerPostOrderHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        var stylingContext = null;\n        if (hasClassInput(previousOrParentTNode)) {\n            stylingContext = getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n        if (hasStyleInput(previousOrParentTNode)) {\n            stylingContext =\n                stylingContext || getStylingContextFromLView(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['style'], getInitialStyleStringValue(stylingContext));\n        }\n    }\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelement(index, name, attrs, localRefs) {\n        ɵɵelementStart(index, name, attrs, localRefs);\n        ɵɵelementEnd();\n    }\n    /**\n     * Updates the value or removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementAttribute(index, name, value, sanitizer, namespace) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && validateAgainstEventAttributes(name);\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element, name, namespace) :\n                    element.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var tNode = getTNode(index, lView);\n                var strValue = sanitizer == null ? renderStringify(value) : sanitizer(value, tNode.tagName || '', name);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setAttribute(element, name, strValue, namespace);\n                }\n                else {\n                    namespace ? element.setAttributeNS(namespace, name, strValue) :\n                        element.setAttribute(name, strValue);\n                }\n            }\n        }\n    }\n    /**\n     * Assign static attribute values to a host element.\n     *\n     * This instruction will assign static attribute values as well as class and style\n     * values to an element within the host bindings function. Since attribute values\n     * can consist of different types of values, the `attrs` array must include the values in\n     * the following format:\n     *\n     * attrs = [\n     *   // static attributes (like `title`, `name`, `id`...)\n     *   attr1, value1, attr2, value,\n     *\n     *   // a single namespace value (like `x:id`)\n     *   NAMESPACE_MARKER, namespaceUri1, name1, value1,\n     *\n     *   // another single namespace value (like `x:name`)\n     *   NAMESPACE_MARKER, namespaceUri2, name2, value2,\n     *\n     *   // a series of CSS classes that will be applied to the element (no spaces)\n     *   CLASSES_MARKER, class1, class2, class3,\n     *\n     *   // a series of CSS styles (property + value) that will be applied to the element\n     *   STYLES_MARKER, prop1, value1, prop2, value2\n     * ]\n     *\n     * All non-class and non-style attributes must be defined at the start of the list\n     * first before all class and style values are set. When there is a change in value\n     * type (like when classes and styles are introduced) a marker must be used to separate\n     * the entries. The marker values themselves are set via entries found in the\n     * [AttributeMarker] enum.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array of static values (attributes, classes and styles) with the correct marker\n     * values.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementHostAttrs(attrs) {\n        var hostElementIndex = getSelectedIndex();\n        var lView = getLView();\n        var tNode = getTNode(hostElementIndex, lView);\n        // non-element nodes (e.g. `<ng-container>`) are not rendered as actual\n        // element nodes and adding styles/classes on to them will cause runtime\n        // errors...\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var lastAttrIndex = setUpAttributes(native, attrs);\n            var stylingAttrsStartIndex = attrsStylingIndexOf(attrs, lastAttrIndex);\n            if (stylingAttrsStartIndex >= 0) {\n                var directiveStylingIndex = getActiveDirectiveStylingIndex$1();\n                if (tNode.stylingTemplate) {\n                    patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n                else {\n                    tNode.stylingTemplate =\n                        initializeStaticContext(attrs, stylingAttrsStartIndex, directiveStylingIndex);\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, bindingIndex);\n        ngDevMode &&\n            assertNotSame(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotSame(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        var oldValue = lView[bindingIndex];\n        if (isDifferent(oldValue, value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                // View engine didn't report undefined values as changed on the first checkNoChanges pass\n                // (before the change detection was run).\n                var oldValueToCompare = oldValue !== NO_CHANGE ? oldValue : undefined;\n                if (!devModeEqual(oldValueToCompare, value)) {\n                    throwErrorIfNoChangesMode(oldValue === NO_CHANGE, oldValueToCompare, value);\n                }\n            }\n            lView[bindingIndex] = value;\n            return true;\n        }\n        return false;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Update a property on a selected element.\n     *\n     * Operates on the element selected by index via the {@link select} instruction.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled\n     *\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     * @returns This function returns itself so that it may be chained\n     * (e.g. `property('name', ctx.name)('title', ctx.title)`)\n     *\n     * @codeGenApi\n     */\n    function ɵɵproperty(propName, value, sanitizer, nativeOnly) {\n        var index = getSelectedIndex();\n        ngDevMode && assertNotEqual(index, -1, 'selected index cannot be -1');\n        var bindReconciledValue = ɵɵbind(value);\n        if (bindReconciledValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, bindReconciledValue, sanitizer, nativeOnly);\n        }\n        return ɵɵproperty;\n    }\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     *\n     * @codeGenApi\n     */\n    function ɵɵbind(value) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX]++;\n        storeBindingMetadata(lView);\n        return bindingUpdated(lView, bindingIndex, value) ? value : NO_CHANGE;\n    }\n    /**\n    * **TODO: Remove this function after `property` is in use**\n    * Update a property on an element.\n    *\n    * If the property name also exists as an input property on one of the element's directives,\n    * the component property will be set instead of the element property. This check must\n    * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n    *\n    * @param index The index of the element to update in the data array\n    * @param propName Name of property. Because it is going to DOM, this is not subject to\n    *        renaming as part of minification.\n    * @param value New value to write.\n    * @param sanitizer An optional function used to sanitize the value.\n    * @param nativeOnly Whether or not we should only set native properties and skip input check\n    * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n    */\n    function ɵɵelementProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n        }\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub component's renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     *\n     * @codeGenApi\n     */\n    function ɵɵcomponentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        if (value !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n        }\n    }\n\n    /**\n     * Updates the value of or removes a bound attribute on an Element.\n     *\n     * Used in the case of `[attr.title]=\"value\"`\n     *\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param namespace Optional namespace to use when setting the attribute.\n     *\n     * @codeGenApi\n     */\n    function ɵɵattribute(name, value, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        return ɵɵelementAttribute(index, name, ɵɵbind(value), sanitizer, namespace);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var tData = lView[TVIEW].data;\n        var bindingIndex = lView[BINDING_INDEX];\n        if (tData[bindingIndex] == null) {\n            // 2 is the index of the first static interstitial value (ie. not prefix)\n            for (var i = 2; i < values.length; i += 2) {\n                tData[bindingIndex++] = values[i];\n            }\n            bindingIndex = lView[BINDING_INDEX];\n        }\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        storeBindingMetadata(lView, values[0], values[values.length - 1]);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += renderStringify(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX]++, v0);\n        storeBindingMetadata(lView, prefix, suffix);\n        return different ? prefix + renderStringify(v0) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 2 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated2(lView, bindingIndex, v0, v1);\n        lView[BINDING_INDEX] += 2;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            lView[TVIEW].data[bindingIndex] = i0;\n        }\n        return different ? prefix + renderStringify(v0) + i0 + renderStringify(v1) + suffix : NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 3 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated3(lView, bindingIndex, v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Create an interpolation binding with 4 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 5 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 6 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 7 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + suffix :\n            NO_CHANGE;\n    }\n    /**\n     * Creates an interpolation binding with 8 expressions.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        // Only set static strings the first time (data will be null subsequent runs).\n        var data = storeBindingMetadata(lView, prefix, suffix);\n        if (data) {\n            var tData = lView[TVIEW].data;\n            tData[bindingIndex] = i0;\n            tData[bindingIndex + 1] = i1;\n            tData[bindingIndex + 2] = i2;\n            tData[bindingIndex + 3] = i3;\n            tData[bindingIndex + 4] = i4;\n            tData[bindingIndex + 5] = i5;\n            tData[bindingIndex + 6] = i6;\n        }\n        return different ?\n            prefix + renderStringify(v0) + i0 + renderStringify(v1) + i1 + renderStringify(v2) + i2 +\n                renderStringify(v3) + i3 + renderStringify(v4) + i4 + renderStringify(v5) + i5 +\n                renderStringify(v6) + i6 + renderStringify(v7) + suffix :\n            NO_CHANGE;\n    }\n    /////////////////////////////////////////////////////////////////////\n    /// NEW INSTRUCTIONS\n    /////////////////////////////////////////////////////////////////////\n    /**\n     *\n     * Update an interpolated property on an element with a lone bound value\n     *\n     * Used when the value passed to a property has 1 interpolated value in it, an no additional text\n     * surrounds that interpolated value:\n     *\n     * ```html\n     * <div title=\"{{v0}}\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate('title', v0);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate(propName, v0, sanitizer) {\n        ɵɵpropertyInterpolate1(propName, '', v0, '', sanitizer);\n        return ɵɵpropertyInterpolate;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate1(propName, prefix, v0, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation1(prefix, v0, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate2(propName, prefix, v0, i0, v1, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation2(prefix, v0, i0, v1, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate3(propName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate4(propName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate5(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate6(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate7(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated property on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolate8(propName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolate8;\n    }\n    /**\n     * Update an interpolated property on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵpropertyInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new `@Inputs` don't have to be re-compiled.\n     *\n     * @param propName The name of the property to update.\n     * @param values The a collection of values and the strings inbetween those values, beginning with a\n     * string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵpropertyInterpolateV(propName, values, sanitizer) {\n        var index = getSelectedIndex();\n        var interpolatedValue = ɵɵinterpolationV(values);\n        if (interpolatedValue !== NO_CHANGE) {\n            elementPropertyInternal(index, propName, interpolatedValue, sanitizer);\n        }\n        return ɵɵpropertyInterpolateV;\n    }\n\n    /**\n     *\n     * Update an interpolated attribute on an element with single bound value surrounded by text.\n     *\n     * Used when the value passed to a property has 1 interpolated value in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate1('title', 'prefix', v0, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate1(attrName, prefix, v0, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation1(prefix, v0, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate1;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 2 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 2 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate2('title', 'prefix', v0, '-', v1, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate2(attrName, prefix, v0, i0, v1, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation2(prefix, v0, i0, v1, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate2;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 3 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 3 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate3(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate3(attrName, prefix, v0, i0, v1, i1, v2, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation3(prefix, v0, i0, v1, i1, v2, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate3;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 4 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 4 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate4(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate4(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate4;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 5 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 5 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate5(\n     * 'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate5(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate5;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 6 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 6 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate6(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate6(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate6;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 7 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 7 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate7(\n     *    'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate7(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate7;\n    }\n    /**\n     *\n     * Update an interpolated attribute on an element with 8 bound values surrounded by text.\n     *\n     * Used when the value passed to a property has 8 interpolated values in it:\n     *\n     * ```html\n     * <div attr.title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolate8(\n     *  'title', 'prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, 'suffix');\n     * ```\n     *\n     * @param attrName The name of the attribute to update\n     * @param prefix Static value used for concatenation only.\n     * @param v0 Value checked for change.\n     * @param i0 Static value used for concatenation only.\n     * @param v1 Value checked for change.\n     * @param i1 Static value used for concatenation only.\n     * @param v2 Value checked for change.\n     * @param i2 Static value used for concatenation only.\n     * @param v3 Value checked for change.\n     * @param i3 Static value used for concatenation only.\n     * @param v4 Value checked for change.\n     * @param i4 Static value used for concatenation only.\n     * @param v5 Value checked for change.\n     * @param i5 Static value used for concatenation only.\n     * @param v6 Value checked for change.\n     * @param i6 Static value used for concatenation only.\n     * @param v7 Value checked for change.\n     * @param suffix Static value used for concatenation only.\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolate8(attrName, prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        var interpolatedValue = ɵɵinterpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix);\n        ɵɵelementAttribute(index, attrName, interpolatedValue, sanitizer, namespace);\n        return ɵɵattributeInterpolate8;\n    }\n    /**\n     * Update an interpolated attribute on an element with 8 or more bound values surrounded by text.\n     *\n     * Used when the number of interpolated values exceeds 7.\n     *\n     * ```html\n     * <div\n     *  title=\"prefix{{v0}}-{{v1}}-{{v2}}-{{v3}}-{{v4}}-{{v5}}-{{v6}}-{{v7}}-{{v8}}-{{v9}}suffix\"></div>\n     * ```\n     *\n     * Its compiled representation is::\n     *\n     * ```ts\n     * ɵɵattributeInterpolateV(\n     *  'title', ['prefix', v0, '-', v1, '-', v2, '-', v3, '-', v4, '-', v5, '-', v6, '-', v7, '-', v9,\n     *  'suffix']);\n     * ```\n     *\n     * @param attrName The name of the attribute to update.\n     * @param values The a collection of values and the strings in-between those values, beginning with\n     * a string prefix and ending with a string suffix.\n     * (e.g. `['prefix', value0, '-', value1, '-', value2, ..., value99, 'suffix']`)\n     * @param sanitizer An optional sanitizer function\n     * @returns itself, so that it may be chained.\n     * @codeGenApi\n     */\n    function ɵɵattributeInterpolateV(attrName, values, sanitizer, namespace) {\n        var index = getSelectedIndex();\n        // TODO(FW-1340): Refactor to remove the use of other instructions here.\n        ɵɵelementAttribute(index, attrName, ɵɵinterpolationV(values), sanitizer, namespace);\n        return ɵɵattributeInterpolateV;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        var rootView = markViewDirty(getComponentViewByInstance(component));\n        ngDevMode && assertDefined(rootView[CONTEXT], 'rootContext should be defined');\n        scheduleTick(rootView[CONTEXT], 1 /* DetectChanges */);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainer(index) {\n        var tNode = containerInternal(index, null, null);\n        var lView = getLView();\n        if (lView[TVIEW].firstTemplatePass) {\n            tNode.tViews = [];\n        }\n        addTContainerToQueries(lView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplate(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tContainerNode = containerInternal(index, tagName || null, attrs || null);\n        if (tView.firstTemplatePass) {\n            tContainerNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        addTContainerToQueries(lView, tContainerNode);\n        attachPatchData(getNativeByTNode(tContainerNode, lView), lView);\n        registerPostOrderHooks(tView, tContainerNode);\n        setIsParent(false);\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executePreOrderHooks(lView, tView, getCheckNoChangesMode(), undefined);\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontainerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer.length - CONTAINER_HEADER_OFFSET) {\n            removeView(lContainer, nextIndex);\n        }\n    }\n    /**\n    * Reporting a TContainer node queries is a 2-step process as we need to:\n    * - check if the container node itself is matching (query might match a <ng-template> node);\n    * - prepare room for nodes from views that might be created based on the TemplateRef linked to this\n    * container.\n    *\n    * Those 2 operations need to happen in the specific order (match the container node itself, then\n    * prepare space for nodes from views).\n    */\n    function addTContainerToQueries(lView, tContainerNode) {\n        var queries = lView[QUERIES];\n        if (queries) {\n            var lContainer = lView[tContainerNode.index];\n            if (lContainer[QUERIES]) {\n                // Query container should only exist if it was created through a dynamic view\n                // in a directive constructor. In this case, we must splice the template\n                // matches in before the view matches to ensure query results in embedded views\n                // don't clobber query results on the template node itself.\n                queries.insertNodeBeforeViews(tContainerNode);\n            }\n            else {\n                queries.addNode(tContainerNode);\n                lContainer[QUERIES] = queries.container();\n            }\n        }\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], lView, comment, tNode);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, lContainer);\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n            tView.blueprint[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     *\n     * @codeGenApi\n     */\n    function ɵɵreference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    /**\n     * Retrieves a value from current `viewData`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵload(index) {\n        return loadInternal(getLView(), index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ɵɵdirectiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        var lView = getLView();\n        // Fall back to inject() if view hasn't been created. This situation can happen in tests\n        // if inject utilities are used before bootstrapping.\n        if (lView == null)\n            return ɵɵinject(token, flags);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), lView, token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     *\n     * @codeGenApi\n     */\n    function ɵɵinjectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        if (attrs) {\n            // While ng-container doesn't necessarily support styling, we use the style context to identify\n            // and execute directives on the ng-container.\n            setNodeStylingTemplate(tView, tNode, attrs, 0);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            currentQueries.addNode(tNode);\n            lView[QUERIES] = currentQueries.clone();\n        }\n        executeContentQueries(tView, tNode, lView);\n    }\n    /**\n     * Mark the end of the <ng-container>.\n     *\n     * @codeGenApi\n     */\n    function ɵɵelementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.parent;\n        }\n        // this is required for all host-level styling-related instructions to run\n        // in the correct order\n        previousOrParentTNode.onElementCreationFns && applyOnCreateInstructions(previousOrParentTNode);\n        registerPostOrderHooks(tView, previousOrParentTNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 16 /* CheckAlways */, null, null);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            var tParentNode = getIsParent() ? previousOrParentTNode :\n                previousOrParentTNode && previousOrParentTNode.parent;\n            assignTViewNodeToLView(viewToRender[TVIEW], tParentNode, viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lContainer[ACTIVE_INDEX]);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     */\n    function scanForView(lContainer, startIdx, viewBlockId) {\n        for (var i = startIdx + CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var viewAtPositionId = lContainer[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return lContainer[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, i - CONTAINER_HEADER_OFFSET);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the end of an embedded view.\n     *\n     * @codeGenApi\n     */\n    function ɵɵembeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[T_HOST];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~4 /* CreationMode */;\n        }\n        resetPreOrderHookFlags(lView);\n        refreshDescendantViews(lView); // update mode pass\n        var lContainer = lView[PARENT];\n        ngDevMode && assertLContainerOrUndefined(lContainer);\n        leaveView(lContainer[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @codeGenApi\n     */\n    function ɵɵgetCurrentView() {\n        return getLView();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener\n     * @param eventTargetResolver Function that returns global target information in case this listener\n     * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n     */\n    function ɵɵlistener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver);\n    }\n    /**\n    * Registers a synthetic host listener (e.g. `(@foo.start)`) on a component.\n    *\n    * This instruction is for compatibility purposes and is designed to ensure that a\n    * synthetic host listener (e.g. `@HostListener('@foo.start')`) properly gets rendered\n    * in the component's renderer. Normally all host listeners are evaluated with the\n    * parent component's renderer, but, in the case of animation @triggers, they need\n    * to be evaluated with the sub component's renderer (because that's where the\n    * animation triggers are defined).\n    *\n    * Do not use this instruction as a replacement for `listener`. This instruction\n    * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n    *\n    * @param eventName Name of the event\n    * @param listenerFn The function to be called when event emits\n    * @param useCapture Whether or not to use capture in event listener\n    * @param eventTargetResolver Function that returns global target information in case this listener\n    * should be attached to a global object like window, document or body\n     *\n     * @codeGenApi\n    */\n    function ɵɵcomponentHostSyntheticListener(eventName, listenerFn, useCapture, eventTargetResolver) {\n        if (useCapture === void 0) { useCapture = false; }\n        listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadComponentRenderer);\n    }\n    /**\n     * A utility function that checks if a given element has already an event handler registered for an\n     * event with a specified name. The TView.cleanup data structure is used to find out which events\n     * are registered for a given element.\n     */\n    function findExistingListener(lView, eventName, tNodeIdx) {\n        var tView = lView[TVIEW];\n        var tCleanup = tView.cleanup;\n        if (tCleanup != null) {\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                var cleanupEventName = tCleanup[i];\n                if (cleanupEventName === eventName && tCleanup[i + 1] === tNodeIdx) {\n                    // We have found a matching event name on the same node but it might not have been\n                    // registered yet, so we must explicitly verify entries in the LView cleanup data\n                    // structures.\n                    var lCleanup = lView[CLEANUP];\n                    var listenerIdxInLCleanup = tCleanup[i + 2];\n                    return lCleanup.length > listenerIdxInLCleanup ? lCleanup[listenerIdxInLCleanup] : null;\n                }\n                // TView.cleanup can have a mix of 4-elements entries (for event handler cleanups) or\n                // 2-element entries (for directive and queries destroy hooks). As such we can encounter\n                // blocks of 4 or 2 items in the tView.cleanup and this is why we iterate over 2 elements\n                // first and jump another 2 elements if we detect listeners cleanup (4 elements). Also check\n                // documentation of TView.cleanup for more details of this data structure layout.\n                if (typeof cleanupEventName === 'string') {\n                    i += 2;\n                }\n            }\n        }\n        return null;\n    }\n    function listenerInternal(eventName, listenerFn, useCapture, eventTargetResolver, loadRendererFn) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        var processOutputs = true;\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            var resolved = eventTargetResolver ? eventTargetResolver(native) : EMPTY_OBJ;\n            var target = resolved.target || native;\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var idxOrTargetGetter = eventTargetResolver ?\n                function (_lView) { return eventTargetResolver(unwrapRNode(_lView[tNode.index])).target; } :\n                tNode.index;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                // There might be cases where multiple directives on the same element try to register an event\n                // handler function for the same event. In this situation we want to avoid registration of\n                // several native listeners as each registration would be intercepted by NgZone and\n                // trigger change detection. This would mean that a single user action would result in several\n                // change detections being invoked. To avoid this situation we want to have only one call to\n                // native handler registration (for the same element and same type of event).\n                //\n                // In order to have just one native event handler in presence of multiple handler functions,\n                // we just register a first handler function as a native event listener and then chain\n                // (coalesce) other handler functions on top of the first native handler function.\n                var existingListener = null;\n                // Please note that the coalescing described here doesn't happen for events specifying an\n                // alternative target (ex. (document:click)) - this is to keep backward compatibility with the\n                // view engine.\n                // Also, we don't have to search for existing listeners is there are no directives\n                // matching on a given node as we can't register multiple event handlers for the same event in\n                // a template (this would mean having duplicate attributes).\n                if (!eventTargetResolver && hasDirectives(tNode)) {\n                    existingListener = findExistingListener(lView, eventName, tNode.index);\n                }\n                if (existingListener !== null) {\n                    // Attach a new listener at the head of the coalesced listeners list.\n                    listenerFn.__ngNextListenerFn__ = existingListener.__ngNextListenerFn__;\n                    existingListener.__ngNextListenerFn__ = listenerFn;\n                    processOutputs = false;\n                }\n                else {\n                    // The first argument of `listen` function in Procedural Renderer is:\n                    // - either a target name (as a string) in case of global target (window, document, body)\n                    // - or element reference (in all other cases)\n                    listenerFn = wrapListener(tNode, lView, listenerFn, false /** preventDefault */);\n                    var cleanupFn = renderer.listen(resolved.name || target, eventName, listenerFn);\n                    ngDevMode && ngDevMode.rendererAddEventListener++;\n                    lCleanup.push(listenerFn, cleanupFn);\n                    tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, lCleanupIndex + 1);\n                }\n            }\n            else {\n                listenerFn = wrapListener(tNode, lView, listenerFn, true /** preventDefault */);\n                target.addEventListener(eventName, listenerFn, useCapture);\n                ngDevMode && ngDevMode.rendererAddEventListener++;\n                lCleanup.push(listenerFn);\n                tCleanup && tCleanup.push(eventName, idxOrTargetGetter, lCleanupIndex, useCapture);\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (processOutputs && outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 3) {\n                    var index = props[i];\n                    ngDevMode && assertDataInRange(lView, index);\n                    var minifiedName = props[i + 2];\n                    var directiveInstance = lView[index];\n                    var output = directiveInstance[minifiedName];\n                    if (ngDevMode && !isObservable(output)) {\n                        throw new Error(\"@Output \" + minifiedName + \" not initialized in '\" + directiveInstance.constructor.name + \"'.\");\n                    }\n                    var subscription = output.subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    function executeListenerWithErrorHandling(lView, listenerFn, e) {\n        try {\n            // Only explicitly returning false from a listener should preventDefault\n            return listenerFn(e) !== false;\n        }\n        catch (error) {\n            handleError(lView, error);\n            return false;\n        }\n    }\n    /**\n     * Wraps an event listener with a function that marks ancestors dirty and prevents default behavior,\n     * if applicable.\n     *\n     * @param tNode The TNode associated with this listener\n     * @param lView The LView that contains this listener\n     * @param listenerFn The listener function to call\n     * @param wrapWithPreventDefault Whether or not to prevent default behavior\n     * (the procedural renderer does this already, so in those cases, we should skip)\n     */\n    function wrapListener(tNode, lView, listenerFn, wrapWithPreventDefault) {\n        // Note: we are performing most of the work in the listener function itself\n        // to optimize listener registration.\n        return function wrapListenerIn_markDirtyAndPreventDefault(e) {\n            // In order to be backwards compatible with View Engine, events on component host nodes\n            // must also mark the component view itself dirty (i.e. the view that it owns).\n            var startView = tNode.flags & 1 /* isComponent */ ? getComponentViewByIndex(tNode.index, lView) : lView;\n            // See interfaces/view.ts for more on LViewFlags.ManualOnPush\n            if ((lView[FLAGS] & 32 /* ManualOnPush */) === 0) {\n                markViewDirty(startView);\n            }\n            var result = executeListenerWithErrorHandling(lView, listenerFn, e);\n            // A just-invoked listener function might have coalesced listeners so we need to check for\n            // their presence and invoke as needed.\n            var nextListenerFn = wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;\n            while (nextListenerFn) {\n                // We should prevent default if any of the listeners explicitly return false\n                result = executeListenerWithErrorHandling(lView, nextListenerFn, e) && result;\n                nextListenerFn = nextListenerFn.__ngNextListenerFn__;\n            }\n            if (wrapWithPreventDefault && result === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n            return result;\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     *\n     * @codeGenApi\n     */\n    function ɵɵnextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     *\n     * @codeGenApi\n     */\n    function ɵɵprojectionDef(selectors) {\n        var componentNode = findComponentView(getLView())[T_HOST];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var projectionHeads = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = projectionHeads.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingProjectionSelectorIndex(componentChild, selectors) : 0;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].projectionNext = componentChild;\n                }\n                else {\n                    projectionHeads[bucketIndex] = componentChild;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = componentChild.next;\n            }\n        }\n    }\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     *\n     * @codeGenApi\n    */\n    function ɵɵprojection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        appendProjectedNodes(lView, tProjectionNode, selectorIndex, findComponentView(lView));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Selects an element for later binding instructions.\n     *\n     * Used in conjunction with instructions like {@link property} to act on elements with specified\n     * indices, for example those created with {@link element} or {@link elementStart}.\n     *\n     * ```ts\n     * (rf: RenderFlags, ctx: any) => {\n     *   if (rf & 1) {\n     *     element(0, 'div');\n     *   }\n     *   if (rf & 2) {\n     *     select(0); // Select the <div/> created above.\n     *     property('title', 'test');\n     *   }\n     *  }\n     * ```\n     * @param index the index of the item to act on with the following instructions\n     *\n     * @codeGenApi\n     */\n    function ɵɵselect(index) {\n        ngDevMode && assertGreaterThan(index, -1, 'Invalid index');\n        ngDevMode &&\n            assertLessThan(index, getLView().length - HEADER_OFFSET, 'Should be within range for the view data');\n        var lView = getLView();\n        // Flush the initial hooks for elements in the view that have been added up to this point.\n        executePreOrderHooks(lView, lView[TVIEW], getCheckNoChangesMode(), index);\n        // We must set the selected index *after* running the hooks, because hooks may have side-effects\n        // that cause other template functions to run, thus updating the selected index, which is global\n        // state. If we run `setSelectedIndex` *before* we run the hooks, in some cases the selected index\n        // will be altered by the time we leave the `ɵɵselect` instruction.\n        setSelectedIndex(index);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtext(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtextBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element, renderStringify(value)) :\n                element.textContent = renderStringify(value);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element, context);\n        var rootContext = getRootContext(lView);\n        addPlayerInternal(playerContext, rootContext, element, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContextFromLView(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext$1(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        var parent;\n        ngDevMode && assertLView(lView);\n        while (lView[HOST] === null && (parent = getLViewParent(lView))) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = parent;\n        }\n        return lView[FLAGS] & 512 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringifyForError(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = unwrapRNode(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    var _published = false;\n    /**\n     * Publishes a collection of default debug tools onto`window.ng`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext$1);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ng` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        // this is preemptively set to avoid having test and debug code accidentally\n        // read data from a previous application state...\n        setActiveHostElement(null);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n            16 /* CheckAlways */ | 512 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            addToViewTree(rootView, componentView);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~4 /* CreationMode */;\n            resetPreOrderHookFlags(rootView);\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        var componentView = createLView(rootView, getOrCreateTView(def), null, def.onPush ? 64 /* Dirty */ : 16 /* CheckAlways */, rootView[HEADER_OFFSET], tNode, rendererFactory, renderer, sanitizer);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        // We want to generate an empty QueryList for root content queries for backwards\n        // compatibility with ViewEngine.\n        if (componentDef.contentQueries) {\n            componentDef.contentQueries(1 /* Create */, component, rootView.length - 1);\n        }\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var elementIndex = rootTNode.index - HEADER_OFFSET;\n            setActiveHostElement(elementIndex);\n            var expando = tView.expandoInstructions;\n            invokeHostBindingsInCreationMode(componentDef, expando, component, rootTNode, tView.firstTemplatePass);\n            rootTNode.onElementCreationFns && applyOnCreateInstructions(rootTNode);\n            setActiveHostElement(null);\n        }\n        if (rootTNode.stylingTemplate) {\n            var native = componentView[HOST];\n            renderInitialClasses(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n            renderInitialStyles(native, rootTNode.stylingTemplate, componentView[RENDERER]);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        registerPreOrderHooks(dirIndex, def, rootTView, -1, -1, -1);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        registerPostOrderHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a basic change from a previous to a new value for a single\n     * property on a directive instance. Passed as a value in a\n     * {@link SimpleChanges} object to the `ngOnChanges` hook.\n     *\n     * @see `OnChanges`\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature()]\n     * });\n     * ```\n     *\n     * @codeGenApi\n     */\n    function ɵɵNgOnChangesFeature() {\n        // This option ensures that the ngOnChanges lifecycle hook will be inherited\n        // from superclasses (in InheritDefinitionFeature).\n        NgOnChangesFeatureImpl.ngInherit = true;\n        return NgOnChangesFeatureImpl;\n    }\n    function NgOnChangesFeatureImpl(definition) {\n        if (definition.type.prototype.ngOnChanges) {\n            definition.setInput = ngOnChangesSetInput;\n            definition.onChanges = wrapOnChanges();\n        }\n    }\n    function wrapOnChanges() {\n        return function wrapOnChangesHook_inPreviousChangesStorage() {\n            var simpleChangesStore = getSimpleChangesStore(this);\n            var current = simpleChangesStore && simpleChangesStore.current;\n            if (current) {\n                var previous = simpleChangesStore.previous;\n                if (previous === EMPTY_OBJ) {\n                    simpleChangesStore.previous = current;\n                }\n                else {\n                    // New changes are copied to the previous store, so that we don't lose history for inputs\n                    // which were not changed this time\n                    for (var key in current) {\n                        previous[key] = current[key];\n                    }\n                }\n                simpleChangesStore.current = null;\n                this.ngOnChanges(current);\n            }\n        };\n    }\n    function ngOnChangesSetInput(instance, value, publicName, privateName) {\n        var simpleChangesStore = getSimpleChangesStore(instance) ||\n            setSimpleChangesStore(instance, { previous: EMPTY_OBJ, current: null });\n        var current = simpleChangesStore.current || (simpleChangesStore.current = {});\n        var previous = simpleChangesStore.previous;\n        var declaredName = this.declaredInputs[publicName];\n        var previousChange = previous[declaredName];\n        current[declaredName] = new SimpleChange(previousChange && previousChange.currentValue, value, previous === EMPTY_OBJ);\n        instance[privateName] = value;\n    }\n    var SIMPLE_CHANGES_STORE = '__ngSimpleChanges__';\n    function getSimpleChangesStore(instance) {\n        return instance[SIMPLE_CHANGES_STORE] || null;\n    }\n    function setSimpleChangesStore(instance, store) {\n        return instance[SIMPLE_CHANGES_STORE] = store;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     *\n     * @codeGenApi\n     */\n    function ɵɵInheritDefinitionFeature(definition) {\n        var e_1, _a;\n        var superType = getSuperType(definition.type);\n        while (superType) {\n            var superDef = undefined;\n            if (isComponentDef(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                var baseViewQuery = baseDef.viewQuery;\n                var baseContentQueries = baseDef.contentQueries;\n                var baseHostBindings = baseDef.hostBindings;\n                baseHostBindings && inheritHostBindings(definition, baseHostBindings);\n                baseViewQuery && inheritViewQuery(definition, baseViewQuery);\n                baseContentQueries && inheritContentQueries(definition, baseContentQueries);\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var superHostBindings = superDef.hostBindings;\n                superHostBindings && inheritHostBindings(definition, superHostBindings);\n                // Merge queries\n                var superViewQuery = superDef.viewQuery;\n                var superContentQueries = superDef.contentQueries;\n                superViewQuery && inheritViewQuery(definition, superViewQuery);\n                superContentQueries && inheritContentQueries(definition, superContentQueries);\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.ngAfterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.ngAfterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.ngAfterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.ngAfterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.ngDoCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.ngOnDestroy;\n                    definition.onInit = definition.onInit || superPrototype.ngOnInit;\n                    if (superPrototype.ngOnChanges) {\n                        ɵɵNgOnChangesFeature()(definition);\n                    }\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY$1) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n    function inheritViewQuery(definition, superViewQuery) {\n        var prevViewQuery = definition.viewQuery;\n        if (prevViewQuery) {\n            definition.viewQuery = function (rf, ctx) {\n                superViewQuery(rf, ctx);\n                prevViewQuery(rf, ctx);\n            };\n        }\n        else {\n            definition.viewQuery = superViewQuery;\n        }\n    }\n    function inheritContentQueries(definition, superContentQueries) {\n        var prevContentQueries = definition.contentQueries;\n        if (prevContentQueries) {\n            definition.contentQueries = function (rf, ctx, directiveIndex) {\n                superContentQueries(rf, ctx, directiveIndex);\n                prevContentQueries(rf, ctx, directiveIndex);\n            };\n        }\n        else {\n            definition.contentQueries = superContentQueries;\n        }\n    }\n    function inheritHostBindings(definition, superHostBindings) {\n        var prevHostBindings = definition.hostBindings;\n        // If the subclass does not have a host bindings function, we set the subclass host binding\n        // function to be the superclass's (in this feature). We should check if they're the same here\n        // to ensure we don't inherit it twice.\n        if (superHostBindings !== prevHostBindings) {\n            if (prevHostBindings) {\n                // because inheritance is unknown during compile time, the runtime code\n                // needs to be informed of the super-class depth so that instruction code\n                // can distinguish one host bindings function from another. The reason why\n                // relying on the directive uniqueId exclusively is not enough is because the\n                // uniqueId value and the directive instance stay the same between hostBindings\n                // calls throughout the directive inheritance chain. This means that without\n                // a super-class depth value, there is no way to know whether a parent or\n                // sub-class host bindings function is currently being executed.\n                definition.hostBindings = function (rf, ctx, elementIndex) {\n                    // The reason why we increment first and then decrement is so that parent\n                    // hostBindings calls have a higher id value compared to sub-class hostBindings\n                    // calls (this way the leaf directive is always at a super-class depth of 0).\n                    adjustActiveDirectiveSuperClassDepthPosition(1);\n                    try {\n                        superHostBindings(rf, ctx, elementIndex);\n                    }\n                    finally {\n                        adjustActiveDirectiveSuperClassDepthPosition(-1);\n                    }\n                    prevHostBindings(rf, ctx, elementIndex);\n                };\n            }\n            else {\n                definition.hostBindings = superHostBindings;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider(viewProviders, tView.data, tView.blueprint, isComponent, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider(providers, tView.data, tView.blueprint, isComponent, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider(provider, tInjectables, lInjectablesBlueprint, isComponent, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider(provider[i], tInjectables, lInjectablesBlueprint, isComponent, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isClassProvider(provider) || isTypeProvider(provider)) {\n                var prototype = (provider.useClass || provider).prototype;\n                var ngOnDestroy = prototype.ngOnDestroy;\n                if (ngOnDestroy) {\n                    var tView = lView[TVIEW];\n                    (tView.destroyHooks || (tView.destroyHooks = [])).push(tInjectables.length, ngOnDestroy);\n                }\n            }\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, ɵɵdirectiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent);\n                }\n                if (!isViewProvider && isComponent && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, ɵɵdirectiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     *\n     * @codeGenApi\n     */\n    function ɵɵProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver =\n                function (def, processProvidersFn) {\n                    return providersResolver(def, //\n                    processProvidersFn ? processProvidersFn(providers) : providers, //\n                    viewProviders);\n                };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[T_HOST];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 256 /* Destroyed */) === 256 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~128 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 128 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChangesInternal(this._lView, this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._lView);\n        };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = getLViewParent(this._lView)[this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            var nativeNode = getNativeByTNode(tNodeChild, lView);\n            nativeNode && result.push(nativeNode);\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            else if (tNodeChild.type === 1 /* Projection */) {\n                var componentView = findComponentView(lView);\n                var componentHost = componentView[T_HOST];\n                var parentView = getLViewParent(componentView);\n                var currentProjectedNode = componentHost.projection[tNodeChild.projection];\n                while (currentProjectedNode && parentView) {\n                    result.push(getNativeByTNode(currentProjectedNode, parentView));\n                    currentProjectedNode = currentProjectedNode.next;\n                }\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _hostLContainer, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._hostLContainer = _hostLContainer;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container, index) {\n                    var currentQueries = this._declarationParentView[QUERIES];\n                    // Query container may be missing if this view was created in a directive\n                    // constructor. Create it now to avoid losing results in embedded views.\n                    if (currentQueries && this._hostLContainer[QUERIES] == null) {\n                        this._hostLContainer[QUERIES] = currentQueries.container();\n                    }\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._hostLContainer[QUERIES], this._injectorIndex);\n                    if (container) {\n                        insertView(lView, container, index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[T_HOST];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, hostContainer, hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this.length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () {\n                        // Note that if there are no views, the container\n                        // length will be smaller than the header offset.\n                        var viewAmount = this._lContainer.length - CONTAINER_HEADER_OFFSET;\n                        return viewAmount > 0 ? viewAmount : 0;\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    if (viewAttachedToContainer(lView)) {\n                        // If view is already attached, fall back to move() so we clean up\n                        // references appropriately.\n                        return this.move(viewRef, adjustedIdx);\n                    }\n                    insertView(lView, this._lContainer, adjustedIdx);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    if (index !== -1)\n                        this.detach(index);\n                    this.insert(viewRef, newIndex);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx);\n                    var wasDetached = view && this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], -1) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this.length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this.length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = void 0;\n            // If the host is an element container, the native host element is guaranteed to be a\n            // comment and we can reuse that comment as anchor element for the new LContainer.\n            if (hostTNode.type === 4 /* ElementContainer */) {\n                commentNode = unwrapRNode(slotValue);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererCreateComment++;\n                commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            }\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostView, commentNode, hostTNode, true);\n            addToViewTree(hostView, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */ || hostTNode.type === 0 /* Container */ ||\n            hostTNode.type === 4 /* ElementContainer */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('8.0.0-rc.0+311.sha-2cdbe9b.with-local-changes');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = ɵɵdefineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /**\n         * @internal\n         * @nocollapse\n         */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$2 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providers[index] = data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable !== null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView$1(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView$1(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView$1(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode, text) { this.delegate.setValue(renderNode, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey = depDef.tokenKey;\n        if (tokenKey === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(ɵɵinject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue, flags) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, flags);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue, flags);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            // The component definition does not include the wildcard ('*') selector in its list.\n            // It is implicitly expected as the first item in the projectable nodes array.\n            _this.ngContentSelectors =\n                componentDef.ngContentSelectors ? __spread(['*'], componentDef.ngContentSelectors) : [];\n            _this.isBoundToModule = !!ngModule;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 64 /* Dirty */ | 512 /* IsRoot */ :\n                16 /* CheckAlways */ | 512 /* IsRoot */;\n            // Check whether this Component needs to be isolated from other components, i.e. whether it\n            // should be placed into its own (empty) root context or existing root context should be used.\n            // Note: this is internal-only convention and might change in the future, so it should not be\n            // relied upon externally.\n            var isIsolated = typeof rootSelectorOrNode === 'string' &&\n                /^#root-ng-internal-isolated-\\d+/.test(rootSelectorOrNode);\n            var rootContext = (isInternalRootView || isIsolated) ?\n                createRootContext() :\n                rootViewInjector.get(ROOT_CONTEXT);\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null, null), rootContext, rootFlags, null, null, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                if (projectableNodes) {\n                    // projectable nodes can be passed as array of arrays or an array of iterables (ngUpgrade\n                    // case). Here we do normalize passed data structure to be an array of arrays to avoid\n                    // complex checks down the line.\n                    tElementNode.projection =\n                        projectableNodes.map(function (nodesforSlot) { return Array.from(nodesforSlot); });\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef, _super);\n        function ComponentRef(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = assignTViewNodeToLView(_rootLView[TVIEW], null, -1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            !this.hostView.destroyed && this.hostView.destroy();\n        };\n        ComponentRef.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * NOTE: changes to the `ngI18nClosureMode` name must be synced with `compiler-cli/src/tooling.ts`.\n     */\n    if (typeof ngI18nClosureMode === 'undefined') {\n        // These property accesses can be ignored because ngI18nClosureMode will be set to false\n        // when optimizing code and the whole if statement will be dropped.\n        // Make sure to refer to ngI18nClosureMode as ['ngI18nClosureMode'] for closure.\n        // tslint:disable-next-line:no-toplevel-property-access\n        _global['ngI18nClosureMode'] =\n            // TODO(FW-1250): validate that this actually, you know, works.\n            // tslint:disable-next-line:no-toplevel-property-access\n            typeof goog !== 'undefined' && typeof goog.getMsg === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n    * Equivalent to ES6 spread, add each item to an array.\n    *\n    * @param items The items to add\n    * @param arr The array to which you want to add the items\n    */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Flattens an array.\n     */\n    function flatten(list, dst) {\n        if (dst === undefined)\n            dst = list;\n        for (var i = 0; i < list.length; i++) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                // we need to inline it.\n                if (dst === list) {\n                    // Our assumption that the list was already flat was wrong and\n                    // we need to clone flat since we need to write to it.\n                    dst = list.slice(0, i);\n                }\n                flatten(item, dst);\n            }\n            else if (dst !== list) {\n                dst.push(item);\n            }\n        }\n        return dst;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEXP = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostprocess consts\n    var ROOT_TEMPLATE_ID = 0;\n    var PP_MULTI_VALUE_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]/;\n    var PP_PLACEHOLDERS_REGEXP = /\\[(�.+?�?)\\]|(�\\/?\\*\\d+:\\d+�)/g;\n    var PP_ICU_VARS_REGEXP = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS_REGEXP = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    var PP_CLOSE_TEMPLATE_REGEXP = /\\/\\*/;\n    var PP_TEMPLATE_ID_REGEXP = /\\d+\\:(\\d+)/;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEXP.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEXP, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    // Count for the number of vars that will be allocated for each i18n block.\n    // It is global because this is used in multiple functions that include loops and recursive calls.\n    // This is reset to 0 when `i18nStartFirstPass` is called.\n    var i18nVarsCount;\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var startIndex = tView.blueprint.length - HEADER_OFFSET;\n        i18nVarsCount = 0;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[T_HOST] ? parentTNode.index - HEADER_OFFSET : index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = extractParts(value);\n                for (var j = 0; j < parts.length; j++) {\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        var icuNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', icuNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parts[j];\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (parts[j] !== '') {\n                        var text = parts[j];\n                        // Even indexes are text (including bindings)\n                        var hasBinding = text.match(BINDING_REGEXP);\n                        // Create text nodes\n                        var textNodeIndex = startIndex + i18nVarsCount++;\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : text, textNodeIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(text, textNodeIndex), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        allocExpando(viewData, i18nVarsCount);\n        ngDevMode &&\n            attachI18nOpCodesDebug(createOpCodes, updateOpCodes, icuExpressions.length ? icuExpressions : null, viewData);\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: i18nVarsCount,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var nextNode = tNode.next;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // Re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[T_HOST]) {\n            tNode.parent = parentTNode;\n        }\n        // If tNode was moved around, we might need to fix a broken link.\n        var cursor = tNode.next;\n        while (cursor) {\n            if (cursor.next === tNode) {\n                cursor.next = nextNode;\n            }\n            cursor = cursor.next;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nPostprocess(message, replacements) {\n        if (replacements === void 0) { replacements = {}; }\n        /**\n         * Step 1: resolve all multi-value placeholders like [�#5�|�*1:1��#2:1�|�#4:1�]\n         *\n         * Note: due to the way we process nested templates (BFS), multi-value placeholders are typically\n         * grouped by templates, for example: [�#5�|�#6�|�#1:1�|�#3:2�] where �#5� and �#6� belong to root\n         * template, �#1:1� belong to nested template with index 1 and �#1:2� - nested template with index\n         * 3. However in real templates the order might be different: i.e. �#1:1� and/or �#3:2� may go in\n         * front of �#6�. The post processing step restores the right order by keeping track of the\n         * template id stack and looks for placeholders that belong to the currently active template.\n         */\n        var result = message;\n        if (PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)) {\n            var matches_1 = {};\n            var templateIdsStack_1 = [ROOT_TEMPLATE_ID];\n            result = result.replace(PP_PLACEHOLDERS_REGEXP, function (m, phs, tmpl) {\n                var content = phs || tmpl;\n                if (!matches_1[content]) {\n                    var placeholders_1 = [];\n                    content.split('|').forEach(function (placeholder) {\n                        var match = placeholder.match(PP_TEMPLATE_ID_REGEXP);\n                        var templateId = match ? parseInt(match[1], 10) : ROOT_TEMPLATE_ID;\n                        var isCloseTemplateTag = PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);\n                        placeholders_1.push([templateId, isCloseTemplateTag, placeholder]);\n                    });\n                    matches_1[content] = placeholders_1;\n                }\n                if (!matches_1[content].length) {\n                    throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n                }\n                var currentTemplateId = templateIdsStack_1[templateIdsStack_1.length - 1];\n                var placeholders = matches_1[content];\n                var idx = 0;\n                // find placeholder index that matches current template id\n                for (var i = 0; i < placeholders.length; i++) {\n                    if (placeholders[i][0] === currentTemplateId) {\n                        idx = i;\n                        break;\n                    }\n                }\n                // update template id stack based on the current tag extracted\n                var _a = __read(placeholders[idx], 3), templateId = _a[0], isCloseTemplateTag = _a[1], placeholder = _a[2];\n                if (isCloseTemplateTag) {\n                    templateIdsStack_1.pop();\n                }\n                else if (currentTemplateId !== templateId) {\n                    templateIdsStack_1.push(templateId);\n                }\n                // remove processed tag from the list\n                placeholders.splice(idx, 1);\n                return placeholder;\n            });\n            // verify that we injected all values\n            var hasUnmatchedValues = Object.keys(matches_1).some(function (key) { return !!matches_1[key].length; });\n            if (hasUnmatchedValues) {\n                throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches_1));\n            }\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        /**\n         * Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n         */\n        result = result.replace(PP_ICU_VARS_REGEXP, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        /**\n         * Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�) in case\n         * multiple ICUs have the same placeholder name\n         */\n        result = result.replace(PP_ICUS_REGEXP, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // Find the last node that was added before `i18nEnd`\n        var lastCreatedNode = getPreviousOrParentTNode();\n        // Read the instructions to insert/move/remove DOM elements\n        var visitedNodes = readCreateOpCodes(rootIndex, tI18n.create, tI18n.icus, viewData);\n        // Remove deleted nodes\n        for (var i = rootIndex + 1; i <= lastCreatedNode.index - HEADER_OFFSET; i++) {\n            if (visitedNodes.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    /**\n     * Creates and stores the dynamic TNode, and unhooks it from the tree for now.\n     */\n    function createDynamicNodeAtIndex(index, type, native, name) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tNode = createNodeAtIndex(index, type, native, name, null);\n        // We are creating a dynamic node, the previous tNode might not be pointing at this node.\n        // We will link ourselves into the tree later with `appendI18nNode`.\n        if (previousOrParentTNode.next === tNode) {\n            previousOrParentTNode.next = null;\n        }\n        return tNode;\n    }\n    function readCreateOpCodes(index, createOpCodes, icus, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedNodes = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                var textNodeIndex = createOpCodes[++i];\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode = createDynamicNodeAtIndex(textNodeIndex, 3 /* Element */, textRNode, null);\n                visitedNodes.push(textNodeIndex);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[T_HOST];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedNodes.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        ɵɵelementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        var commentNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(commentNodeIndex, 5 /* IcuContainer */, commentRNode, null);\n                        visitedNodes.push(commentNodeIndex);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        var elementNodeIndex = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createDynamicNodeAtIndex(elementNodeIndex, 3 /* Element */, elementRNode, tagNameValue);\n                        visitedNodes.push(elementNodeIndex);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedNodes;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += renderStringify(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            var tIcuIndex = void 0;\n                            var tIcu = void 0;\n                            var icuTNode = void 0;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    ɵɵelementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    ɵɵtextBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], icus, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        if (removedPhRNode) {\n            nativeRemoveNode(viewData[RENDERER], removedPhRNode);\n        }\n        var slotValue = ɵɵload(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                nativeRemoveNode(viewData[RENDERER], lContainer[NATIVE]);\n            }\n        }\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18n(index, message, subTemplateIndex) {\n        ɵɵi18nStart(index, message, subTemplateIndex);\n        ɵɵi18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        ɵɵelementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     *\n     * @codeGenApi\n     */\n    function ɵɵi18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        // Adding the maximum possible of vars needed (based on the cases with the most vars)\n        i18nVarsCount += Math.max.apply(Math, __spread(vars));\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element = currentNode;\n                        var tagName = element.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, newIndex, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n    var TRANSLATIONS = {};\n    /**\n     * Set the configuration for `i18nLocalize`.\n     *\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function i18nConfigureLocalize(options) {\n        if (options === void 0) { options = {\n            translations: {}\n        }; }\n        TRANSLATIONS = options.translations;\n    }\n    var LOCALIZE_PH_REGEXP = /\\{\\$(.*?)\\}/g;\n    /**\n     * A goog.getMsg-like function for users that do not use Closure.\n     *\n     * This method is required as a *temporary* measure to prevent i18n tests from being blocked while\n     * running outside of Closure Compiler. This method will not be needed once runtime translation\n     * service support is introduced.\n     *\n     * @publicApi\n     * @deprecated this method is temporary & should not be used as it will be removed soon\n     */\n    function ɵɵi18nLocalize(input, placeholders) {\n        if (placeholders === void 0) { placeholders = {}; }\n        if (typeof TRANSLATIONS[input] !== 'undefined') { // to account for empty string\n            input = TRANSLATIONS[input];\n        }\n        return Object.keys(placeholders).length ?\n            input.replace(LOCALIZE_PH_REGEXP, function (match, key) { return placeholders[key] || ''; }) :\n            input;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing && existing.moduleType, factory.moduleType);\n        modules.set(id, factory);\n    }\n    function assertSameOrNotExisting(id, type, incoming) {\n        if (type && type !== incoming) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertSameOrNotExisting(id, existing, ngModuleType);\n        modules.set(id, ngModuleType);\n    }\n    function getRegisteredNgModuleType(id) {\n        return modules.get(id);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$1, _super);\n        function NgModuleRef$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = maybeUnwrapFn(ngModuleDef.bootstrap);\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders, stringify(ngModuleType));\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            var injector = this._r3Injector;\n            !injector.destroyed && injector.destroy();\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory, _super);\n        function NgModuleFactory(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory.prototype.create = function (parentInjector) {\n            var moduleType = this.moduleType;\n            var moduleRef = new NgModuleRef$1(moduleType, parentInjector);\n            var ngModuleDef = getNgModuleDef(moduleType);\n            ngModuleDef && ngModuleDef.id &&\n                registerNgModuleType(ngModuleDef.id, moduleType);\n            return moduleRef;\n        };\n        return NgModuleFactory;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        return noSideEffects(function () {\n            var _a;\n            var clazz = type;\n            // We determine whether a class has its own metadata by taking the metadata from the parent\n            // constructor and checking whether it's the same as the subclass metadata below. We can't use\n            // `hasOwnProperty` here because it doesn't work correctly in IE10 for static fields that are\n            // defined by TS. See https://github.com/angular/angular/pull/28439#issuecomment-459349218.\n            var parentPrototype = clazz.prototype ? Object.getPrototypeOf(clazz.prototype) : null;\n            var parentConstructor = parentPrototype && parentPrototype.constructor;\n            if (decorators !== null) {\n                if (clazz.decorators !== undefined &&\n                    (!parentConstructor || parentConstructor.decorators !== clazz.decorators)) {\n                    (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n                }\n                else {\n                    clazz.decorators = decorators;\n                }\n            }\n            if (ctorParameters !== null) {\n                // Rather than merging, clobber the existing parameters. If other projects exist which use\n                // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n                // but that is vanishingly unlikely.\n                clazz.ctorParameters = ctorParameters;\n            }\n            if (propDecorators !== null) {\n                // The property decorator objects are merged as it is possible different fields have different\n                // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n                // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n                // decorator that's also been downleveled.\n                if (clazz.propDecorators !== undefined &&\n                    (!parentConstructor || parentConstructor.propDecorators !== clazz.propDecorators)) {\n                    clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n                }\n                else {\n                    clazz.propDecorators = propDecorators;\n                }\n            }\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     *\n     * @codeGenApi\n     */\n    function ɵɵpureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.destroyHooks || (tView.destroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     *\n     * @publicApi\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind1(index, slotOffset, v1) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ?\n            ɵɵpureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     *\n     * @codeGenApi\n     */\n    function ɵɵpipeBindV(index, slotOffset, values) {\n        var pipeInstance = ɵɵload(index);\n        return unwrapValue$1(isPure(index) ? ɵɵpureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue$1(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            var lView = getLView();\n            // The NO_CHANGE value needs to be written at the index where the impacted binding value is\n            // stored\n            var bindingToInvalidateIdx = lView[BINDING_INDEX];\n            lView[bindingToInvalidateIdx] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        /**\n         * Returns a copy of the internal results list as an Array.\n         */\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        /**\n         * Updates the stored data of the query list, and resets the `dirty` flag to `false`, so that\n         * on change detection, it will not notify of changes to the queries, unless a new change\n         * occurs.\n         *\n         * @param resultsTree The results tree to store\n         */\n        QueryList.prototype.reset = function (resultsTree) {\n            this._results = flatten(resultsTree);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        /**\n         * Triggers a change event by emitting on the `changes` {@link EventEmitter}.\n         */\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createLQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createLQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode, false);\n            add(this.shallow, tNode, false);\n        };\n        LQueries_.prototype.insertNodeBeforeViews = function (tNode) {\n            add(this.deep, tNode, true);\n            add(this.shallow, tNode, true);\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            query.containerValues.splice(index, 0, query.values);\n            // mark a query as dirty only when inserted view had matching modes\n            if (query.values.length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode && assertViewQueryhasPointerToDeclarationContainer(query);\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    function assertViewQueryhasPointerToDeclarationContainer(query) {\n        assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    /**\n     * Add query matches for a given node.\n     *\n     * @param query The first query in the linked list\n     * @param tNode The TNode to match against queries\n     * @param insertBeforeContainer Whether or not we should add matches before the last\n     * container array. This mode is necessary if the query container had to be created\n     * out of order (e.g. a view was created in a constructor)\n     */\n    function add(query, tNode, insertBeforeContainer) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result, insertBeforeContainer);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result, insertBeforeContainer);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue, insertBeforeViewMatches) {\n        // Views created in constructors may have their container values created too early. In this case,\n        // ensure template node results are unshifted before container results. Otherwise, results inside\n        // embedded views will appear before results on parent template nodes when flattened.\n        insertBeforeViewMatches ? query.values.unshift(matchingValue) : query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createLQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    /**\n     * Creates a QueryList and stores it in LView's collection of active queries (LQueries).\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function createQueryListInLView(\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    lView, predicate, descend, read, isStatic) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = lView[QUERIES] || (lView[QUERIES] = new LQueries_(null, null, null));\n        queryList._valuesTree = [];\n        queryList._static = isStatic;\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(lView, queryList, queryList.destroy);\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     *\n     * @returns `true` if a query got dirty during change detection or if this is a static query\n     * resolving in creation mode, `false` otherwise.\n     *\n     * @codeGenApi\n     */\n    function ɵɵqueryRefresh(queryList) {\n        var queryListImpl = queryList;\n        var creationMode = isCreationMode();\n        // if creation mode and static or update mode and not static\n        if (queryList.dirty && creationMode === queryListImpl._static) {\n            queryList.reset(queryListImpl._valuesTree || []);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Creates new QueryList for a static view query.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticViewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        viewQueryInternal(lView, tView, predicate, descend, read, true);\n        tView.staticViewQueries = true;\n    }\n    /**\n     * Creates new QueryList, stores the reference in LView and returns QueryList.\n     *\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵviewQuery(\n    // TODO(FW-486): \"read\" should be an AbstractType\n    predicate, descend, read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        return viewQueryInternal(lView, tView, predicate, descend, read, false);\n    }\n    function viewQueryInternal(lView, tView, predicate, descend, read, isStatic) {\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n        }\n        var index = getCurrentQueryIndex();\n        var queryList = createQueryListInLView(lView, predicate, descend, read, isStatic);\n        store(index - HEADER_OFFSET, queryList);\n        setCurrentQueryIndex(index + 1);\n        return queryList;\n    }\n    /**\n     * Loads current View Query and moves the pointer/index to the next View Query in LView.\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadViewQuery() {\n        var index = getCurrentQueryIndex();\n        setCurrentQueryIndex(index + 1);\n        return loadInternal(getLView(), index - HEADER_OFFSET);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵcontentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        return contentQueryInternal(lView, tView, directiveIndex, predicate, descend, read, false);\n    }\n    function contentQueryInternal(lView, tView, directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read, isStatic) {\n        var contentQuery = createQueryListInLView(lView, predicate, descend, read, isStatic);\n        (lView[CONTENT_QUERIES] || (lView[CONTENT_QUERIES] = [])).push(contentQuery);\n        if (tView.firstTemplatePass) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 1] : -1;\n            if (directiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(directiveIndex);\n            }\n        }\n        return contentQuery;\n    }\n    /**\n     * Registers a QueryList, associated with a static content query, for later refresh\n     * (part of a view refresh).\n     *\n     * @param directiveIndex Current directive index\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     *\n     * @codeGenApi\n     */\n    function ɵɵstaticContentQuery(directiveIndex, predicate, descend, \n    // TODO(FW-486): \"read\" should be an AbstractType\n    read) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        contentQueryInternal(lView, tView, directiveIndex, predicate, descend, read, true);\n        tView.staticContentQueries = true;\n    }\n    /**\n     *\n     * @codeGenApi\n     */\n    function ɵɵloadContentQuery() {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        var index = getCurrentQueryIndex();\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], index);\n        setCurrentQueryIndex(index + 1);\n        return lView[CONTENT_QUERIES][index];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     *\n     * @codeGenApi\n     */\n    function ɵɵtemplateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = (function () { return ({\n        'ɵɵattribute': ɵɵattribute,\n        'ɵɵattributeInterpolate1': ɵɵattributeInterpolate1,\n        'ɵɵattributeInterpolate2': ɵɵattributeInterpolate2,\n        'ɵɵattributeInterpolate3': ɵɵattributeInterpolate3,\n        'ɵɵattributeInterpolate4': ɵɵattributeInterpolate4,\n        'ɵɵattributeInterpolate5': ɵɵattributeInterpolate5,\n        'ɵɵattributeInterpolate6': ɵɵattributeInterpolate6,\n        'ɵɵattributeInterpolate7': ɵɵattributeInterpolate7,\n        'ɵɵattributeInterpolate8': ɵɵattributeInterpolate8,\n        'ɵɵattributeInterpolateV': ɵɵattributeInterpolateV,\n        'ɵɵdefineBase': ɵɵdefineBase,\n        'ɵɵdefineComponent': ɵɵdefineComponent,\n        'ɵɵdefineDirective': ɵɵdefineDirective,\n        'ɵɵdefineInjectable': ɵɵdefineInjectable,\n        'ɵɵdefineInjector': ɵɵdefineInjector,\n        'ɵɵdefineNgModule': ɵɵdefineNgModule,\n        'ɵɵdefinePipe': ɵɵdefinePipe,\n        'ɵɵdirectiveInject': ɵɵdirectiveInject,\n        'ɵɵgetFactoryOf': ɵɵgetFactoryOf,\n        'ɵɵgetInheritedFactory': ɵɵgetInheritedFactory,\n        'ɵɵinject': ɵɵinject,\n        'ɵɵinjectAttribute': ɵɵinjectAttribute,\n        'ɵɵtemplateRefExtractor': ɵɵtemplateRefExtractor,\n        'ɵɵNgOnChangesFeature': ɵɵNgOnChangesFeature,\n        'ɵɵProvidersFeature': ɵɵProvidersFeature,\n        'ɵɵInheritDefinitionFeature': ɵɵInheritDefinitionFeature,\n        'ɵɵelementAttribute': ɵɵelementAttribute,\n        'ɵɵbind': ɵɵbind,\n        'ɵɵcontainer': ɵɵcontainer,\n        'ɵɵnextContext': ɵɵnextContext,\n        'ɵɵcontainerRefreshStart': ɵɵcontainerRefreshStart,\n        'ɵɵcontainerRefreshEnd': ɵɵcontainerRefreshEnd,\n        'ɵɵnamespaceHTML': ɵɵnamespaceHTML,\n        'ɵɵnamespaceMathML': ɵɵnamespaceMathML,\n        'ɵɵnamespaceSVG': ɵɵnamespaceSVG,\n        'ɵɵenableBindings': ɵɵenableBindings,\n        'ɵɵdisableBindings': ɵɵdisableBindings,\n        'ɵɵallocHostVars': ɵɵallocHostVars,\n        'ɵɵelementStart': ɵɵelementStart,\n        'ɵɵelementEnd': ɵɵelementEnd,\n        'ɵɵelement': ɵɵelement,\n        'ɵɵelementContainerStart': ɵɵelementContainerStart,\n        'ɵɵelementContainerEnd': ɵɵelementContainerEnd,\n        'ɵɵpureFunction0': ɵɵpureFunction0,\n        'ɵɵpureFunction1': ɵɵpureFunction1,\n        'ɵɵpureFunction2': ɵɵpureFunction2,\n        'ɵɵpureFunction3': ɵɵpureFunction3,\n        'ɵɵpureFunction4': ɵɵpureFunction4,\n        'ɵɵpureFunction5': ɵɵpureFunction5,\n        'ɵɵpureFunction6': ɵɵpureFunction6,\n        'ɵɵpureFunction7': ɵɵpureFunction7,\n        'ɵɵpureFunction8': ɵɵpureFunction8,\n        'ɵɵpureFunctionV': ɵɵpureFunctionV,\n        'ɵɵgetCurrentView': ɵɵgetCurrentView,\n        'ɵɵrestoreView': ɵɵrestoreView,\n        'ɵɵinterpolation1': ɵɵinterpolation1,\n        'ɵɵinterpolation2': ɵɵinterpolation2,\n        'ɵɵinterpolation3': ɵɵinterpolation3,\n        'ɵɵinterpolation4': ɵɵinterpolation4,\n        'ɵɵinterpolation5': ɵɵinterpolation5,\n        'ɵɵinterpolation6': ɵɵinterpolation6,\n        'ɵɵinterpolation7': ɵɵinterpolation7,\n        'ɵɵinterpolation8': ɵɵinterpolation8,\n        'ɵɵinterpolationV': ɵɵinterpolationV,\n        'ɵɵlistener': ɵɵlistener,\n        'ɵɵload': ɵɵload,\n        'ɵɵprojection': ɵɵprojection,\n        'ɵɵelementProperty': ɵɵelementProperty,\n        'ɵɵcomponentHostSyntheticProperty': ɵɵcomponentHostSyntheticProperty,\n        'ɵɵcomponentHostSyntheticListener': ɵɵcomponentHostSyntheticListener,\n        'ɵɵpipeBind1': ɵɵpipeBind1,\n        'ɵɵpipeBind2': ɵɵpipeBind2,\n        'ɵɵpipeBind3': ɵɵpipeBind3,\n        'ɵɵpipeBind4': ɵɵpipeBind4,\n        'ɵɵpipeBindV': ɵɵpipeBindV,\n        'ɵɵprojectionDef': ɵɵprojectionDef,\n        'ɵɵproperty': ɵɵproperty,\n        'ɵɵpropertyInterpolate': ɵɵpropertyInterpolate,\n        'ɵɵpropertyInterpolate1': ɵɵpropertyInterpolate1,\n        'ɵɵpropertyInterpolate2': ɵɵpropertyInterpolate2,\n        'ɵɵpropertyInterpolate3': ɵɵpropertyInterpolate3,\n        'ɵɵpropertyInterpolate4': ɵɵpropertyInterpolate4,\n        'ɵɵpropertyInterpolate5': ɵɵpropertyInterpolate5,\n        'ɵɵpropertyInterpolate6': ɵɵpropertyInterpolate6,\n        'ɵɵpropertyInterpolate7': ɵɵpropertyInterpolate7,\n        'ɵɵpropertyInterpolate8': ɵɵpropertyInterpolate8,\n        'ɵɵpropertyInterpolateV': ɵɵpropertyInterpolateV,\n        'ɵɵpipe': ɵɵpipe,\n        'ɵɵqueryRefresh': ɵɵqueryRefresh,\n        'ɵɵviewQuery': ɵɵviewQuery,\n        'ɵɵstaticViewQuery': ɵɵstaticViewQuery,\n        'ɵɵstaticContentQuery': ɵɵstaticContentQuery,\n        'ɵɵloadViewQuery': ɵɵloadViewQuery,\n        'ɵɵcontentQuery': ɵɵcontentQuery,\n        'ɵɵloadContentQuery': ɵɵloadContentQuery,\n        'ɵɵreference': ɵɵreference,\n        'ɵɵelementHostAttrs': ɵɵelementHostAttrs,\n        'ɵɵclassMap': ɵɵclassMap,\n        'ɵɵstyling': ɵɵstyling,\n        'ɵɵstyleMap': ɵɵstyleMap,\n        'ɵɵstyleProp': ɵɵstyleProp,\n        'ɵɵstylingApply': ɵɵstylingApply,\n        'ɵɵclassProp': ɵɵclassProp,\n        'ɵɵselect': ɵɵselect,\n        'ɵɵtemplate': ɵɵtemplate,\n        'ɵɵtext': ɵɵtext,\n        'ɵɵtextBinding': ɵɵtextBinding,\n        'ɵɵembeddedViewStart': ɵɵembeddedViewStart,\n        'ɵɵembeddedViewEnd': ɵɵembeddedViewEnd,\n        'ɵɵi18n': ɵɵi18n,\n        'ɵɵi18nAttributes': ɵɵi18nAttributes,\n        'ɵɵi18nExp': ɵɵi18nExp,\n        'ɵɵi18nStart': ɵɵi18nStart,\n        'ɵɵi18nEnd': ɵɵi18nEnd,\n        'ɵɵi18nApply': ɵɵi18nApply,\n        'ɵɵi18nPostprocess': ɵɵi18nPostprocess,\n        'ɵɵi18nLocalize': ɵɵi18nLocalize,\n        'ɵɵresolveWindow': ɵɵresolveWindow,\n        'ɵɵresolveDocument': ɵɵresolveDocument,\n        'ɵɵresolveBody': ɵɵresolveBody,\n        'ɵɵsetComponentScope': ɵɵsetComponentScope,\n        'ɵɵsetNgModuleScope': ɵɵsetNgModuleScope,\n        'ɵɵsanitizeHtml': ɵɵsanitizeHtml,\n        'ɵɵsanitizeStyle': ɵɵsanitizeStyle,\n        'ɵɵdefaultStyleSanitizer': ɵɵdefaultStyleSanitizer,\n        'ɵɵsanitizeResourceUrl': ɵɵsanitizeResourceUrl,\n        'ɵɵsanitizeScript': ɵɵsanitizeScript,\n        'ɵɵsanitizeUrl': ɵɵsanitizeUrl,\n        'ɵɵsanitizeUrlOrResourceUrl': ɵɵsanitizeUrlOrResourceUrl,\n    }); })();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$3 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten(ngModule.bootstrap || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten(ngModule.imports || EMPTY_ARRAY$3)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten(ngModule.exports || EMPTY_ARRAY$3)\n                            .map(resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                        schemas: ngModule.schemas ? flatten(ngModule.schemas) : null,\n                        id: ngModule.id || null,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$3,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$3).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng:///\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        var declarations = maybeUnwrapFn(ngModuleDef.declarations);\n        var imports = maybeUnwrapFn(ngModuleDef.imports);\n        flatten(imports).map(unwrapModuleWithProvidersImports).forEach(verifySemanticsOfNgModuleDef);\n        var exports = maybeUnwrapFn(ngModuleDef.exports);\n        declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(declarations.map(resolveForwardRef), flatten(imports.map(computeCombinedExports)).map(resolveForwardRef));\n        exports.forEach(verifyExportsAreDeclaredOrReExported);\n        declarations.forEach(verifyDeclarationIsUnique);\n        declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten(ngModule.imports)\n                    .map(unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyCorrectBootstrapType);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringifyForError(type) + \"' declared by the module '\" + stringifyForError(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringifyForError(type) + \" from \" + stringifyForError(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringifyForError).sort();\n                errors.push(\"Type \" + stringifyForError(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringifyForError(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringifyForError(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringifyForError(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyCorrectBootstrapType(type) {\n            type = resolveForwardRef(type);\n            if (!getComponentDef(type)) {\n                errors.push(stringifyForError(type) + \" cannot be used as an entry component.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten(maybeUnwrapFn(ngModuleDef.exports).map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten(ngModule.declarations || EMPTY_ARRAY$3);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () {\n            return Array.from(transitiveScopes.compilation.directives)\n                .map(function (dir) { return dir.hasOwnProperty(NG_COMPONENT_DEF) ? getComponentDef(dir) :\n                getDirectiveDef(dir); })\n                .filter(function (def) { return !!def; });\n        };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n        componentDef.schemas = transitiveScopes.schemas;\n        // Since we avoid Components/Directives/Pipes recompiling in case there are no overrides, we\n        // may face a problem where previously compiled defs available to a given Component/Directive\n        // are cached in TView and may become stale (in case any of these defs gets recompiled). In\n        // order to avoid this problem, we force fresh TView to be created.\n        componentDef.tView = null;\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType, processNgModuleFn) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            schemas: def.schemas || null,\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        maybeUnwrapFn(def.declarations).forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        maybeUnwrapFn(def.imports).forEach(function (imported) {\n            var importedType = imported;\n            if (!isNgModule(importedType)) {\n                throw new Error(\"Importing \" + importedType.name + \" which does not have an ngModuleDef\");\n            }\n            if (processNgModuleFn) {\n                processNgModuleFn(importedType);\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedType, processNgModuleFn);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        maybeUnwrapFn(def.exports).forEach(function (exported) {\n            var exportedType = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedType)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedType, processNgModuleFn);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedType)) {\n                scopes.exported.pipes.add(exportedType);\n            }\n            else {\n                scopes.exported.directives.add(exportedType);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(type, metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + type.name + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + metadata.templateUrl);\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var templateUrl = metadata.templateUrl || \"ng:///\" + type.name + \"/template.html\";\n                    var meta = __assign({}, directiveMetadata(type, metadata), { typeSourceSpan: compiler.createParseSourceSpan('Component', type.name, templateUrl), template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY$1, animations: metadata.animations, directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    if (meta.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, templateUrl, meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so components are reachable through the module injector by default\n        // This is mostly to support injecting components in tests. In real application code,\n        // components should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var name_1 = type && type.name;\n                    var sourceMapUrl = \"ng:///\" + name_1 + \"/ngDirectiveDef.js\";\n                    var compiler = getCompilerFacade();\n                    var facade = directiveMetadata(type, directive);\n                    facade.typeSourceSpan = compiler.createParseSourceSpan('Directive', name_1, sourceMapUrl);\n                    if (facade.usesInheritance) {\n                        addBaseDefToUndecoratedParents(type);\n                    }\n                    ngDirectiveDef = compiler.compileDirective(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        // Add ngInjectableDef so directives are reachable through the module injector by default\n        // This is mostly to support injecting directives in tests. In real application code,\n        // directives should be retrieved through the node injector, so this isn't a problem.\n        compileInjectable(type);\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().ownPropMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY$1,\n            outputs: metadata.outputs || EMPTY_ARRAY$1,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: { usesOnChanges: type.prototype.hasOwnProperty('ngOnChanges') },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: extractExportAs(metadata.exportAs),\n            providers: metadata.providers || null,\n            viewQueries: extractQueriesMetadata(type, propMetadata, isViewQuery),\n        };\n    }\n    /**\n     * Adds an `ngBaseDef` to all parent classes of a type that don't have an Angular decorator.\n     */\n    function addBaseDefToUndecoratedParents(type) {\n        var objPrototype = Object.prototype;\n        var parent = Object.getPrototypeOf(type);\n        // Go up the prototype until we hit `Object`.\n        while (parent && parent !== objPrototype) {\n            // Since inheritance works if the class was annotated already, we only need to add\n            // the base def if there are no annotations and the base def hasn't been created already.\n            if (!getDirectiveDef(parent) && !getComponentDef(parent) && !getBaseDef(parent)) {\n                var facade = extractBaseDefMetadata(parent);\n                facade && compileBase(parent, facade);\n            }\n            parent = Object.getPrototypeOf(parent);\n        }\n    }\n    /** Compiles the base metadata into a base definition. */\n    function compileBase(type, facade) {\n        var ngBaseDef = null;\n        Object.defineProperty(type, NG_BASE_DEF, {\n            get: function () {\n                if (ngBaseDef === null) {\n                    var name_2 = type && type.name;\n                    var sourceMapUrl = \"ng://\" + name_2 + \"/ngBaseDef.js\";\n                    var compiler = getCompilerFacade();\n                    ngBaseDef = compiler.compileBase(angularCoreEnv, sourceMapUrl, facade);\n                }\n                return ngBaseDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /** Extracts the metadata necessary to construct an `ngBaseDef` from a class. */\n    function extractBaseDefMetadata(type) {\n        var propMetadata = getReflect().ownPropMetadata(type);\n        var viewQueries = extractQueriesMetadata(type, propMetadata, isViewQuery);\n        var queries = extractQueriesMetadata(type, propMetadata, isContentQuery);\n        var inputs;\n        var outputs;\n        // We only need to know whether there are any HostListener or HostBinding\n        // decorators present, the parsing logic is in the compiler already.\n        var hasHostDecorators = false;\n        var _loop_1 = function (field) {\n            propMetadata[field].forEach(function (ann) {\n                var metadataName = ann.ngMetadataName;\n                if (metadataName === 'Input') {\n                    inputs = inputs || {};\n                    inputs[field] = ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                }\n                else if (metadataName === 'Output') {\n                    outputs = outputs || {};\n                    outputs[field] = ann.bindingPropertyName || field;\n                }\n                else if (metadataName === 'HostBinding' || metadataName === 'HostListener') {\n                    hasHostDecorators = true;\n                }\n            });\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        // Only generate the base def if there's any info inside it.\n        if (inputs || outputs || viewQueries.length || queries.length || hasHostDecorators) {\n            return { name: type.name, inputs: inputs, outputs: outputs, viewQueries: viewQueries, queries: queries, propMetadata: propMetadata };\n        }\n        return null;\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null,\n            static: !!ann.static\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                var annotations_1 = propMetadata[field];\n                annotations_1.forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringifyForError(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        if (annotations_1.some(isInputAnn)) {\n                            throw new Error(\"Cannot combine @Input decorators with query decorators\");\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return queriesMeta;\n    }\n    function extractExportAs(exportAs) {\n        if (exportAs === undefined) {\n            return null;\n        }\n        return exportAs.split(',').map(function (part) { return part.trim(); });\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function isInputAnn(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var typeName = type.name;\n                    ngPipeDef =\n                        getCompilerFacade().compilePipe(angularCoreEnv, \"ng:///\" + typeName + \"/ngPipeDef.js\", {\n                            type: type,\n                            typeArgumentCount: 0,\n                            name: typeName,\n                            deps: reflectDependencies(type),\n                            pipeName: meta.name,\n                            pure: meta.pure !== undefined ? meta.pure : true\n                        });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__POST_R3__;\n\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__POST_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationInitStatus, factory: function ApplicationInitStatus_Factory(t) { return new (t || ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER, 8)); }, providedIn: null });\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console.ngInjectableDef = ɵɵdefineInjectable({ token: Console, factory: function Console_Factory(t) { return new (t || Console)(); }, providedIn: null });\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__POST_R3__;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        var ngModuleFactory = Compiler_compileModuleSync__POST_R3__(moduleType);\n        var moduleDef = getNgModuleDef(moduleType);\n        var componentFactories = maybeUnwrapFn(moduleDef.declarations)\n            .reduce(function (factories, declaration) {\n            var componentDef = getComponentDef(declaration);\n            componentDef && factories.push(new ComponentFactory$1(componentDef));\n            return factories;\n        }, []);\n        return new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler.ngInjectableDef = ɵɵdefineInjectable({ token: Compiler, factory: function Compiler_Factory(t) { return new (t || Compiler)(); }, providedIn: null });\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var promise = (function () { return Promise.resolve(0); })();\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability.ngInjectableDef = ɵɵdefineInjectable({ token: Testability, factory: function Testability_Factory(t) { return new (t || Testability)(ɵɵinject(NgZone)); }, providedIn: null });\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry.ngInjectableDef = ɵɵdefineInjectable({ token: TestabilityRegistry, factory: function TestabilityRegistry_Factory(t) { return new (t || TestabilityRegistry)(); }, providedIn: null });\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__POST_R3__;\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        var moduleFactory = new NgModuleFactory$1(moduleType);\n        if (isComponentResourceResolutionQueueEmpty()) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compilerOptions = injector.get(COMPILER_OPTIONS, []).concat(options);\n        var compilerProviders = _mergeArrays(compilerOptions.map(function (o) { return o.providers; }));\n        // In case there are no compiler providers, we just return the module factory as\n        // there won't be any resource loader. This can happen with Ivy, because AOT compiled\n        // modules can be still passed through \"bootstrapModule\". In that case we shouldn't\n        // unnecessarily require the JIT compiler.\n        if (compilerProviders.length === 0) {\n            return Promise.resolve(moduleFactory);\n        }\n        var compiler = getCompilerFacade();\n        var compilerInjector = Injector.create({ providers: compilerProviders });\n        var resourceLoader = compilerInjector.get(compiler.ResourceLoader);\n        // The resource loader can also return a string while the \"resolveComponentResources\"\n        // always expects a promise. Therefore we need to wrap the returned value in a promise.\n        return resolveComponentResources(function (url) { return Promise.resolve(resourceLoader.get(url)); })\n            .then(function () { return moduleFactory; });\n    }\n    var isBoundToModule = isBoundToModule__POST_R3__;\n    function isBoundToModule__POST_R3__(cf) {\n        return cf.isBoundToModule;\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef.ngInjectableDef = ɵɵdefineInjectable({ token: PlatformRef, factory: function PlatformRef_Factory(t) { return new (t || PlatformRef)(ɵɵinject(Injector)); }, providedIn: null });\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @usageNotes\n     *\n     * {@a is-stable-examples}\n     * ### isStable examples and caveats\n     *\n     * Note two important points about `isStable`, demonstrated in the examples below:\n     * - the application will never be stable if you start any kind\n     * of recurrent asynchronous task when the application starts\n     * (for example for a polling process, started with a `setInterval`, a `setTimeout`\n     * or using RxJS operators like `interval`);\n     * - the `isStable` Observable runs outside of the Angular zone.\n     *\n     * Let's imagine that you start a recurrent task\n     * (here incrementing a counter, using RxJS `interval`),\n     * and at the same time subscribe to `isStable`.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *      filter(stable => stable)\n     *   ).subscribe(() => console.log('App is stable now');\n     *   interval(1000).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, `isStable` will never emit `true`,\n     * and the trace \"App is stable now\" will never get logged.\n     *\n     * If you want to execute something when the app is stable,\n     * you have to wait for the application to be stable\n     * before starting your polling process.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     tap(stable => console.log('App is stable now')),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => console.log(counter));\n     * }\n     * ```\n     * In this example, the trace \"App is stable now\" will be logged\n     * and then the counter starts incrementing every second.\n     *\n     * Note also that this Observable runs outside of the Angular zone,\n     * which means that the code in the subscription\n     * to this Observable will not trigger the change detection.\n     *\n     * Let's imagine that instead of logging the counter value,\n     * you update a field of your component\n     * and display it in its template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => this.value = counter);\n     * }\n     * ```\n     * As the `isStable` Observable runs outside the zone,\n     * the `value` field will be updated properly,\n     * but the template will not be refreshed!\n     *\n     * You'll have to manually trigger the change detection to update the template.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, cd: ChangeDetectorRef) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => {\n     *     this.value = counter;\n     *     cd.detectChanges();\n     *   });\n     * }\n     * ```\n     *\n     * Or make the subscription callback run inside the zone.\n     *\n     * ```\n     * constructor(appRef: ApplicationRef, zone: NgZone) {\n     *   appRef.isStable.pipe(\n     *     first(stable => stable),\n     *     switchMap(() => interval(1000))\n     *   ).subscribe(counter => zone.run(() => this.value = counter));\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = isBoundToModule(componentFactory) ? null : this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            var e_1, _a, e_2, _b;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef._tickScope();\n            try {\n                this._runningTick = true;\n                try {\n                    for (var _c = __values(this._views), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var view = _d.value;\n                        view.detectChanges();\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (this._enforceNoNewChanges) {\n                    try {\n                        for (var _e = __values(this._views), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var view = _f.value;\n                            view.checkNoChanges();\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef.ngInjectableDef = ɵɵdefineInjectable({ token: ApplicationRef, factory: function ApplicationRef_Factory(t) { return new (t || ApplicationRef)(ɵɵinject(NgZone), ɵɵinject(Console), ɵɵinject(Injector), ɵɵinject(ErrorHandler), ɵɵinject(ComponentFactoryResolver), ɵɵinject(ApplicationInitStatus)); }, providedIn: null });\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n    function _mergeArrays(parts) {\n        var result = [];\n        parts.forEach(function (part) { return part && result.push.apply(result, __spread(part)); });\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `NgModuleFactoryLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    function getModuleFactory__POST_R3__(id) {\n        var type = getRegisteredNgModuleType(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__POST_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var ivyEnabled = SWITCH_IVY_ENABLED__POST_R3__;\n\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoaderConfig`\n     * is part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     * @deprecated the `string` form of `loadChildren` is deprecated, and `SystemJsNgModuleLoader` is\n     * part of its implementation. See `LoadChildren` for more details.\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var legacyOfflineMode = !ivyEnabled && this._compiler instanceof Compiler;\n            return legacyOfflineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader.ngInjectableDef = ɵɵdefineInjectable({ token: SystemJsNgModuleLoader, factory: function SystemJsNgModuleLoader_Factory(t) { return new (t || SystemJsNgModuleLoader)(ɵɵinject(Compiler), ɵɵinject(SystemJsNgModuleLoaderConfig, 8)); }, providedIn: null });\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @publicApi\n     */\n    var DebugEventListener = /** @class */ (function () {\n        function DebugEventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return DebugEventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement &&\n                    (getComponent(nativeElement) || getViewComponent(nativeElement));\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext$1(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            /**\n             *  Gets a map of property names to property values for an element.\n             *\n             *  This map includes:\n             *  - Regular property bindings (e.g. `[id]=\"id\"`)\n             *  - Host property bindings (e.g. `host: { '[id]': \"id\" }`)\n             *  - Interpolated property bindings (e.g. `id=\"{{ value }}\")\n             *\n             *  It does not include:\n             *  - input property bindings (e.g. `[myCustomInput]=\"value\"`)\n             *  - attribute bindings (e.g. `[attr.role]=\"menu\"`)\n             */\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tData = lView[TVIEW].data;\n                var tNode = tData[context.nodeIndex];\n                var properties = collectPropertyBindings(tNode, lView, tData);\n                var hostProperties = collectHostPropertyBindings(tNode, lView, tData);\n                var className = collectClassNames(this);\n                var output = __assign({}, properties, hostProperties);\n                if (className) {\n                    output['className'] = output['className'] ? output['className'] + (\" \" + className) : className;\n                }\n                return output;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(stylingContext, i)) {\n                                var className = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var stylingContext = getStylingContextFromLView(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 10 /* SingleStylesStartPosition */; i < stylingContext.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(stylingContext, i)) {\n                                var styleName = getProp(stylingContext, i);\n                                var value = getValue(stylingContext, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryAllR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    /**\n     * Walk the TNode tree to find matches for the predicate.\n     *\n     * @param parentElement the element from which the walk is started\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     */\n    function _queryAllR3(parentElement, predicate, matches, elementsOnly) {\n        var context = loadLContext(parentElement.nativeNode);\n        var parentTNode = context.lView[TVIEW].data[context.nodeIndex];\n        _queryNodeChildrenR3(parentTNode, context.lView, predicate, matches, elementsOnly, parentElement.nativeNode);\n    }\n    /**\n     * Recursively match the current TNode against the predicate, and goes on with the next ones.\n     *\n     * @param tNode the current TNode\n     * @param lView the LView of this TNode\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenR3(tNode, lView, predicate, matches, elementsOnly, rootNativeNode) {\n        var e_1, _a;\n        // For each type of TNode, specific logic is executed.\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            // Case 1: the TNode is an element\n            // The native node has to be checked.\n            _addQueryMatchR3(getNativeByTNode(tNode, lView), predicate, matches, elementsOnly, rootNativeNode);\n            if (isComponent(tNode)) {\n                // If the element is the host of a component, then all nodes in its view have to be processed.\n                // Note: the component's content (tNode.child) will be processed from the insertion points.\n                var componentView = getComponentViewByIndex(tNode.index, lView);\n                if (componentView && componentView[TVIEW].firstChild)\n                    _queryNodeChildrenR3(componentView[TVIEW].firstChild, componentView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            else {\n                // Otherwise, its children have to be processed.\n                if (tNode.child)\n                    _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n            // In all cases, if a dynamic container exists for this node, each view inside it has to be\n            // processed.\n            var nodeOrContainer = lView[tNode.index];\n            if (isLContainer(nodeOrContainer)) {\n                _queryNodeChildrenInContainerR3(nodeOrContainer, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        else if (tNode.type === 0 /* Container */) {\n            // Case 2: the TNode is a container\n            // The native node has to be checked.\n            var lContainer = lView[tNode.index];\n            _addQueryMatchR3(lContainer[NATIVE], predicate, matches, elementsOnly, rootNativeNode);\n            // Each view inside the container has to be processed.\n            _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode);\n        }\n        else if (tNode.type === 1 /* Projection */) {\n            // Case 3: the TNode is a projection insertion point (i.e. a <ng-content>).\n            // The nodes projected at this location all need to be processed.\n            var componentView = findComponentView(lView);\n            var componentHost = componentView[T_HOST];\n            var head = componentHost.projection[tNode.projection];\n            if (Array.isArray(head)) {\n                try {\n                    for (var head_1 = __values(head), head_1_1 = head_1.next(); !head_1_1.done; head_1_1 = head_1.next()) {\n                        var nativeNode = head_1_1.value;\n                        _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (head_1_1 && !head_1_1.done && (_a = head_1.return)) _a.call(head_1);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            else {\n                if (head) {\n                    var nextLView = componentView[PARENT];\n                    var nextTNode_1 = nextLView[TVIEW].data[head.index];\n                    _queryNodeChildrenR3(nextTNode_1, nextLView, predicate, matches, elementsOnly, rootNativeNode);\n                }\n            }\n        }\n        else {\n            // Case 4: the TNode is a view.\n            if (tNode.child) {\n                _queryNodeChildrenR3(tNode.child, lView, predicate, matches, elementsOnly, rootNativeNode);\n            }\n        }\n        // To determine the next node to be processed, we need to use the next or the projectionNext link,\n        // depending on whether the current node has been projected.\n        var nextTNode = (tNode.flags & 2 /* isProjected */) ? tNode.projectionNext : tNode.next;\n        if (nextTNode) {\n            _queryNodeChildrenR3(nextTNode, lView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Process all TNodes in a given container.\n     *\n     * @param lContainer the container to be processed\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _queryNodeChildrenInContainerR3(lContainer, predicate, matches, elementsOnly, rootNativeNode) {\n        for (var i = CONTAINER_HEADER_OFFSET; i < lContainer.length; i++) {\n            var childView = lContainer[i];\n            _queryNodeChildrenR3(childView[TVIEW].node, childView, predicate, matches, elementsOnly, rootNativeNode);\n        }\n    }\n    /**\n     * Match the current native node against the predicate.\n     *\n     * @param nativeNode the current native node\n     * @param predicate the predicate to match\n     * @param matches the list of positive matches\n     * @param elementsOnly whether only elements should be searched\n     * @param rootNativeNode the root native node on which prediccate shouold not be matched\n     */\n    function _addQueryMatchR3(nativeNode, predicate, matches, elementsOnly, rootNativeNode) {\n        if (rootNativeNode !== nativeNode) {\n            var debugNode = getDebugNode(nativeNode);\n            if (debugNode && (elementsOnly ? debugNode instanceof DebugElement__POST_R3__ : true) &&\n                predicate(debugNode)) {\n                matches.push(debugNode);\n            }\n        }\n    }\n    /**\n     * Iterates through the property bindings for a given node and generates\n     * a map of property names to values. This map only contains property bindings\n     * defined in templates, not in host bindings.\n     */\n    function collectPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        var bindingIndex = getFirstBindingIndex(tNode.propertyMetadataStartIndex, tData);\n        while (bindingIndex < tNode.propertyMetadataEndIndex) {\n            var value = void 0;\n            var propMetadata = tData[bindingIndex];\n            while (!isPropMetadataString(propMetadata)) {\n                // This is the first value for an interpolation. We need to build up\n                // the full interpolation by combining runtime values in LView with\n                // the static interstitial values stored in TData.\n                value = (value || '') + renderStringify(lView[bindingIndex]) + tData[bindingIndex];\n                propMetadata = tData[++bindingIndex];\n            }\n            value = value === undefined ? lView[bindingIndex] : value += lView[bindingIndex];\n            // Property metadata string has 3 parts: property name, prefix, and suffix\n            var metadataParts = propMetadata.split(INTERPOLATION_DELIMITER);\n            var propertyName = metadataParts[0];\n            // Attr bindings don't have property names and should be skipped\n            if (propertyName) {\n                // Wrap value with prefix and suffix (will be '' for normal bindings), if they're defined.\n                // Avoid wrapping for normal bindings so that the value doesn't get cast to a string.\n                properties[propertyName] = (metadataParts[1] && metadataParts[2]) ?\n                    metadataParts[1] + value + metadataParts[2] :\n                    value;\n            }\n            bindingIndex++;\n        }\n        return properties;\n    }\n    /**\n     * Retrieves the first binding index that holds values for this property\n     * binding.\n     *\n     * For normal bindings (e.g. `[id]=\"id\"`), the binding index is the\n     * same as the metadata index. For interpolations (e.g. `id=\"{{id}}-{{name}}\"`),\n     * there can be multiple binding values, so we might have to loop backwards\n     * from the metadata index until we find the first one.\n     *\n     * @param metadataIndex The index of the first property metadata string for\n     * this node.\n     * @param tData The data array for the current TView\n     * @returns The first binding index for this binding\n     */\n    function getFirstBindingIndex(metadataIndex, tData) {\n        var currentBindingIndex = metadataIndex - 1;\n        // If the slot before the metadata holds a string, we know that this\n        // metadata applies to an interpolation with at least 2 bindings, and\n        // we need to search further to access the first binding value.\n        var currentValue = tData[currentBindingIndex];\n        // We need to iterate until we hit either a:\n        // - TNode (it is an element slot marking the end of `consts` section), OR a\n        // - metadata string (slot is attribute metadata or a previous node's property metadata)\n        while (typeof currentValue === 'string' && !isPropMetadataString(currentValue)) {\n            currentValue = tData[--currentBindingIndex];\n        }\n        return currentBindingIndex + 1;\n    }\n    function collectHostPropertyBindings(tNode, lView, tData) {\n        var properties = {};\n        // Host binding values for a node are stored after directives on that node\n        var hostPropIndex = tNode.directiveEnd;\n        var propMetadata = tData[hostPropIndex];\n        // When we reach a value in TView.data that is not a string, we know we've\n        // hit the next node's providers and directives and should stop copying data.\n        while (typeof propMetadata === 'string') {\n            var propertyName = propMetadata.split(INTERPOLATION_DELIMITER)[0];\n            properties[propertyName] = lView[hostPropIndex];\n            propMetadata = tData[++hostPropIndex];\n        }\n        return properties;\n    }\n    function collectClassNames(debugElement) {\n        var e_2, _a;\n        var classes = debugElement.classes;\n        var output = '';\n        try {\n            for (var _b = __values(Object.keys(classes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var className = _c.value;\n                if (classes[className]) {\n                    output = output ? output + (\" \" + className) : className;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return output;\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__POST_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS$1 = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        { provide: SCHEDULER, deps: [NgZone], useFactory: zoneSchedulerFactory },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Schedule work at next available slot.\n     *\n     * In Ivy this is just `requestAnimationFrame`. For compatibility reasons when bootstrapped\n     * using `platformRef.bootstrap` we need to use `NgZone.onStable` as the scheduling mechanism.\n     * This overrides the scheduling mechanism in Ivy to `NgZone.onStable`.\n     *\n     * @param ngZone NgZone to use for scheduling.\n     */\n    function zoneSchedulerFactory(ngZone) {\n        var queue = [];\n        ngZone.onStable.subscribe(function () {\n            while (queue.length) {\n                queue.pop()();\n            }\n        });\n        return function (fn) { queue.push(fn); };\n    }\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule.ngModuleDef = ɵɵdefineNgModule({ type: ApplicationModule });\n        ApplicationModule.ngInjectorDef = ɵɵdefineInjector({ factory: function ApplicationModule_Factory(t) { return new (t || ApplicationModule)(ɵɵinject(ApplicationRef)); }, providers: APPLICATION_MODULE_PROVIDERS });\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        var _a;\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode, name);\n        }\n        else {\n            renderer.removeClass(renderNode, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery() {\n        return new QueryList();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode;\n        var renderer = view.renderer;\n        renderNode = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode);\n        }\n        return { renderText: renderNode };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef = overrideComponentView;\n        }\n        else {\n            viewDef = applyProviderOverridesToView(viewDef);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef, elIndex) {\n            for (var i = elIndex + 1; i < viewDef.nodes.length; i++) {\n                var nodeDef = viewDef.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new DebugEventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugEventListener = DebugEventListener;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS$1;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.Attribute = Attribute;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.NgModule = NgModule;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.ɵɵdefineInjectable = ɵɵdefineInjectable;\n    exports.defineInjectable = defineInjectable;\n    exports.ɵɵdefineInjector = ɵɵdefineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.Injector = Injector;\n    exports.ɵɵinject = ɵɵinject;\n    exports.inject = inject;\n    exports.INJECTOR = INJECTOR;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵclearResolutionOfComponentResourcesQueue = clearResolutionOfComponentResourcesQueue;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ɵɵattribute = ɵɵattribute;\n    exports.ɵɵattributeInterpolate1 = ɵɵattributeInterpolate1;\n    exports.ɵɵattributeInterpolate2 = ɵɵattributeInterpolate2;\n    exports.ɵɵattributeInterpolate3 = ɵɵattributeInterpolate3;\n    exports.ɵɵattributeInterpolate4 = ɵɵattributeInterpolate4;\n    exports.ɵɵattributeInterpolate5 = ɵɵattributeInterpolate5;\n    exports.ɵɵattributeInterpolate6 = ɵɵattributeInterpolate6;\n    exports.ɵɵattributeInterpolate7 = ɵɵattributeInterpolate7;\n    exports.ɵɵattributeInterpolate8 = ɵɵattributeInterpolate8;\n    exports.ɵɵattributeInterpolateV = ɵɵattributeInterpolateV;\n    exports.ɵɵdefineBase = ɵɵdefineBase;\n    exports.ɵɵdefineComponent = ɵɵdefineComponent;\n    exports.ɵɵdefineDirective = ɵɵdefineDirective;\n    exports.ɵɵdefinePipe = ɵɵdefinePipe;\n    exports.ɵɵdefineNgModule = ɵɵdefineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵɵdirectiveInject = ɵɵdirectiveInject;\n    exports.ɵɵinjectAttribute = ɵɵinjectAttribute;\n    exports.ɵɵgetFactoryOf = ɵɵgetFactoryOf;\n    exports.ɵɵgetInheritedFactory = ɵɵgetInheritedFactory;\n    exports.ɵɵsetComponentScope = ɵɵsetComponentScope;\n    exports.ɵɵsetNgModuleScope = ɵɵsetNgModuleScope;\n    exports.ɵɵtemplateRefExtractor = ɵɵtemplateRefExtractor;\n    exports.ɵɵProvidersFeature = ɵɵProvidersFeature;\n    exports.ɵɵInheritDefinitionFeature = ɵɵInheritDefinitionFeature;\n    exports.ɵɵNgOnChangesFeature = ɵɵNgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵɵcontainer = ɵɵcontainer;\n    exports.ɵɵnextContext = ɵɵnextContext;\n    exports.ɵɵelementStart = ɵɵelementStart;\n    exports.ɵɵnamespaceHTML = ɵɵnamespaceHTML;\n    exports.ɵɵnamespaceMathML = ɵɵnamespaceMathML;\n    exports.ɵɵnamespaceSVG = ɵɵnamespaceSVG;\n    exports.ɵɵelement = ɵɵelement;\n    exports.ɵɵlistener = ɵɵlistener;\n    exports.ɵɵtext = ɵɵtext;\n    exports.ɵɵembeddedViewStart = ɵɵembeddedViewStart;\n    exports.ɵɵprojection = ɵɵprojection;\n    exports.ɵɵbind = ɵɵbind;\n    exports.ɵɵinterpolation1 = ɵɵinterpolation1;\n    exports.ɵɵinterpolation2 = ɵɵinterpolation2;\n    exports.ɵɵinterpolation3 = ɵɵinterpolation3;\n    exports.ɵɵinterpolation4 = ɵɵinterpolation4;\n    exports.ɵɵinterpolation5 = ɵɵinterpolation5;\n    exports.ɵɵinterpolation6 = ɵɵinterpolation6;\n    exports.ɵɵinterpolation7 = ɵɵinterpolation7;\n    exports.ɵɵinterpolation8 = ɵɵinterpolation8;\n    exports.ɵɵinterpolationV = ɵɵinterpolationV;\n    exports.ɵɵpipeBind1 = ɵɵpipeBind1;\n    exports.ɵɵpipeBind2 = ɵɵpipeBind2;\n    exports.ɵɵpipeBind3 = ɵɵpipeBind3;\n    exports.ɵɵpipeBind4 = ɵɵpipeBind4;\n    exports.ɵɵpipeBindV = ɵɵpipeBindV;\n    exports.ɵɵpureFunction0 = ɵɵpureFunction0;\n    exports.ɵɵpureFunction1 = ɵɵpureFunction1;\n    exports.ɵɵpureFunction2 = ɵɵpureFunction2;\n    exports.ɵɵpureFunction3 = ɵɵpureFunction3;\n    exports.ɵɵpureFunction4 = ɵɵpureFunction4;\n    exports.ɵɵpureFunction5 = ɵɵpureFunction5;\n    exports.ɵɵpureFunction6 = ɵɵpureFunction6;\n    exports.ɵɵpureFunction7 = ɵɵpureFunction7;\n    exports.ɵɵpureFunction8 = ɵɵpureFunction8;\n    exports.ɵɵpureFunctionV = ɵɵpureFunctionV;\n    exports.ɵɵgetCurrentView = ɵɵgetCurrentView;\n    exports.ɵgetDirectives = getDirectives;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵɵrestoreView = ɵɵrestoreView;\n    exports.ɵɵcontainerRefreshStart = ɵɵcontainerRefreshStart;\n    exports.ɵɵcontainerRefreshEnd = ɵɵcontainerRefreshEnd;\n    exports.ɵɵqueryRefresh = ɵɵqueryRefresh;\n    exports.ɵɵviewQuery = ɵɵviewQuery;\n    exports.ɵɵstaticViewQuery = ɵɵstaticViewQuery;\n    exports.ɵɵstaticContentQuery = ɵɵstaticContentQuery;\n    exports.ɵɵloadViewQuery = ɵɵloadViewQuery;\n    exports.ɵɵcontentQuery = ɵɵcontentQuery;\n    exports.ɵɵloadContentQuery = ɵɵloadContentQuery;\n    exports.ɵɵelementEnd = ɵɵelementEnd;\n    exports.ɵɵelementProperty = ɵɵelementProperty;\n    exports.ɵɵproperty = ɵɵproperty;\n    exports.ɵɵpropertyInterpolate = ɵɵpropertyInterpolate;\n    exports.ɵɵpropertyInterpolate1 = ɵɵpropertyInterpolate1;\n    exports.ɵɵpropertyInterpolate2 = ɵɵpropertyInterpolate2;\n    exports.ɵɵpropertyInterpolate3 = ɵɵpropertyInterpolate3;\n    exports.ɵɵpropertyInterpolate4 = ɵɵpropertyInterpolate4;\n    exports.ɵɵpropertyInterpolate5 = ɵɵpropertyInterpolate5;\n    exports.ɵɵpropertyInterpolate6 = ɵɵpropertyInterpolate6;\n    exports.ɵɵpropertyInterpolate7 = ɵɵpropertyInterpolate7;\n    exports.ɵɵpropertyInterpolate8 = ɵɵpropertyInterpolate8;\n    exports.ɵɵpropertyInterpolateV = ɵɵpropertyInterpolateV;\n    exports.ɵɵcomponentHostSyntheticProperty = ɵɵcomponentHostSyntheticProperty;\n    exports.ɵɵcomponentHostSyntheticListener = ɵɵcomponentHostSyntheticListener;\n    exports.ɵɵprojectionDef = ɵɵprojectionDef;\n    exports.ɵɵreference = ɵɵreference;\n    exports.ɵɵenableBindings = ɵɵenableBindings;\n    exports.ɵɵdisableBindings = ɵɵdisableBindings;\n    exports.ɵɵallocHostVars = ɵɵallocHostVars;\n    exports.ɵɵelementAttribute = ɵɵelementAttribute;\n    exports.ɵɵelementContainerStart = ɵɵelementContainerStart;\n    exports.ɵɵelementContainerEnd = ɵɵelementContainerEnd;\n    exports.ɵɵstyling = ɵɵstyling;\n    exports.ɵɵstyleMap = ɵɵstyleMap;\n    exports.ɵɵclassMap = ɵɵclassMap;\n    exports.ɵɵstyleProp = ɵɵstyleProp;\n    exports.ɵɵstylingApply = ɵɵstylingApply;\n    exports.ɵɵclassProp = ɵɵclassProp;\n    exports.ɵɵelementHostAttrs = ɵɵelementHostAttrs;\n    exports.ɵɵselect = ɵɵselect;\n    exports.ɵɵtextBinding = ɵɵtextBinding;\n    exports.ɵɵtemplate = ɵɵtemplate;\n    exports.ɵɵembeddedViewEnd = ɵɵembeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵɵload = ɵɵload;\n    exports.ɵɵpipe = ɵɵpipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵɵi18n = ɵɵi18n;\n    exports.ɵɵi18nAttributes = ɵɵi18nAttributes;\n    exports.ɵɵi18nExp = ɵɵi18nExp;\n    exports.ɵɵi18nStart = ɵɵi18nStart;\n    exports.ɵɵi18nEnd = ɵɵi18nEnd;\n    exports.ɵɵi18nApply = ɵɵi18nApply;\n    exports.ɵɵi18nPostprocess = ɵɵi18nPostprocess;\n    exports.ɵi18nConfigureLocalize = i18nConfigureLocalize;\n    exports.ɵɵi18nLocalize = ɵɵi18nLocalize;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵɵresolveWindow = ɵɵresolveWindow;\n    exports.ɵɵresolveDocument = ɵɵresolveDocument;\n    exports.ɵɵresolveBody = ɵɵresolveBody;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵflushModuleScopingQueueAsMuchAsPossible = flushModuleScopingQueueAsMuchAsPossible;\n    exports.ɵtransitiveScopesFor = transitiveScopesFor;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵɵsanitizeHtml = ɵɵsanitizeHtml;\n    exports.ɵɵsanitizeStyle = ɵɵsanitizeStyle;\n    exports.ɵɵdefaultStyleSanitizer = ɵɵdefaultStyleSanitizer;\n    exports.ɵɵsanitizeScript = ɵɵsanitizeScript;\n    exports.ɵɵsanitizeUrl = ɵɵsanitizeUrl;\n    exports.ɵɵsanitizeResourceUrl = ɵɵsanitizeResourceUrl;\n    exports.ɵɵsanitizeUrlOrResourceUrl = ɵɵsanitizeUrlOrResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵNG_ELEMENT_ID = NG_ELEMENT_ID;\n    exports.ɵNG_COMPONENT_DEF = NG_COMPONENT_DEF;\n    exports.ɵNG_DIRECTIVE_DEF = NG_DIRECTIVE_DEF;\n    exports.ɵNG_PIPE_DEF = NG_PIPE_DEF;\n    exports.ɵNG_MODULE_DEF = NG_MODULE_DEF;\n    exports.ɵNG_BASE_DEF = NG_BASE_DEF;\n    exports.ɵNG_INJECTABLE_DEF = NG_INJECTABLE_DEF;\n    exports.ɵNG_INJECTOR_DEF = NG_INJECTOR_DEF;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵisBoundToModule__POST_R3__ = isBoundToModule__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵregisterNgModuleType = registerNgModuleType;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵcreateInjector = createInjector;\n    exports.ɵINJECTOR_IMPL__POST_R3__ = INJECTOR_IMPL__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$2;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}