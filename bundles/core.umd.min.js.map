{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","rxjs","compiler","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","__window","window","__self","self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","_injectImplementation","Inject","Optional","Self","SkipSelf","Host","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","flags","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","isArray","j","EMPTY","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","hostVars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","MONKEY_PATCH_KEY_NAME","HEADER_OFFSET","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","renderer","rendererFactory","elementDepthCount","bindingsEnabled","previousOrParentTNode","isParent","tView","currentQueries","creationMode","viewData","NodeInjectorFactory","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","TNODE","PARENT_INJECTOR","INJECTOR_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","arr","readElementValue","getNativeByIndex","getNativeByTNode","tNode","hostView","getTNode","view","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","isComponent","isComponentDef","isLContainer","isRootView","getRootView","lViewData","readPatchedLViewData","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","getContext","mpValue","isComponentInstance","instance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexStart","getDirectiveStartIndex","directiveIndexEnd","getDirectiveEndIndex","traverseNextElement","discoverDirectives","includeComponents","directiveStartIndex","directiveEndIndex","slice","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","parent","componentIndices","components","elementComponentIndex","startIndex","count","queueInitHooks","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","end","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","executeHooks","allHooks","hooksToCall","callHooks","getRenderer","getRendererFactory","getCurrentSanitizer","enableBindings","disableBindings","getCurrentView","restoreView","viewToRestore","contextViewData","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","getTView","getCurrentQueries","setCurrentQueries","queries","getCreationMode","getViewData","getCleanup","getTViewCleanup","cleanup","checkNoChangesMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","resetComponentState","leaveView","creationOnly","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentData","footer","diPublicInInjector","bloomAdd","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveViewData","previousTView","shouldSearchParent","bloomHasToken","searchTokensOnInjector","NOT_FOUND","moduleInjector","injectorView","currentTView","nodeFlags","nodeProviderIndexes","providerIndexes","tInjectables","canAccessViewProviders","node","startInjectables","startDirectives","directiveCount","providerTokenOrDef","getNodeInjectable","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","NodeInjector","_tNode","_hostView","_injectorIndex","getFactoryOf","typeAny","getInheritedFactory","throwMultipleComponentError","tagName","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","rootTNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","findComponentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","lView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","removeListeners","removeEventListener","cleanupFn","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","NO_CHANGE","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","createEmptyStylingContext","element","sanitizer","initialStylingValues","getStylingContext","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","input","singleIndex","currValue","getValue","currFlag","getPointers","hasValueChanged","isClassBased_5","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setContextDirty","setContextPlayersDirty","setStyle","prop","store","DashCase","setProperty","removeStyle","removeProperty","setClass","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBased","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","builder","insertionIndex","playerBuilderIndex","getPlayerBuilder","setFlag","getProp","limitToSingleClasses","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","playerIndex","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","_CLEAN_PROMISE","refreshDescendantViews","setHostBindings","parentFirstTemplatePass","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","refreshChildComponents","componentRefresh","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","executeInitAndContentHooks","createLViewData","createNodeAtIndex","createTNode","createViewNode","viewToRender","rf","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","nextContext","renderComponentOrTemplate","componentOrContext","templateFn","begin","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","getElementDepthCount","increaseElementDepthCount","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","totalHostVars","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","prefillHostVars","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","setRendererFactory","defaultRenderer","selectRootElement","querySelector","listener","eventName","listenerFn","useCapture","storeCleanupFn","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","cleanupInstances","generatePropertyAliases","outputData","createOutput","subscription","subscribe","storeCleanupWithContext","unsubscribe","addNode","decreaseElementDepthCount","elementAttribute","element_1","removeAttribute","strValue","elementProperty","dataValue","inputData","initializeTNodeInputs","setInputsForProperty","markDirtyIfOnPush","tViews","tParent","initialInputs","tNodeFlags","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementClassProp","stylingIndex","val","updateClassProp","addOrRemove","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","hasClassInput","createStylingContextTemplate","initialClassDeclarations","initialStyleDeclarations","onlyProcessSingleClasses","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","initialStaticClasses","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","isClassBased_1","indexForInitial","initialValue","indexForSingle","initialFlag","delegateToClassInput","initialClasses","elementStylingApply","renderStyleAndClassBindings","rootOrView","classesStore","stylesStore","totalPlayersQueued","isContextDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","isClassBased_6","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","elementStylingMap","classes","classInputVal","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","isClassBased_2","adjustedPropIndex","newProp","newValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","isClassBased_3","isClassBased_4","textNative","textBinding","element_2","textContent","elementIndex","directive","postProcessBaseDirective","setInputsFromAttrs","directiveIndex","initialInputData","generateInitialInputs","minifiedInputName","attrValue","numberOfDirectives","directiveFactory","nodeInjectorFactory","queueHostBindingForCheck","addToViewTree","queueComponentIndexForCheck","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","createComment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","adjustedElementIndex","viewAttached","syncViewWithBlueprint","componentTView","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","bindingUpdated","interpolationV","different","content","interpolation1","prefix","v0","interpolation2","i0","v1","bindingUpdated2","interpolation3","i1","v2","bindingUpdated3","interpolation4","i2","v3","bindingUpdated4","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextViewData","loadQueryList","queryListIdx","load","getBinding","bindingIndex","isDifferent","throwErrorIfNoChangesMode","msg","updateBinding","exp1","exp2","exp3","exp4","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","noop","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY$1","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","R3ElementRef","R3TemplateRef","R3ViewContainerRef","NgModuleRef","NgModuleFactory","ViewRef","_view","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","_lookUpContext","enumerable","configurable","detach","callback","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_super","_this","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","viewRef","hostContainer","NodeInjector$1","NodeInjector$$1","createViewRef","componentIndex","hostComponentView","loadContext","createRootComponentView","rNode","createRootComponent","hostRNode","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","prevViewQuery_1","superViewQuery_1","ctx","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey_1","originalProperty","checkProto","setter_1","simpleChanges","writable","currentChange","onChangesWrapper","delegateHook","ngOnChanges","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","injectorDefTypes","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefFactory","hydrate","defOrWrappedDef","parents","ngModule","imported","delete","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","endIndex","cptViewProvidersCount","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","RendererStyleFlags2","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","ngContentSelectors","projectableNodes","rootSelectorOrNode","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","Renderer2","SWITCH_RENDERER2_FACTORY","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","requestAnimationFrame","setTimeout","WRAP_RENDERER_FACTORY2","ComponentFactory$$1","isInternalRootView","rootFlags","tElementNode","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","destroyCbs","changeDetectorRef","i18nTagRegex","appendI18nNode","i18nAttribute","i18nExp","expression","i18nStart","subTemplateIndex","i18nEnd","i18nApply","instructions","localParentTNode","localPreviousTNode","elementTNode","textRNode","removedElement","removedTNode","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","ngModuleType","parentInjector","_bootstrapComponents","componentFactoryResolver","NgModuleFactory$1","NgModuleFactory$$1","moduleType","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","list","viewValuesIdx","getIdxOfMatchingSelector","queryRead","matchingIdx","getIdxOfMatchingDirective","queryReadByTNodeType","addMatch","directiveIdx","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","some","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","SecurityContext","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","Sanitizer","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ÉµdefineBase","ÉµdefineComponent","ÉµdefineDirective","ÉµdefineNgModule","ÉµdefinePipe","ÉµdirectiveInject","ÉµgetFactoryOf","ÉµgetInheritedFactory","ÉµinjectAttribute","ÉµtemplateRefExtractor","ÉµNgOnChangesFeature","ÉµProvidersFeature","ÉµInheritDefinitionFeature","ÉµelementAttribute","Éµbind","Éµcontainer","ÉµnextContext","ÉµcontainerRefreshStart","ÉµcontainerRefreshEnd","ÉµloadQueryList","ÉµnamespaceHTML","ÉµnamespaceMathML","ÉµnamespaceSVG","ÉµenableBindings","ÉµdisableBindings","ÉµelementStart","ÉµelementEnd","Éµelement","ÉµEC","elementContainerStart","ÉµeC","elementContainerEnd","ÉµpureFunction0","ÉµpureFunction1","ÉµpureFunction2","ÉµpureFunction3","ÉµpureFunction4","ÉµpureFunction5","ÉµpureFunction6","ÉµpureFunction7","ÉµpureFunction8","ÉµpureFunctionV","ÉµgetCurrentView","ÉµrestoreView","Éµinterpolation1","Éµinterpolation2","Éµinterpolation3","Éµinterpolation4","Éµinterpolation5","Éµinterpolation6","Éµinterpolation7","Éµinterpolation8","ÉµinterpolationV","ÉµelementClassProp","Éµlistener","Éµload","Éµprojection","ÉµelementProperty","ÉµpipeBind1","ÉµpipeBind2","ÉµpipeBind3","ÉµpipeBind4","ÉµpipeBindV","ÉµprojectionDef","Éµpipe","Éµquery","ÉµqueryRefresh","ÉµregisterContentQuery","Éµreference","ÉµelementStyling","ÉµelementStylingMap","ÉµelementStyleProp","ÉµelementStylingApply","Éµtemplate","Éµtext","ÉµtextBinding","ÉµembeddedViewStart","ÉµembeddedViewEnd","Éµi18nAttribute","Éµi18nExp","Éµi18nStart","Éµi18nEnd","Éµi18nApply","ÉµsanitizeHtml","ÉµsanitizeStyle","ÉµdefaultStyleSanitizer","ÉµsanitizeResourceUrl","ÉµsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ÉµsanitizeUrl","Type","Function","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","dep","reflectDependency","LiteralExpr","host","optional","resolved","R3ResolvedDependencyType","Token","skipSelf","setTokenAndResolvedType","WrappedNodeExpr","param","EMPTY_ARRAY$2","compileNgModule","compileNgModuleDefs","setScopeOnDeclaredComponents","flatten$1","transitiveScopes","transitiveScopesFor","declaration","patchComponentDefWithScope","ngSelectorScope","wrapReference","expandModuleWithProviders","emitInline","jitExpression","compileInjector","statements","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","constantPool","ConstantPool","parseTemplate","preserveWhitespaces","errors","compileComponentFromMetadata","directiveMetadata","viewQueries","extractQueriesMetadata","wrapDirectivesAndPipesInClosure","makeBindingParser","preStatements","hasSelectorScope","compileDirective","sourceMapUrl","compileDirectiveFromMetadata","extractHostBindings","parseHostBindings","listeners","properties","_loop_2","field","ann","isHostBinding","isHostListener","hostPropertyName","inputsFromMetadata","parseInputOutputs","outputsFromMetadata","inputsFromType","outputsFromType","isOutput","bindingPropertyName","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","_loop_3","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","compilePipeFromMetadata","Directive","SWITCH_COMPILE_DIRECTIVE","Component","Default","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","Output","HostBinding","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","Version","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","VERSION","full","major","minor","patch","isUseClassProvider","USE_VALUE$2","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","NgModuleFactoryLoader","moduleFactories","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","style","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","Render3DebugRendererFactory2","Render3DebugContext","_nativeNode","getInjector","getHostComponent","lDebugCtx","directivesCount","directiveIdxStart","getLocalRefs","discoverLocalRefs","Éµangular_packages_core_core_p","Éµangular_packages_core_core_m","Éµangular_packages_core_core_n","Éµangular_packages_core_core_o","Éµangular_packages_core_core_g","Éµangular_packages_core_core_k","Éµangular_packages_core_core_l","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_f","Éµangular_packages_core_core_q","Éµangular_packages_core_core_s","Éµangular_packages_core_core_r","Éµangular_packages_core_core_v","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_z","Éµangular_packages_core_core_bh","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_bd","Éµangular_packages_core_core_be","Éµangular_packages_core_core_bg","Éµangular_packages_core_core_bk","Éµangular_packages_core_core_h","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_bi","Éµangular_packages_core_core_w","Éµangular_packages_core_core_x","Éµangular_packages_core_core_y","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ÉµNoopNgZone","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdefaultIterableDiffers","ÉµdefaultKeyValueDiffers","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµgetInjectableDef","Éµinject","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµivyEnabled","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ÉµReflectionCapabilities","ÉµRenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","ÉµisPromise","ÉµclearOverrides","ÉµinitServicesIfNeeded","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdetectChanges","ÉµrenderComponent","renderComponent","ÉµRender3ComponentFactory","ÉµRender3ComponentRef","ÉµProvidersResolver","ÉµRender3NgModuleRef","ÉµmarkDirty","markDirty","ÉµNgModuleFactory","ÉµNO_CHANGE","Éµstore","ÉµwhenRendered","whenRendered","getRootContext$2","Éµi18nExpMapping","i18nExpMapping","translation","placeholders","staticText","Éµi18nInterpolation1","i18nInterpolation1","Éµi18nInterpolation2","i18nInterpolation2","Éµi18nInterpolation3","i18nInterpolation3","idx","Éµi18nInterpolation4","i18nInterpolation4","b1","Éµi18nInterpolation5","i18nInterpolation5","Éµi18nInterpolation6","i18nInterpolation6","Éµi18nInterpolation7","i18nInterpolation7","b2","Éµi18nInterpolation8","i18nInterpolation8","Éµi18nInterpolationV","i18nInterpolationV","Éµi18nMapping","i18nMapping","elements","expressions","templateRoots","lastChildIndex","translationParts","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","ÉµWRAP_RENDERER_FACTORY2","ÉµRender3DebugRendererFactory2","ÉµcompileComponent","ÉµcompileDirective","ÉµcompileNgModule","ÉµcompileNgModuleDefs","ÉµpatchComponentDefWithScope","ÉµcompilePipe","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµgetContext","ÉµbindPlayerFactory","bindPlayerFactory","ÉµaddPlayer","addPlayer","element$$1","getOrCreatePlayerContext","getRootContext$1","getRootView$1","componentOrView","ÉµgetPlayers","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","ÉµcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ÉµSWITCH_COMPILE_COMPONENT__POST_R3__","ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__","ÉµSWITCH_COMPILE_PIPE__POST_R3__","ÉµSWITCH_COMPILE_NGMODULE__POST_R3__","ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","ctorDeps","userDeps","computeProvidedIn","ÉµSWITCH_IVY_ENABLED__POST_R3__","ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","shift","commentNode","nativeNextSibling","ÉµSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ÉµpublishGlobalUtil","publishGlobalUtil","ÉµSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","resolveRendererType2","isFilled","None","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.1.0-beta.0+85.sha-904b91d\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('@angular/compiler'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', '@angular/compiler', 'rxjs/operators'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.core = {}),global.rxjs,global.ng.compiler,global.rxjs.operators));\n}(this, (function (exports,rxjs,compiler,operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parametrized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explictly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explictly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = 0 /* Default */;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= 8 /* Optional */;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= 4 /* SkipSelf */;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= 2 /* Self */;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY = {};\n    var EMPTY_ARRAY = [];\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY);\n        Object.freeze(EMPTY_ARRAY);\n    }\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            hostVars: componentDefinition.hostVars || 0,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName')\n     *   propName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   a0: 'propName1',\n     *   b1: ['publicName', 'propName2'],\n     * }\n     * ```\n     *\n     * becomes\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'publicName': 'b1'\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in:\n     *\n     * ```\n     * {\n     *  'propName1': 'a0',\n     *  'propName2': 'b1'\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[declaredName] = minifiedKey);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type) {\n        return type[NG_MODULE_DEF] || null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Size of LViewData's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 17;\n    // Below are constants for LViewData indices to help us look up LViewData members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6;\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER = 11;\n    var SANITIZER = 12;\n    var TAIL = 13;\n    var CONTAINER_INDEX = 14;\n    var CONTENT_QUERIES = 15;\n    var DECLARATION_VIEW = 16;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LViewData, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LViewData` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LViewData`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LViewData` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b, checkNoChangesMode) {\n        if (ngDevMode && checkNoChangesMode) {\n            return !devModeEqual(a, b);\n        }\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LViewData` or `TData`. */\n    function loadInternal(index, arr) {\n        ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n        return arr[index + HEADER_OFFSET];\n    }\n    function assertDataInRangeInternal(index, arr) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n    /**\n     * Takes the value of a slot in `LViewData` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LViewData. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LViewData`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, arr) {\n        return readElementValue(arr[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LViewData or an LContainer. If LContainer, unwrap to find LViewData.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 16384 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && typeof value[ACTIVE_INDEX] === 'number';\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 64 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lViewData = Array.isArray(target) ? target : readPatchedLViewData(target);\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    function getRootContext(viewOrComponent) {\n        return getRootView(viewOrComponent)[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLViewData(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lViewData;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @returns The LViewData instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LViewData instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LViewData` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     */\n    function getContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LViewData instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lViewData = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lViewData, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = discoverDirectives(nodeIndex, lViewData, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lViewData, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, compontent or\n                // directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lViewData[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lViewData, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomElement(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lViewData = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lViewData = parentContext;\n                    }\n                    else {\n                        lViewData = parentContext.lViewData;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lViewData) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lViewData, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lViewData[index]);\n                        var context = createLContext(lViewData, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lViewData, nodeIndex, native) {\n        return {\n            lViewData: lViewData,\n            nodeIndex: nodeIndex, native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lViewData = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lViewData)) {\n            var nodeIndex = findViaComponent(lViewData, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lViewData);\n            var context = createLContext(lViewData, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lViewData;\n            view = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LViewData and returns the matching index\n     */\n    function findViaNativeElement(lViewData, target) {\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lViewData);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else if (tNode.parent) {\n            return tNode.parent.next || null;\n        }\n        return null;\n    }\n    /**\n     * Locates the component within the given LViewData and returns the matching index\n     */\n    function findViaComponent(lViewData, componentInstance) {\n        var componentIndices = lViewData[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lViewData);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lViewData);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LViewData and returns the matching index\n     */\n    function findViaDirective(lViewData, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LViewData of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lViewData[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = getDirectiveStartIndex(tNode);\n            var directiveIndexEnd = getDirectiveEndIndex(tNode, directiveIndexStart);\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lViewData[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    function assertDomElement(element) {\n        assertEqual(element.nodeType, 1, 'The provided value must be an instance of an HTMLElement');\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lViewData The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function discoverDirectives(nodeIndex, lViewData, includeComponents) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        var directiveStartIndex = getDirectiveStartIndex(tNode);\n        var directiveEndIndex = getDirectiveEndIndex(tNode, directiveStartIndex);\n        if (!includeComponents && tNode.flags & 4096 /* isComponent */)\n            directiveStartIndex++;\n        return lViewData.slice(directiveStartIndex, directiveEndIndex);\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lViewData, nodeIndex) {\n        var tNode = lViewData[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lViewData) : lViewData[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n    function getDirectiveStartIndex(tNode) {\n        // the tNode instances store a flag value which then has a\n        // pointer which tells the starting index of where all the\n        // active directives are in the master directive array\n        return tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n    }\n    function getDirectiveEndIndex(tNode, startIndex) {\n        // The end value is also a part of the same flag\n        // (see `TNodeFlags` to see how the flag bit shifting\n        // values are used).\n        var count = tNode.flags & 4095 /* DirectiveCountMask */;\n        return count ? (startIndex + count) : -1;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LViewData\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(flags, tView) {\n        if (tView.firstTemplatePass) {\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var end = start + count;\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = start; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, creationMode) {\n        if (currentView[FLAGS] & 16 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, creationMode);\n            currentView[FLAGS] &= ~16 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(data, allHooks, checkHooks, creationMode) {\n        var hooksToCall = creationMode ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(data, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * creation mode.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property gets set before entering a template.\n     *\n     * This renderer can be one of two varieties of Renderer3:\n     *\n     * - ObjectedOrientedRenderer3\n     *\n     * This is the native browser API style, e.g. operations are methods on individual objects\n     * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n     * size).\n     *\n     * - ProceduralRenderer3\n     *\n     * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n     * that enables element manipulation. This also facilitates backwards compatibility with\n     * Renderer2.\n     */\n    var renderer;\n    function getRenderer() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return renderer;\n    }\n    var rendererFactory;\n    function getRendererFactory() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return rendererFactory;\n    }\n    function setRendererFactory(factory) {\n        rendererFactory = factory;\n    }\n    function getCurrentSanitizer() {\n        return viewData && viewData[SANITIZER];\n    }\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LViewData` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return viewData;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextViewData = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        viewData = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    var tView;\n    function getTView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return tView;\n    }\n    var currentQueries;\n    function getCurrentQueries() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentQueries;\n    }\n    function setCurrentQueries(queries) {\n        currentQueries = queries;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== viewData[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = currentQueries.clone());\n            previousOrParentTNode.flags |= 16384 /* hasContentQuery */;\n        }\n        return currentQueries || (currentQueries = new QueryType(null, null, null));\n    }\n    /**\n     * This property gets set before entering a template.\n     */\n    var creationMode;\n    function getCreationMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return creationMode;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var viewData;\n    /**\n     * Internal function that returns the current LViewData instance.\n     *\n     * The getCurrentView() instruction should be used for anything public.\n     */\n    function getViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return viewData;\n    }\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextViewData = null;\n    function getContextViewData() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextViewData;\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = viewData;\n        tView = newView && newView[TVIEW];\n        creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n        firstTemplatePass = newView && tView.firstTemplatePass;\n        bindingRootIndex = newView && tView.bindingStartIndex;\n        renderer = newView && newView[RENDERER];\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        viewData = contextViewData = newView;\n        oldView && (oldView[QUERIES] = currentQueries);\n        currentQueries = newView && newView[QUERIES];\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextViewData = walkUpViews(level, contextViewData);\n        return contextViewData[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     * @param creationOnly An optional boolean to indicate that the view was processed in creation mode\n     * only, i.e. the first update will be done later. Only possible for dynamically created views.\n     */\n    function leaveView(newView, creationOnly) {\n        if (!creationOnly) {\n            if (!checkNoChangesMode) {\n                executeHooks(viewData, tView.viewHooks, tView.viewCheckHooks, creationMode);\n            }\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n        }\n        viewData[FLAGS] |= 16 /* RunInit */;\n        viewData[BINDING_INDEX] = tView.bindingStartIndex;\n        enterView(newView, null);\n    }\n    function assertPreviousIsParent() {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent() {\n        assertDefined(previousOrParentTNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(index, arr) {\n        if (arr == null)\n            arr = viewData;\n        assertDataInRangeInternal(index, arr || viewData);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = false;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = type[NG_ELEMENT_ID];\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 4096 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0, AcrossHostBoundary is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view[HOST_NODE];\n            viewOffset++;\n        }\n        var acrossHostBoundary = hostTNode && hostTNode.type === 3 /* Element */ ?\n            32768 /* AcrossHostBoundary */ :\n            0;\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) |\n                acrossHostBoundary :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 1 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param nodeInjector Node injector where the search should start\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @returns the value from the injector or `null` when not found\n     */\n    function getOrCreateInjectable(tNode, lViewData, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var bloomHash = bloomHashBitOrFactory(token);\n        // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n        // so just call the factory function to create it.\n        if (typeof bloomHash === 'function') {\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lViewData);\n            try {\n                var value = bloomHash();\n                if (value == null && !(flags & 8 /* Optional */)) {\n                    throw new Error(\"No provider for \" + stringify$1(token));\n                }\n                else {\n                    return value;\n                }\n            }\n            finally {\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        else if (typeof bloomHash == 'number') {\n            // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n            // A reference to the previous injector TView that was found while climbing the element injector\n            // tree. This is used to know if viewProviders can be accessed on the current injector.\n            var previousTView = null;\n            var injectorIndex = getInjectorIndex(tNode, lViewData);\n            var parentLocation = NO_PARENT_INJECTOR;\n            // If we should skip this injector, start by searching the parent injector.\n            if (flags & 4 /* SkipSelf */) {\n                parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lViewData) :\n                    lViewData[injectorIndex + PARENT_INJECTOR];\n                if (!shouldSearchParent(flags, parentLocation)) {\n                    injectorIndex = -1;\n                }\n                else {\n                    previousTView = lViewData[TVIEW];\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n            }\n            // Traverse up the injector tree until we find a potential match or until we know there\n            // *isn't* a match.\n            while (injectorIndex !== -1) {\n                parentLocation = lViewData[injectorIndex + PARENT_INJECTOR];\n                // Check the current injector. If it matches, see if it contains token.\n                var tView = lViewData[TVIEW];\n                if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                    // At this point, we have an injector which *may* contain the token, so we step through\n                    // the providers and directives associated with the injector's corresponding node to get\n                    // the instance.\n                    var instance = searchTokensOnInjector(injectorIndex, lViewData, token, previousTView);\n                    if (instance !== NOT_FOUND) {\n                        return instance;\n                    }\n                }\n                if (shouldSearchParent(flags, parentLocation) &&\n                    bloomHasToken(bloomHash, injectorIndex, lViewData)) {\n                    // The def wasn't found anywhere on this node, so it was a false positive.\n                    // Traverse up the tree and continue searching.\n                    previousTView = tView;\n                    injectorIndex = getParentInjectorIndex(parentLocation);\n                    lViewData = getParentInjectorView(parentLocation, lViewData);\n                }\n                else {\n                    // If we should not search parent OR If the ancestor bloom filter value does not have the\n                    // bit corresponding to the directive we can give up on traversing up to find the specific\n                    // injector.\n                    injectorIndex = -1;\n                }\n            }\n        }\n        if (flags & 8 /* Optional */ && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (2 /* Self */ | 1 /* Host */)) === 0) {\n            var moduleInjector = lViewData[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & 8 /* Optional */);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & 8 /* Optional */);\n            }\n        }\n        if (flags & 8 /* Optional */) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, injectorView, token, previousTView) {\n        var currentTView = injectorView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        var nodeFlags = tNode.flags;\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = currentTView.data;\n        // First, we step through providers\n        var canAccessViewProviders = false;\n        // We need to determine if view providers can be accessed by the starting element.\n        // It happens in 2 cases:\n        // 1) On the initial element injector , if we are instantiating a token which can see the\n        // viewProviders of the component of that element. Such token are:\n        // - the component itself (but not other directives)\n        // - viewProviders tokens of the component (but not providers tokens)\n        // 2) Upper in the element injector tree, if the starting element is actually in the view of\n        // the current element. To determine this, we track the transition of view during the climb,\n        // and check the host node of the current view to identify component views.\n        if (previousTView == null && isComponent(tNode) && includeViewProviders ||\n            previousTView != null && previousTView != currentTView &&\n                (currentTView.node == null || currentTView.node.type === 3 /* Element */)) {\n            canAccessViewProviders = true;\n        }\n        var startInjectables = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var startDirectives = nodeFlags >> 16 /* DirectiveStartingIndexShift */;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? startInjectables : startInjectables + cptViewProvidersCount;\n        var directiveCount = nodeFlags & 4095 /* DirectiveCountMask */;\n        for (var i = startingIndex; i < startDirectives + directiveCount; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < startDirectives && token === providerTokenOrDef ||\n                i >= startDirectives && providerTokenOrDef.type === token) {\n                return getNodeInjectable(tInjectables, injectorView, i, tNode);\n            }\n        }\n        return NOT_FOUND;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveViewData = getViewData();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveViewData);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, parentLocation) {\n        return !(flags & 2 /* Self */ ||\n            (flags & 1 /* Host */ &&\n                (parentLocation & 32768 /* AcrossHostBoundary */)));\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getViewData());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n            this._injectorIndex = getOrCreateNodeInjectorForNode(_tNode, _hostView);\n        }\n        NodeInjector.prototype.get = function (token) {\n            setTNodeAndViewData(this._tNode, this._hostView);\n            return getOrCreateInjectable(this._tNode, this._hostView, token);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n        if (checkNoChangesMode) {\n            var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n            if (creationMode) {\n                msg +=\n                    \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                        \" Has it been created in a change detection hook ?\";\n            }\n            // TODO: include debug context\n            throw new Error(msg);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        return tNode.parent == null ? getHostNative(currentView) :\n            getNativeByTNode(tNode.parent, currentView);\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 8192 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lViewData LViewData for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lViewData) {\n        var rootTNode = lViewData[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lViewData[PARENT], 'viewData.parent');\n            lViewData = lViewData[PARENT];\n            rootTNode = lViewData[HOST_NODE];\n        }\n        return lViewData;\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LViewData, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LViewData.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 8 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~8 /* Attached */;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LViewData */\n    function getLViewChild(viewData) {\n        var childIndex = viewData[TVIEW].childIndex;\n        return childIndex === -1 ? null : viewData[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 32 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Removes all listeners and call all onDestroys in a given view.\n     *\n     * @param view The LViewData to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            removeListeners(view);\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(viewData) {\n        var cleanup = viewData[TVIEW].cleanup;\n        if (cleanup != null) {\n            for (var i = 0; i < cleanup.length - 1; i += 2) {\n                if (typeof cleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var native = readElementValue(viewData[cleanup[i + 1]]);\n                    var listener = viewData[CLEANUP][cleanup[i + 2]];\n                    native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                    i += 2;\n                }\n                else if (typeof cleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = viewData[CLEANUP][cleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = viewData[CLEANUP][cleanup[i + 1]];\n                    cleanup[i].call(context);\n                }\n            }\n            viewData[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(viewData) {\n        var pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(viewData, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 4096 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param parent The parent where the child will be inserted into.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the child should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent && tNode.parent.type === 4 /* ElementContainer */) {\n            currentNode = getHighestElementContainer(tNode);\n            parent = currentNode.parent;\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && current !== tNode.tagName) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 1 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector) {\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function createEmptyStylingContext(element, sanitizer, initialStylingValues) {\n        return [\n            null,\n            sanitizer || null,\n            initialStylingValues || [null],\n            0,\n            0,\n            element || null,\n            null,\n            null // PreviousMultiStyleValue\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index + HEADER_OFFSET;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LViewData or an LContainer\n            var stylingTemplate = getTNode(index, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LViewData or an LContainer\n        return typeof value[FLAGS] !== 'number' && typeof value[ACTIVE_INDEX] !== 'number';\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lViewData = context.lViewData, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex - HEADER_OFFSET, lViewData);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[0 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[0 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n\n    var EMPTY_ARR = [];\n    var EMPTY_OBJ = {};\n    /**\n     * Creates a styling context template where styling information is stored.\n     * Any styles that are later referenced using `updateStyleProp` must be\n     * passed in within this function. Initial values for those styles are to\n     * be declared after all initial style properties are declared (this change in\n     * mode between declarations and initial styles is made possible using a special\n     * enum value found in `definition.ts`).\n     *\n     * @param initialStyleDeclarations a list of style declarations and initial style values\n     *    that are used later within the styling context.\n     *\n     *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n     *       This implies that `width` and `height` will be later styled and that the `width`\n     *       property has an initial value of `100px`.\n     *\n     * @param initialClassDeclarations a list of class declarations and initial class values\n     *    that are used later within the styling context.\n     *\n     *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n     *       This implies that `foo` and `bar` will be later styled and that the `foo`\n     *       class will be applied to the element as an initial class since it's true\n     */\n    function createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer, onlyProcessSingleClasses) {\n        var initialStylingValues = [null];\n        var context = createEmptyStylingContext(null, styleSanitizer, initialStylingValues);\n        // we use two maps since a class name might collide with a CSS style prop\n        var stylesLookup = {};\n        var classesLookup = {};\n        var totalStyleDeclarations = 0;\n        if (initialStyleDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialStyleDeclarations.length; i++) {\n                var v = initialStyleDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var prop = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialStyleDeclarations[++i];\n                        initialStylingValues.push(value);\n                        stylesLookup[prop] = initialStylingValues.length - 1;\n                    }\n                    else {\n                        totalStyleDeclarations++;\n                        stylesLookup[prop] = 0;\n                    }\n                }\n            }\n        }\n        // make where the class offsets begin\n        context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n        var initialStaticClasses = onlyProcessSingleClasses ? [] : null;\n        if (initialClassDeclarations) {\n            var hasPassedDeclarations = false;\n            for (var i = 0; i < initialClassDeclarations.length; i++) {\n                var v = initialClassDeclarations[i];\n                // this flag value marks where the declarations end the initial values begin\n                if (v === 1 /* VALUES_MODE */) {\n                    hasPassedDeclarations = true;\n                }\n                else {\n                    var className = v;\n                    if (hasPassedDeclarations) {\n                        var value = initialClassDeclarations[++i];\n                        initialStylingValues.push(value);\n                        classesLookup[className] = initialStylingValues.length - 1;\n                        initialStaticClasses && initialStaticClasses.push(className);\n                    }\n                    else {\n                        classesLookup[className] = 0;\n                    }\n                }\n            }\n        }\n        var styleProps = Object.keys(stylesLookup);\n        var classNames = Object.keys(classesLookup);\n        var classNamesIndexStart = styleProps.length;\n        var totalProps = styleProps.length + classNames.length;\n        // *2 because we are filling for both single and multi style spaces\n        var maxLength = totalProps * 4 /* Size */ * 2 + 8 /* SingleStylesStartPosition */;\n        // we need to fill the array from the start so that we can access\n        // both the multi and the single array positions in the same loop block\n        for (var i = 8 /* SingleStylesStartPosition */; i < maxLength; i++) {\n            context.push(null);\n        }\n        var singleStart = 8 /* SingleStylesStartPosition */;\n        var multiStart = totalProps * 4 /* Size */ + 8 /* SingleStylesStartPosition */;\n        // fill single and multi-level styles\n        for (var i = 0; i < totalProps; i++) {\n            var isClassBased_1 = i >= classNamesIndexStart;\n            var prop = isClassBased_1 ? classNames[i - classNamesIndexStart] : styleProps[i];\n            var indexForInitial = isClassBased_1 ? classesLookup[prop] : stylesLookup[prop];\n            var initialValue = initialStylingValues[indexForInitial];\n            var indexForMulti = i * 4 /* Size */ + multiStart;\n            var indexForSingle = i * 4 /* Size */ + singleStart;\n            var initialFlag = prepareInitialFlag(prop, isClassBased_1, styleSanitizer || null);\n            setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n            setProp(context, indexForSingle, prop);\n            setValue(context, indexForSingle, null);\n            setPlayerBuilderIndex(context, indexForSingle, 0);\n            var flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n            setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n            setProp(context, indexForMulti, prop);\n            setValue(context, indexForMulti, null);\n            setPlayerBuilderIndex(context, indexForMulti, 0);\n        }\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStart) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 3 /* MasterFlagPosition */, masterFlag);\n        setContextDirty(context, initialStylingValues.length > 1);\n        if (initialStaticClasses) {\n            context[6 /* PreviousOrCachedMultiClassValue */] = initialStaticClasses.join(' ');\n        }\n        return context;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput) {\n        stylesInput = stylesInput || null;\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* PreviousOrCachedMultiClassValue */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* PreviousMultiStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* PreviousOrCachedMultiClassValue */] = classesValue;\n        context[7 /* PreviousMultiStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARR;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARR;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARR;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased_2 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_2 && !ignoreAllStyleUpdates) || (isClassBased_2 && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_2 ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased_2 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased_2 ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased_2 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // there is no point in setting this to dirty if the previously\n                        // rendered value was being referenced by the initial style (or null)\n                        if (hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            if (hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(newProp, isClassBased_2, getStyleSanitizer(context));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased_2, newProp, newFlag, newValue, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased_3 = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased_3 && !ignoreAllStyleUpdates) || (isClassBased_3 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased_3);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased_3 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context);\n        while (propIndex < propLimit) {\n            var isClassBased_4 = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased_4 && !ignoreAllStyleUpdates) || (isClassBased_4 && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased_4 ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased_4 ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased_4 ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(prop, isClassBased_4, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased_4 ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                context.push(flag, prop, value, playerBuilderIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * Sets and resolves a single styling property/value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyleAndClassBindings` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param index The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     */\n    function updateStyleProp(context, index, input) {\n        var singleIndex = 8 /* SingleStylesStartPosition */ + index * 4 /* Size */;\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        // didn't change ... nothing to make a note of\n        if (hasValueChanged(currFlag, currValue, value)) {\n            var isClassBased_5 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_5 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex);\n                playerBuildersAreDirty = true;\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_5) && valueExists(valueForMulti, isClassBased_5)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param index The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, index, addOrRemove) {\n        var adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n        updateStyleProp(context, adjustedIndex, addOrRemove);\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyleAndClassBindings(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore) {\n        var totalPlayersQueued = 0;\n        if (isContextDirty(context)) {\n            var flushPlayerBuilders = context[3 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var styleSanitizer = getStyleSanitizer(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            for (var i = 8 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var flag = getPointers(context, i);\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased_6 = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased_6 || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased_6)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    if (!valueExists(valueToApply, isClassBased_6) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased_6) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            var sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                            setStyle(native, prop, valueToApply, renderer, sanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setContextDirty(context, false);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBased(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 8 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 31 /* BitMask */) | (staticIndex << 5 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 5 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        return context[2 /* InitialStylesPosition */][index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 5 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 5 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 8 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]);\n    }\n    function getStyleSanitizer(context) {\n        return context[1 /* StyleSanitizerPosition */];\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[0 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[0 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex) {\n        context[index + 3 /* PlayerBuilderIndexOffset */] = playerBuilderIndex;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        return context[index + 3 /* PlayerBuilderIndexOffset */] || 0;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[0 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 3 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[3 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[3 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[3 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        setPlayerBuilderIndex(context, indexA, getPlayerBuilderIndex(context, indexB));\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, playerIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(name, isClassBased, sanitizer) {\n        if (isClassBased) {\n            return 2 /* Class */;\n        }\n        else if (sanitizer && sanitizer(name)) {\n            return 4 /* Sanitize */;\n        }\n        return 0 /* None */;\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(viewData) {\n        var tView = getTView();\n        var creationMode = getCreationMode();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        setHostBindings(tView, viewData);\n        var parentFirstTemplatePass = getFirstTemplatePass();\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        if (!checkNoChangesMode) {\n            executeInitHooks(viewData, tView, creationMode);\n        }\n        refreshDynamicEmbeddedViews(viewData);\n        // Content query results must be refreshed before content hooks are called.\n        refreshContentQueries(tView);\n        if (!checkNoChangesMode) {\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n        refreshChildComponents(tView.components, parentFirstTemplatePass);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    viewData[BINDING_INDEX] = bindingRootIndex;\n                    // We must subtract the header offset because the load() instruction\n                    // expects a raw, unadjusted index.\n                    instruction(currentDirectiveIndex - HEADER_OFFSET, currentElementIndex);\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components, parentFirstTemplatePass) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i], parentFirstTemplatePass);\n            }\n        }\n    }\n    function executeInitAndContentHooks(viewData) {\n        if (!getCheckNoChangesMode()) {\n            var tView = getTView();\n            var creationMode = getCreationMode();\n            executeInitHooks(viewData, tView, creationMode);\n            executeHooks(viewData, tView.contentHooks, tView.contentCheckHooks, creationMode);\n        }\n    }\n    function createLViewData(renderer, tView, context, flags, sanitizer) {\n        var viewData = getViewData();\n        var instance = tView.blueprint.slice();\n        instance[FLAGS] = flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */;\n        instance[PARENT] = instance[DECLARATION_VIEW] = viewData;\n        instance[CONTEXT] = context;\n        instance[INJECTOR] = viewData ? viewData[INJECTOR] : null;\n        instance[RENDERER] = renderer;\n        instance[SANITIZER] = sanitizer || null;\n        return instance;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, viewData.length, \"Slot should have been initialized with null\");\n        viewData[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var isParent = getIsParent();\n            tNode = tView.data[adjustedIndex] =\n                createTNode(viewData, type, adjustedIndex, name, attrs, null);\n            // Now link ourselves into the tree.\n            if (previousOrParentTNode) {\n                if (isParent && previousOrParentTNode.child == null &&\n                    (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                    // We are in the same view, which means we are adding content node to the parent view.\n                    previousOrParentTNode.child = tNode;\n                }\n                else if (!isParent) {\n                    previousOrParentTNode.next = tNode;\n                }\n            }\n        }\n        if (tView.firstChild == null && type === 3 /* Element */) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        setIsParent(true);\n        var tNode = view[TVIEW].node;\n        setPreviousOrParentTNode(tNode);\n        return view[HOST_NODE] = tNode;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function adjustBlueprintForNewNode(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context, rf) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 64 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(viewToRender[CONTEXT]);\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(rf, context);\n                if (rf & 2 /* Update */) {\n                    refreshDescendantViews(viewToRender);\n                }\n                else {\n                    // This must be set to false immediately after the first creation run because in an\n                    // ngFor loop, all the views will be created together before update mode runs and turns\n                    // off firstTemplatePass. If we don't set it here, instances will perform directive\n                    // matching, etc again and again.\n                    viewToRender[TVIEW].firstTemplatePass = false;\n                    setFirstTemplatePass(false);\n                }\n            }\n            finally {\n                // renderEmbeddedTemplate() is called twice, once for creation only and then once for\n                // update. When for creation only, leaveView() must not trigger view hooks, nor clean flags.\n                var isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n                leaveView(oldView, isCreationOnly);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, componentOrContext, templateFn) {\n        var rendererFactory = getRendererFactory();\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        try {\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (templateFn) {\n                namespaceHTML();\n                templateFn(getRenderFlags(hostView), componentOrContext);\n                refreshDescendantViews(hostView);\n            }\n            else {\n                executeInitAndContentHooks(hostView);\n                // Element was stored at 0 in data and directive was stored at 0 in directives\n                // in renderComponent()\n                setHostBindings(getTView(), hostView);\n                componentRefresh(HEADER_OFFSET, false);\n            }\n        }\n        finally {\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. By default, the update block is run with the\n     * creation block when the view is in creation mode. Otherwise, the update block is run\n     * alone.\n     *\n     * Dynamically created views do NOT use this configuration (update block and create block are\n     * always run separately).\n     */\n    function getRenderFlags(view) {\n        return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg/';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var renderer = getRenderer();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? 'ng-container' : '');\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, null, attrs || null);\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var tView = getTView();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, tView);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LViewData array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var viewData = getViewData();\n        var tView = getTView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, viewData);\n        createDirectivesAndLocals(tView, viewData, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, viewData);\n        }\n        increaseElementDepthCount();\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getRenderer();\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LViewData in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getRenderer();\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n                i += 2;\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i + 1];\n                    var attrName_1 = attrs[i + 2];\n                    var attrVal = attrs[i + 3];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                    i += 4;\n                }\n                else {\n                    // Standard attributes\n                    var attrVal = attrs[i + 1];\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName, attrVal) :\n                        native.setAttribute(attrName, attrVal);\n                    i += 2;\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        ngDevMode && assertDataInRange(-1);\n        setRendererFactory(factory);\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var viewData = getViewData();\n        var tNode = getPreviousOrParentTNode();\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, viewData);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = getRenderer();\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                storeCleanupFn(viewData, cleanupFn);\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                var cleanupInstances = getCleanup(viewData);\n                cleanupInstances.push(wrappedListener);\n                if (getFirstTemplatePass()) {\n                    getTViewCleanup(viewData).push(eventName, tNode.index, cleanupInstances.length - 1, useCapture);\n                }\n            }\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode.flags, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var outputData;\n        if (outputs && (outputData = outputs[eventName])) {\n            createOutput(viewData, outputData, listenerFn);\n        }\n    }\n    /**\n     * Iterates through the outputs associated with a particular event name and subscribes to\n     * each output.\n     */\n    function createOutput(viewData, outputs, listener) {\n        for (var i = 0; i < outputs.length; i += 2) {\n            ngDevMode && assertDataInRange(outputs[i], viewData);\n            var subscription = viewData[outputs[i]][outputs[i + 1]].subscribe(listener);\n            storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(view, context, cleanupFn) {\n        if (!view)\n            view = getViewData();\n        getCleanup(view).push(context);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(cleanupFn, view[CLEANUP].length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(previousOrParentTNode.flags, getTView());\n        decreaseElementDepthCount();\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var viewData = getViewData();\n            var renderer = getRenderer();\n            var element_1 = getNativeByIndex(index, viewData);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an Element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementProperty(index, propName, value, sanitizer) {\n        if (value === NO_CHANGE)\n            return;\n        var viewData = getViewData();\n        var element = getNativeByIndex(index, viewData);\n        var tNode = getTNode(index, viewData);\n        var inputData = initializeTNodeInputs(tNode);\n        var dataValue;\n        if (inputData && (dataValue = inputData[propName])) {\n            setInputsForProperty(viewData, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(viewData, index + HEADER_OFFSET);\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = getRenderer();\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            isProceduralRenderer(renderer) ?\n                renderer.setProperty(element, propName, value) :\n                (element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value);\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(viewData, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && viewData && parent !== viewData[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(viewData, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(inputs[i], viewData);\n            viewData[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param number tNodeFlags node flags\n     * @param Direction direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNodeFlags, direction) {\n        var tView = getTView();\n        var count = tNodeFlags & 4095 /* DirectiveCountMask */;\n        var propStore = null;\n        if (count > 0) {\n            var start = tNodeFlags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Add or remove a class in a `classList` on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case\n     *\n     * @param index The index of the element to update in the data array\n     * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value A value indicating if a given class should be added or removed.\n     */\n    function elementClassProp(index, stylingIndex, value) {\n        var val = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index, getViewData()), stylingIndex, val);\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to apply all styling\n     * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n     * value is allocated for the styling details for its corresponding element (the element\n     * index is the previous index value from this one).\n     *\n     * (Note this function calls `elementStylingApply` immediately when called.)\n     *\n     *\n     * @param index Index value which will be allocated to store styling data for the element.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classDeclarations A key/value array of CSS classes that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n     *   bindings. If a class binding changes its value to a falsy value then the matching initial\n     *   class value that are passed in here will be applied to the element (if matched).\n     * @param styleDeclarations A key/value array of CSS styles that will be registered on the element.\n     *   Each individual style will be used on the element as long as it is not overridden\n     *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n     *   bindings. If a style binding changes its value to null then the initial styling\n     *   values that are passed in here will be applied to the element (if matched).\n     * @param styleSanitizer An optional sanitizer function that will be used (if provided)\n     *   to sanitize the any CSS property values that are applied to the element (during rendering).\n     */\n    function elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n        var tNode = getPreviousOrParentTNode();\n        var inputData = initializeTNodeInputs(tNode);\n        if (!tNode.stylingTemplate) {\n            var hasClassInput = inputData && inputData.hasOwnProperty('class') ? true : false;\n            if (hasClassInput) {\n                tNode.flags |= 32768 /* hasClassInput */;\n            }\n            // initialize the styling template.\n            tNode.stylingTemplate = createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer, hasClassInput);\n        }\n        if (styleDeclarations && styleDeclarations.length ||\n            classDeclarations && classDeclarations.length) {\n            var index = tNode.index - HEADER_OFFSET;\n            if (delegateToClassInput(tNode)) {\n                var stylingContext = getStylingContext(index, getViewData());\n                var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n                setInputsForProperty(getViewData(), tNode.inputs['class'], initialClasses);\n            }\n            elementStylingApply(index);\n        }\n    }\n    /**\n     * Apply all styling values to the element which have been queued by any styling instructions.\n     *\n     * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n     * have been issued against the element. This function will also determine if any styles have\n     * changed and will then skip the operation if there is nothing new to render.\n     *\n     * Once called then all queued styles will be flushed.\n     *\n     * @param index Index of the element's styling storage that will be rendered.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     */\n    function elementStylingApply(index) {\n        var viewData = getViewData();\n        var isFirstRender = (viewData[FLAGS] & 1 /* CreationMode */) !== 0;\n        var totalPlayersQueued = renderStyleAndClassBindings(getStylingContext(index, viewData), getRenderer(), viewData, isFirstRender);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(viewData);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Queue a given style to be rendered on an Element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param styleIndex Index of the style property on this element. (Monotonically increasing.)\n     * @param value New value to write (null to remove).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     */\n    function elementStyleProp(index, styleIndex, value, suffix) {\n        var valueToAdd = null;\n        if (value) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index, getViewData()), styleIndex, valueToAdd);\n    }\n    /**\n     * Queue a key/value map of styles to be rendered on an Element.\n     *\n     * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n     * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n     * If any styles are set to `null` then they will be removed from the element (unless the same\n     * style properties have been assigned to the element during creation using `elementStyling`).\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's styling storage to change in the data array.\n     *        (Note that this is not the element index, but rather an index value allocated\n     *        specifically for element styling--the index must be the next index after the element\n     *        index.)\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     */\n    function elementStylingMap(index, classes, styles) {\n        var viewData = getViewData();\n        var tNode = getTNode(index, viewData);\n        var stylingContext = getStylingContext(index, viewData);\n        if (delegateToClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = stylingContext[6 /* PreviousOrCachedMultiClassValue */];\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(getViewData(), tNode.inputs['class'], classInputVal);\n        }\n        updateStylingMap(stylingContext, classes, styles);\n    }\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, getRenderer());\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, viewData);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, getViewData());\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = getRenderer();\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        var totalHostVars = 0;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                totalHostVars += def.hostVars;\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n        prefillHostVars(tView, viewData, totalHostVars);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, viewData, previousOrParentTNode) {\n        var start = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n        var end = start + previousOrParentTNode.flags & 4095 /* DirectiveCountMask */;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(viewData, previousOrParentTNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, viewData, i, previousOrParentTNode);\n            postProcessDirective(viewData, directive, def, i);\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, viewData, totalHostVars) {\n        for (var i = 0; i < totalHostVars; i++) {\n            viewData.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(viewData, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent();\n        attachPatchData(directive, viewData);\n        if (native) {\n            attachPatchData(native, viewData);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 4096 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 4096 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getTView();\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /** Stores index of directive and host element so it will be queued for binding refresh during CD.\n    */\n    function queueHostBindingForCheck(tView, def) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        tView.expandoInstructions.push(def.hostBindings, def.hostVars);\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 4096 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = index << 16 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ |\n            numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n        if (def.hostBindings)\n            queueHostBindingForCheck(tView, def);\n    }\n    function addComponentLogic(viewData, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, viewData);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var componentView = addToViewTree(viewData, previousOrParentTNode.index, createLViewData(getRendererFactory().createRenderer(native, def), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = viewData[previousOrParentTNode.index];\n        viewData[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var viewData = getViewData();\n        var tView = getTView();\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor);\n        var currentQueries = getCurrentQueries();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (currentQueries) {\n            setCurrentQueries(currentQueries.addNode(previousOrParentTNode));\n        }\n        queueLifecycleHooks(tNode.flags, tView);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var viewData = getViewData();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], getTView().bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = getRenderer().createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = viewData[adjustedIndex] =\n            createLContainer(viewData[adjustedIndex], tNode, viewData, comment);\n        appendChild(comment, tNode, viewData);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(viewData, index + HEADER_OFFSET, lContainer);\n        var currentQueries = getCurrentQueries();\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var previousOrParentTNode = loadInternal(index, tView.data);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        viewData[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        if (!getCheckNoChangesMode()) {\n            // We need to execute init hooks here so ngOnInit hooks are called in top level views\n            // before they are called in embedded views (for backwards compatibility).\n            executeInitHooks(viewData, tView, getCreationMode());\n        }\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent();\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getViewData()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lViewData) {\n        for (var current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n            // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT], 2 /* Update */);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var viewData = getViewData();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = viewData[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLViewData(getRenderer(), getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 2 /* CheckAlways */, getCurrentSanitizer());\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (getCreationMode()) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, viewData, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return getRenderFlags(viewToRender);\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getTView();\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var viewData = getViewData();\n        var viewHost = viewData[HOST_NODE];\n        refreshDescendantViews(viewData);\n        leaveView(viewData[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex, parentFirstTemplatePass) {\n        ngDevMode && assertDataInRange(adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, getViewData());\n        ngDevMode && assertNodeType(getTView().data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n            parentFirstTemplatePass && syncViewWithBlueprint(hostView);\n            detectChangesInternal(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LViewData instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LViewData is created.\n     * 3. Second <comp> is matched as a component and its LViewData is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LViewData was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getViewData())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var viewData = getViewData();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(viewData);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 8192 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, viewData, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LViewData or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param currentView The view where LViewData or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n     * @param state The LViewData or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(currentView, adjustedHostIndex, state) {\n        var tView = getTView();\n        var firstTemplatePass = getFirstTemplatePass();\n        if (currentView[TAIL]) {\n            currentView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        currentView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LViewData dirty. */\n    function markDirtyIfOnPush(viewData, viewIndex) {\n        var view = getComponentViewByIndex(viewIndex, viewData);\n        if (!(view[FLAGS] & 2 /* CheckAlways */)) {\n            view[FLAGS] |= 4 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(view) {\n        var currentView = view;\n        while (currentView && !(currentView[FLAGS] & 64 /* IsRoot */)) {\n            currentView[FLAGS] |= 4 /* Dirty */;\n            currentView = currentView[PARENT];\n        }\n        currentView[FLAGS] |= 4 /* Dirty */;\n        ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext should be defined');\n        var rootContext = currentView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLViewData(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        detectChangesInternal(getComponentViewByInstance(component), component);\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lViewData The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lViewData) {\n        tickRootContext(lViewData[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lViewData The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lViewData) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lViewData);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function detectChangesInternal(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView[FLAGS], component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, flags, component) {\n        if (viewQuery && (flags & 1 /* CreationMode */)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, component) {\n        if (viewQuery) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        return bindingUpdated(getViewData()[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(getViewData()[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var tView = getTView();\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        getViewData()[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextViewData = getContextViewData();\n        return loadInternal(index, contextViewData);\n    }\n    function loadQueryList(queryListIdx) {\n        var viewData = getViewData();\n        ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(queryListIdx, viewData[CONTENT_QUERIES]);\n        return viewData[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(index, getViewData());\n    }\n    /** Gets the current binding value. */\n    function getBinding(bindingIndex) {\n        var viewData = getViewData();\n        ngDevMode && assertDataInRange(viewData[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(viewData[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return viewData[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(bindingIndex, value) {\n        var viewData = getViewData();\n        var checkNoChangesMode = getCheckNoChangesMode();\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode && assertLessThan(bindingIndex, viewData.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (viewData[bindingIndex] === NO_CHANGE) {\n            viewData[bindingIndex] = value;\n        }\n        else if (isDifferent(viewData[bindingIndex], value, checkNoChangesMode)) {\n            throwErrorIfNoChangesMode(getCreationMode(), checkNoChangesMode, viewData[bindingIndex], value);\n            viewData[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates binding and returns the value. */\n    function updateBinding(bindingIndex, value) {\n        return getViewData()[bindingIndex] = value;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(bindingIndex, exp1);\n        return bindingUpdated(bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated(bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(bindingIndex, exp1, exp2);\n        return bindingUpdated2(bindingIndex + 2, exp3, exp4) || different;\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getViewData(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getViewData();\n        var tView = getTView();\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode.flags, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    function delegateToClassInput(tNode) {\n        return tNode.flags & 32768 /* hasClassInput */;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY$1 = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'Éµ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY$1, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = 0 /* Default */; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY$1;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY$1\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY$1;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & 4 /* SkipSelf */)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY$1) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY$1;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & 2 /* Self */)) {\n            value = parent.get(token, notFoundValue, 0 /* Default */);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY$1;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_view, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._view = _view;\n        }\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._viewContainerRef && viewAttached(this._view)) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._view);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._view, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._view); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._view[FLAGS] &= ~8 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._view[FLAGS] |= 8 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () {\n            var rendererFactory = getRendererFactory();\n            if (rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            detectChanges(this.context);\n            if (rendererFactory.end) {\n                rendererFactory.end();\n            }\n        };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) { this._viewContainerRef = vcRef; };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) { this._appRef = appRef; };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._view[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        return RootViewRef;\n    }(ViewRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getViewData());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context, 1 /* Create */);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getRenderer(), hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getViewData());\n    }\n    var NodeInjector$1 = /** @class */ (function () {\n        function NodeInjector$$1(_tNode, _hostView) {\n            this._tNode = _tNode;\n            this._hostView = _hostView;\n        }\n        NodeInjector$$1.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._hostView, token, notFoundValue);\n        };\n        return NodeInjector$$1;\n    }());\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector$1(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NullInjector() :\n                            new NodeInjector$1(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._view;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getViewData(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getViewData());\n    }\n\n    /**\n     * NOTE: The following functions might not be ideal for core usage in Angular...\n     *\n     * Each function below is designed\n     */\n    /**\n     * Returns the component instance associated with the target.\n     *\n     * If a DOM is used then it will return the component that\n     *    owns the view where the element is situated.\n     * If a component instance is used then it will return the\n     *    instance of the parent component depending on where\n     *    the component instance is exists in a template.\n     * If a directive instance is used then it will return the\n     *    component that contains that directive in it's template.\n     */\n    function getComponent(target) {\n        var context = loadContext(target);\n        if (context.component === undefined) {\n            var lViewData = context.lViewData;\n            while (lViewData) {\n                var ctx = lViewData[CONTEXT];\n                if (ctx && isComponentInstance(ctx)) {\n                    context.component = ctx;\n                    break;\n                }\n                lViewData = lViewData[FLAGS] & 64 /* IsRoot */ ? null : lViewData[PARENT];\n            }\n            if (context.component === undefined) {\n                context.component = null;\n            }\n        }\n        return context.component;\n    }\n    /**\n     * Returns the host component instance associated with the target.\n     *\n     * This will only return a component instance of the DOM node\n     * contains an instance of a component on it.\n     */\n    function getHostComponent(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        if (tNode.flags & 4096 /* isComponent */) {\n            var componentView = getComponentViewByIndex(context.nodeIndex, context.lViewData);\n            return componentView[CONTEXT];\n        }\n        return null;\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadContext(target).lViewData;\n        var rootLViewData = getRootView$1(lViewData);\n        return rootLViewData[CONTEXT];\n    }\n    /**\n     * Returns a list of all the components in the application\n     * that are have been bootstrapped.\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Returns the injector instance that is associated with\n     * the element, component or directive.\n     */\n    function getInjector(target) {\n        var context = loadContext(target);\n        var tNode = context.lViewData[TVIEW].data[context.nodeIndex];\n        return new NodeInjector$1(tNode, context.lViewData);\n    }\n    /**\n     * Returns a list of all the directives that are associated\n     * with the underlying target element.\n     */\n    function getDirectives(target) {\n        var context = loadContext(target);\n        if (context.directives === undefined) {\n            context.directives = discoverDirectives(context.nodeIndex, context.lViewData, false);\n        }\n        return context.directives || [];\n    }\n    /**\n     * Returns LContext associated with a target passed as an argument.\n     * Throws if a given target doesn't have associated LContext.\n     */\n    function loadContext(target) {\n        var context = getContext(target);\n        if (!context) {\n            throw new Error(ngDevMode ? 'Unable to find the given context data for the given target' :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LViewData` until\n     * reaching the root `LViewData`.\n     *\n     * @param componentOrView any component or view\n     */\n    function getRootView$1(componentOrView) {\n        var lViewData;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lViewData');\n            lViewData = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lViewData = readPatchedLViewData(componentOrView);\n        }\n        while (lViewData && !(lViewData[FLAGS] & 64 /* IsRoot */)) {\n            lViewData = lViewData[PARENT];\n        }\n        return lViewData;\n    }\n    /**\n     *  Retrieve map of local references (local reference name => element or directive instance).\n     */\n    function getLocalRefs(target) {\n        var context = loadContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lViewData, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ngDev).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ngDev';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getHostComponent', getHostComponent);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n            2 /* CheckAlways */ | 64 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window), opts.playerHandler || null);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n        rootView[INJECTOR] = opts.injector || null;\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, renderer, sanitizer);\n            component = createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            executeInitAndContentHooks(rootView);\n            detectChangesInternal(componentView, component);\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLViewData(renderer, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 4096 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(hostRNode, componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass)\n            prefillHostVars(tView, rootView, componentDef.hostVars);\n        setHostBindings(tView, rootView);\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLViewData(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        queueLifecycleHooks(dirIndex << 16 /* DirectiveStartingIndexShift */ | 1, rootTView);\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (directiveIndex, elementIndex) {\n                            superHostBindings_1(directiveIndex, elementIndex);\n                            prevHostBindings_1(directiveIndex, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature !== InheritDefinitionFeature) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var declaredToMinifiedInputs = definition.declaredInputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (declaredName) {\n            if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n                var minifiedKey = declaredToMinifiedInputs[declaredName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredName];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredName] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var declaredName in declaredToMinifiedInputs) {\n            _loop_1(declaredName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n            additionalProviders &&\n                deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = 0 /* Default */; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & 4 /* SkipSelf */)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Check for circular dependencies.\n            if (parents.has(defType)) {\n                throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                parents.add(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    parents.delete(defType);\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            if (def.providers != null) {\n                deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Circular dep for \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n            // no-args constructor.\n            return function () { return new token(); };\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider) {\n        var factory = providerToFactory(provider);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider.useClass || provider.provide);\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (value === void 0) { value = NOT_YET; }\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!value.useExisting;\n    }\n    function isFactoryProvider(value) {\n        return !!value.useFactory;\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var viewData = getViewData();\n        var tView = viewData[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var viewData = getViewData();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var previousOrParentTNode = getPreviousOrParentTNode();\n            var beginIndex = previousOrParentTNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = previousOrParentTNode.flags >> 16 /* DirectiveStartingIndexShift */;\n            var cptViewProvidersCount = previousOrParentTNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    viewData[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(previousOrParentTNode, viewData), viewData, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    previousOrParentTNode.flags += 1 << 16 /* DirectiveStartingIndexShift */;\n                    if (isViewProvider) {\n                        previousOrParentTNode.providerIndexes +=\n                            65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    viewData.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        function ComponentFactoryResolver$$1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () {\n            var useRaf = typeof requestAnimationFrame !== 'undefined' && typeof window !== 'undefined';\n            return useRaf ? requestAnimationFrame.bind(window) : setTimeout;\n        },\n    });\n    /**\n     * A function used to wrap the `RendererFactory2`.\n     * Used in tests to change the `RendererFactory2` into a `DebugRendererFactory2`.\n     */\n    var WRAP_RENDERER_FACTORY2 = new InjectionToken('WRAP_RENDERER_FACTORY2');\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        function ComponentFactory$$1(componentDef) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            var rendererFactory;\n            if (ngModule) {\n                var wrapper = ngModule.injector.get(WRAP_RENDERER_FACTORY2, function (v) { return v; });\n                rendererFactory = wrapper(ngModule.injector.get(RendererFactory2));\n            }\n            else {\n                rendererFactory = domRendererFactory3;\n            }\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 4 /* Dirty */ | 64 /* IsRoot */ :\n                2 /* CheckAlways */ | 64 /* IsRoot */;\n            var rootContext = ngModule && !isInternalRootView ?\n                ngModule.injector.get(ROOT_CONTEXT) :\n                createRootContext(requestAnimationFrame.bind(window));\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootView = createLViewData(renderer, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags);\n            rootView[INJECTOR] = ngModule && ngModule.injector || null;\n            // rootView is the parent when bootstrapping\n            var oldView = enterView(rootView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootView, renderer);\n                tElementNode = getTNode(0, rootView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(hostRNode, componentView, this.componentDef, rootView, rootContext, [LifecycleHooksFeature]);\n                // Execute the template in creation mode only, and then turn off the CreationMode flag\n                renderEmbeddedTemplate(componentView, componentView[TVIEW], component, 1 /* Create */);\n                componentView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            finally {\n                enterView(oldView, null);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, createElementRef(ElementRef, tElementNode, rootView));\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, rootView, injector, location) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(rootView);\n            _this.hostView._tViewNode = createViewNode(-1, rootView);\n            _this.injector = injector;\n            _this.componentType = componentType;\n            return _this;\n        }\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var i18nTagRegex = /{\\$([^}]+)}/g;\n    /**\n     * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n     * indexes of their corresponding expression nodes to return a list of instructions for each\n     * template function.\n     *\n     * Because embedded templates have different indexes for each placeholder, each parameter (except\n     * the translation) is an array, where each value corresponds to a different template, by order of\n     * appearance.\n     *\n     * @param translation A translation string where placeholders are represented by `{$name}`\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns A list of instructions used to translate each template.\n     */\n    function i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n        var translationParts = translation.split(i18nTagRegex);\n        var nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n        var instructions = (new Array(nbTemplates)).fill(undefined);\n        generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n        return instructions;\n    }\n    /**\n     * Internal function that reads the translation parts and generates a set of instructions for each\n     * template.\n     *\n     * See `i18nMapping()` for more details.\n     *\n     * @param tmplIndex The order of appearance of the template.\n     * 0 for the root template, following indexes match the order in `templateRoots`.\n     * @param partIndex The current index in `translationParts`.\n     * @param translationParts The translation string split into an array of placeholders and text\n     * elements.\n     * @param instructions The current list of instructions to update.\n     * @param elements An array containing, for each template, the maps of element placeholders and\n     * their indexes.\n     * @param expressions An array containing, for each template, the maps of expression placeholders\n     * and their indexes.\n     * @param templateRoots An array of template roots whose content should be ignored when\n     * generating the instructions for their parent template.\n     * @param lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n     * an ng-container.\n     *\n     * @returns the current index in `translationParts`\n     */\n    function generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n        var tmplInstructions = [];\n        var phVisited = [];\n        var openedTagCount = 0;\n        var maxIndex = 0;\n        var currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n        var currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n        instructions[tmplIndex] = tmplInstructions;\n        for (; partIndex < translationParts.length; partIndex++) {\n            // The value can either be text or the name of a placeholder (element/template root/expression)\n            var value = translationParts[partIndex];\n            // Odd indexes are placeholders\n            if (partIndex & 1) {\n                var phIndex = void 0;\n                if (currentElements && currentElements[value] !== undefined) {\n                    phIndex = currentElements[value];\n                    // The placeholder represents a DOM element, add an instruction to move it\n                    var templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                    if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                        // This is a template root, it has no closing tag, not treating it as an element\n                        tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                    }\n                    else {\n                        tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                        openedTagCount++;\n                    }\n                    phVisited.push(value);\n                }\n                else if (currentExpressions && currentExpressions[value] !== undefined) {\n                    phIndex = currentExpressions[value];\n                    // The placeholder represents an expression, add an instruction to move it\n                    tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                    phVisited.push(value);\n                }\n                else {\n                    // It is a closing tag\n                    tmplInstructions.push(-1073741824 /* CloseNode */);\n                    if (tmplIndex > 0) {\n                        openedTagCount--;\n                        // If we have reached the closing tag for this template, exit the loop\n                        if (openedTagCount === 0) {\n                            break;\n                        }\n                    }\n                }\n                if (phIndex !== undefined && phIndex > maxIndex) {\n                    maxIndex = phIndex;\n                }\n                if (templateRoots) {\n                    var newTmplIndex = templateRoots.indexOf(value) + 1;\n                    if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                        partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                    }\n                }\n            }\n            else if (value) {\n                // It's a non-empty string, create a text node\n                tmplInstructions.push(536870912 /* Text */, value);\n            }\n        }\n        // Add instructions to remove elements that are not used in the translation\n        if (elements) {\n            var tmplElements = elements[tmplIndex];\n            if (tmplElements) {\n                var phKeys = Object.keys(tmplElements);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplElements[ph];\n                        // Add an instruction to remove the element\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        // Add instructions to remove expressions that are not used in the translation\n        if (expressions) {\n            var tmplExpressions = expressions[tmplIndex];\n            if (tmplExpressions) {\n                var phKeys = Object.keys(tmplExpressions);\n                for (var i = 0; i < phKeys.length; i++) {\n                    var ph = phKeys[i];\n                    if (phVisited.indexOf(ph) === -1) {\n                        var index = tmplExpressions[ph];\n                        if (ngDevMode) {\n                            assertLessThan(index.toString(2).length, 28, \"Index \" + index + \" is too big and will overflow\");\n                        }\n                        // Add an instruction to remove the expression\n                        tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                        if (index > maxIndex) {\n                            maxIndex = index;\n                        }\n                    }\n                }\n            }\n        }\n        if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n            // The current parent is an ng-container and it has more children after the translation that we\n            // need to append to keep the order of the DOM nodes correct\n            for (var i = maxIndex + 1; i <= lastChildIndex; i++) {\n                if (ngDevMode) {\n                    assertLessThan(i.toString(2).length, 28, \"Index \" + i + \" is too big and will overflow\");\n                }\n                tmplInstructions.push(i | -1610612736 /* Any */);\n            }\n        }\n        return partIndex;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        if (ngDevMode) {\n            ngDevMode.rendererMoveNode++;\n        }\n        var viewData = getViewData();\n        // On first pass, re-organize node tree to put this node in the correct position.\n        var firstTemplatePass = viewData[TVIEW].firstTemplatePass;\n        if (firstTemplatePass) {\n            if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n                tNode.next = parentTNode.child;\n                parentTNode.child = tNode;\n            }\n            else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n                tNode.next = previousTNode.next;\n                previousTNode.next = tNode;\n            }\n            else {\n                tNode.next = null;\n            }\n            if (parentTNode !== viewData[HOST_NODE]) {\n                tNode.parent = parentTNode;\n            }\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    function i18nAttribute(index, attrs) {\n        // placeholder for i18nAttribute function\n    }\n    function i18nExp(expression) {\n        // placeholder for i18nExp function\n    }\n    function i18nStart(index, message, subTemplateIndex) {\n        if (subTemplateIndex === void 0) { subTemplateIndex = 0; }\n        // placeholder for i18nExp function\n    }\n    function i18nEnd() {\n        // placeholder for i18nEnd function\n    }\n    /**\n     * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n     *\n     * @param startIndex Index of the first element to translate (for instance the first child of the\n     * element with the i18n attribute).\n     * @param instructions The list of instructions to apply on the current view.\n     */\n    function i18nApply(startIndex, instructions) {\n        var viewData = getViewData();\n        if (ngDevMode) {\n            assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nApply should be called before any binding');\n        }\n        if (!instructions) {\n            return;\n        }\n        var renderer = getRenderer();\n        var startTNode = getTNode(startIndex, viewData);\n        var localParentTNode = startTNode.parent || viewData[HOST_NODE];\n        var localPreviousTNode = localParentTNode;\n        resetComponentState(); // We don't want to add to the tree with the wrong previous node\n        for (var i = 0; i < instructions.length; i++) {\n            var instruction = instructions[i];\n            switch (instruction & -536870912 /* InstructionMask */) {\n                case 1073741824 /* Element */:\n                    var elementTNode = getTNode(instruction & 536870911 /* IndexMask */, viewData);\n                    localPreviousTNode = appendI18nNode(elementTNode, localParentTNode, localPreviousTNode);\n                    localParentTNode = elementTNode;\n                    break;\n                case 1610612736 /* Expression */:\n                case -2147483648 /* TemplateRoot */:\n                case -1610612736 /* Any */:\n                    var nodeIndex = instruction & 536870911 /* IndexMask */;\n                    localPreviousTNode =\n                        appendI18nNode(getTNode(nodeIndex, viewData), localParentTNode, localPreviousTNode);\n                    break;\n                case 536870912 /* Text */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererCreateTextNode++;\n                    }\n                    var value = instructions[++i];\n                    var textRNode = createTextNode(value, renderer);\n                    // If we were to only create a `RNode` then projections won't move the text.\n                    // Create text node at the current end of viewData. Must subtract header offset because\n                    // createNodeAtIndex takes a raw index (not adjusted by header offset).\n                    adjustBlueprintForNewNode(viewData);\n                    var textTNode = createNodeAtIndex(viewData.length - 1 - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                    localPreviousTNode = appendI18nNode(textTNode, localParentTNode, localPreviousTNode);\n                    resetComponentState();\n                    break;\n                case -1073741824 /* CloseNode */:\n                    localPreviousTNode = localParentTNode;\n                    localParentTNode = localParentTNode.parent || viewData[HOST_NODE];\n                    break;\n                case -536870912 /* RemoveNode */:\n                    if (ngDevMode) {\n                        ngDevMode.rendererRemoveNode++;\n                    }\n                    var removeIndex = instruction & 536870911 /* IndexMask */;\n                    var removedElement = getNativeByIndex(removeIndex, viewData);\n                    var removedTNode = getTNode(removeIndex, viewData);\n                    removeChild(removedTNode, removedElement || null, viewData);\n                    var slotValue = load(removeIndex);\n                    if (isLContainer(slotValue)) {\n                        var lContainer = slotValue;\n                        if (removedTNode.type !== 0 /* Container */) {\n                            removeChild(removedTNode, lContainer[NATIVE] || null, viewData);\n                        }\n                        removedTNode.detached = true;\n                        lContainer[RENDER_PARENT] = null;\n                    }\n                    break;\n            }\n        }\n    }\n    /**\n     * Takes a translation string and the initial list of expressions and returns a list of instructions\n     * that will be used to translate an attribute.\n     * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n     * value will be concatenated into the final translation.\n     */\n    function i18nExpMapping(translation, placeholders) {\n        var staticText = translation.split(i18nTagRegex);\n        // odd indexes are placeholders\n        for (var i = 1; i < staticText.length; i += 2) {\n            staticText[i] = placeholders[staticText[i]];\n        }\n        return staticText;\n    }\n    /**\n     * Checks if the value of an expression has changed and replaces it by its value in a translation,\n     * or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation1(instructions, v0) {\n        var different = bindingUpdated(getViewData()[BINDING_INDEX]++, v0);\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                res += stringify$1(v0);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation2(instructions, v0, v1) {\n        var viewData = getViewData();\n        var different = bindingUpdated2(viewData[BINDING_INDEX], v0, v1);\n        viewData[BINDING_INDEX] += 2;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b1 ? v1 : v0;\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation3(instructions, v0, v1, v2) {\n        var viewData = getViewData();\n        var different = bindingUpdated3(viewData[BINDING_INDEX], v0, v1, v2);\n        viewData[BINDING_INDEX] += 3;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? v2 : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation4(instructions, v0, v1, v2, v3) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        viewData[BINDING_INDEX] += 4;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated(viewData[BINDING_INDEX] + 4, v4) || different;\n        viewData[BINDING_INDEX] += 5;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */ function i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated2(viewData[BINDING_INDEX] + 4, v4, v5) || different;\n        viewData[BINDING_INDEX] += 6;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated3(viewData[BINDING_INDEX] + 4, v4, v5, v6) || different;\n        viewData[BINDING_INDEX] += 7;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n     * translation, or returns NO_CHANGE.\n     *\n     * @param instructions A list of instructions that will be used to translate an attribute.\n     * @param v0 value checked for change.\n     * @param v1 value checked for change.\n     * @param v2 value checked for change.\n     * @param v3 value checked for change.\n     * @param v4 value checked for change.\n     * @param v5 value checked for change.\n     * @param v6 value checked for change.\n     * @param v7 value checked for change.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n        var viewData = getViewData();\n        var different = bindingUpdated4(viewData[BINDING_INDEX], v0, v1, v2, v3);\n        different = bindingUpdated4(viewData[BINDING_INDEX] + 4, v4, v5, v6, v7) || different;\n        viewData[BINDING_INDEX] += 8;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are bindings\n            if (i & 1) {\n                // Extract bits\n                var idx = instructions[i];\n                var b4 = idx & 4;\n                var b2 = idx & 2;\n                var b1 = idx & 1;\n                // Get the value from the argument vx where x = idx\n                var value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n                res += stringify$1(value);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n    /**\n     * Create a translated interpolation binding with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n     * because there is no need to create an array of expressions and iterate over it.\n     *\n     * @returns The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function i18nInterpolationV(instructions, values) {\n        var viewData = getViewData();\n        var different = false;\n        for (var i = 0; i < values.length; i++) {\n            // Check if bindings have changed\n            bindingUpdated(viewData[BINDING_INDEX]++, values[i]) && (different = true);\n        }\n        if (!different) {\n            return NO_CHANGE;\n        }\n        var res = '';\n        for (var i = 0; i < instructions.length; i++) {\n            // Odd indexes are placeholders\n            if (i & 1) {\n                res += stringify$1(values[instructions[i]]);\n            }\n            else {\n                res += instructions[i];\n            }\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useFactory: function () { return new ComponentFactoryResolver$1(); },\n        deps: [],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, parentInjector) {\n            var _this = _super.call(this) || this;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                COMPONENT_FACTORY_RESOLVER, {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                }\n            ];\n            _this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n            _this.instance = _this.injector.get(ngModuleType);\n            _this.componentFactoryResolver = new ComponentFactoryResolver$1();\n            return _this;\n        }\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return getCreationMode() ?\n            updateBinding(bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(bindingIndex, exp) ?\n            updateBinding(bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated2(bindingIndex, exp1, exp2) ?\n            updateBinding(bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated3(bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(bindingIndex + 4, exp5) || different ?\n            updateBinding(bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(bindingIndex + 6, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = bindingUpdated4(bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getTView();\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1);\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2);\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3);\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4);\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values);\n    }\n    function isPure(index) {\n        return getTView().data[index + HEADER_OFFSET].pure;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterates over all the directives for a node and returns index of a directive for a given type.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param currentView The view we are currently processing\n     * @param type Type of a directive to look for.\n     * @returns Index of a found directive or null when none found.\n     */\n    function getIdxOfMatchingDirective(tNode, currentView, type) {\n        var defs = currentView[TVIEW].data;\n        if (defs) {\n            var flags = tNode.flags;\n            var count = flags & 4095 /* DirectiveCountMask */;\n            var start = flags >> 16 /* DirectiveStartingIndexShift */;\n            var end = start + count;\n            for (var i = start; i < end; i++) {\n                var def = defs[i];\n                if (def.type === type) {\n                    return i;\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryRead(tNode, currentView, read) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = getIdxOfMatchingDirective(tNode, currentView, read);\n            if (matchingIdx !== null) {\n                return currentView[matchingIdx];\n            }\n        }\n        return null;\n    }\n    function queryReadByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function add(query, tNode) {\n        var currentView = getViewData();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                // if read token and / or strategy is not specified, use type as read token\n                var result = queryRead(tNode, currentView, predicate.read || type);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var directiveIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (directiveIdx !== null) {\n                        var result = null;\n                        if (predicate.read) {\n                            result = queryRead(tNode, currentView, predicate.read);\n                        }\n                        else {\n                            if (directiveIdx > -1) {\n                                result = currentView[directiveIdx];\n                            }\n                            else {\n                                // if read token and / or strategy is not specified,\n                                // detect it using appropriate tNode type\n                                result = queryReadByTNodeType(tNode, currentView);\n                            }\n                        }\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent();\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(null, queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type) ? true : false;\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (e) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (e) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts`s have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var s = getCurrentSanitizer();\n        if (s) {\n            return s.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ÉµdefineBase': defineBase,\n        'ÉµdefineComponent': defineComponent,\n        'ÉµdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ÉµdefineNgModule': defineNgModule,\n        'ÉµdefinePipe': definePipe,\n        'ÉµdirectiveInject': directiveInject,\n        'ÉµgetFactoryOf': getFactoryOf,\n        'ÉµgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ÉµinjectAttribute': injectAttribute,\n        'ÉµtemplateRefExtractor': templateRefExtractor,\n        'ÉµNgOnChangesFeature': NgOnChangesFeature,\n        'ÉµProvidersFeature': ProvidersFeature,\n        'ÉµInheritDefinitionFeature': InheritDefinitionFeature,\n        'ÉµelementAttribute': elementAttribute,\n        'Éµbind': bind,\n        'Éµcontainer': container,\n        'ÉµnextContext': nextContext,\n        'ÉµcontainerRefreshStart': containerRefreshStart,\n        'ÉµcontainerRefreshEnd': containerRefreshEnd,\n        'ÉµloadQueryList': loadQueryList,\n        'ÉµnamespaceHTML': namespaceHTML,\n        'ÉµnamespaceMathML': namespaceMathML,\n        'ÉµnamespaceSVG': namespaceSVG,\n        'ÉµenableBindings': enableBindings,\n        'ÉµdisableBindings': disableBindings,\n        'ÉµelementStart': elementStart,\n        'ÉµelementEnd': elementEnd,\n        'Éµelement': element,\n        'ÉµEC': elementContainerStart,\n        'ÉµeC': elementContainerEnd,\n        'ÉµpureFunction0': pureFunction0,\n        'ÉµpureFunction1': pureFunction1,\n        'ÉµpureFunction2': pureFunction2,\n        'ÉµpureFunction3': pureFunction3,\n        'ÉµpureFunction4': pureFunction4,\n        'ÉµpureFunction5': pureFunction5,\n        'ÉµpureFunction6': pureFunction6,\n        'ÉµpureFunction7': pureFunction7,\n        'ÉµpureFunction8': pureFunction8,\n        'ÉµpureFunctionV': pureFunctionV,\n        'ÉµgetCurrentView': getCurrentView,\n        'ÉµrestoreView': restoreView,\n        'Éµinterpolation1': interpolation1,\n        'Éµinterpolation2': interpolation2,\n        'Éµinterpolation3': interpolation3,\n        'Éµinterpolation4': interpolation4,\n        'Éµinterpolation5': interpolation5,\n        'Éµinterpolation6': interpolation6,\n        'Éµinterpolation7': interpolation7,\n        'Éµinterpolation8': interpolation8,\n        'ÉµinterpolationV': interpolationV,\n        'ÉµelementClassProp': elementClassProp,\n        'Éµlistener': listener,\n        'Éµload': load,\n        'Éµprojection': projection,\n        'ÉµelementProperty': elementProperty,\n        'ÉµpipeBind1': pipeBind1,\n        'ÉµpipeBind2': pipeBind2,\n        'ÉµpipeBind3': pipeBind3,\n        'ÉµpipeBind4': pipeBind4,\n        'ÉµpipeBindV': pipeBindV,\n        'ÉµprojectionDef': projectionDef,\n        'Éµpipe': pipe,\n        'Éµquery': query,\n        'ÉµqueryRefresh': queryRefresh,\n        'ÉµregisterContentQuery': registerContentQuery,\n        'Éµreference': reference,\n        'ÉµelementStyling': elementStyling,\n        'ÉµelementStylingMap': elementStylingMap,\n        'ÉµelementStyleProp': elementStyleProp,\n        'ÉµelementStylingApply': elementStylingApply,\n        'Éµtemplate': template,\n        'Éµtext': text,\n        'ÉµtextBinding': textBinding,\n        'ÉµembeddedViewStart': embeddedViewStart,\n        'ÉµembeddedViewEnd': embeddedViewEnd,\n        'Éµi18nAttribute': i18nAttribute,\n        'Éµi18nExp': i18nExp,\n        'Éµi18nStart': i18nStart,\n        'Éµi18nEnd': i18nEnd,\n        'Éµi18nApply': i18nApply,\n        'ÉµsanitizeHtml': sanitizeHtml,\n        'ÉµsanitizeStyle': sanitizeStyle,\n        'ÉµdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ÉµsanitizeResourceUrl': sanitizeResourceUrl,\n        'ÉµsanitizeScript': sanitizeScript,\n        'ÉµsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        return deps.map(function (dep) { return reflectDependency(dep); });\n    }\n    function reflectDependency(dep) {\n        var meta = {\n            token: new compiler.LiteralExpr(null),\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = new compiler.WrappedNodeExpr(token);\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = new compiler.WrappedNodeExpr(param.token);\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = new compiler.LiteralExpr(param.attributeName);\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        compileNgModuleDefs(moduleType, ngModule);\n        setScopeOnDeclaredComponents(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            get: function () {\n                if (ngModuleDef === null) {\n                    var meta = {\n                        type: wrap(moduleType),\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2).map(wrapReference),\n                        declarations: declarations.map(wrapReference),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2)\n                            .map(expandModuleWithProviders)\n                            .map(wrapReference),\n                        emitInline: true,\n                    };\n                    var res = compiler.compileNgModule(meta);\n                    ngModuleDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", []);\n                }\n                return ngModuleDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    var meta = {\n                        name: moduleType.name,\n                        type: wrap(moduleType),\n                        deps: reflectDependencies(moduleType),\n                        providers: new compiler.WrappedNodeExpr(ngModule.providers || EMPTY_ARRAY$2),\n                        imports: new compiler.WrappedNodeExpr([\n                            ngModule.imports || EMPTY_ARRAY$2,\n                            ngModule.exports || EMPTY_ARRAY$2,\n                        ]),\n                    };\n                    var res = compiler.compileInjector(meta);\n                    ngInjectorDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", res.statements);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getNgModuleDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value)));\n            }\n            else {\n                out.push(value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function wrap(value) {\n        return new compiler.WrappedNodeExpr(value);\n    }\n    function wrapReference(value) {\n        var wrapped = wrap(value);\n        return { value: wrapped, type: wrapped };\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    // The ConstantPool is a requirement of the JIT'er.\n                    var constantPool = new compiler.ConstantPool();\n                    // Parse the template and check for errors.\n                    var template = compiler.parseTemplate(metadata.template, \"ng://\" + stringify(type) + \"/template.html\", {\n                        preserveWhitespaces: metadata.preserveWhitespaces || false,\n                    }, '');\n                    if (template.errors !== undefined) {\n                        var errors = template.errors.map(function (err) { return err.toString(); }).join(', ');\n                        throw new Error(\"Errors during JIT compilation of template for \" + stringify(type) + \": \" + errors);\n                    }\n                    var animations = metadata.animations !== null ? new compiler.WrappedNodeExpr(metadata.animations) : null;\n                    // Compile the component metadata, including template, into an expression.\n                    var res = compiler.compileComponentFromMetadata(__assign({}, directiveMetadata(type, metadata), { template: template, directives: new Map(), pipes: new Map(), viewQueries: extractQueriesMetadata(getReflect().propMetadata(type), isViewQuery), wrapDirectivesAndPipesInClosure: false, styles: metadata.styles || [], encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, animations: animations, viewProviders: metadata.viewProviders ? new compiler.WrappedNodeExpr(metadata.viewProviders) :\n                            null }), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngComponentDef = compiler.jitExpression(res.expression, angularCoreEnv, \"ng://\" + type.name + \"/ngComponentDef.js\", preStatements);\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var constantPool = new compiler.ConstantPool();\n                    var sourceMapUrl = \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\";\n                    var res = compiler.compileDirectiveFromMetadata(directiveMetadata(type, directive), constantPool, compiler.makeBindingParser());\n                    var preStatements = __spread(constantPool.statements, res.statements);\n                    ngDirectiveDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, preStatements);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        var host = extractHostBindings(metadata, propMetadata);\n        var inputsFromMetadata = parseInputOutputs(metadata.inputs || []);\n        var outputsFromMetadata = parseInputOutputs(metadata.outputs || []);\n        var inputsFromType = {};\n        var outputsFromType = {};\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isInput(ann)) {\n                        inputsFromType[field] =\n                            ann.bindingPropertyName ? [ann.bindingPropertyName, field] : field;\n                    }\n                    else if (isOutput(ann)) {\n                        outputsFromType[field] = ann.bindingPropertyName || field;\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return {\n            name: type.name,\n            type: new compiler.WrappedNodeExpr(type),\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type), host: host,\n            inputs: __assign({}, inputsFromMetadata, inputsFromType),\n            outputs: __assign({}, outputsFromMetadata, outputsFromType),\n            queries: extractQueriesMetadata(propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers ? new compiler.WrappedNodeExpr(metadata.providers) : null\n        };\n    }\n    function extractHostBindings(metadata, propMetadata) {\n        // First parse the declarations from the metadata.\n        var _a = compiler.parseHostBindings(metadata.host || {}), attributes = _a.attributes, listeners = _a.listeners, properties = _a.properties, animations = _a.animations;\n        if (Object.keys(animations).length > 0) {\n            throw new Error(\"Animation bindings are as-of-yet unsupported in Ivy\");\n        }\n        var _loop_2 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isHostBinding(ann)) {\n                        properties[ann.hostPropertyName || field] = field;\n                    }\n                    else if (isHostListener(ann)) {\n                        listeners[ann.eventName || field] = field + \"(\" + (ann.args || []).join(',') + \")\";\n                    }\n                });\n            }\n        };\n        // Next, loop over the properties of the object, looking for @HostBinding and @HostListener.\n        for (var field in propMetadata) {\n            _loop_2(field);\n        }\n        return { attributes: attributes, listeners: listeners, properties: properties };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : new compiler.WrappedNodeExpr(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? new compiler.WrappedNodeExpr(ann.read) : null\n        };\n    }\n    function extractQueriesMetadata(propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_3 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_3(field);\n        }\n        return queriesMeta;\n    }\n    function isInput(value) {\n        return value.ngMetadataName === 'Input';\n    }\n    function isOutput(value) {\n        return value.ngMetadataName === 'Output';\n    }\n    function isHostBinding(value) {\n        return value.ngMetadataName === 'HostBinding';\n    }\n    function isHostListener(value) {\n        return value.ngMetadataName === 'HostListener';\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n    function parseInputOutputs(values) {\n        return values.reduce(function (map, value) {\n            var _a = __read(splitByComma(value), 2), field = _a[0], property = _a[1];\n            map[field] = property || field;\n            return map;\n        }, {});\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    var sourceMapUrl = \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\";\n                    var name_1 = type.name;\n                    var res = compiler.compilePipeFromMetadata({\n                        name: name_1,\n                        type: new compiler.WrappedNodeExpr(type),\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true,\n                    });\n                    ngPipeDef = compiler.jitExpression(res.expression, angularCoreEnv, sourceMapUrl, res.statements);\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @usageNotes\n     *\n     * ### Using animations\n     *\n     * The following snippet shows an animation trigger in a component's\n     * metadata. The trigger is attached to an element in the component's\n     * template, using \"@_trigger_name_\", and a state expression that is evaluated\n     * at run time to determine whether the animation should start.\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'animation-cmp',\n     *   templateUrl: 'animation-cmp.html',\n     *   animations: [\n     *     trigger('myTriggerName', [\n     *       state('on', style({ opacity: 1 }),\n     *       state('off', style({ opacity: 0 }),\n     *       transition('on => off', [\n     *         animate(\"1s\")\n     *       ])\n     *     ])\n     *   ]\n     * })\n     * ```\n     *\n     * ```html\n     * <!-- animation-cmp.html -->\n     * <div @myTriggerName=\"expression\">...</div>\n     * ```\n     *\n     * ### Preserving whitespace\n     *\n     * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n     * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n     * To change the default setting for all components in your application, set\n     * the `preserveWhitespaces` option of the AOT compiler.\n     *\n     * Current implementation removes whitespace characters as follows:\n     * - Trims all whitespaces at the beginning and the end of a template.\n     * - Removes whitespace-only text nodes. For example,\n     * `<button>Action 1</button>  <button>Action 2</button>` becomes\n     * `<button>Action 1</button><button>Action 2</button>`.\n     * - Replaces a series of whitespace characters in text nodes with a single space.\n     * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n     * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n     * where whitespace characters are significant.\n     *\n     * Note that these transformations can influence DOM nodes layout, although impact\n     * should be minimal.\n     *\n     * You can override the default behavior to preserve whitespace characters\n     * in certain fragments of a template. For example, you can exclude an entire\n     * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n     *\n     * ```html\n     * <div ngPreserveWhitespaces>\n     *     whitespaces are preserved here\n     *     <span>    and here </span>\n     * </div>\n     * ```\n     *\n     * You can force a single space to be preserved in a text node by using `&ngsp;`,\n     * which is replaced with a space character by Angular's template\n     * compiler:\n     *\n     * ```html\n     * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n     * the `preserveWhitespaces` option is set to `false`.\n     *\n     * ```html\n     * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n     * <!-->compiled to be equivalent to:</>\n     *  <a>Spaces</a> <a>between</a> <a>links.</a>\n     * ```\n     *\n     * To preserve sequences of whitespace characters, use the\n     * `ngPreserveWhitespaces` attribute.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Éµ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: Éµ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.1.0-beta.0+85.sha-904b91d');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n        var meta = srcMeta || { providedIn: null };\n        var def = null;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Check whether the injectable metadata includes a provider specification.\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var ctorDeps = reflectDependencies(type);\n                    var userDeps = undefined;\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        userDeps = convertDependencies(meta.deps);\n                    }\n                    // Decide which flavor of factory to generate, based on the provider specified.\n                    // Only one of the use* fields should be set.\n                    var useClass = undefined;\n                    var useFactory = undefined;\n                    var useValue = undefined;\n                    var useExisting = undefined;\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        useClass = new compiler.WrappedNodeExpr(type);\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        useClass = new compiler.WrappedNodeExpr(meta.useClass);\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        useValue = new compiler.WrappedNodeExpr(meta.useValue);\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        useFactory = new compiler.WrappedNodeExpr(meta.useFactory);\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        useExisting = new compiler.WrappedNodeExpr(meta.useExisting);\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    var _a = compiler.compileInjectable({\n                        name: type.name,\n                        type: new compiler.WrappedNodeExpr(type),\n                        providedIn: computeProvidedIn(meta.providedIn),\n                        useClass: useClass,\n                        useFactory: useFactory,\n                        useValue: useValue,\n                        useExisting: useExisting,\n                        ctorDeps: ctorDeps,\n                        userDeps: userDeps,\n                    }), expression = _a.expression, statements = _a.statements;\n                    def = compiler.jitExpression(expression, angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", statements);\n                }\n                return def;\n            },\n        });\n    }\n    function computeProvidedIn(providedIn) {\n        if (providedIn == null || typeof providedIn === 'string') {\n            return new compiler.LiteralExpr(providedIn);\n        }\n        else {\n            return new compiler.WrappedNodeExpr(providedIn);\n        }\n    }\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    var Éµ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: Éµ0$3 });\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n        }\n        /**\n         * Compiles the given NgModule and all of its components. All templates of the components listed\n         * in `entryComponents` have to be inlined.\n         */\n        Compiler.prototype.compileModuleSync = function (moduleType) { throw _throwError(); };\n        /**\n         * Compiles the given NgModule and all of its components\n         */\n        Compiler.prototype.compileModuleAsync = function (moduleType) { throw _throwError(); };\n        /**\n         * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n         */\n        Compiler.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n            throw _throwError();\n        };\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this._watchAngularEvents();\n            _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler$$1 = compilerFactory.createCompiler([options]);\n        return compiler$$1.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    var moduleFactories = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = moduleFactories.get(id);\n        if (existing) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n        }\n        moduleFactories.set(id, factory);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    function getModuleFactory(id) {\n        var factory = moduleFactories.get(id);\n        if (!factory)\n            throw new Error(\"No module with ID \" + id + \" loaded\");\n        return factory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugNode = /** @class */ (function () {\n        function DebugNode(nativeNode, parent, _debugContext) {\n            this.nativeNode = nativeNode;\n            this._debugContext = _debugContext;\n            this.listeners = [];\n            this.parent = null;\n            if (parent && parent instanceof DebugElement) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode;\n    }());\n    /**\n     * @publicApi\n     */\n    var DebugElement = /** @class */ (function (_super) {\n        __extends(DebugElement, _super);\n        function DebugElement(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    c.parent = _this;\n                });\n            }\n        };\n        DebugElement.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement.prototype, \"children\", {\n            get: function () {\n                return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement;\n    }(DebugNode));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    /**\n     * @publicApi\n     */\n    function getDebugNode(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n            var flags = 0 /* None */;\n            if (injectFlags & 4 /* SkipSelf */) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & 2 /* Self */) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext() || (ivyEnabled ? this.createDebugContext(el) : null);\n            if (debugCtx) {\n                indexDebugNode(new DebugElement(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adapts the DebugRendererFactory2 to create a DebugRenderer2 specific for IVY.\n     *\n     * The created DebugRenderer know how to create a Debug Context specific to IVY.\n     */\n    var Render3DebugRendererFactory2 = /** @class */ (function (_super) {\n        __extends(Render3DebugRendererFactory2, _super);\n        function Render3DebugRendererFactory2() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        Render3DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            var renderer = _super.prototype.createRenderer.call(this, element, renderData);\n            renderer.debugContextFactory = function (nativeElement) { return new Render3DebugContext(nativeElement); };\n            return renderer;\n        };\n        return Render3DebugRendererFactory2;\n    }(DebugRendererFactory2));\n    /**\n     * Stores context information about view nodes.\n     *\n     * Used in tests to retrieve information those nodes.\n     */\n    var Render3DebugContext = /** @class */ (function () {\n        function Render3DebugContext(_nativeNode) {\n            this._nativeNode = _nativeNode;\n        }\n        Object.defineProperty(Render3DebugContext.prototype, \"nodeIndex\", {\n            get: function () { return loadContext(this._nativeNode).nodeIndex; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"view\", {\n            get: function () { return loadContext(this._nativeNode).lViewData; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"injector\", {\n            get: function () { return getInjector(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"component\", {\n            get: function () { return getHostComponent(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"providerTokens\", {\n            get: function () {\n                var lDebugCtx = loadContext(this._nativeNode);\n                var lViewData = lDebugCtx.lViewData;\n                var tNode = lViewData[TVIEW].data[lDebugCtx.nodeIndex];\n                var directivesCount = tNode.flags & 4095 /* DirectiveCountMask */;\n                if (directivesCount > 0) {\n                    var directiveIdxStart = tNode.flags >> 16 /* DirectiveStartingIndexShift */;\n                    var directiveIdxEnd = directiveIdxStart + directivesCount;\n                    var viewDirectiveDefs = this.view[TVIEW].data;\n                    var directiveDefs = viewDirectiveDefs.slice(directiveIdxStart, directiveIdxEnd);\n                    return directiveDefs.map(function (directiveDef) { return directiveDef.type; });\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"references\", {\n            get: function () { return getLocalRefs(this._nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"context\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"componentRenderElement\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Render3DebugContext.prototype, \"renderNode\", {\n            // TODO(pk): check previous implementation and re-implement\n            get: function () { throw new Error('Not implemented in ivy'); },\n            enumerable: true,\n            configurable: true\n        });\n        // TODO(pk): check previous implementation and re-implement\n        Render3DebugContext.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            console.error.apply(console, __spread(values));\n        };\n        return Render3DebugContext;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lViewData = context.lViewData;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lViewData);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     */\n    function getPlayers(ref) {\n        var context = getContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex - HEADER_OFFSET, context.lViewData);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_packages_core_core_p = APPLICATION_MODULE_PROVIDERS;\n    exports.Éµangular_packages_core_core_m = _iterableDiffersFactory;\n    exports.Éµangular_packages_core_core_n = _keyValueDiffersFactory;\n    exports.Éµangular_packages_core_core_o = _localeFactory;\n    exports.Éµangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.Éµangular_packages_core_core_k = DefaultIterableDifferFactory;\n    exports.Éµangular_packages_core_core_l = DefaultKeyValueDifferFactory;\n    exports.Éµangular_packages_core_core_c = injectInjectorOnly;\n    exports.Éµangular_packages_core_core_d = ReflectiveInjector_;\n    exports.Éµangular_packages_core_core_e = ReflectiveDependency;\n    exports.Éµangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.Éµangular_packages_core_core_q = wtfEnabled;\n    exports.Éµangular_packages_core_core_s = createScope;\n    exports.Éµangular_packages_core_core_r = detectWTF;\n    exports.Éµangular_packages_core_core_v = endTimeRange;\n    exports.Éµangular_packages_core_core_t = leave;\n    exports.Éµangular_packages_core_core_u = startTimeRange;\n    exports.Éµangular_packages_core_core_ba = getOrCreateInjectable;\n    exports.Éµangular_packages_core_core_z = injectAttributeImpl;\n    exports.Éµangular_packages_core_core_bh = NG_INJECTABLE_DEF;\n    exports.Éµangular_packages_core_core_bb = bindingUpdated;\n    exports.Éµangular_packages_core_core_bc = getPreviousOrParentTNode;\n    exports.Éµangular_packages_core_core_bd = getViewData;\n    exports.Éµangular_packages_core_core_be = nextContextImpl;\n    exports.Éµangular_packages_core_core_bg = BoundPlayerFactory;\n    exports.Éµangular_packages_core_core_bk = loadInternal;\n    exports.Éµangular_packages_core_core_h = createElementRef;\n    exports.Éµangular_packages_core_core_i = createTemplateRef;\n    exports.Éµangular_packages_core_core_j = createViewRef;\n    exports.Éµangular_packages_core_core_a = makeParamDecorator;\n    exports.Éµangular_packages_core_core_b = makePropDecorator;\n    exports.Éµangular_packages_core_core_bi = getClosureSafeProperty;\n    exports.Éµangular_packages_core_core_w = _def;\n    exports.Éµangular_packages_core_core_x = DebugRendererFactory2;\n    exports.Éµangular_packages_core_core_y = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ÉµNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ÉµdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ÉµdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ÉµdevModeEqual = devModeEqual;\n    exports.ÉµisListLikeIterable = isListLikeIterable;\n    exports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ÉµConsole = Console;\n    exports.ÉµgetInjectableDef = getInjectableDef;\n    exports.Éµinject = inject;\n    exports.ÉµsetCurrentInjector = setCurrentInjector;\n    exports.ÉµAPP_ROOT = APP_ROOT;\n    exports.ÉµivyEnabled = ivyEnabled;\n    exports.ÉµComponentFactory = ComponentFactory;\n    exports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ÉµresolveComponentResources = resolveComponentResources;\n    exports.ÉµReflectionCapabilities = ReflectionCapabilities;\n    exports.ÉµRenderDebugInfo = RenderDebugInfo;\n    exports.Éµ_sanitizeHtml = _sanitizeHtml;\n    exports.Éµ_sanitizeStyle = _sanitizeStyle;\n    exports.Éµ_sanitizeUrl = _sanitizeUrl;\n    exports.Éµglobal = _global;\n    exports.ÉµlooseIdentical = looseIdentical;\n    exports.Éµstringify = stringify;\n    exports.ÉµmakeDecorator = makeDecorator;\n    exports.ÉµisObservable = isObservable;\n    exports.ÉµisPromise = isPromise;\n    exports.ÉµclearOverrides = clearOverrides;\n    exports.ÉµinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ÉµoverrideComponentView = overrideComponentView;\n    exports.ÉµoverrideProvider = overrideProvider;\n    exports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\n    exports.ÉµdefineBase = defineBase;\n    exports.ÉµdefineComponent = defineComponent;\n    exports.ÉµdefineDirective = defineDirective;\n    exports.ÉµdefinePipe = definePipe;\n    exports.ÉµdefineNgModule = defineNgModule;\n    exports.ÉµdetectChanges = detectChanges;\n    exports.ÉµrenderComponent = renderComponent;\n    exports.ÉµRender3ComponentFactory = ComponentFactory$1;\n    exports.ÉµRender3ComponentRef = ComponentRef$1;\n    exports.ÉµdirectiveInject = directiveInject;\n    exports.ÉµinjectAttribute = injectAttribute;\n    exports.ÉµgetFactoryOf = getFactoryOf;\n    exports.ÉµgetInheritedFactory = getInheritedFactory;\n    exports.ÉµtemplateRefExtractor = templateRefExtractor;\n    exports.ÉµProvidersResolver = ProvidersFeature;\n    exports.ÉµInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ÉµNgOnChangesFeature = NgOnChangesFeature;\n    exports.ÉµRender3NgModuleRef = NgModuleRef$1;\n    exports.ÉµmarkDirty = markDirty;\n    exports.ÉµNgModuleFactory = NgModuleFactory$1;\n    exports.ÉµNO_CHANGE = NO_CHANGE;\n    exports.Éµcontainer = container;\n    exports.ÉµnextContext = nextContext;\n    exports.ÉµelementStart = elementStart;\n    exports.ÉµnamespaceHTML = namespaceHTML;\n    exports.ÉµnamespaceMathML = namespaceMathML;\n    exports.ÉµnamespaceSVG = namespaceSVG;\n    exports.Éµelement = element;\n    exports.Éµlistener = listener;\n    exports.Éµtext = text;\n    exports.ÉµembeddedViewStart = embeddedViewStart;\n    exports.Éµquery = query;\n    exports.ÉµregisterContentQuery = registerContentQuery;\n    exports.Éµprojection = projection;\n    exports.Éµbind = bind;\n    exports.Éµinterpolation1 = interpolation1;\n    exports.Éµinterpolation2 = interpolation2;\n    exports.Éµinterpolation3 = interpolation3;\n    exports.Éµinterpolation4 = interpolation4;\n    exports.Éµinterpolation5 = interpolation5;\n    exports.Éµinterpolation6 = interpolation6;\n    exports.Éµinterpolation7 = interpolation7;\n    exports.Éµinterpolation8 = interpolation8;\n    exports.ÉµinterpolationV = interpolationV;\n    exports.ÉµpipeBind1 = pipeBind1;\n    exports.ÉµpipeBind2 = pipeBind2;\n    exports.ÉµpipeBind3 = pipeBind3;\n    exports.ÉµpipeBind4 = pipeBind4;\n    exports.ÉµpipeBindV = pipeBindV;\n    exports.ÉµpureFunction0 = pureFunction0;\n    exports.ÉµpureFunction1 = pureFunction1;\n    exports.ÉµpureFunction2 = pureFunction2;\n    exports.ÉµpureFunction3 = pureFunction3;\n    exports.ÉµpureFunction4 = pureFunction4;\n    exports.ÉµpureFunction5 = pureFunction5;\n    exports.ÉµpureFunction6 = pureFunction6;\n    exports.ÉµpureFunction7 = pureFunction7;\n    exports.ÉµpureFunction8 = pureFunction8;\n    exports.ÉµpureFunctionV = pureFunctionV;\n    exports.ÉµgetCurrentView = getCurrentView;\n    exports.ÉµrestoreView = restoreView;\n    exports.ÉµcontainerRefreshStart = containerRefreshStart;\n    exports.ÉµcontainerRefreshEnd = containerRefreshEnd;\n    exports.ÉµqueryRefresh = queryRefresh;\n    exports.ÉµloadQueryList = loadQueryList;\n    exports.ÉµelementEnd = elementEnd;\n    exports.ÉµelementProperty = elementProperty;\n    exports.ÉµprojectionDef = projectionDef;\n    exports.Éµreference = reference;\n    exports.ÉµenableBindings = enableBindings;\n    exports.ÉµdisableBindings = disableBindings;\n    exports.ÉµelementAttribute = elementAttribute;\n    exports.ÉµelementStyling = elementStyling;\n    exports.ÉµelementStylingMap = elementStylingMap;\n    exports.ÉµelementStyleProp = elementStyleProp;\n    exports.ÉµelementStylingApply = elementStylingApply;\n    exports.ÉµelementClassProp = elementClassProp;\n    exports.ÉµtextBinding = textBinding;\n    exports.Éµtemplate = template;\n    exports.ÉµembeddedViewEnd = embeddedViewEnd;\n    exports.Éµstore = store;\n    exports.Éµload = load;\n    exports.Éµpipe = pipe;\n    exports.ÉµwhenRendered = whenRendered;\n    exports.Éµi18nAttribute = i18nAttribute;\n    exports.Éµi18nExp = i18nExp;\n    exports.Éµi18nStart = i18nStart;\n    exports.Éµi18nEnd = i18nEnd;\n    exports.Éµi18nApply = i18nApply;\n    exports.Éµi18nExpMapping = i18nExpMapping;\n    exports.Éµi18nInterpolation1 = i18nInterpolation1;\n    exports.Éµi18nInterpolation2 = i18nInterpolation2;\n    exports.Éµi18nInterpolation3 = i18nInterpolation3;\n    exports.Éµi18nInterpolation4 = i18nInterpolation4;\n    exports.Éµi18nInterpolation5 = i18nInterpolation5;\n    exports.Éµi18nInterpolation6 = i18nInterpolation6;\n    exports.Éµi18nInterpolation7 = i18nInterpolation7;\n    exports.Éµi18nInterpolation8 = i18nInterpolation8;\n    exports.Éµi18nInterpolationV = i18nInterpolationV;\n    exports.Éµi18nMapping = i18nMapping;\n    exports.ÉµWRAP_RENDERER_FACTORY2 = WRAP_RENDERER_FACTORY2;\n    exports.ÉµRender3DebugRendererFactory2 = Render3DebugRendererFactory2;\n    exports.ÉµcompileComponent = compileComponent;\n    exports.ÉµcompileDirective = compileDirective;\n    exports.ÉµcompileNgModule = compileNgModule;\n    exports.ÉµcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ÉµpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ÉµcompilePipe = compilePipe;\n    exports.ÉµsanitizeHtml = sanitizeHtml;\n    exports.ÉµsanitizeStyle = sanitizeStyle;\n    exports.ÉµsanitizeUrl = sanitizeUrl;\n    exports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ÉµgetContext = getContext;\n    exports.ÉµbindPlayerFactory = bindPlayerFactory;\n    exports.ÉµaddPlayer = addPlayer;\n    exports.ÉµgetPlayers = getPlayers;\n    exports.ÉµcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ÉµSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ÉµSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ÉµSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ÉµSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ÉµpublishGlobalUtil = publishGlobalUtil;\n    exports.ÉµSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ÉµregisterModuleFactory = registerModuleFactory;\n    exports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ÉµEMPTY_MAP = EMPTY_MAP;\n    exports.Éµand = anchorDef;\n    exports.Éµccf = createComponentFactory;\n    exports.Éµcmf = createNgModuleFactory;\n    exports.Éµcrt = createRendererType2;\n    exports.Éµdid = directiveDef;\n    exports.Éµeld = elementDef;\n    exports.ÉµelementEventFullName = elementEventFullName;\n    exports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ÉµinlineInterpolate = inlineInterpolate;\n    exports.Éµinterpolate = interpolate;\n    exports.Éµmod = moduleDef;\n    exports.Éµmpd = moduleProvideDef;\n    exports.Éµncd = ngContentDef;\n    exports.Éµnov = nodeValue;\n    exports.Éµpid = pipeDef;\n    exports.Éµprd = providerDef;\n    exports.Éµpad = pureArrayDef;\n    exports.Éµpod = pureObjectDef;\n    exports.Éµppd = purePipeDef;\n    exports.Éµqud = queryDef;\n    exports.Éµted = textDef;\n    exports.Éµunv = unwrapValue;\n    exports.Éµvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}